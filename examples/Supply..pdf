%PDF-1.3
%¥±ë¼
1 0 obj
<<
  /CreationDate (D:20220405132706+12'00')
  /Creator (PDF::Class-0.5.0; PDF::Content-0.5.17; PDF-0.4.25; Raku-6.d; PDF::Tags-0.1.1; Pod::To::PDF::API6-0.0.1)
  /Producer (PDF::API6-0.2.5)
  /Subject (Asynchronous data stream with multiple subscribers)
  /Title (class Supply)
>>
endobj

2 0 obj
<<
  /Type /Catalog
  /Dests 3 0 R
  /Lang (en)
  /MarkInfo << /Marked true >>
  /Outlines 147 0 R
  /Pages 6 0 R
  /StructTreeRoot 849 0 R
>>
endobj

3 0 obj
<<
  /Examples [ 4 0 R /FitBH 495.7 ]
  /I#2fO_features_exposed_as_supplies [ 136 0 R /FitBH 774 ]
  /Methods_that_combine_supplies [ 128 0 R /FitBH 774 ]
  /Methods_that_return_Taps [ 32 0 R /FitBH 774 ]
  /Methods_that_return_another_Supply [ 64 0 R /FitBH 774 ]
  /Methods_that_wait_until_the_supply_is_done [ 50 0 R /FitBH 774 ]
  /Utility_methods [ 40 0 R /FitBH 774 ]
  /class_Supply [ 7 0 R /FitBH 778.4 ]
  /control_messages [ 94 0 R /FitBH 396.7 ]
  /index-Signal [ 136 0 R /FitBH 613.4 ]
  /method_Capture [ 40 0 R /FitBH 734.4 ]
  /method_Channel [ 40 0 R /FitBH 636.5 ]
  /method_IO::Notification.watch-path [ 136 0 R /FitBH 481.4 ]
  /method_Promise [ 40 0 R /FitBH 549.6 ]
  /method_Seq [ 50 0 R /FitBH 459.4 ]
  /method_act [ 32 0 R /FitBH 329.6 ]
  /method_batch [ 72 0 R /FitBH 387.35 ]
  /method_collate [ 54 0 R /FitBH 634.3 ]
  /method_delayed [ 88 0 R /FitBH 556.75 ]
  /method_do [ 64 0 R /FitBH 402.2 ]
  /method_elems [ 72 0 R /FitBH 267.45 ]
  /method_first [ 78 0 R /FitBH 413.2 ]
  /method_flat [ 64 0 R /FitBH 478.1 ]
  /method_from-list [ 64 0 R /FitBH 734.4 ]
  /method_grab [ 50 0 R /FitBH 383.5 ]
  /method_grep [ 72 0 R /FitBH 651.35 ]
  /method_head [ 72 0 R /FitBH 180.55 ]
  /method_interval [ 72 0 R /FitBH 769.6 ]
  /method_lines [ 98 0 R /FitBH 464.9 ]
  /method_list [ 50 0 R /FitBH 544.65 ]
  /method_live [ 40 0 R /FitBH 353.25 ]
  /method_map [ 72 0 R /FitBH 519.35 ]
  /method_max [ 108 0 R /FitBH 636.5 ]
  /method_merge [ 128 0 R /FitBH 734.4 ]
  /method_migrate [ 124 0 R /FitBH 769.6 ]
  /method_min [ 108 0 R /FitBH 538.6 ]
  /method_minmax [ 108 0 R /FitBH 440.7 ]
  /method_on-close [ 64 0 R /FitBH 315.3 ]
  /method_produce [ 98 0 R /FitBH 568.85 ]
  /method_reduce [ 54 0 R /FitBH 510 ]
  /method_repeated [ 98 0 R /FitBH 157.45 ]
  /method_reverse [ 50 0 R /FitBH 259.2 ]
  /method_rotate [ 88 0 R /FitBH 769.6 ]
  /method_rotor [ 88 0 R /FitBH 632.65 ]
  /method_schedule-on [ 40 0 R /FitBH 247.65 ]
  /method_share [ 64 0 R /FitBH 630.45 ]
  /method_skip [ 108 0 R /FitBH 353.8 ]
  /method_sort [ 54 0 R /FitBH 769.6 ]
  /method_split [ 78 0 R /FitBH 259.2 ]
  /method_squish [ 108 0 R /FitBH 712.4 ]
  /method_stable [ 4 0 R /FitBH 203.1 ]
  /method_start [ 108 0 R /FitBH 221.8 ]
  /method_tail [ 78 0 R /FitBH 637.6 ]
  /method_tap [ 32 0 R /FitBH 734.4 ]
  /method_throttle [ 88 0 R /FitBH 480.85 ]
  /method_unique [ 98 0 R /FitBH 253.7 ]
  /method_wait [ 50 0 R /FitBH 734.4 ]
  /method_words [ 98 0 R /FitBH 378 ]
  /method_zip [ 128 0 R /FitBH 647.5 ]
  /method_zip-latest [ 128 0 R /FitBH 494.6 ]
  /status_message [ 94 0 R /FitBH 159.1 ]
  /sub_signal [ 136 0 R /FitBH 734.4 ]
>>
endobj

4 0 obj
<<
  /Type /Page
  /Contents 5 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 145 0 R /GS2 146 0 R >>
    /Font << /F1 30 0 R /F2 28 0 R /F3 27 0 R >>
  >>
  /StructParents 34
>>
endobj

5 0 obj
<< /Length 6520 >> stream
/Lbl << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 10 Tf
    (•) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 40 752 Tm
    (bled) Tj
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 730 Tm
    (The number of messages routed to the ) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 20 730 Tm
    /F2 8.5 Tf
    [ -18265 (:bleed) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 730 Tm
    /F1 10 Tf
    [ -18585 ( Supply.) ] TJ
  ET
EMC
/Lbl << /MCID 5 >> BDC
  BT
    1 0 0 1 30 708 Tm
    (•) Tj
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 40 708 Tm
    (buffered) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 686 Tm
    (The number of messages currently buffered because of overflow.) Tj
  ET
EMC
/Lbl << /MCID 8 >> BDC
  BT
    1 0 0 1 30 664 Tm
    (•) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 40 664 Tm
    (emitted) Tj
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 642 Tm
    (The number of messages emitted \(passed through\).) Tj
  ET
EMC
/Lbl << /MCID 11 >> BDC
  BT
    1 0 0 1 30 620 Tm
    (•) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 40 620 Tm
    (id) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 598 Tm
    (The id of this status message \(a monotonically increasing number\). Handy if you want to log status messages.) Tj
  ET
EMC
/Lbl << /MCID 14 >> BDC
  BT
    1 0 0 1 30 576 Tm
    (•) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 40 576 Tm
    (limit) Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 554 Tm
    (The current limit that is being applied.) Tj
  ET
EMC
/Lbl << /MCID 17 >> BDC
  BT
    1 0 0 1 30 532 Tm
    (•) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 40 532 Tm
    (vent-at) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 510 Tm
    (The maximum number of messages that may be buffered before they're automatically re-routed to the ) Tj
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 20 510 Tm
    /F2 8.5 Tf
    [ -48142 (:bleed) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 510 Tm
    /F1 10 Tf
    [ -43981 ( Supply.) ] TJ
  ET
EMC
/H3 << /MCID 22 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F3 13 Tf
    (Examples) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F1 10 Tf
    (Have a simple piece of code announce when it starts running asynchronously, wait a random amount of time, then announce when it is done.) Tj
    11 TL
    T*
    (Do this 6 times, but don't let more than 3 of them run simultaneously.) Tj
  ET
EMC
/Code << /MCID 24 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 429.7 Tm
      /F2 8.5 Tf
      (my $s = Supply.from-list\(^6\);   set up supply) Tj
      9.35 TL
      T*
      (my $t = $s.throttle: 3,         only allow 3 at a time) Tj
      T*
      ({                               code block to run) Tj
      T*
      (    say "running $_";           announce we've started) Tj
      T*
      (    sleep rand;                 wait some random time) Tj
      T*
      (    say "done $_"               announce we're done) Tj
      T*
      (}                               don't need ; because } at end of line) Tj
      T*
      ($t.wait;                        wait for the supply to be done) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 359.25 572 80.45 re
      B
    Q
  EMC
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 342.25 Tm
    /F1 10 Tf
    (and the result of one run will be:) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 323.55 Tm
      /F2 8.5 Tf
      (running 0) Tj
      T*
      (running 1) Tj
      T*
      (running 2) Tj
      T*
      (done 2) Tj
      T*
      (running 3) Tj
      T*
      (done 1) Tj
      T*
      (running 4) Tj
      T*
      (done 4) Tj
      T*
      (running 5) Tj
      T*
      (done 0) Tj
      T*
      (done 3) Tj
      T*
      (done 5) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 215.7 572 117.85 re
      B
    Q
  EMC
EMC
/H2 << /MCID 27 >> BDC
  BT
    1 0 0 1 20 185.5 Tm
    /F3 16 Tf
    (method stable) Tj
  ET
EMC
/Code << /MCID 28 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 166.8 Tm
      /F2 8.5 Tf
      (method stable\(Supply:D: $time, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 161.8 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 144.8 Tm
    /F1 10 Tf
    (Creates a new supply that only passes on a value flowing through the given supply if it wasn't superseded by another value in the given ) Tj
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 20 144.8 Tm
    /F2 8.5 Tf
    [ -63896 ($time) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 144.8 Tm
    /F1 10 Tf
    [ -56862 ] TJ
    11 TL
    T*
    (\(in seconds\). Optionally uses another scheduler than the default scheduler, using the ) Tj
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 20 133.8 Tm
    /F2 8.5 Tf
    [ -39862 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 133.8 Tm
    /F1 10 Tf
    [ -38983 ( parameter.) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 111.8 Tm
    (To clarify the above, if, during the timeout ) Tj
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 20 111.8 Tm
    /F2 8.5 Tf
    [ -20389 ($time) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 111.8 Tm
    /F1 10 Tf
    [ -19881 (, additional values are emitted to the ) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 20 111.8 Tm
    /F2 8.5 Tf
    [ -40773 (Supplier) ] TJ
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 111.8 Tm
    /F1 10 Tf
    [ -38737 ( all but the last one will be thrown away.) ] TJ
    T*
    (Each time an additional value is emitted to the ) Tj
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 20 100.8 Tm
    /F2 8.5 Tf
    [ -22122 (Supplier) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 100.8 Tm
    /F1 10 Tf
    [ -22884 (, during the timeout, ) ] TJ
  ET
EMC
/Code << /MCID 41 >> BDC
  BT
    1 0 0 1 20 100.8 Tm
    /F2 8.5 Tf
    [ -36792 ($time) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 100.8 Tm
    /F1 10 Tf
    [ -33823 ( is reset.) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    (This method can be quite useful when handling UI input, where it is not desired to perform an operation until the user has stopped typing for a) Tj
    T*
    (while rather than on every keystroke.) Tj
  ET
EMC
endstream
endobj

6 0 obj
<<
  /Type /Pages
  /Count 16
  /Kids [ 7 0 R 32 0 R 40 0 R 50 0 R 54 0 R 64 0 R 72 0 R 78 0 R 88 0 R 94 0 R 4 0 R 98 0 R 108 0 R 124 0 R 128 0 R 136 0 R ]
  /MediaBox [ 0 0 612 792 ]
>>
endobj

7 0 obj
<<
  /Type /Page
  /Annots [ 8 0 R 10 0 R 12 0 R 14 0 R 16 0 R 18 0 R 20 0 R 22 0 R ]
  /Contents 24 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 25 0 R /GS2 26 0 R >>
    /Font << /F1 27 0 R /F2 28 0 R /F3 30 0 R /F4 31 0 R >>
  >>
  /StructParents 0
>>
endobj

8 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 9 0 R
  /Border [ 0 0 0 ]
  /Contents (Channel)
  /P 7 0 R
  /Rect [ 252.67 690.7 290 703.7 ]
  /StructParent 1
>>
endobj

9 0 obj
<< /Type /Action /S /URI /URI (/type/Channel.pdf) >>
endobj

10 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 11 0 R
  /Border [ 0 0 0 ]
  /Contents (Observer Pattern)
  /P 7 0 R
  /Rect [ 180.47 657.7 251.95 670.7 ]
  /StructParent 2
>>
endobj

11 0 obj
<<
  /Type /Action
  /S /URI
  /URI (https://en.wikipedia.org/wiki/Observer_pattern)
>>
endobj

12 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 13 0 R
  /Border [ 0 0 0 ]
  /Contents (Supplier)
  /P 7 0 R
  /Rect [ 166.49 547.7 204.38 560.7 ]
  /StructParent 3
>>
endobj

13 0 obj
<< /Type /Action /S /URI /URI (/type/Supplier.pdf) >>
endobj

14 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 15 0 R
  /Border [ 0 0 0 ]
  /Contents (live method)
  /P 7 0 R
  /Rect [ 36.05 478.95 87.55 491.95 ]
  /StructParent 4
>>
endobj

15 0 obj
<< /Type /Action /S /GoTo /D /method_live >>
endobj

16 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 17 0 R
  /Border [ 0 0 0 ]
  /Contents (interval)
  /P 7 0 R
  /Rect [ 308.1 478.95 342.65 491.95 ]
  /StructParent 5
>>
endobj

17 0 obj
<< /Type /Action /S /GoTo /D /method_interval >>
endobj

18 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 19 0 R
  /Border [ 0 0 0 ]
  /Contents (from-list)
  /P 7 0 R
  /Rect [ 343.65 478.95 382.65 491.95 ]
  /StructParent 6
>>
endobj

19 0 obj
<< /Type /Action /S /GoTo /D /method_from-list >>
endobj

20 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 21 0 R
  /Border [ 0 0 0 ]
  /Contents (Supplier::Preserving)
  /P 7 0 R
  /Rect [ 332.72 456.95 418.94 469.95 ]
  /StructParent 7
>>
endobj

21 0 obj
<< /Type /Action /S /URI /URI (/type/Supplier::Preserving.pdf) >>
endobj

22 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 23 0 R
  /Border [ 0 0 0 ]
  /Contents (concurrency page)
  /P 7 0 R
  /Rect [ 169.36 434.95 244.16 447.95 ]
  /StructParent 8
>>
endobj

23 0 obj
<< /Type /Action /S /URI /URI (/language/concurrency.pdf#supplies) >>
endobj

24 0 obj
<< /Length 7529 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 24 Tf
    (class Supply) Tj
  ET
  q
    1.2 w
    20 749.6 m
    146.048 749.6 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 734.4 Tm
    /F1 16 Tf
    (Asynchronous data stream with multiple subscribers) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 715.7 Tm
      /F2 8.5 Tf
      (    class Supply does Awaitable {}) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 710.7 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 693.7 Tm
    /F3 10 Tf
    (A supply is a thread-safe, asynchronous data stream like a ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 4 >> BDC
    BT
      1 0 0 1 20 693.7 Tm
      [ -23467 (Channel) ] TJ
    ET
  EMC
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 693.7 Tm
    [ -26800 (, but it can have multiple subscribers \() ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 693.7 Tm
    /F4 10 Tf
    [ -42076 (taps) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 693.7 Tm
    /F3 10 Tf
    [ -43743 (\) that all get the same values) ] TJ
    11 TL
    T*
    (flowing through the supply.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 660.7 Tm
    (It is a thread-safe implementation of the ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 9 >> BDC
    BT
      1 0 0 1 20 660.7 Tm
      [ -16247 (Observer Pattern) ] TJ
    ET
  EMC
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 660.7 Tm
    [ -22995 (, and central to supporting reactive programming in Raku.) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 638.7 Tm
    (There are two types of Supplies: ) Tj
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 638.7 Tm
    /F2 8.5 Tf
    [ -15553 (live) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 638.7 Tm
    /F3 10 Tf
    [ -15260 ( and ) ] TJ
  ET
EMC
/Code << /MCID 14 >> BDC
  BT
    1 0 0 1 20 638.7 Tm
    /F2 8.5 Tf
    [ -20240 (on demand) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 638.7 Tm
    /F3 10 Tf
    [ -21794 (. When tapping into a ) ] TJ
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 20 638.7 Tm
    /F2 8.5 Tf
    [ -36096 (live) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 638.7 Tm
    /F3 10 Tf
    [ -32722 ( supply, the tap will only see values that are flowing through) ] TJ
    T*
    (the supply ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 627.7 Tm
    /F1 10 Tf
    [ -4389 (after) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 627.7 Tm
    /F3 10 Tf
    [ -6443 ( the tap has been created. Such supplies are normally infinite in nature, such as mouse movements. Closing such a tap does not) ] TJ
    T*
    (stop mouse events from occurring, it just means that the values will go by unseen. All tappers see the same flow of values.) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 594.7 Tm
    (A tap on an ) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 20 594.7 Tm
    /F2 8.5 Tf
    [ -5751 (on demand) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 594.7 Tm
    /F3 10 Tf
    [ -9478 ( supply will initiate the production of values, and tapping the supply again may result in a new set of values. For) ] TJ
    T*
    (example, ) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 583.7 Tm
    /F2 8.5 Tf
    [ -4574 (Supply.interval) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 583.7 Tm
    /F3 10 Tf
    [ -11538 ( produces a fresh timer with the appropriate interval each time it is tapped. If the tap is closed, the timer simply) ] TJ
    T*
    (stops emitting values to that tap.) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    (A ) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    /F2 8.5 Tf
    [ -1144 (live) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    /F3 10 Tf
    [ -3012 ( ) ] TJ
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    /F2 8.5 Tf
    [ -3838 (Supply) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    /F3 10 Tf
    [ -6322 ( is obtained from the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 30 >> BDC
    BT
      1 0 0 1 20 550.7 Tm
      [ -14849 (Supplier) ] TJ
    ET
  EMC
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    [ -18238 ( factory method ) ] TJ
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    /F2 8.5 Tf
    [ -29200 (Supply) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    /F3 10 Tf
    [ -27880 (. New values are emitted by calling ) ] TJ
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    /F2 8.5 Tf
    [ -49725 (emit) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    /F3 10 Tf
    [ -44306 ( on the ) ] TJ
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    /F2 8.5 Tf
    [ -55621 (Supplier) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    /F3 10 Tf
    [ -51358 ( object.) ] TJ
  ET
EMC
/Code << /MCID 38 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 532 Tm
      /F2 8.5 Tf
      (my $supplier = Supplier.new;) Tj
      9.35 TL
      T*
      (my $supply = $supplier.Supply;) Tj
      T*
      ($supply.tap\(-> $v { say "$v" }\);) Tj
      T*
      ($supplier.emit\(42\);  Will cause the tap to output "42") Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 498.95 572 43.05 re
      B
    Q
  EMC
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 481.95 Tm
    /F3 10 Tf
    (The ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 40 >> BDC
    BT
      1 0 0 1 20 481.95 Tm
      [ -1805 (live method) ] TJ
    ET
  EMC
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 481.95 Tm
    [ -6555 ( returns ) ] TJ
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 20 481.95 Tm
    /F2 8.5 Tf
    [ -11567 (True) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 481.95 Tm
    /F3 10 Tf
    [ -11872 ( on live supplies. Factory methods such as ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 44 >> BDC
    BT
      1 0 0 1 20 481.95 Tm
      [ -29010 (interval) ] TJ
    ET
  EMC
Q
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 481.95 Tm
    [ -32065 (, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 46 >> BDC
    BT
      1 0 0 1 20 481.95 Tm
      [ -32565 (from-list) ] TJ
    ET
  EMC
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 481.95 Tm
    [ -36065 ( will return ) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 481.95 Tm
    /F4 10 Tf
    [ -40759 (on demand) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 481.95 Tm
    /F3 10 Tf
    [ -45175 ( supplies.) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 459.95 Tm
    (A live ) Tj
  ET
EMC
/Code << /MCID 51 >> BDC
  BT
    1 0 0 1 20 459.95 Tm
    /F2 8.5 Tf
    [ -3202 (Supply) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 459.95 Tm
    /F3 10 Tf
    [ -5782 ( that keeps values until tapped the first time can be created with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 53 >> BDC
    BT
      1 0 0 1 20 459.95 Tm
      [ -31472 (Supplier::Preserving) ] TJ
    ET
  EMC
Q
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 459.95 Tm
    [ -39694 (.) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 437.95 Tm
    (Further examples can be found in the ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 56 >> BDC
    BT
      1 0 0 1 20 437.95 Tm
      [ -15136 (concurrency page) ] TJ
    ET
  EMC
Q
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 437.95 Tm
    [ -22216 (.) ] TJ
  ET
EMC
endstream
endobj

25 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

26 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

27 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Bold
  /Encoding /WinAnsiEncoding
>>
endobj

28 0 obj
<< /Type /Font /Subtype /Type1 /BaseFont /Courier /Encoding 29 0 R >>
endobj

29 0 obj
<<
  /Type /Encoding
  /BaseEncoding /WinAnsiEncoding
  /Differences [ 1 /numbersign /infinity ]
>>
endobj

30 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Roman
  /Encoding /WinAnsiEncoding
>>
endobj

31 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Italic
  /Encoding /WinAnsiEncoding
>>
endobj

32 0 obj
<<
  /Type /Page
  /Annots [ 33 0 R 35 0 R ]
  /Contents 37 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 38 0 R /GS2 39 0 R >>
    /Font << /F1 27 0 R /F2 28 0 R /F3 30 0 R >>
  >>
  /StructParents 9
>>
endobj

33 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 34 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 32 0 R
  /Rect [ 166.42 513.05 185.97 526.05 ]
  /StructParent 10
>>
endobj

34 0 obj
<< /Type /Action /S /URI /URI (/type/Tap.pdf) >>
endobj

35 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 36 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 32 0 R
  /Rect [ 169.11 469.05 188.66 482.05 ]
  /StructParent 11
>>
endobj

36 0 obj
<< /Type /Action /S /URI /URI (/type/Tap.pdf) >>
endobj

37 0 obj
<< /Length 9329 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that return Taps) Tj
  ET
  q
    1 w
    20 750 m
    241.66 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 716.8 Tm
    /F1 16 Tf
    (method tap) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 698.1 Tm
      /F2 8.5 Tf
      (method tap\(Supply:D: &emit = -> $ { },) Tj
      9.35 TL
      T*
      (        :&done = -> {},) Tj
      T*
      (        :&quit = -> $ex { $ex.throw },) Tj
      T*
      (        :&tap = -> $ {} \)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 665.05 572 43.05 re
      B
    Q
  EMC
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 648.05 Tm
    /F3 10 Tf
    (Creates a new tap \(a kind of subscription if you will\), in addition to all existing taps. The first positional argument is a piece of code that will) Tj
    11 TL
    T*
    (be called when a new value becomes available through the ) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 20 637.05 Tm
    /F2 8.5 Tf
    [ -27901 (emit) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 637.05 Tm
    /F3 10 Tf
    [ -25756 ( call.) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 615.05 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 7 >> BDC
  BT
    1 0 0 1 20 615.05 Tm
    /F2 8.5 Tf
    [ -2124 (&done) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 615.05 Tm
    /F3 10 Tf
    [ -4355 ( callback can be called in a number of cases: if a supply block is being tapped, when a ) ] TJ
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 20 615.05 Tm
    /F2 8.5 Tf
    [ -45899 (done) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 615.05 Tm
    /F3 10 Tf
    [ -41054 ( routine is reached; if a supply block is) ] TJ
    T*
    (being tapped, it will be automatically triggered if the supply block reaches the end; if the ) Tj
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 20 604.05 Tm
    /F2 8.5 Tf
    [ -42053 (done) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 604.05 Tm
    /F3 10 Tf
    [ -37785 ( method is called on the parent ) ] TJ
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 20 604.05 Tm
    /F2 8.5 Tf
    [ -59189 (Supplier) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 604.05 Tm
    /F3 10 Tf
    [ -54391 ( \(in) ] TJ
    T*
    (the case of a supply block, if there are multiple Suppliers referenced by ) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 20 593.05 Tm
    /F2 8.5 Tf
    [ -33848 (whenever) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 593.05 Tm
    /F3 10 Tf
    [ -32851 (, they must all have their ) ] TJ
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 20 593.05 Tm
    /F2 8.5 Tf
    [ -50575 (done) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 593.05 Tm
    /F3 10 Tf
    [ -45029 ( method invoked for this to) ] TJ
    T*
    (trigger the ) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 20 582.05 Tm
    /F2 8.5 Tf
    [ -5162 (&done) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 582.05 Tm
    /F3 10 Tf
    [ -6938 ( callback of the tap as the block will then reach its end\).) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 560.05 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 20 560.05 Tm
    /F2 8.5 Tf
    [ -2124 (&quit) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 560.05 Tm
    /F3 10 Tf
    [ -4355 ( callback is called if the tap is on a supply block which exits with an error. It is also called if the ) ] TJ
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 20 560.05 Tm
    /F2 8.5 Tf
    [ -50476 (quit) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 560.05 Tm
    /F3 10 Tf
    [ -44945 ( method is invoked on the) ] TJ
    T*
    (parent ) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 549.05 Tm
    /F2 8.5 Tf
    [ -3234 (Supplier) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 549.05 Tm
    /F3 10 Tf
    [ -6829 ( \(in the case of a supply block any one ) ] TJ
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 549.05 Tm
    /F2 8.5 Tf
    [ -26396 (Supplier) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 549.05 Tm
    /F3 10 Tf
    [ -26517 ( quitting with an uncaught exception will call the ) ] TJ
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 20 549.05 Tm
    /F2 8.5 Tf
    [ -54561 (&quit) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 549.05 Tm
    /F3 10 Tf
    [ -48927 ( callback as the) ] TJ
    T*
    (block will exit with an error\). The error is passed as a parameter to the callback.) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 516.05 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 20 516.05 Tm
    /F2 8.5 Tf
    [ -2124 (&tap) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 516.05 Tm
    /F3 10 Tf
    [ -3845 ( callback is called once the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 35 >> BDC
    BT
      1 0 0 1 20 516.05 Tm
      [ -14842 (Tap) ] TJ
    ET
  EMC
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 516.05 Tm
    [ -16397 ( object is created, which is passed as a parameter to the callback. The callback is called ahead of ) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 20 516.05 Tm
    /F2 8.5 Tf
    [ -64866 (emit) ] TJ
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 516.05 Tm
    /F3 10 Tf
    [ -57176 ] TJ
    T*
    (/) Tj
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 20 505.05 Tm
    /F2 8.5 Tf
    [ -327 (done) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 505.05 Tm
    /F3 10 Tf
    [ -2318 (/) ] TJ
  ET
EMC
/Code << /MCID 41 >> BDC
  BT
    1 0 0 1 20 505.05 Tm
    /F2 8.5 Tf
    [ -3054 (quit) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 505.05 Tm
    /F3 10 Tf
    [ -4636 (, providing a reliable way to get the ) ] TJ
  ET
EMC
/Code << /MCID 43 >> BDC
  BT
    1 0 0 1 20 505.05 Tm
    /F2 8.5 Tf
    [ -22478 (Tap) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 505.05 Tm
    /F3 10 Tf
    [ -20636 ( object. One case where this is useful is when the ) ] TJ
  ET
EMC
/Code << /MCID 45 >> BDC
  BT
    1 0 0 1 20 505.05 Tm
    /F2 8.5 Tf
    [ -47672 (Supply) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 505.05 Tm
    /F3 10 Tf
    [ -43581 ( begins emitting values) ] TJ
    T*
    (synchronously, since the call to ) Tj
  ET
EMC
/Code << /MCID 47 >> BDC
  BT
    1 0 0 1 20 494.05 Tm
    /F2 8.5 Tf
    [ -15096 (.tap) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 494.05 Tm
    /F3 10 Tf
    [ -14872 ( won't return the ) ] TJ
  ET
EMC
/Code << /MCID 49 >> BDC
  BT
    1 0 0 1 20 494.05 Tm
    /F2 8.5 Tf
    [ -25485 (Tap) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 494.05 Tm
    /F3 10 Tf
    [ -23192 ( object until it is done emitting, preventing it from being stopped if needed.) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 472.05 Tm
    (Method ) Tj
  ET
EMC
/Code << /MCID 52 >> BDC
  BT
    1 0 0 1 20 472.05 Tm
    /F2 8.5 Tf
    [ -3954 (tap) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 472.05 Tm
    /F3 10 Tf
    [ -4891 ( returns an object of type ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 54 >> BDC
    BT
      1 0 0 1 20 472.05 Tm
      [ -15111 (Tap) ] TJ
    ET
  EMC
Q
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 472.05 Tm
    [ -16666 (, on which you can call the ) ] TJ
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 20 472.05 Tm
    /F2 8.5 Tf
    [ -32546 (close) ] TJ
  ET
EMC
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 472.05 Tm
    /F3 10 Tf
    [ -30214 ( method to cancel the subscription.) ] TJ
  ET
EMC
/Code << /MCID 58 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 453.35 Tm
      /F2 8.5 Tf
      (my $s = Supply.from-list\(0 .. 5\);) Tj
      9.35 TL
      T*
      (my $t = $s.tap\(-> $v { say $v }, done => { say "no more ticks" }\);) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 439 572 24.35 re
      B
    Q
  EMC
EMC
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 422 Tm
    /F3 10 Tf
    (Produces:) Tj
  ET
EMC
/Code << /MCID 60 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 403.3 Tm
      /F2 8.5 Tf
      (0) Tj
      T*
      (1) Tj
      T*
      (2) Tj
      T*
      (3) Tj
      T*
      (4) Tj
      T*
      (5) Tj
      T*
      (no more ticks) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 342.2 572 71.1 re
      B
    Q
  EMC
EMC
/H2 << /MCID 61 >> BDC
  BT
    1 0 0 1 20 312 Tm
    /F1 16 Tf
    (method act) Tj
  ET
EMC
/Code << /MCID 62 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 293.3 Tm
      /F2 8.5 Tf
      (method act\(Supply:D: &actor, *%others\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 288.3 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 271.3 Tm
    /F3 10 Tf
    (Creates a tap on the given supply with the given code. Differently from ) Tj
  ET
EMC
/Code << /MCID 64 >> BDC
  BT
    1 0 0 1 20 271.3 Tm
    /F2 8.5 Tf
    [ -33851 (tap) ] TJ
  ET
EMC
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 271.3 Tm
    /F3 10 Tf
    [ -30303 (, the given code is guaranteed to be executed by only one thread at) ] TJ
    11 TL
    T*
    (a time.) Tj
  ET
EMC
endstream
endobj

38 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

39 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

40 0 obj
<<
  /Type /Page
  /Annots [ 41 0 R 43 0 R 45 0 R ]
  /Contents 47 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 48 0 R /GS2 49 0 R >>
    /Font << /F1 27 0 R /F2 30 0 R /F3 28 0 R >>
  >>
  /StructParents 12
>>
endobj

41 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 42 0 R
  /Border [ 0 0 0 ]
  /Contents (.List.Capture)
  /P 40 0 R
  /Rect [ 103.83 651.1 160.05 664.1 ]
  /StructParent 13
>>
endobj

42 0 obj
<< /Type /Action /S /URI /URI (/type/List.pdf#method_capture) >>
endobj

43 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 44 0 R
  /Border [ 0 0 0 ]
  /Contents (Channel)
  /P 40 0 R
  /Rect [ 58.55 575.2 95.88 588.2 ]
  /StructParent 14
>>
endobj

44 0 obj
<< /Type /Action /S /URI /URI (/type/Channel.pdf) >>
endobj

45 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 46 0 R
  /Border [ 0 0 0 ]
  /Contents (Promise)
  /P 40 0 R
  /Rect [ 58.55 488.3 95.33 501.3 ]
  /StructParent 15
>>
endobj

46 0 obj
<< /Type /Action /S /URI /URI (/type/Promise.pdf) >>
endobj

47 0 obj
<< /Length 8401 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Utility methods) Tj
  ET
  q
    1 w
    20 750 m
    151.66 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 716.8 Tm
    /F1 16 Tf
    (method Capture) Tj
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 676.1 Tm
      /F3 8.5 Tf
      (method Capture\(Supply:D: --> Capture:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 671.1 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 654.1 Tm
    /F2 10 Tf
    (Equivalent to calling ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 5 >> BDC
    BT
      1 0 0 1 20 654.1 Tm
      [ -8583 (.List.Capture) ] TJ
    ET
  EMC
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 654.1 Tm
    [ -13805 ( on the invocant.) ] TJ
  ET
EMC
/H2 << /MCID 7 >> BDC
  BT
    1 0 0 1 20 618.9 Tm
    /F1 16 Tf
    (method Channel) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 600.2 Tm
      /F3 8.5 Tf
      (method Channel\(Supply:D: --> Channel:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 595.2 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F2 10 Tf
    (Returns a ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 578.2 Tm
      [ -4055 (Channel) ] TJ
    ET
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    [ -7388 ( object that will receive all future values from the supply, and will be ) ] TJ
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F3 8.5 Tf
    [ -41465 (close) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F2 10 Tf
    [ -37795 (d when the Supply is done, and quit \(shut down) ] TJ
    11 TL
    T*
    (with error\) when the supply is quit.) Tj
  ET
EMC
/H2 << /MCID 14 >> BDC
  BT
    1 0 0 1 20 532 Tm
    /F1 16 Tf
    (method Promise) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 513.3 Tm
      /F3 8.5 Tf
      (method Promise\(Supply:D: --> Promise:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 508.3 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 491.3 Tm
    /F2 10 Tf
    (Returns a ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 17 >> BDC
    BT
      1 0 0 1 20 491.3 Tm
      [ -4055 (Promise) ] TJ
    ET
  EMC
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 491.3 Tm
    [ -7333 ( that will be kept when the ) ] TJ
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 20 491.3 Tm
    /F3 8.5 Tf
    [ -21404 (Supply) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 491.3 Tm
    /F2 10 Tf
    [ -21253 ( is ) ] TJ
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 20 491.3 Tm
    /F3 8.5 Tf
    [ -26376 (done) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 491.3 Tm
    /F2 10 Tf
    [ -24460 (. If the ) ] TJ
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 491.3 Tm
    /F3 8.5 Tf
    [ -32174 (Supply) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 491.3 Tm
    /F2 10 Tf
    [ -30408 ( also emits any values, then the ) ] TJ
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 20 491.3 Tm
    /F3 8.5 Tf
    [ -50740 (Promise) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 491.3 Tm
    /F2 10 Tf
    [ -46699 ( will be kept with the) ] TJ
    T*
    (final value. Otherwise, it will be kept with ) Tj
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F3 8.5 Tf
    [ -20194 (Nil) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F2 10 Tf
    [ -18695 (. If the ) ] TJ
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F3 8.5 Tf
    [ -25392 (Supply) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F2 10 Tf
    [ -24643 ( ends with a ) ] TJ
  ET
EMC
/Code << /MCID 31 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F3 8.5 Tf
    [ -34939 (quit) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F2 10 Tf
    [ -31738 ( instead of a ) ] TJ
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F3 8.5 Tf
    [ -43351 (done) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F2 10 Tf
    [ -38888 (, then the ) ] TJ
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F3 8.5 Tf
    [ -50391 (Promise) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F2 10 Tf
    [ -46402 ( will be broken with that) ] TJ
    T*
    (exception.) Tj
  ET
EMC
/Code << /MCID 37 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 450.6 Tm
      /F3 8.5 Tf
      (my $supplier = Supplier.new;) Tj
      9.35 TL
      T*
      (my $s = $supplier.Supply;) Tj
      T*
      (my $p = $s.Promise;) Tj
      T*
      ($p.then\(-> $v { say "got $v.result\(\)" }\);) Tj
      T*
      ($supplier.emit\('cha'\);          not output yet) Tj
      T*
      ($supplier.done\(\);               got cha) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 398.85 572 61.75 re
      B
    Q
  EMC
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 381.85 Tm
    /F2 10 Tf
    (The ) Tj
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 20 381.85 Tm
    /F3 8.5 Tf
    [ -2124 (Promise) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 381.85 Tm
    /F2 10 Tf
    [ -5375 ( method is most useful when dealing with supplies that will tend to produce just one value, when only the final value is of) ] TJ
    11 TL
    T*
    (interest, or when only completion \(successful or not\) is relevant.) Tj
  ET
EMC
/H2 << /MCID 41 >> BDC
  BT
    1 0 0 1 20 335.65 Tm
    /F1 16 Tf
    (method live) Tj
  ET
EMC
/Code << /MCID 42 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 316.95 Tm
      /F3 8.5 Tf
      (method live\(Supply:D: --> Bool:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 311.95 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 294.95 Tm
    /F2 10 Tf
    (Returns ) Tj
  ET
EMC
/Code << /MCID 44 >> BDC
  BT
    1 0 0 1 20 294.95 Tm
    /F3 8.5 Tf
    [ -3954 (True) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 294.95 Tm
    /F2 10 Tf
    [ -5401 ( if the supply is "live", that is, values are emitted to taps as soon as they arrive. Always returns ) ] TJ
  ET
EMC
/Code << /MCID 46 >> BDC
  BT
    1 0 0 1 20 294.95 Tm
    /F3 8.5 Tf
    [ -51067 (True) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 294.95 Tm
    /F2 10 Tf
    [ -45447 ( in the default ) ] TJ
  ET
EMC
/Code << /MCID 48 >> BDC
  BT
    1 0 0 1 20 294.95 Tm
    /F3 8.5 Tf
    [ -60264 (Supply) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 294.95 Tm
    /F2 10 Tf
    [ -54284 ( \(but) ] TJ
    T*
    (for example on the supply returned from ) Tj
  ET
EMC
/Code << /MCID 50 >> BDC
  BT
    1 0 0 1 20 283.95 Tm
    /F3 8.5 Tf
    [ -19375 (Supply.from-list) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 283.95 Tm
    /F2 10 Tf
    [ -24629 ( it's ) ] TJ
  ET
EMC
/Code << /MCID 52 >> BDC
  BT
    1 0 0 1 20 283.95 Tm
    /F3 8.5 Tf
    [ -30887 (False) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 283.95 Tm
    /F2 10 Tf
    [ -28804 (\).) ] TJ
  ET
EMC
/Code << /MCID 54 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 265.25 Tm
      /F3 8.5 Tf
      (say Supplier.new.Supply.live;     OUTPUT: «True») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 260.25 572 15 re
      B
    Q
  EMC
EMC
/H2 << /MCID 55 >> BDC
  BT
    1 0 0 1 20 230.05 Tm
    /F1 16 Tf
    (method schedule-on) Tj
  ET
EMC
/Code << /MCID 56 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 211.35 Tm
      /F3 8.5 Tf
      (method schedule-on\(Supply:D: Scheduler $scheduler\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 206.35 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 189.35 Tm
    /F2 10 Tf
    (Runs the emit, done and quit callbacks on the specified scheduler.) Tj
  ET
EMC
/P << /MCID 58 >> BDC
  BT
    1 0 0 1 20 167.35 Tm
    (This is useful for GUI toolkits that require certain actions to be run from the GUI thread.) Tj
  ET
EMC
endstream
endobj

48 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

49 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

50 0 obj
<<
  /Type /Page
  /Contents 51 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 52 0 R /GS2 53 0 R >>
    /Font << /F1 27 0 R /F2 28 0 R /F3 30 0 R >>
  >>
  /StructParents 16
>>
endobj

51 0 obj
<< /Length 10338 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that wait until the supply is done) Tj
  ET
  q
    1 w
    20 750 m
    378.38 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 716.8 Tm
    /F1 16 Tf
    (method wait) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 698.1 Tm
      /F2 8.5 Tf
      (method wait\(Supply:D:\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 693.1 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 676.1 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 20 676.1 Tm
    /F2 8.5 Tf
    [ -4313 (Supply) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 676.1 Tm
    /F3 10 Tf
    [ -6726 ( it is called on, and blocks execution until the either the supply is ) ] TJ
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 20 676.1 Tm
    /F2 8.5 Tf
    [ -38728 (done) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 676.1 Tm
    /F3 10 Tf
    [ -34959 ( \(in which case it evaluates to the final value that was) ] TJ
    11 TL
    T*
    (emitted on the ) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 20 665.1 Tm
    /F2 8.5 Tf
    [ -7026 (Supply) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 665.1 Tm
    /F3 10 Tf
    [ -9032 (, or ) ] TJ
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 20 665.1 Tm
    /F2 8.5 Tf
    [ -12488 (Nil) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 665.1 Tm
    /F3 10 Tf
    [ -12145 ( if not value was emitted\) or ) ] TJ
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 665.1 Tm
    /F2 8.5 Tf
    [ -27848 (quit) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 665.1 Tm
    /F3 10 Tf
    [ -25711 ( \(in which case it will throw the exception that was passed to ) ] TJ
  ET
EMC
/Code << /MCID 14 >> BDC
  BT
    1 0 0 1 20 665.1 Tm
    /F2 8.5 Tf
    [ -59166 (quit) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 665.1 Tm
    /F3 10 Tf
    [ -52331 (\).) ] TJ
  ET
EMC
/Code << /MCID 16 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 646.4 Tm
      /F2 8.5 Tf
      (my $s = Supplier.new;) Tj
      9.35 TL
      T*
      (start {) Tj
      T*
      (  sleep 1;) Tj
      T*
      (  say "One second: running.";) Tj
      T*
      (  sleep 1;) Tj
      T*
      (  $s.emit\(42\);) Tj
      T*
      (  $s.done;) Tj
      T*
      (}) Tj
      T*
      ($s.Supply.wait;) Tj
      T*
      (say "Two seconds: done";) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 557.25 572 99.15 re
      B
    Q
  EMC
EMC
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 527.05 Tm
    /F1 16 Tf
    (method list) Tj
  ET
EMC
/Code << /MCID 18 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 508.35 Tm
      /F2 8.5 Tf
      (multi method list\(Supply:D:\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 503.35 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 486.35 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 20 486.35 Tm
    /F2 8.5 Tf
    [ -4313 (Supply) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 486.35 Tm
    /F3 10 Tf
    [ -6726 ( it is called on, and returns a lazy list that will be reified as the ) ] TJ
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 20 486.35 Tm
    /F2 8.5 Tf
    [ -37419 (Supply) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 486.35 Tm
    /F3 10 Tf
    [ -34866 ( emits values. The list will be terminated once the ) ] TJ
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 20 486.35 Tm
    /F2 8.5 Tf
    [ -64709 ] TJ
    T*
    (Supply) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F3 10 Tf
    [ -3060 ( is ) ] TJ
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F2 8.5 Tf
    [ -4973 (done) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F3 10 Tf
    [ -6267 (. If the ) ] TJ
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F2 8.5 Tf
    [ -10771 (Supply) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F3 10 Tf
    [ -12215 ( ) ] TJ
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F2 8.5 Tf
    [ -14665 (quit) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F3 10 Tf
    [ -14505 (s, then an exception will be thrown once that point in the lazy list is reached.) ] TJ
  ET
EMC
/H2 << /MCID 32 >> BDC
  BT
    1 0 0 1 20 441.8 Tm
    /F1 16 Tf
    (method Seq) Tj
  ET
EMC
/Code << /MCID 33 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 423.1 Tm
      /F2 8.5 Tf
      (method Seq\(Supply:D:\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 418.1 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 401.1 Tm
    /F3 10 Tf
    (Returns a ) Tj
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 20 401.1 Tm
    /F2 8.5 Tf
    [ -4771 (Seq) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 401.1 Tm
    /F3 10 Tf
    [ -5585 ( with an iterator containing the values that the ) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 20 401.1 Tm
    /F2 8.5 Tf
    [ -28431 (Supply) ] TJ
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 401.1 Tm
    /F3 10 Tf
    [ -27226 ( contains.) ] TJ
  ET
EMC
/H2 << /MCID 39 >> BDC
  BT
    1 0 0 1 20 365.9 Tm
    /F1 16 Tf
    (method grab) Tj
  ET
EMC
/Code << /MCID 40 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 347.2 Tm
      /F2 8.5 Tf
      (method grab\(Supply:D: &when-done --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 342.2 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F2 8.5 Tf
    [ -4313 (Supply) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F3 10 Tf
    [ -6726 ( it is called on. When it is ) ] TJ
  ET
EMC
/Code << /MCID 44 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F2 8.5 Tf
    [ -20233 (done) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F3 10 Tf
    [ -19238 (, calls ) ] TJ
  ET
EMC
/Code << /MCID 46 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F2 8.5 Tf
    [ -25672 (&when-done) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F3 10 Tf
    [ -26921 ( and then emits the list of values that it returns on the result ) ] TJ
  ET
EMC
/Code << /MCID 48 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F2 8.5 Tf
    [ -59840 (Supply) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F3 10 Tf
    [ -53924 (. If the) ] TJ
    11 TL
    T*
    (original ) Tj
  ET
EMC
/Code << /MCID 50 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F2 8.5 Tf
    [ -3954 (Supply) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F3 10 Tf
    [ -6421 ( ) ] TJ
  ET
EMC
/Code << /MCID 52 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F2 8.5 Tf
    [ -7848 (quit) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F3 10 Tf
    [ -8711 (s, then the exception is immediately conveyed on the return ) ] TJ
  ET
EMC
/Code << /MCID 54 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F2 8.5 Tf
    [ -38578 (Supply) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F3 10 Tf
    [ -35851 (.) ] TJ
  ET
EMC
/Code << /MCID 56 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 295.5 Tm
      /F2 8.5 Tf
      (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
      9.35 TL
      T*
      (my $t = $s.grab\(&sum\);) Tj
      T*
      ($t.tap\(&say\);            OUTPUT: «19») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 271.8 572 33.7 re
      B
    Q
  EMC
EMC
/H2 << /MCID 57 >> BDC
  BT
    1 0 0 1 20 241.6 Tm
    /F1 16 Tf
    (method reverse) Tj
  ET
EMC
/Code << /MCID 58 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 222.9 Tm
      /F2 8.5 Tf
      (method reverse\(Supply:D: --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 217.9 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 200.9 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 60 >> BDC
  BT
    1 0 0 1 20 200.9 Tm
    /F2 8.5 Tf
    [ -4313 (Supply) ] TJ
  ET
EMC
/P << /MCID 61 >> BDC
  BT
    1 0 0 1 20 200.9 Tm
    /F3 10 Tf
    [ -6726 ( it is called on. Once that ) ] TJ
  ET
EMC
/Code << /MCID 62 >> BDC
  BT
    1 0 0 1 20 200.9 Tm
    /F2 8.5 Tf
    [ -19938 (Supply) ] TJ
  ET
EMC
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 200.9 Tm
    /F3 10 Tf
    [ -20007 ( emits ) ] TJ
  ET
EMC
/Code << /MCID 64 >> BDC
  BT
    1 0 0 1 20 200.9 Tm
    /F2 8.5 Tf
    [ -26675 (done) ] TJ
  ET
EMC
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 200.9 Tm
    /F3 10 Tf
    [ -24714 (, all of the values it emitted will be emitted on the returned ) ] TJ
  ET
EMC
/Code << /MCID 66 >> BDC
  BT
    1 0 0 1 20 200.9 Tm
    /F2 8.5 Tf
    [ -56981 (Supply) ] TJ
  ET
EMC
/P << /MCID 67 >> BDC
  BT
    1 0 0 1 20 200.9 Tm
    /F3 10 Tf
    [ -51494 ( in reverse) ] TJ
    11 TL
    T*
    (order. If the original ) Tj
  ET
EMC
/Code << /MCID 68 >> BDC
  BT
    1 0 0 1 20 189.9 Tm
    /F2 8.5 Tf
    [ -9834 (Supply) ] TJ
  ET
EMC
/P << /MCID 69 >> BDC
  BT
    1 0 0 1 20 189.9 Tm
    /F3 10 Tf
    [ -11419 ( ) ] TJ
  ET
EMC
/Code << /MCID 70 >> BDC
  BT
    1 0 0 1 20 189.9 Tm
    /F2 8.5 Tf
    [ -13728 (quit) ] TJ
  ET
EMC
/P << /MCID 71 >> BDC
  BT
    1 0 0 1 20 189.9 Tm
    /F3 10 Tf
    [ -13709 (s, then the exception is immediately conveyed on the return ) ] TJ
  ET
EMC
/Code << /MCID 72 >> BDC
  BT
    1 0 0 1 20 189.9 Tm
    /F2 8.5 Tf
    [ -44458 (Supply) ] TJ
  ET
EMC
/P << /MCID 73 >> BDC
  BT
    1 0 0 1 20 189.9 Tm
    /F3 10 Tf
    [ -40849 (.) ] TJ
  ET
EMC
/Code << /MCID 74 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 171.2 Tm
      /F2 8.5 Tf
      (my $s = Supply.from-list\(1, 2, 3\);) Tj
      9.35 TL
      T*
      (my $t = $s.reverse;) Tj
      T*
      ($t.tap\(&say\);            OUTPUT: «321») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 147.5 572 33.7 re
      B
    Q
  EMC
EMC
endstream
endobj

52 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

53 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

54 0 obj
<<
  /Type /Page
  /Annots [ 55 0 R 57 0 R 59 0 R ]
  /Contents 61 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 62 0 R /GS2 63 0 R >>
    /Font << /F1 27 0 R /F2 28 0 R /F3 30 0 R >>
  >>
  /StructParents 17
>>
endobj

55 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 56 0 R
  /Border [ 0 0 0 ]
  /Contents (Block)
  /P 54 0 R
  /Rect [ 297.15 697.3 325.04 710.3 ]
  /StructParent 18
>>
endobj

56 0 obj
<< /Type /Action /S /URI /URI (/type/Block.pdf) >>
endobj

57 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 58 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.collate)
  /P 54 0 R
  /Rect [ 371.03 562 421.41 575 ]
  /StructParent 19
>>
endobj

58 0 obj
<< /Type /Action /S /URI /URI (/type/Any.pdf#method_collate) >>
endobj

59 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 60 0 R
  /Border [ 0 0 0 ]
  /Contents (List.reduce)
  /P 54 0 R
  /Rect [ 368.34 426.7 417.05 439.7 ]
  /StructParent 20
>>
endobj

60 0 obj
<< /Type /Action /S /URI /URI (/type/List.pdf#routine_reduce) >>
endobj

61 0 obj
<< /Length 6034 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method sort) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 733.3 Tm
      /F2 8.5 Tf
      (method sort\(Supply:D: &custom-routine-to-use? --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 728.3 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F2 8.5 Tf
    [ -4313 (Supply) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    [ -6726 ( it is called on. Once that ) ] TJ
  ET
EMC
/Code << /MCID 5 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F2 8.5 Tf
    [ -19938 (Supply) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    [ -20007 ( emits ) ] TJ
  ET
EMC
/Code << /MCID 7 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F2 8.5 Tf
    [ -26675 (done) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    [ -24714 (, all of the values that it emitted will be sorted, and the results emitted on the) ] TJ
    11 TL
    T*
    (returned ) Tj
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 20 700.3 Tm
    /F2 8.5 Tf
    [ -4214 (Supply) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 700.3 Tm
    /F3 10 Tf
    [ -6642 ( in the sorted order. Optionally accepts a comparator ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 11 >> BDC
    BT
      1 0 0 1 20 700.3 Tm
      [ -27915 (Block) ] TJ
    ET
  EMC
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 700.3 Tm
    [ -30304 (. If the original ) ] TJ
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 20 700.3 Tm
    /F2 8.5 Tf
    [ -43004 (Supply) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 700.3 Tm
    /F3 10 Tf
    [ -39613 ( ) ] TJ
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 20 700.3 Tm
    /F2 8.5 Tf
    [ -46898 (quit) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 700.3 Tm
    /F3 10 Tf
    [ -41903 (s, then the exception is immediately) ] TJ
    T*
    (conveyed on the return ) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 20 689.3 Tm
    /F2 8.5 Tf
    [ -11108 (Supply) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 689.3 Tm
    /F3 10 Tf
    [ -12502 (.) ] TJ
  ET
EMC
/Code << /MCID 19 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 670.6 Tm
      /F2 8.5 Tf
      (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
      9.35 TL
      T*
      (my $t = $s.sort\(\);) Tj
      T*
      ($t.tap\(&say\);            OUTPUT: «23410») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 646.9 572 33.7 re
      B
    Q
  EMC
EMC
/H2 << /MCID 20 >> BDC
  BT
    1 0 0 1 20 616.7 Tm
    /F1 16 Tf
    (method collate) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 598 Tm
      /F2 8.5 Tf
      (method collate\(Supply:D:\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 593 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 576 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 576 Tm
    /F2 8.5 Tf
    [ -4313 (Supply) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 576 Tm
    /F3 10 Tf
    [ -6726 ( it is called on. Once that ) ] TJ
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 20 576 Tm
    /F2 8.5 Tf
    [ -19938 (Supply) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 576 Tm
    /F3 10 Tf
    [ -20007 ( emits ) ] TJ
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 20 576 Tm
    /F2 8.5 Tf
    [ -26675 (done) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 576 Tm
    /F3 10 Tf
    [ -24714 (, all of the values that it emitted will be sorted taking into account Unicode) ] TJ
    11 TL
    T*
    (grapheme characteristics. A new ) Tj
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 20 565 Tm
    /F2 8.5 Tf
    [ -15648 (Supply) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 565 Tm
    /F3 10 Tf
    [ -16361 ( is returned with the sorted values emitted. See ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 31 >> BDC
    BT
      1 0 0 1 20 565 Tm
      [ -35303 (Any.collate) ] TJ
    ET
  EMC
Q
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 565 Tm
    [ -39941 ( for more details on the collated sort.) ] TJ
  ET
EMC
/Code << /MCID 33 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 546.3 Tm
      /F2 8.5 Tf
      (my $s = Supply.from-list\(<ä a o ö>\);) Tj
      9.35 TL
      T*
      (my $t = $s.collate\(\);) Tj
      T*
      ($t.tap\(&say\);            OUTPUT: «aäoö») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 522.6 572 33.7 re
      B
    Q
  EMC
EMC
/H2 << /MCID 34 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F1 16 Tf
    (method reduce) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 36 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 451.7 Tm
      /F2 8.5 Tf
      (method reduce\(Supply:D: &with --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 446.7 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 429.7 Tm
    /F3 10 Tf
    (Creates a "reducing" supply, which will emit a single value with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 38 >> BDC
    BT
      1 0 0 1 20 429.7 Tm
      [ -35034 (List.reduce) ] TJ
    ET
  EMC
Q
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 429.7 Tm
    [ -39505 (.) ] TJ
  ET
EMC
/Code << /MCID 40 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 411 Tm
      /F2 8.5 Tf
      (my $supply = Supply.from-list\(1..5\).reduce\({$^a + $^b}\);) Tj
      T*
      ($supply.tap\(-> $v { say "$v" }\);  OUTPUT: «15») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 396.65 572 24.35 re
      B
    Q
  EMC
EMC
endstream
endobj

62 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

63 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

64 0 obj
<<
  /Type /Page
  /Annots [ 65 0 R 67 0 R ]
  /Contents 69 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 70 0 R /GS2 71 0 R >>
    /Font << /F1 27 0 R /F2 28 0 R /F3 30 0 R >>
  >>
  /StructParents 21
>>
endobj

65 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 66 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 64 0 R
  /Rect [ 268.35 254 287.9 267 ]
  /StructParent 22
>>
endobj

66 0 obj
<< /Type /Action /S /URI /URI (/type/Tap.pdf) >>
endobj

67 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 68 0 R
  /Border [ 0 0 0 ]
  /Contents (CLOSE)
  /P 64 0 R
  /Rect [ 527.53 243 563.2 256 ]
  /StructParent 23
>>
endobj

68 0 obj
<< /Type /Action /S /URI /URI (/language/phasers.pdf#close) >>
endobj

69 0 obj
<< /Length 6679 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that return another Supply) Tj
  ET
  q
    1 w
    20 750 m
    331.12 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 716.8 Tm
    /F1 16 Tf
    (method from-list) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 698.1 Tm
      /F2 8.5 Tf
      (method from-list\(Supply:U: +@values --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 693.1 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 676.1 Tm
    /F3 10 Tf
    (Creates an on-demand supply from the values passed to this method.) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 657.4 Tm
      /F2 8.5 Tf
      (my $s = Supply.from-list\(1, 2, 3\);) Tj
      9.35 TL
      T*
      ($s.tap\(&say\);            OUTPUT: «123») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 643.05 572 24.35 re
      B
    Q
  EMC
EMC
/H2 << /MCID 5 >> BDC
  BT
    1 0 0 1 20 612.85 Tm
    /F1 16 Tf
    (method share) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 594.15 Tm
      /F2 8.5 Tf
      (method share\(Supply:D: --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 589.15 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 572.15 Tm
    /F3 10 Tf
    (Creates a live supply from an on-demand supply, thus making it possible to share the values of the on-demand supply on multiple taps, instead) Tj
    11 TL
    T*
    (of each tap seeing its own copy of all values from the on-demand supply.) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 542.45 Tm
      /F2 8.5 Tf
      ( this says in turn: "first 1" "first 2" "second 2" "first 3" "second 3") Tj
      9.35 TL
      T*
      (my $s = Supply.interval\(1\).share;) Tj
      T*
      ($s.tap: { "first $_".say };) Tj
      T*
      (sleep 1.1;) Tj
      T*
      ($s.tap: { "second $_".say };) Tj
      T*
      (sleep 2) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 490.7 572 61.75 re
      B
    Q
  EMC
EMC
/H2 << /MCID 9 >> BDC
  BT
    1 0 0 1 20 460.5 Tm
    /F1 16 Tf
    (method flat) Tj
  ET
EMC
/Code << /MCID 10 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 441.8 Tm
      /F2 8.5 Tf
      (method flat\(Supply:D: --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 436.8 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F3 10 Tf
    (Creates a supply on which all of the values seen in the given supply are flattened before being emitted again.) Tj
  ET
EMC
/H2 << /MCID 12 >> BDC
  BT
    1 0 0 1 20 384.6 Tm
    /F1 16 Tf
    (method do) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 365.9 Tm
      /F2 8.5 Tf
      (method do\(Supply:D: &do --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 360.9 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 343.9 Tm
    /F3 10 Tf
    (Creates a supply to which all values seen in the given supply, are emitted again. The given code, executed for its side-effects only, is) Tj
    11 TL
    T*
    (guaranteed to be only executed by one thread at a time.) Tj
  ET
EMC
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 297.7 Tm
    /F1 16 Tf
    (method on-close) Tj
  ET
EMC
/Code << /MCID 16 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 279 Tm
      /F2 8.5 Tf
      (method on-close\(Supply:D: &on-close --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 274 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 257 Tm
    /F3 10 Tf
    (Returns a new ) Tj
  ET
EMC
/Code << /MCID 18 >> BDC
  BT
    1 0 0 1 20 257 Tm
    /F2 8.5 Tf
    [ -7025 (Supply) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 257 Tm
    /F3 10 Tf
    [ -9031 ( which will run ) ] TJ
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 20 257 Tm
    /F2 8.5 Tf
    [ -18075 (&on-close) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 257 Tm
    /F3 10 Tf
    [ -19954 ( whenever a ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 22 >> BDC
    BT
      1 0 0 1 20 257 Tm
      [ -25035 (Tap) ] TJ
    ET
  EMC
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 257 Tm
    [ -26590 ( of that ) ] TJ
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 20 257 Tm
    /F2 8.5 Tf
    [ -34909 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 257 Tm
    /F3 10 Tf
    [ -32733 ( is closed. This includes if further operations are chained on) ] TJ
    T*
    (to the ) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 246 Tm
    /F2 8.5 Tf
    [ -2941 (Supply) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 246 Tm
    /F3 10 Tf
    [ -5560 (. \(for example, ) ] TJ
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 246 Tm
    /F2 8.5 Tf
    [ -13761 ($supply.on-close\(&on-close\).map\(*.uc\)) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 246 Tm
    /F3 10 Tf
    [ -30567 (\). When using a ) ] TJ
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 20 246 Tm
    /F2 8.5 Tf
    [ -43705 (react) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 246 Tm
    /F3 10 Tf
    [ -39699 ( or ) ] TJ
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 20 246 Tm
    /F2 8.5 Tf
    [ -48273 (supply) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 246 Tm
    /F3 10 Tf
    [ -44092 ( block, using the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 34 >> BDC
    BT
      1 0 0 1 20 246 Tm
      [ -50953 (CLOSE) ] TJ
    ET
  EMC
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 246 Tm
    [ -54120 ( phaser) ] TJ
    T*
    (is usually a better choice.) Tj
  ET
EMC
/Code << /MCID 36 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 216.3 Tm
      /F2 8.5 Tf
      (my $s = Supplier.new;) Tj
      9.35 TL
      T*
      (my $tap = $s.Supply.on-close\({ say "Tap closed" }\).tap\() Tj
      T*
      (    -> $v { say "the value is $v" },) Tj
      T*
      (    done    => { say "Supply is done" },) Tj
      T*
      (    quit    => -> $ex { say "Supply finished with error $ex" },) Tj
      T*
      (\);) Tj
      T*
      [  ] TJ
      T*
      ($s.emit\('Raku'\);) Tj
      T*
      ($tap.close;         OUTPUT: «Tap closed») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 136.5 572 89.8 re
      B
    Q
  EMC
EMC
endstream
endobj

70 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

71 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

72 0 obj
<<
  /Type /Page
  /Annots [ 73 0 R ]
  /Contents 75 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 76 0 R /GS2 77 0 R >>
    /Font << /F1 27 0 R /F2 28 0 R /F3 30 0 R >>
  >>
  /StructParents 24
>>
endobj

73 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 74 0 R
  /Border [ 0 0 0 ]
  /Contents (List.head)
  /P 72 0 R
  /Rect [ 226.96 78.55 267.9 91.55 ]
  /StructParent 25
>>
endobj

74 0 obj
<< /Type /Action /S /URI /URI (/type/List.pdf#method_head) >>
endobj

75 0 obj
<< /Length 8286 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method interval) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 733.3 Tm
      /F2 8.5 Tf
      (method interval\(Supply:U: $interval, $delay = 0, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 728.3 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    (Creates a supply that emits a value every ) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F2 8.5 Tf
    [ -19539 ($interval) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    [ -21198 ( seconds, starting ) ] TJ
  ET
EMC
/Code << /MCID 5 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F2 8.5 Tf
    [ -33369 ($delay) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    [ -31424 ( seconds from the call. The emitted value is an integer, starting) ] TJ
    11 TL
    T*
    (from 0, and is incremented by one for each value emitted.) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 678.3 Tm
    (Implementations may treat too-small and negative values as lowest resolution they support, possibly warning in such situations; e.g. treating ) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 20 678.3 Tm
    /F2 8.5 Tf
    [ -66335 ] TJ
    9.35 TL
    T*
    (0.0001) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 668.95 Tm
    /F3 10 Tf
    [ -3060 ( as ) ] TJ
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 20 668.95 Tm
    /F2 8.5 Tf
    [ -5168 (0.001) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 668.95 Tm
    /F3 10 Tf
    [ -6943 (. For 6.d language version, the minimal value specified is ) ] TJ
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 668.95 Tm
    /F2 8.5 Tf
    [ -35453 (0.001) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 668.95 Tm
    /F3 10 Tf
    [ -32685 (.) ] TJ
  ET
EMC
/H2 << /MCID 14 >> BDC
  BT
    1 0 0 1 20 633.75 Tm
    /F1 16 Tf
    (method grep) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 615.05 Tm
      /F2 8.5 Tf
      (method grep\(Supply:D: Mu $test --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 610.05 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 593.05 Tm
    /F3 10 Tf
    (Creates a new supply that only emits those values from the original supply that smartmatch against ) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 20 593.05 Tm
    /F2 8.5 Tf
    [ -46859 ($test) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 593.05 Tm
    /F3 10 Tf
    [ -42380 (.) ] TJ
  ET
EMC
/Code << /MCID 19 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 574.35 Tm
      /F2 8.5 Tf
      (my $supplier = Supplier.new;) Tj
      T*
      (my $all      = $supplier.Supply;) Tj
      T*
      (my $ints     = $all.grep\(Int\);) Tj
      T*
      ($ints.tap\(&say\);) Tj
      T*
      ($supplier.emit\($_\) for 1, 'a string', 3.14159;    prints only 1) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 531.95 572 52.4 re
      B
    Q
  EMC
EMC
/H2 << /MCID 20 >> BDC
  BT
    1 0 0 1 20 501.75 Tm
    /F1 16 Tf
    (method map) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 483.05 Tm
      /F2 8.5 Tf
      (method map\(Supply:D: &mapper --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 478.05 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 461.05 Tm
    /F3 10 Tf
    (Returns a new supply that maps each value of the given supply through ) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 461.05 Tm
    /F2 8.5 Tf
    [ -33885 (&mapper) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 461.05 Tm
    /F3 10 Tf
    [ -32372 ( and emits it to the new supply.) ] TJ
  ET
EMC
/Code << /MCID 25 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 442.35 Tm
      /F2 8.5 Tf
      (my $supplier = Supplier.new;) Tj
      T*
      (my $all      = $supplier.Supply;) Tj
      T*
      (my $double   = $all.map\(-> $value { $value * 2 }\);) Tj
      T*
      ($double.tap\(&say\);) Tj
      T*
      ($supplier.emit\(4\);            OUTPUT: «8») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 399.95 572 52.4 re
      B
    Q
  EMC
EMC
/H2 << /MCID 26 >> BDC
  BT
    1 0 0 1 20 369.75 Tm
    /F1 16 Tf
    (method batch) Tj
  ET
EMC
/Code << /MCID 27 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 351.05 Tm
      /F2 8.5 Tf
      (method batch\(Supply:D: :$elems, :$seconds --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 346.05 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 329.05 Tm
    /F3 10 Tf
    (Creates a new supply that batches the values of the given supply by either the number of elements in the batch \(using ) Tj
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 20 329.05 Tm
    /F2 8.5 Tf
    [ -55416 (:elems) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 329.05 Tm
    /F3 10 Tf
    [ -50164 (\) or a duration) ] TJ
    11 TL
    T*
    (\(using ) Tj
  ET
EMC
/Code << /MCID 31 >> BDC
  BT
    1 0 0 1 20 318.05 Tm
    /F2 8.5 Tf
    [ -3235 (:seconds) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 318.05 Tm
    /F3 10 Tf
    [ -6830 (\) or both. Any remaining values are emitted in a final batch when the supply is done.) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 296.05 Tm
    /F1 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 296.05 Tm
    /F3 10 Tf
    [ -1999 (: Since Rakudo version 2020.12, the ) ] TJ
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 20 296.05 Tm
    /F2 8.5 Tf
    [ -19736 (:seconds) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 296.05 Tm
    /F3 10 Tf
    [ -20856 ( parameter has a millisecond granularity: for example a 1 millisecond duration could be) ] TJ
    T*
    (specified as ) Tj
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 20 285.05 Tm
    /F2 8.5 Tf
    [ -5815 (:seconds\(0.001\)) ] TJ
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 285.05 Tm
    /F3 10 Tf
    [ -12593 (. Before Rakudo version 2020.12, the ) ] TJ
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 20 285.05 Tm
    /F2 8.5 Tf
    [ -32754 (:seconds) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 285.05 Tm
    /F3 10 Tf
    [ -31921 ( parameter had a second granularity.) ] TJ
  ET
EMC
/H2 << /MCID 41 >> BDC
  BT
    1 0 0 1 20 249.85 Tm
    /F1 16 Tf
    (method elems) Tj
  ET
EMC
/Code << /MCID 42 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 231.15 Tm
      /F2 8.5 Tf
      (method elems\(Supply:D: $seconds? --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 226.15 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 209.15 Tm
    /F3 10 Tf
    (Creates a new supply in which changes to the number of values seen are emitted. It optionally also takes an interval \(in seconds\) if you only) Tj
    T*
    (want to be updated every so many seconds.) Tj
  ET
EMC
/H2 << /MCID 44 >> BDC
  BT
    1 0 0 1 20 162.95 Tm
    /F1 16 Tf
    (method head) Tj
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 140.95 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 46 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 122.25 Tm
      /F2 8.5 Tf
      (multi method head\(Supply:D:\)) Tj
      9.35 TL
      T*
      (multi method head\(Supply:D: Callable:D $limit\)) Tj
      T*
      (multi method head\(Supply:D: \\limit\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 98.55 572 33.7 re
      B
    Q
  EMC
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 81.55 Tm
    /F3 10 Tf
    (Creates a "head" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 48 >> BDC
    BT
      1 0 0 1 20 81.55 Tm
      [ -20896 (List.head) ] TJ
    ET
  EMC
Q
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 81.55 Tm
    [ -24590 (.) ] TJ
  ET
EMC
endstream
endobj

76 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

77 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

78 0 obj
<<
  /Type /Page
  /Annots [ 79 0 R 81 0 R 83 0 R ]
  /Contents 85 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 86 0 R /GS2 87 0 R >>
    /Font << /F1 28 0 R /F2 30 0 R /F3 27 0 R >>
  >>
  /StructParents 26
>>
endobj

79 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 80 0 R
  /Border [ 0 0 0 ]
  /Contents (List.tail)
  /P 78 0 R
  /Rect [ 220.86 557.6 255.7 570.6 ]
  /StructParent 27
>>
endobj

80 0 obj
<< /Type /Action /S /URI /URI (/type/List.pdf#method_tail) >>
endobj

81 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 82 0 R
  /Border [ 0 0 0 ]
  /Contents (Str.split)
  /P 78 0 R
  /Rect [ 545.21 188.55 580.61 201.55 ]
  /StructParent 28
>>
endobj

82 0 obj
<< /Type /Action /S /URI /URI (/type/Str.pdf#routine_split) >>
endobj

83 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 84 0 R
  /Border [ 0 0 0 ]
  /Contents (.head)
  /P 78 0 R
  /Rect [ 76.04 166.55 101.42 179.55 ]
  /StructParent 29
>>
endobj

84 0 obj
<< /Type /Action /S /GoTo /D /method_head >>
endobj

85 0 obj
<< /Length 8740 >> stream
/Code << /MCID 0 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 733.3 Tm
      /F1 8.5 Tf
      (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
      9.35 TL
      T*
      (my $hs = $s.head\(2\);) Tj
      T*
      ($hs.tap\(&say\);            OUTPUT: «410») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 709.6 572 33.7 re
      B
    Q
  EMC
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 692.6 Tm
    /F2 10 Tf
    (Since release 2020.07, A ) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 20 692.6 Tm
    /F1 8.5 Tf
    [ -12024 (WhateverCode) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 692.6 Tm
    /F2 10 Tf
    [ -16340 ( can be used also, again with the same semantics as ) ] TJ
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 20 692.6 Tm
    /F1 8.5 Tf
    [ -43664 (List.head) ] TJ
  ET
EMC
/Code << /MCID 5 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 673.9 Tm
      (my $s = Supply.from-list\(4, 10, 3, 2, 1\);) Tj
      T*
      (my $hs = $s.head\( * - 2\);) Tj
      T*
      ($hs.tap\(&say\);            OUTPUT: «4103») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 650.2 572 33.7 re
      B
    Q
  EMC
EMC
/H2 << /MCID 6 >> BDC
  BT
    1 0 0 1 20 620 Tm
    /F3 16 Tf
    (method tail) Tj
  ET
EMC
/Code << /MCID 7 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 601.3 Tm
      /F1 8.5 Tf
      (multi method tail\(Supply:D:\)) Tj
      T*
      (multi method tail\(Supply:D: Callable:D $limit\)) Tj
      T*
      (multi method tail\(Supply:D: \\limit\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 577.6 572 33.7 re
      B
    Q
  EMC
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 560.6 Tm
    /F2 10 Tf
    (Creates a "tail" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 9 >> BDC
    BT
      1 0 0 1 20 560.6 Tm
      [ -20286 (List.tail) ] TJ
    ET
  EMC
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 560.6 Tm
    [ -23370 (.) ] TJ
  ET
EMC
/Code << /MCID 11 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 541.9 Tm
      /F1 8.5 Tf
      (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
      T*
      (my $ts = $s.tail\(2\);) Tj
      T*
      ($ts.tap\(&say\);            OUTPUT: «32») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 518.2 572 33.7 re
      B
    Q
  EMC
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F2 10 Tf
    (You can call ) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F1 8.5 Tf
    [ -6240 (.tail) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F2 10 Tf
    [ -7854 ( with ) ] TJ
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F1 8.5 Tf
    [ -11920 (Whatever) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F2 10 Tf
    [ -14212 ( or ) ] TJ
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F1 8.5 Tf
    [ -18288 (Inf) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F2 10 Tf
    [ -17075 (; which will return a new supply equivalent to the initial one. Calling it with a ) ] TJ
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F1 8.5 Tf
    [ -56982 (WhateverCode) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F2 10 Tf
    [ -54555 ( will) ] TJ
    11 TL
    T*
    (be equivalent to skipping until that number.) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 471.5 Tm
      /F1 8.5 Tf
      (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
      9.35 TL
      T*
      (my $ts = $s.tail\( * - 2 \);) Tj
      T*
      ($ts.tap\(&say\);            OUTPUT: «32») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 447.8 572 33.7 re
      B
    Q
  EMC
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 430.8 Tm
    /F2 10 Tf
    (This feature is only available from the 2020.07 release of Raku.) Tj
  ET
EMC
/H2 << /MCID 23 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 16 Tf
    (method first) Tj
  ET
EMC
/Code << /MCID 24 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 376.9 Tm
      /F1 8.5 Tf
      (method first\(Supply:D: :$end, |c\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 371.9 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 354.9 Tm
    /F2 10 Tf
    (This method creates a supply of the first element, or the last element if the optional named parameter ) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 354.9 Tm
    /F1 8.5 Tf
    [ -47802 (:end) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 354.9 Tm
    /F2 10 Tf
    [ -42672 ( is truthy, from a supply created by) ] TJ
    11 TL
    T*
    (calling the ) Tj
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 343.9 Tm
    /F1 8.5 Tf
    [ -5228 (grep) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 343.9 Tm
    /F2 10 Tf
    [ -6484 ( method on the invocant, with any remaining arguments as parameters. If there is no remaining argument, this method is) ] TJ
    T*
    (equivalent to calling on the invocant, without parameter, the ) Tj
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 20 332.9 Tm
    /F1 8.5 Tf
    [ -28656 (head) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 332.9 Tm
    /F2 10 Tf
    [ -26398 ( or the ) ] TJ
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 20 332.9 Tm
    /F1 8.5 Tf
    [ -34356 (tail) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 332.9 Tm
    /F2 10 Tf
    [ -31243 ( method, according to named parameter ) ] TJ
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 20 332.9 Tm
    /F1 8.5 Tf
    [ -55739 (:end) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 332.9 Tm
    /F2 10 Tf
    [ -49418 (.) ] TJ
  ET
EMC
/Code << /MCID 36 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 314.2 Tm
      /F1 8.5 Tf
      (my $rand = supply { emit \(rand × 100\).floor for ^ };) Tj
      9.35 TL
      T*
      (my $first-prime = $rand.first: &is-prime;) Tj
      T*
      ( output the first prime from the endless random number supply $rand,) Tj
      T*
      ( then the $first-prime supply reaches its end) Tj
      T*
      ($first-prime.tap: &say;) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 271.8 572 52.4 re
      B
    Q
  EMC
EMC
/H2 << /MCID 37 >> BDC
  BT
    1 0 0 1 20 241.6 Tm
    /F3 16 Tf
    (method split) Tj
  ET
EMC
/Code << /MCID 38 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 222.9 Tm
      /F1 8.5 Tf
      (multi method split\(Supply:D: \\delimiter\)) Tj
      T*
      (multi method split\(Supply:D: \\delimiter, \\limit\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 208.55 572 24.35 re
      B
    Q
  EMC
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 191.55 Tm
    /F2 10 Tf
    (This method creates a supply of the values returned by the ) Tj
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 20 191.55 Tm
    /F1 8.5 Tf
    [ -27740 (Str.split) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 191.55 Tm
    /F2 10 Tf
    [ -28169 ( method called on the string collected from the invocant. See ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 42 >> BDC
    BT
      1 0 0 1 20 191.55 Tm
      [ -52721 (Str.split) ] TJ
    ET
  EMC
Q
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 191.55 Tm
    [ -55861 ] TJ
    11 TL
    T*
    (for details on the ) Tj
  ET
EMC
/Code << /MCID 44 >> BDC
  BT
    1 0 0 1 20 180.55 Tm
    /F1 8.5 Tf
    [ -8234 (\\delimiter) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 180.55 Tm
    /F2 10 Tf
    [ -12099 ( argument as well as available extra named parameters. The created supply can be limited with the ) ] TJ
  ET
EMC
/Code << /MCID 46 >> BDC
  BT
    1 0 0 1 20 180.55 Tm
    /F1 8.5 Tf
    [ -60825 (\\limit) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 180.55 Tm
    /F2 10 Tf
    [ -54761 ] TJ
    T*
    (argument, see ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 48 >> BDC
    BT
      1 0 0 1 20 169.55 Tm
      [ -5804 (.head) ] TJ
    ET
  EMC
Q
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 169.55 Tm
    [ -7942 (.) ] TJ
  ET
EMC
/Code << /MCID 50 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 150.85 Tm
      /F1 8.5 Tf
      (my $words = Supply.from-list\(<Hello World From Raku!>\);) Tj
      9.35 TL
      T*
      (my $s = $words.split\(/ <?upper> /, 2, :skip-empty\);) Tj
      T*
      ($s.tap\(&say\);  OUTPUT: «HelloWorld») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 127.15 572 33.7 re
      B
    Q
  EMC
EMC
endstream
endobj

86 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

87 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

88 0 obj
<<
  /Type /Page
  /Annots [ 89 0 R ]
  /Contents 91 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 92 0 R /GS2 93 0 R >>
    /Font << /F1 27 0 R /F2 28 0 R /F3 30 0 R >>
  >>
  /StructParents 30
>>
endobj

89 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 90 0 R
  /Border [ 0 0 0 ]
  /Contents (List.rotor)
  /P 88 0 R
  /Rect [ 240.3 571.35 281.8 584.35 ]
  /StructParent 31
>>
endobj

90 0 obj
<< /Type /Action /S /URI /URI (/type/List.pdf#method_rotor) >>
endobj

91 0 obj
<< /Length 6432 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method rotate) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 733.3 Tm
      /F2 8.5 Tf
      (method rotate\(Supply:D: $rotate = 1\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 728.3 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    (Creates a supply with elements rotated to the left when ) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F2 8.5 Tf
    [ -26140 ($rotate) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    [ -25789 ( is positive or to the right otherwise, in which case the invocant is tapped on) ] TJ
    11 TL
    T*
    (before a new supply is returned.) Tj
  ET
EMC
/Code << /MCID 5 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 681.6 Tm
      /F2 8.5 Tf
      (my $supply = Supply.from-list\(<a b c d e>\).rotate\(2\);) Tj
      9.35 TL
      T*
      ($supply.tap\(&say\);  OUTPUT: «cdeab») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 667.25 572 24.35 re
      B
    Q
  EMC
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 650.25 Tm
    /F1 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 650.25 Tm
    /F3 10 Tf
    [ -1999 (: Available since Rakudo 2020.06.) ] TJ
  ET
EMC
/H2 << /MCID 8 >> BDC
  BT
    1 0 0 1 20 615.05 Tm
    /F1 16 Tf
    (method rotor) Tj
  ET
EMC
/Code << /MCID 9 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 596.35 Tm
      /F2 8.5 Tf
      (method rotor\(Supply:D: @cycle --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 591.35 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 574.35 Tm
    /F3 10 Tf
    (Creates a "rotoring" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 11 >> BDC
    BT
      1 0 0 1 20 574.35 Tm
      [ -22230 (List.rotor) ] TJ
    ET
  EMC
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 574.35 Tm
    [ -25980 (.) ] TJ
  ET
EMC
/H2 << /MCID 13 >> BDC
  BT
    1 0 0 1 20 539.15 Tm
    /F1 16 Tf
    (method delayed) Tj
  ET
EMC
/Code << /MCID 14 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 520.45 Tm
      /F2 8.5 Tf
      (method delayed\(Supply:D: $seconds, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 515.45 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 498.45 Tm
    /F3 10 Tf
    (Creates a new supply in which all values flowing through the given supply are emitted, but with the given delay in seconds.) Tj
  ET
EMC
/H2 << /MCID 16 >> BDC
  BT
    1 0 0 1 20 463.25 Tm
    /F1 16 Tf
    (method throttle) Tj
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 441.25 Tm
    /F3 10 Tf
    (Defined as) Tj
  ET
EMC
/Code << /MCID 18 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 422.55 Tm
      /F2 8.5 Tf
      (multi method throttle\(Supply:D:) Tj
      T*
      (      Int\(\)  $elems,) Tj
      T*
      (      Real\(\) $seconds,) Tj
      T*
      (      Real\(\) $delay  = 0,) Tj
      T*
      (      :$scheduler    = $*SCHEDULER,) Tj
      T*
      (      :$control,) Tj
      T*
      (      :$status,) Tj
      T*
      (      :$bleed,) Tj
      T*
      (      :$vent-at,) Tj
      T*
      (    \)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 333.4 572 99.15 re
      B
    Q
  EMC
EMC
/Code << /MCID 19 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 319.7 Tm
      (multi method throttle\(Supply:D:) Tj
      T*
      (      Int\(\)  $elems,) Tj
      T*
      (      Callable:D $process,) Tj
      T*
      (      Real\(\) $delay = 0,) Tj
      T*
      (      :$scheduler   = $*SCHEDULER,) Tj
      T*
      (      :$control,) Tj
      T*
      (      :$status,) Tj
      T*
      (      :$bleed,) Tj
      T*
      (      :$vent-at,) Tj
      T*
      (    \)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 230.55 572 99.15 re
      B
    Q
  EMC
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 213.55 Tm
    /F3 10 Tf
    (Arguments to ) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 20 213.55 Tm
    /F2 8.5 Tf
    [ -6732 (.throttle) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 213.55 Tm
    /F3 10 Tf
    [ -10312 ( are defined as follows:) ] TJ
  ET
EMC
/TH << /MCID 23 >> BDC
  BT
    1 0 0 1 20 191.55 Tm
    /F1 10 Tf
    (Argument) Tj
  ET
  q
    1 w
    20 189.55 m
    104.98 189.55 l
    S
  Q
EMC
/TH << /MCID 24 >> BDC
  BT
    1 0 0 1 114.98 191.55 Tm
    (Meaning) Tj
  ET
  q
    1 w
    114.98 189.55 m
    297.75 189.55 l
    S
  Q
EMC
/TD << /MCID 25 >> BDC
  BT
    1 0 0 1 20 177.55 Tm
    /F3 10 Tf
    ($limit,) Tj
  ET
EMC
/TD << /MCID 26 >> BDC
  BT
    1 0 0 1 114.98 177.55 Tm
    (values / time or simultaneous processing) Tj
  ET
EMC
/TD << /MCID 27 >> BDC
  BT
    1 0 0 1 20 164.55 Tm
    ($seconds or $process) Tj
  ET
EMC
/TD << /MCID 28 >> BDC
  BT
    1 0 0 1 114.98 164.55 Tm
    (time-unit / code to process simultaneously) Tj
  ET
EMC
/TD << /MCID 29 >> BDC
  BT
    1 0 0 1 20 151.55 Tm
    ($delay = 0,) Tj
  ET
EMC
/TD << /MCID 30 >> BDC
  BT
    1 0 0 1 114.98 151.55 Tm
    (initial delay before starting, in seconds) Tj
  ET
EMC
/TD << /MCID 31 >> BDC
  BT
    1 0 0 1 20 138.55 Tm
    (:$control,) Tj
  ET
EMC
/TD << /MCID 32 >> BDC
  BT
    1 0 0 1 114.98 138.55 Tm
    (supply to emit control messages on \(optional\)) Tj
  ET
EMC
/TD << /MCID 33 >> BDC
  BT
    1 0 0 1 20 125.55 Tm
    (:$status,) Tj
  ET
EMC
/TD << /MCID 34 >> BDC
  BT
    1 0 0 1 114.98 125.55 Tm
    (supply to tap status messages from \(optional\)) Tj
  ET
EMC
/TD << /MCID 35 >> BDC
  BT
    1 0 0 1 20 112.55 Tm
    (:$bleed,) Tj
  ET
EMC
/TD << /MCID 36 >> BDC
  BT
    1 0 0 1 114.98 112.55 Tm
    (supply to bleed messages to \(optional\)) Tj
  ET
EMC
/TD << /MCID 37 >> BDC
  BT
    1 0 0 1 20 99.55 Tm
    (:$vent-at,) Tj
  ET
EMC
/TD << /MCID 38 >> BDC
  BT
    1 0 0 1 114.98 99.55 Tm
    (bleed when so many buffered \(optional\)) Tj
  ET
EMC
/TD << /MCID 39 >> BDC
  BT
    1 0 0 1 20 86.55 Tm
    (:$scheduler,) Tj
  ET
EMC
/TD << /MCID 40 >> BDC
  BT
    1 0 0 1 114.98 86.55 Tm
    (scheduler to use, default $*SCHEDULER) Tj
  ET
EMC
endstream
endobj

92 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

93 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

94 0 obj
<<
  /Type /Page
  /Annots [ 95 0 R ]
  /Contents 97 0 R
  /Parent 6 0 R
  /Resources << /Font << /F1 30 0 R /F2 28 0 R /F3 27 0 R >> >>
  /StructParents 32
>>
endobj

95 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 96 0 R
  /Border [ 0 0 0 ]
  /Contents (status message)
  /P 94 0 R
  /Rect [ 225.47 507 288.63 520 ]
  /StructParent 33
>>
endobj

96 0 obj
<< /Type /Action /S /GoTo /D /status_message >>
endobj

97 0 obj
<< /Length 8919 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (This method produces a ) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 8.5 Tf
    [ -11567 (Supply) ] TJ
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -12892 ( from a given one, but makes sure the number of messages passed through is limited.) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 730 Tm
    (It has two modes of operation: per time-unit or by maximum number of executions of a block of code: this is determined by the type of the) Tj
    11 TL
    T*
    (second positional parameter.) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 697 Tm
    (The first positional parameter specifies the limit that should be applied.) Tj
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 675 Tm
    (If the second positional parameter is a ) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F2 8.5 Tf
    [ -18199 (Callable) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F1 10 Tf
    [ -19549 (, then the limit indicates the maximum number of parallel processes executing the Callable,) ] TJ
    T*
    (which is given the value that was received. The emitted values in this case will be the ) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 20 664 Tm
    /F2 8.5 Tf
    [ -40516 (Promise) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 664 Tm
    /F1 10 Tf
    [ -38009 (s that were obtained from ) ] TJ
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 20 664 Tm
    /F2 8.5 Tf
    [ -57034 (start) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 664 Tm
    /F1 10 Tf
    [ -51029 (ing the) ] TJ
    T*
    (Callable.) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 631 Tm
    (If the second positional parameter is a real number, it is interpreted as the time-unit \(in seconds\). If you specify ) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F3 10 Tf
    [ -44714 (.1) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F1 10 Tf
    [ -45464 ( as the value, then it makes) ] TJ
    T*
    (sure you don't exceed the limit for every tenth of a second.) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 598 Tm
    (If the limit is exceeded, then incoming messages are buffered until there is room to pass on / execute the Callable again.) Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 576 Tm
    (The third positional parameter is optional: it indicates the number of seconds the throttle will wait before passing on any values.) Tj
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 554 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 18 >> BDC
  BT
    1 0 0 1 20 554 Tm
    /F2 8.5 Tf
    [ -2124 (:control) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 554 Tm
    /F1 10 Tf
    [ -5885 ( named parameter optionally specifies a Supply that you can use to control the throttle while it is in operation. Messages that) ] TJ
    T*
    (can be sent, are strings in the form of "key:value". Please see below for the types of messages that you can send to control the throttle.) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 521 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 20 521 Tm
    /F2 8.5 Tf
    [ -2124 (:status) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 521 Tm
    /F1 10 Tf
    [ -5375 ( named parameter optionally specifies a Supply that will receive any status messages. If specified, it will at least send one status) ] TJ
    T*
    (message after the original Supply is exhausted. See ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 23 >> BDC
    BT
      1 0 0 1 20 510 Tm
      [ -20747 (status message) ] TJ
    ET
  EMC
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 510 Tm
    [ -26663 ( below.) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 488 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 488 Tm
    /F2 8.5 Tf
    [ -2124 (:bleed) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 488 Tm
    /F1 10 Tf
    [ -4865 ( named parameter optionally specifies a Supply that will receive any values that were either explicitly bled \(with the ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 488 Tm
    /F3 10 Tf
    [ -51607 (bleed) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 488 Tm
    /F1 10 Tf
    [ -53885 ( control) ] TJ
    T*
    (message\), or automatically bled \(if there's a ) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F3 10 Tf
    [ -17676 (vent-at) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F1 10 Tf
    [ -20675 ( active\).) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 455 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F2 8.5 Tf
    [ -2124 (:vent-at) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F1 10 Tf
    [ -5885 ( named parameter indicates the number of values that may be buffered before any additional value will be routed to the ) ] TJ
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F2 8.5 Tf
    [ -63284 (:bleed) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F1 10 Tf
    [ -56851 ] TJ
    T*
    (Supply. Defaults to 0 if not specified \(causing no automatic bleeding to happen\). Only makes sense if a ) Tj
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 20 444 Tm
    /F2 8.5 Tf
    [ -48882 (:bleed) ] TJ
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 444 Tm
    /F1 10 Tf
    [ -44610 ( Supply has also been) ] TJ
    T*
    (specified.) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 411 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 20 411 Tm
    /F2 8.5 Tf
    [ -2124 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 411 Tm
    /F1 10 Tf
    [ -6905 ( named parameter indicates the scheduler to be used. Defaults to ) ] TJ
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 20 411 Tm
    /F2 8.5 Tf
    [ -38705 ($*SCHEDULER) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 411 Tm
    /F1 10 Tf
    [ -38509 (.) ] TJ
  ET
EMC
/H3 << /MCID 44 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 13 Tf
    (control messages) Tj
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 360.4 Tm
    /F1 10 Tf
    (These messages can be sent to the ) Tj
  ET
EMC
/Code << /MCID 46 >> BDC
  BT
    1 0 0 1 20 360.4 Tm
    /F2 8.5 Tf
    [ -16304 (:control) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 360.4 Tm
    /F1 10 Tf
    [ -17938 ( Supply. A control message consists of a string of the form "key: value", e.g. "limit: 4".) ] TJ
  ET
EMC
/Lbl << /MCID 48 >> BDC
  BT
    1 0 0 1 30 338.4 Tm
    (•) Tj
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 40 338.4 Tm
    (limit) Tj
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 316.4 Tm
    (Change the number of messages \(as initially given in the first positional\) to the value given.) Tj
  ET
EMC
/Lbl << /MCID 51 >> BDC
  BT
    1 0 0 1 30 294.4 Tm
    (•) Tj
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 40 294.4 Tm
    (bleed) Tj
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 272.4 Tm
    (Route the given number of buffered messages to the ) Tj
  ET
EMC
/Code << /MCID 54 >> BDC
  BT
    1 0 0 1 20 272.4 Tm
    /F2 8.5 Tf
    [ -24865 (:bleed) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 272.4 Tm
    /F1 10 Tf
    [ -24195 ( Supply.) ] TJ
  ET
EMC
/Lbl << /MCID 56 >> BDC
  BT
    1 0 0 1 30 250.4 Tm
    (•) Tj
  ET
EMC
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 40 250.4 Tm
    (vent-at) Tj
  ET
EMC
/P << /MCID 58 >> BDC
  BT
    1 0 0 1 20 228.4 Tm
    (Change the maximum number of buffered values before automatic bleeding takes place. If the value is lower than before, will cause) Tj
    T*
    (immediate rerouting of buffered values to match the new maximum.) Tj
  ET
EMC
/Lbl << /MCID 59 >> BDC
  BT
    1 0 0 1 30 195.4 Tm
    (•) Tj
  ET
EMC
/P << /MCID 60 >> BDC
  BT
    1 0 0 1 40 195.4 Tm
    (status) Tj
  ET
EMC
/P << /MCID 61 >> BDC
  BT
    1 0 0 1 20 173.4 Tm
    (Send a status message to the ) Tj
  ET
EMC
/Code << /MCID 62 >> BDC
  BT
    1 0 0 1 20 173.4 Tm
    /F2 8.5 Tf
    [ -13659 (:status) ] TJ
  ET
EMC
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 173.4 Tm
    /F1 10 Tf
    [ -15180 ( Supply with the given id.) ] TJ
  ET
EMC
/H3 << /MCID 64 >> BDC
  BT
    1 0 0 1 20 144.8 Tm
    /F3 13 Tf
    (status message) Tj
  ET
EMC
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 122.8 Tm
    /F1 10 Tf
    (The status return message is a hash with the following keys:) Tj
  ET
EMC
/Lbl << /MCID 66 >> BDC
  BT
    1 0 0 1 30 100.8 Tm
    (•) Tj
  ET
EMC
/P << /MCID 67 >> BDC
  BT
    1 0 0 1 40 100.8 Tm
    (allowed) Tj
  ET
EMC
/P << /MCID 68 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    (The current number of messages / callables that is still allowed to be passed / executed.) Tj
  ET
EMC
endstream
endobj

98 0 obj
<<
  /Type /Page
  /Annots [ 99 0 R 101 0 R 103 0 R ]
  /Contents 105 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 106 0 R /GS2 107 0 R >>
    /Font << /F1 28 0 R /F2 30 0 R /F3 27 0 R >>
  >>
  /StructParents 35
>>
endobj

99 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 100 0 R
  /Border [ 0 0 0 ]
  /Contents (List.produce)
  /P 98 0 R
  /Rect [ 248.63 507.55 302.9 520.55 ]
  /StructParent 36
>>
endobj

100 0 obj
<< /Type /Action /S /URI /URI (/type/List.pdf#routine_produce) >>
endobj

101 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 102 0 R
  /Border [ 0 0 0 ]
  /Contents (unique)
  /P 98 0 R
  /Rect [ 494.01 192.4 525.23 205.4 ]
  /StructParent 37
>>
endobj

102 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines.pdf#routine_unique)
>>
endobj

103 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 104 0 R
  /Border [ 0 0 0 ]
  /Contents (unique)
  /P 98 0 R
  /Rect [ 500.66 96.15 531.88 109.15 ]
  /StructParent 38
>>
endobj

104 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines.pdf#routine_unique)
>>
endobj

105 0 obj
<< /Length 8703 >> stream
/Code << /MCID 0 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 733.3 Tm
      /F1 8.5 Tf
      (my $supplier = Supplier.new;) Tj
      9.35 TL
      T*
      (my $supply1 = $supplier.Supply;) Tj
      T*
      ($supply1.tap\(-> $v { say "Supply1 got: $v" }\);) Tj
      T*
      ($supplier.emit\(42\);) Tj
      T*
      [  ] TJ
      T*
      (my Supply $supply2 = $supply1.stable\(5\);) Tj
      T*
      ($supply2.tap\(-> $v { say "Supply2 got: $v" }\);) Tj
      T*
      (sleep\(3\);) Tj
      T*
      ($supplier.emit\(43\);   will not be seen by $supply2 but will reset $time) Tj
      T*
      ($supplier.emit\(44\);) Tj
      T*
      (sleep\(10\);) Tj
      T*
      ( OUTPUT: «Supply1 got: 42Supply1 got: 43Supply1 got: 44Supply2 got: 44») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 625.45 572 117.85 re
      B
    Q
  EMC
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 608.45 Tm
    /F2 10 Tf
    (As can be seen above, ) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 20 608.45 Tm
    /F1 8.5 Tf
    [ -10715 ($supply1) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 608.45 Tm
    /F2 10 Tf
    [ -13188 ( received all values emitted to the ) ] TJ
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 20 608.45 Tm
    /F1 8.5 Tf
    [ -31624 (Supplier) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 608.45 Tm
    /F2 10 Tf
    [ -30960 ( while ) ] TJ
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 20 608.45 Tm
    /F1 8.5 Tf
    [ -39626 ($supply2) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 608.45 Tm
    /F2 10 Tf
    [ -37762 ( only received one value. The 43 was thrown) ] TJ
    11 TL
    T*
    (away because it was followed by another 'last' value 44 which was retained and sent to ) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 20 597.45 Tm
    /F1 8.5 Tf
    [ -41068 ($supply2) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 597.45 Tm
    /F2 10 Tf
    [ -38988 ( after approximately eight seconds, this due) ] TJ
    T*
    (to the fact that the timeout ) Tj
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 20 586.45 Tm
    /F1 8.5 Tf
    [ -12679 ($time) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 586.45 Tm
    /F2 10 Tf
    [ -13327 ( was reset after three seconds.) ] TJ
  ET
EMC
/H2 << /MCID 12 >> BDC
  BT
    1 0 0 1 20 551.25 Tm
    /F3 16 Tf
    (method produce) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 532.55 Tm
      /F1 8.5 Tf
      (method produce\(Supply:D: &with --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 527.55 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 510.55 Tm
    /F2 10 Tf
    (Creates a "producing" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 15 >> BDC
    BT
      1 0 0 1 20 510.55 Tm
      [ -23063 (List.produce) ] TJ
    ET
  EMC
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 510.55 Tm
    [ -28090 (.) ] TJ
  ET
EMC
/Code << /MCID 17 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 491.85 Tm
      /F1 8.5 Tf
      (my $supply = Supply.from-list\(1..5\).produce\({$^a + $^b}\);) Tj
      9.35 TL
      T*
      ($supply.tap\(-> $v { say "$v" }\);  OUTPUT: «1361015») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 477.5 572 24.35 re
      B
    Q
  EMC
EMC
/H2 << /MCID 18 >> BDC
  BT
    1 0 0 1 20 447.3 Tm
    /F3 16 Tf
    (method lines) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 428.6 Tm
      /F1 8.5 Tf
      (method lines\(Supply:D: :$chomp = True --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 423.6 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 406.6 Tm
    /F2 10 Tf
    (Creates a supply that will emit the characters coming in line by line from a supply that's usually created by some asynchronous I/O operation.) Tj
    11 TL
    T*
    (The optional ) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F1 8.5 Tf
    [ -6274 (:chomp) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    [ -8393 ( parameter indicates whether to remove line separators: the default is ) ] TJ
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F1 8.5 Tf
    [ -42579 (True) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    [ -38232 (.) ] TJ
  ET
EMC
/H2 << /MCID 25 >> BDC
  BT
    1 0 0 1 20 360.4 Tm
    /F3 16 Tf
    (method words) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 341.7 Tm
      /F1 8.5 Tf
      (method words\(Supply:D: --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 336.7 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 319.7 Tm
    /F2 10 Tf
    (Creates a supply that will emit the characters coming in word for word from a supply that's usually created by some asynchronous I/O) Tj
    T*
    (operation.) Tj
  ET
EMC
/Code << /MCID 28 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 290 Tm
      /F1 8.5 Tf
      (my $s = Supply.from-list\("Hello Word!".comb\);) Tj
      9.35 TL
      T*
      (my $ws = $s.words;) Tj
      T*
      ($ws.tap\(&say\);            OUTPUT: «HelloWord!») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 266.3 572 33.7 re
      B
    Q
  EMC
EMC
/H2 << /MCID 29 >> BDC
  BT
    1 0 0 1 20 236.1 Tm
    /F3 16 Tf
    (method unique) Tj
  ET
EMC
/Code << /MCID 30 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 217.4 Tm
      /F1 8.5 Tf
      (method unique\(Supply:D: :$as, :$with, :$expires --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 212.4 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 195.4 Tm
    /F2 10 Tf
    (Creates a supply that only provides unique values, as defined by the optional ) Tj
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 20 195.4 Tm
    /F1 8.5 Tf
    [ -36401 (:as) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 195.4 Tm
    /F2 10 Tf
    [ -32471 ( and ) ] TJ
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 20 195.4 Tm
    /F1 8.5 Tf
    [ -40488 (:with) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 195.4 Tm
    /F2 10 Tf
    [ -36965 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 36 >> BDC
    BT
      1 0 0 1 20 195.4 Tm
      [ -47601 (unique) ] TJ
    ET
  EMC
Q
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 195.4 Tm
    [ -50323 (\). The optional ) ] TJ
  ET
EMC
/Code << /MCID 38 >> BDC
  BT
    1 0 0 1 20 195.4 Tm
    /F1 8.5 Tf
    [ -66458 ] TJ
    T*
    (:expires) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 186.05 Tm
    /F2 10 Tf
    [ -4080 ( parameter how long to wait \(in seconds\) before "resetting" and not considering a value to have been seen, even if it's the same as an) ] TJ
    11 TL
    T*
    (old value.) Tj
  ET
EMC
/H2 << /MCID 40 >> BDC
  BT
    1 0 0 1 20 139.85 Tm
    /F3 16 Tf
    (method repeated) Tj
  ET
EMC
/Code << /MCID 41 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 121.15 Tm
      /F1 8.5 Tf
      (method repeated\(Supply:D: :&as, :&with\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 116.15 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 99.15 Tm
    /F2 10 Tf
    (Creates a supply that only provides repeated values, as defined by the optional ) Tj
  ET
EMC
/Code << /MCID 43 >> BDC
  BT
    1 0 0 1 20 99.15 Tm
    /F1 8.5 Tf
    [ -37184 (:as) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 99.15 Tm
    /F2 10 Tf
    [ -33136 ( and ) ] TJ
  ET
EMC
/Code << /MCID 45 >> BDC
  BT
    1 0 0 1 20 99.15 Tm
    /F1 8.5 Tf
    [ -41271 (:with) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 99.15 Tm
    /F2 10 Tf
    [ -37630 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 47 >> BDC
    BT
      1 0 0 1 20 99.15 Tm
      [ -48266 (unique) ] TJ
    ET
  EMC
Q
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 99.15 Tm
    [ -50988 (\).) ] TJ
  ET
EMC
/Code << /MCID 49 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 80.45 Tm
      /F1 8.5 Tf
      (my $supply = Supply.from-list\(<a A B b c b C>\).repeated\(:as\(&lc\)\);) Tj
      9.35 TL
      T*
      ($supply.tap\(&say\);            OUTPUT: «AbbC») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 66.1 572 24.35 re
      B
    Q
  EMC
EMC
endstream
endobj

106 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

107 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

108 0 obj
<<
  /Type /Page
  /Annots [ 109 0 R 111 0 R 113 0 R 115 0 R 117 0 R 119 0 R ]
  /Contents 121 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 122 0 R /GS2 123 0 R >>
    /Font << /F1 30 0 R /F2 27 0 R /F3 28 0 R >>
  >>
  /StructParents 39
>>
endobj

109 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 110 0 R
  /Border [ 0 0 0 ]
  /Contents (repeated)
  /P 108 0 R
  /Rect [ 34.94 749 72.81 762 ]
  /StructParent 40
>>
endobj

110 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines.pdf#routine_repeated)
>>
endobj

111 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 112 0 R
  /Border [ 0 0 0 ]
  /Contents (Rakudo)
  /P 108 0 R
  /Rect [ 157.41 727 192.52 740 ]
  /StructParent 41
>>
endobj

112 0 obj
<< /Type /Action /S /URI /URI (/language/glossary.pdf#rakudo) >>
endobj

113 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 114 0 R
  /Border [ 0 0 0 ]
  /Contents (squish)
  /P 108 0 R
  /Rect [ 494.01 651.1 523.57 664.1 ]
  /StructParent 42
>>
endobj

114 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines.pdf#routine_squish)
>>
endobj

115 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 116 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.max)
  /P 108 0 R
  /Rect [ 211.29 553.2 252.23 566.2 ]
  /StructParent 43
>>
endobj

116 0 obj
<< /Type /Action /S /URI /URI (/type/Any.pdf#routine_max) >>
endobj

117 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 118 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.min)
  /P 108 0 R
  /Rect [ 211.29 455.3 250.57 468.3 ]
  /StructParent 44
>>
endobj

118 0 obj
<< /Type /Action /S /URI /URI (/type/Any.pdf#routine_min) >>
endobj

119 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 120 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.minmax)
  /P 108 0 R
  /Rect [ 168.81 368.4 225.31 381.4 ]
  /StructParent 45
>>
endobj

120 0 obj
<< /Type /Action /S /URI /URI (/type/Any.pdf#routine_minmax) >>
endobj

121 0 obj
<< /Length 7753 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (See ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 1 >> BDC
    BT
      1 0 0 1 20 752 Tm
      [ -1694 (repeated) ] TJ
    ET
  EMC
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 752 Tm
    [ -5081 ( for more examples that use its sub form.) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 730 Tm
    /F2 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 730 Tm
    /F1 10 Tf
    [ -1999 (: Available since version 6.e \() ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 5 >> BDC
    BT
      1 0 0 1 20 730 Tm
      [ -13941 (Rakudo) ] TJ
    ET
  EMC
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 730 Tm
    [ -17052 ( 2020.01 and later\).) ] TJ
  ET
EMC
/H2 << /MCID 7 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 16 Tf
    (method squish) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 676.1 Tm
      /F3 8.5 Tf
      (method squish\(Supply:D: :$as, :$with --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 671.1 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 654.1 Tm
    /F1 10 Tf
    (Creates a supply that only provides unique values, as defined by the optional ) Tj
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 20 654.1 Tm
    /F3 8.5 Tf
    [ -36401 (:as) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 654.1 Tm
    /F1 10 Tf
    [ -32471 ( and ) ] TJ
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 654.1 Tm
    /F3 8.5 Tf
    [ -40488 (:with) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 654.1 Tm
    /F1 10 Tf
    [ -36965 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 14 >> BDC
    BT
      1 0 0 1 20 654.1 Tm
      [ -47601 (squish) ] TJ
    ET
  EMC
Q
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 654.1 Tm
    [ -50157 (\).) ] TJ
  ET
EMC
/H2 << /MCID 16 >> BDC
  BT
    1 0 0 1 20 618.9 Tm
    /F2 16 Tf
    (method max) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 600.2 Tm
      /F3 8.5 Tf
      (method max\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 595.2 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F1 10 Tf
    (Creates a supply that only emits values from the given supply if they are larger than any value seen before. In other words, from a) Tj
    11 TL
    T*
    (continuously ascending supply it will emit all the values. From a continuously descending supply it will only emit the first value. The optional) Tj
    T*
    (parameter specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 19 >> BDC
    BT
      1 0 0 1 20 556.2 Tm
      [ -19329 (Any.max) ] TJ
    ET
  EMC
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    [ -23023 (.) ] TJ
  ET
EMC
/H2 << /MCID 21 >> BDC
  BT
    1 0 0 1 20 521 Tm
    /F2 16 Tf
    (method min) Tj
  ET
EMC
/Code << /MCID 22 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 502.3 Tm
      /F3 8.5 Tf
      (method min\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 497.3 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 480.3 Tm
    /F1 10 Tf
    (Creates a supply that only emits values from the given supply if they are smaller than any value seen before. In other words, from a) Tj
    T*
    (continuously descending supply it will emit all the values. From a continuously ascending supply it will only emit the first value. The optional) Tj
    T*
    (parameter specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 24 >> BDC
    BT
      1 0 0 1 20 458.3 Tm
      [ -19329 (Any.min) ] TJ
    ET
  EMC
Q
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 458.3 Tm
    [ -22857 (.) ] TJ
  ET
EMC
/H2 << /MCID 26 >> BDC
  BT
    1 0 0 1 20 423.1 Tm
    /F2 16 Tf
    (method minmax) Tj
  ET
EMC
/Code << /MCID 27 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 404.4 Tm
      /F3 8.5 Tf
      (method minmax\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 399.4 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F1 10 Tf
    (Creates a supply that emits a Range every time a new minimum or maximum values is seen from the given supply. The optional parameter) Tj
    T*
    (specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 29 >> BDC
    BT
      1 0 0 1 20 371.4 Tm
      [ -15081 (Any.minmax) ] TJ
    ET
  EMC
Q
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 371.4 Tm
    [ -20331 (.) ] TJ
  ET
EMC
/H2 << /MCID 31 >> BDC
  BT
    1 0 0 1 20 336.2 Tm
    /F2 16 Tf
    (method skip) Tj
  ET
EMC
/Code << /MCID 32 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 317.5 Tm
      /F3 8.5 Tf
      (method skip\(Supply:D: Int\(Cool\) $number = 1 --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 312.5 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 295.5 Tm
    /F1 10 Tf
    (Returns a new ) Tj
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 20 295.5 Tm
    /F3 8.5 Tf
    [ -7025 (Supply) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 295.5 Tm
    /F1 10 Tf
    [ -9031 ( which will emit all values from the given ) ] TJ
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 20 295.5 Tm
    /F3 8.5 Tf
    [ -30591 (Supply) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 295.5 Tm
    /F1 10 Tf
    [ -29062 ( except for the first ) ] TJ
  ET
EMC
/Code << /MCID 38 >> BDC
  BT
    1 0 0 1 20 295.5 Tm
    /F3 8.5 Tf
    [ -43436 ($number) ] TJ
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 295.5 Tm
    /F1 10 Tf
    [ -40491 ( values, which will be thrown away.) ] TJ
  ET
EMC
/Code << /MCID 40 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 276.8 Tm
      /F3 8.5 Tf
      (my $supplier = Supplier.new;) Tj
      9.35 TL
      T*
      (my $supply = $supplier.Supply;) Tj
      T*
      ($supply = $supply.skip\(3\);) Tj
      T*
      ($supply.tap\({ say $_ }\);) Tj
      T*
      ($supplier.emit\($_\) for 1..10;  OUTPUT: «45678910») Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 234.4 572 52.4 re
      B
    Q
  EMC
EMC
/H2 << /MCID 41 >> BDC
  BT
    1 0 0 1 20 204.2 Tm
    /F2 16 Tf
    (method start) Tj
  ET
EMC
/Code << /MCID 42 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 185.5 Tm
      /F3 8.5 Tf
      (method start\(Supply:D: &startee --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 180.5 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 163.5 Tm
    /F1 10 Tf
    (Creates a supply of supplies. For each value in the original supply, the code object is scheduled on another thread, and returns a supply either) Tj
    11 TL
    T*
    (of a single value \(if the code succeeds\), or one that quits without a value \(if the code fails\).) Tj
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 130.5 Tm
    (This is useful for asynchronously starting work that you don't block on.) Tj
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 108.5 Tm
    (Use ) Tj
  ET
EMC
/Code << /MCID 46 >> BDC
  BT
    1 0 0 1 20 108.5 Tm
    /F3 8.5 Tf
    [ -2124 (migrate) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 108.5 Tm
    /F1 10 Tf
    [ -5375 ( to join the values into a single supply again.) ] TJ
  ET
EMC
endstream
endobj

122 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

123 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

124 0 obj
<<
  /Type /Page
  /Contents 125 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 126 0 R /GS2 127 0 R >>
    /Font << /F1 27 0 R /F2 28 0 R /F3 30 0 R >>
  >>
  /StructParents 46
>>
endobj

125 0 obj
<< /Length 4369 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method migrate) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 733.3 Tm
      /F2 8.5 Tf
      (method migrate\(Supply:D: --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 728.3 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    (Takes a ) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F2 8.5 Tf
    [ -3920 (Supply) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    [ -6392 ( which itself has values that are of type ) ] TJ
  ET
EMC
/Code << /MCID 5 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F2 8.5 Tf
    [ -26176 (Supply) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    [ -25310 ( as input. Each time the outer ) ] TJ
  ET
EMC
/Code << /MCID 7 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F2 8.5 Tf
    [ -43827 (Supply) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    [ -40313 ( emits a new ) ] TJ
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F2 8.5 Tf
    [ -53635 (Supply) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 711.3 Tm
    /F3 10 Tf
    [ -48650 (, this will be tapped) ] TJ
    11 TL
    T*
    (and its values emitted. Any previously tapped ) Tj
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 20 700.3 Tm
    /F2 8.5 Tf
    [ -21828 (Supply) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 700.3 Tm
    /F3 10 Tf
    [ -21614 ( will be closed. This is useful for migrating between different data sources, and only) ] TJ
    T*
    (paying attention to the latest one.) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 667.3 Tm
    (For example, imagine an application where the user can switch between different stocks. When they switch to a new one, a connection is) Tj
    T*
    (established to a web socket to get the latest values, and any previous connection should be closed. Each stream of values coming over the web) Tj
    T*
    (socket would be represented as a Supply, which themselves are emitted into a Supply of latest data sources to watch. The ) Tj
  ET
EMC
/Code << /MCID 14 >> BDC
  BT
    1 0 0 1 20 645.3 Tm
    /F2 8.5 Tf
    [ -57344 (migrate) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 645.3 Tm
    /F3 10 Tf
    [ -52312 ( method) ] TJ
    T*
    (could be used to flatten this supply of supplies into a single Supply of the current values that the user cares about.) Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 612.3 Tm
    (Here is a simple simulation of such a program:) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 593.6 Tm
      /F2 8.5 Tf
      (my Supplier $stock-sources .= new;) Tj
      9.35 TL
      T*
      [  ] TJ
      T*
      (sub watch-stock\($symbol\) {) Tj
      T*
      (    $stock-sources.emit: supply {) Tj
      T*
      (        say "Starting to watch $symbol";) Tj
      T*
      (        whenever Supply.interval\(1\) {) Tj
      T*
      (            emit "$symbol: 111." ~ 99.rand.Int;) Tj
      T*
      (        }) Tj
      T*
      (        CLOSE say "Lost interest in $symbol";) Tj
      T*
      (    }) Tj
      T*
      (}) Tj
      T*
      [  ] TJ
      T*
      ($stock-sources.Supply.migrate.tap: *.say;) Tj
      T*
      [  ] TJ
      T*
      (watch-stock\('GOOG'\);) Tj
      T*
      (sleep 3;) Tj
      T*
      (watch-stock\('AAPL'\);) Tj
      T*
      (sleep 3;) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 429.65 572 173.95 re
      B
    Q
  EMC
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 412.65 Tm
    /F3 10 Tf
    (Which produces output like:) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 393.95 Tm
      /F2 8.5 Tf
      (Starting to watch GOOG) Tj
      T*
      (GOOG: 111.67) Tj
      T*
      (GOOG: 111.20) Tj
      T*
      (GOOG: 111.37) Tj
      T*
      (Lost interest in GOOG) Tj
      T*
      (Starting to watch AAPL) Tj
      T*
      (AAPL: 111.55) Tj
      T*
      (AAPL: 111.6) Tj
      T*
      (AAPL: 111.6) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 314.15 572 89.8 re
      B
    Q
  EMC
EMC
endstream
endobj

126 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

127 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

128 0 obj
<<
  /Type /Page
  /Annots [ 129 0 R 131 0 R ]
  /Contents 133 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 134 0 R /GS2 135 0 R >>
    /Font << /F1 27 0 R /F2 28 0 R /F3 30 0 R >>
  >>
  /StructParents 47
>>
endobj

129 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 130 0 R
  /Border [ 0 0 0 ]
  /Contents (Lists)
  /P 128 0 R
  /Rect [ 479.33 564.2 502.78 577.2 ]
  /StructParent 48
>>
endobj

130 0 obj
<< /Type /Action /S /URI /URI (/type/List.pdf) >>
endobj

131 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 132 0 R
  /Border [ 0 0 0 ]
  /Contents (Lists)
  /P 128 0 R
  /Rect [ 484.33 411.3 507.78 424.3 ]
  /StructParent 49
>>
endobj

132 0 obj
<< /Type /Action /S /URI /URI (/type/List.pdf) >>
endobj

133 0 obj
<< /Length 4691 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that combine supplies) Tj
  ET
  q
    1 w
    20 750 m
    285.02 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 716.8 Tm
    /F1 16 Tf
    (method merge) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 698.1 Tm
      /F2 8.5 Tf
      (method merge\(Supply @*supplies --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 693.1 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 676.1 Tm
    /F3 10 Tf
    (Creates a supply to which any value seen from the given supplies, is emitted. The resulting supply is done only when all given supplies are) Tj
    11 TL
    T*
    (done. Can also be called as a class method.) Tj
  ET
EMC
/H2 << /MCID 4 >> BDC
  BT
    1 0 0 1 20 629.9 Tm
    /F1 16 Tf
    (method zip) Tj
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 607.9 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 589.2 Tm
      /F2 8.5 Tf
      (method zip\(**@s, :&with\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 584.2 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    /F3 10 Tf
    (Creates a supply that emits combined values as soon as there is a new value seen on ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    /F1 10 Tf
    [ -33800 (all) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    /F3 10 Tf
    [ -34856 ( of the supplies. By default, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 567.2 Tm
      [ -46133 (Lists) ] TJ
    ET
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    [ -48078 ( are created, but this) ] TJ
    T*
    (can be changed by specifying your own combiner with the ) Tj
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F2 8.5 Tf
    [ -27838 (:with) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F3 10 Tf
    [ -26212 ( parameter. The resulting supply is done as soon as ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F1 10 Tf
    [ -46848 (any) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F3 10 Tf
    [ -48404 ( of the given supplies) ] TJ
    T*
    (are done. Can also be called as a class method.) Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    (This can also be used as a class method; in case it's used as an object method the corresponding supply will be one of the supplies combined) Tj
    T*
    (\(with no special treatment\).) Tj
  ET
EMC
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F1 16 Tf
    (method zip-latest) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 436.3 Tm
      /F2 8.5 Tf
      (method zip-latest\(**@s, :&with, :$initial \)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 431.3 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 414.3 Tm
    /F3 10 Tf
    (Creates a supply that emits combined values as soon as there is a new value seen on ) Tj
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 414.3 Tm
    /F1 10 Tf
    [ -33800 (any) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 414.3 Tm
    /F3 10 Tf
    [ -35356 ( of the supplies. By default, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 23 >> BDC
    BT
      1 0 0 1 20 414.3 Tm
      [ -46633 (Lists) ] TJ
    ET
  EMC
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 414.3 Tm
    [ -48578 ( are created, but this) ] TJ
    T*
    (can be changed by specifying your own combiner with the ) Tj
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 20 403.3 Tm
    /F2 8.5 Tf
    [ -27838 (:with) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 403.3 Tm
    /F3 10 Tf
    [ -26212 ( parameter. The optional :initial parameter can be used to indicate the initial) ] TJ
    T*
    (state of the combined values. By default, all supplies have to have at least one value emitted on them before the first combined values is) Tj
    T*
    (emitted on the resulting supply. The resulting supply is done as soon as ) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 381.3 Tm
    /F1 10 Tf
    [ -28777 (any) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 381.3 Tm
    /F3 10 Tf
    [ -30333 ( of the given supplies are done. Can also be called as a class) ] TJ
    T*
    (method.) Tj
  ET
EMC
endstream
endobj

134 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

135 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

136 0 obj
<<
  /Type /Page
  /Annots [ 137 0 R 139 0 R 140 0 R ]
  /Contents 142 0 R
  /Parent 6 0 R
  /Resources <<
    /ExtGState << /GS1 143 0 R /GS2 144 0 R >>
    /Font << /F1 27 0 R /F2 28 0 R /F3 30 0 R >>
  >>
  /StructParents 50
>>
endobj

137 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 138 0 R
  /Border [ 0 0 0 ]
  /Contents (enum)
  /P 136 0 R
  /Rect [ 581.73 558.7 585.73 571.7 ]
  /StructParent 51
>>
endobj

138 0 obj
<< /Type /Action /S /URI /URI (/language/typesystem.pdf#enum) >>
endobj

139 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 138 0 R
  /Border [ 0 0 0 ]
  /Contents (enum)
  /P 136 0 R
  /Rect [ 18 547.7 44.22 560.7 ]
  /StructParent 52
>>
endobj

140 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 141 0 R
  /Border [ 0 0 0 ]
  /Contents (Rakudo)
  /P 136 0 R
  /Rect [ 43.82 525.7 78.93 538.7 ]
  /StructParent 53
>>
endobj

141 0 obj
<< /Type /Action /S /URI /URI (/language/glossary.pdf#rakudo) >>
endobj

142 0 obj
<< /Length 5862 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (I/O features exposed as supplies) Tj
  ET
  q
    1 w
    20 750 m
    292.24 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 716.8 Tm
    /F1 16 Tf
    (sub signal) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 698.1 Tm
      /F2 8.5 Tf
      (sub signal\(*@signals, :$scheduler = $*SCHEDULER\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 693.1 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 676.1 Tm
    /F3 10 Tf
    (Creates a supply for the Signal enums \(such as SIGINT\) specified, and an optional ) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 20 676.1 Tm
    /F2 8.5 Tf
    [ -39176 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 676.1 Tm
    /F3 10 Tf
    [ -38400 ( parameter. Any signals received, will be) ] TJ
    11 TL
    T*
    (emitted on the supply. For example:) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 646.4 Tm
      /F2 8.5 Tf
      (signal\(SIGINT\).tap\( { say "Thank you for your attention"; exit 0 } \);) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 641.4 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 624.4 Tm
    /F3 10 Tf
    (would catch Control-C, thank you, and then exit.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 602.4 Tm
    (To go from a signal number to a ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 602.4 Tm
    [ -13165 (Signal) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 602.4 Tm
    [ -15721 (, you can do something like this:) ] TJ
  ET
EMC
/Code << /MCID 11 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 583.7 Tm
      /F2 8.5 Tf
      (signal\(Signal\(2\)\).tap\( -> $sig { say "Received signal: $sig" } \);) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 578.7 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 561.7 Tm
    /F3 10 Tf
    (The list of supported signals can be found by checking ) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 20 561.7 Tm
    /F2 8.5 Tf
    [ -26009 (Signal::.keys) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 561.7 Tm
    /F3 10 Tf
    [ -28738 ( \(as you would any enum\). For more details on how enums work see ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 15 >> BDC
    BT
      1 0 0 1 20 561.7 Tm
      [ -56373 ] TJ
      T*
      (enum) Tj
    ET
  EMC
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    [ -2222 (.) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 528.7 Tm
    /F1 10 Tf
    (Note:) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 528.7 Tm
    /F3 10 Tf
    [ -2332 ( ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 19 >> BDC
    BT
      1 0 0 1 20 528.7 Tm
      [ -2582 (Rakudo) ] TJ
    ET
  EMC
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 528.7 Tm
    [ -5693 ( versions up to 2018.05 had a bug due to which numeric values of signals were incorrect on some systems. For example, ) ] TJ
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 20 528.7 Tm
    /F2 8.5 Tf
    [ -63651 ] TJ
    9.35 TL
    T*
    (Signal\(10\)) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 519.35 Tm
    /F3 10 Tf
    [ -5100 ( was returning ) ] TJ
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 519.35 Tm
    /F2 8.5 Tf
    [ -13025 (SIGBUS) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 519.35 Tm
    /F3 10 Tf
    [ -14131 ( even if it was actually ) ] TJ
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 20 519.35 Tm
    /F2 8.5 Tf
    [ -27538 (SIGUSR1) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 519.35 Tm
    /F3 10 Tf
    [ -26977 ( on a particular system. That being said, using ) ] TJ
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 20 519.35 Tm
    /F2 8.5 Tf
    [ -53664 (signal\(SIGUSR1\)) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 519.35 Tm
    /F3 10 Tf
    [ -53264 ( was) ] TJ
    11 TL
    T*
    (working as expected on all Rakudo versions except 2018.04, 2018.04.1 and 2018.05, where the intended behavior can be achieved by using ) Tj
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 20 508.35 Tm
    /F2 8.5 Tf
    [ -66034 ] TJ
    9.35 TL
    T*
    (signal\(SIGBUS\)) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 499 Tm
    /F3 10 Tf
    [ -7140 ( instead. These issues are resolved in Rakudo releases after 2018.05.) ] TJ
  ET
EMC
/H2 << /MCID 31 >> BDC
  BT
    1 0 0 1 20 463.8 Tm
    /F1 16 Tf
    (method IO::Notification.watch-path) Tj
  ET
EMC
/Code << /MCID 32 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 445.1 Tm
      /F2 8.5 Tf
      (method watch-path\($path --> Supply:D\)) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 440.1 572 15 re
      B
    Q
  EMC
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 423.1 Tm
    /F3 10 Tf
    (Creates a supply to which the OS will emit values to indicate changes on the filesystem for the given path. Also has a shortcut with the ) Tj
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 20 423.1 Tm
    /F2 8.5 Tf
    [ -63752 (watch) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 423.1 Tm
    /F3 10 Tf
    [ -56739 ] TJ
    11 TL
    T*
    (method on an IO object, like this:) Tj
  ET
EMC
/Code << /MCID 36 >> BDC
  /Code BMC
    BT
      1 0 0 1 30 393.4 Tm
      /F2 8.5 Tf
      (IO::Notification.watch-path\("."\).act\( { say "$^file changed" } \);) Tj
      9.35 TL
      T*
      (".".IO.watch.act\(                     { say "$^file changed" } \);    same) Tj
    ET
  EMC
  /Artifact BMC
    q
      0 g
      0 G
      /GS1 gs
      /GS2 gs
      25 379.05 572 24.35 re
      B
    Q
  EMC
EMC
endstream
endobj

143 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

144 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

145 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

146 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

147 0 obj
<< /Count 63 /First 148 0 R /Last 907 0 R >>
endobj

148 0 obj
<<
  /Count 1
  /Dest /class_Supply
  /Next 149 0 R
  /SE 154 0 R
  /Title (class Supply)
>>
endobj

149 0 obj
<<
  /Count 3
  /Dest /Methods_that_return_Taps
  /First 150 0 R
  /Last 151 0 R
  /Next 850 0 R
  /Prev 148 0 R
  /SE 199 0 R
  /Title (Methods that return Taps)
>>
endobj

150 0 obj
<<
  /Count 1
  /Dest /method_tap
  /Next 151 0 R
  /SE 200 0 R
  /Title (method tap)
>>
endobj

151 0 obj
<<
  /Count 1
  /Dest /method_act
  /Prev 150 0 R
  /SE 152 0 R
  /Title (method act)
>>
endobj

152 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 61 ]
  /P 153 0 R
  /Pg 32 0 R
  /T (method act)
>>
endobj

153 0 obj
<<
  /Type /StructElem
  /S /Document
  /K [ 154 0 R 155 0 R 156 0 R 158 0 R 161 0 R 164 0 R 168 0 R 171 0 R 179 0 R 181 0 R 192 0 R 196 0 R 199 0 R 200 0 R 201 0 R 203 0 R 205 0 R 213 0 R 219 0 R 230 0 R 235 0 R 237 0 R 238 0 R 152 0 R 240 0 R 242 0 R 244 0 R 245 0 R 246 0 R 247 0 R 249 0 R 252 0 R 253 0 R 255 0 R 259 0 R 260 0 R 262 0 R 274 0 R 276 0 R 278 0 R 279 0 R 281 0 R 287 0 R 289 0 R 290 0 R 292 0 R 293 0 R 294 0 R 295 0 R 296 0 R 298 0 R 305 0 R 307 0 R 308 0 R 310 0 R 317 0 R 318 0 R 320 0 R 323 0 R 324 0 R 326 0 R 334 0 R 336 0 R 337 0 R 339 0 R 347 0 R 349 0 R 350 0 R 352 0 R 362 0 R 364 0 R 365 0 R 367 0 R 374 0 R 376 0 R 377 0 R 378 0 R 380 0 R 383 0 R 385 0 R 386 0 R 387 0 R 389 0 R 390 0 R 392 0 R 393 0 R 395 0 R 396 0 R 398 0 R 399 0 R 401 0 R 402 0 R 403 0 R 405 0 R 406 0 R 407 0 R 409 0 R 421 0 R 423 0 R 424 0 R 426 0 R 429 0 R 433 0 R 434 0 R 436 0 R 438 0 R 440 0 R 441 0 R 443 0 R 445 0 R 447 0 R 448 0 R 450 0 R 453 0 R 457 0 R 458 0 R 460 0 R 461 0 R 462 0 R 463 0 R 465 0 R 468 0 R 470 0 R 473 0 R 475 0 R 476 0 R 478 0 R 481 0 R 483 0 R 488 0 R 490 0 R 491 0 R 492 0 R 494 0 R 500 0 R 502 0 R 503 0 R 505 0 R 514 0 R 516 0 R 517 0 R 519 0 R 521 0 R 523 0 R 524 0 R 525 0 R 527 0 R 530 0 R 531 0 R 533 0 R 534 0 R 535 0 R 536 0 R 538 0 R 540 0 R 542 0 R 572 0 R 574 0 R 575 0 R 576 0 R 580 0 R 581 0 R 582 0 R 583 0 R 585 0 R 590 0 R 592 0 R 596 0 R 599 0 R 600 0 R 602 0 R 606 0 R 607 0 R 611 0 R 613 0 R 617 0 R 618 0 R 622 0 R 624 0 R 625 0 R 626 0 R 630 0 R 631 0 R 635 0 R 637 0 R 641 0 R 642 0 R 646 0 R 647 0 R 651 0 R 652 0 R 656 0 R 657 0 R 661 0 R 663 0 R 664 0 R 665 0 R 667 0 R 668 0 R 670 0 R 671 0 R 673 0 R 676 0 R 681 0 R 682 0 R 684 0 R 690 0 R 691 0 R 693 0 R 696 0 R 698 0 R 699 0 R 701 0 R 704 0 R 705 0 R 707 0 R 708 0 R 710 0 R 711 0 R 713 0 R 719 0 R 720 0 R 722 0 R 727 0 R 729 0 R 732 0 R 735 0 R 736 0 R 738 0 R 743 0 R 744 0 R 746 0 R 749 0 R 750 0 R 752 0 R 755 0 R 756 0 R 758 0 R 761 0 R 762 0 R 764 0 R 768 0 R 770 0 R 771 0 R 773 0 R 774 0 R 775 0 R 777 0 R 778 0 R 780 0 R 786 0 R 788 0 R 789 0 R 791 0 R 792 0 R 794 0 R 795 0 R 796 0 R 798 0 R 799 0 R 800 0 R 801 0 R 803 0 R 807 0 R 808 0 R 809 0 R 810 0 R 812 0 R 816 0 R 817 0 R 818 0 R 820 0 R 822 0 R 824 0 R 825 0 R 826 0 R 828 0 R 834 0 R 842 0 R 843 0 R 845 0 R 847 0 R ]
  /P 849 0 R
>>
endobj

154 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 153 0 R
  /Pg 7 0 R
  /T (class Supply)
>>
endobj

155 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 153 0 R
  /Pg 7 0 R
  /T (Asynchronous data stream with multiple subscribers)
>>
endobj

156 0 obj
<< /Type /StructElem /S /P /K [ 157 0 R ] /P 153 0 R >>
endobj

157 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 156 0 R /Pg 7 0 R >>
endobj

158 0 obj
<< /Type /StructElem /S /P /K [ 3 159 0 R 5 6 7 ] /P 153 0 R /Pg 7 0 R >>
endobj

159 0 obj
<< /Type /StructElem /S /Link /K [ 160 0 R 4 ] /P 158 0 R >>
endobj

160 0 obj
<< /Type /OBJR /Obj 8 0 R /Pg 7 0 R >>
endobj

161 0 obj
<< /Type /StructElem /S /P /K [ 8 162 0 R 10 ] /P 153 0 R /Pg 7 0 R >>
endobj

162 0 obj
<< /Type /StructElem /S /Link /K [ 163 0 R 9 ] /P 161 0 R >>
endobj

163 0 obj
<< /Type /OBJR /Obj 10 0 R /Pg 7 0 R >>
endobj

164 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 11 165 0 R 13 166 0 R 15 167 0 R 17 18 19 ]
  /P 153 0 R
  /Pg 7 0 R
>>
endobj

165 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 164 0 R >>
endobj

166 0 obj
<< /Type /StructElem /S /Code /K [ 14 ] /P 164 0 R >>
endobj

167 0 obj
<< /Type /StructElem /S /Code /K [ 16 ] /P 164 0 R >>
endobj

168 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 20 169 0 R 22 170 0 R 24 ]
  /P 153 0 R
  /Pg 7 0 R
>>
endobj

169 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 168 0 R >>
endobj

170 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 168 0 R >>
endobj

171 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 25 172 0 R 27 173 0 R 29 174 0 R 31 176 0 R 33 177 0 R 35 178 0 R 37 ]
  /P 153 0 R
  /Pg 7 0 R
>>
endobj

172 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 171 0 R >>
endobj

173 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 171 0 R >>
endobj

174 0 obj
<< /Type /StructElem /S /Link /K [ 175 0 R 30 ] /P 171 0 R >>
endobj

175 0 obj
<< /Type /OBJR /Obj 12 0 R /Pg 7 0 R >>
endobj

176 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 171 0 R >>
endobj

177 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 171 0 R >>
endobj

178 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 171 0 R >>
endobj

179 0 obj
<< /Type /StructElem /S /P /K [ 180 0 R ] /P 153 0 R >>
endobj

180 0 obj
<< /Type /StructElem /S /Code /K [ 38 ] /P 179 0 R /Pg 7 0 R >>
endobj

181 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 39 182 0 R 41 185 0 R 43 186 0 R 45 189 0 R 47 48 49 ]
  /P 153 0 R
  /Pg 7 0 R
>>
endobj

182 0 obj
<< /Type /StructElem /S /Reference /K [ 183 0 R ] /P 181 0 R >>
endobj

183 0 obj
<< /Type /StructElem /S /Link /K [ 184 0 R 40 ] /P 182 0 R >>
endobj

184 0 obj
<< /Type /OBJR /Obj 14 0 R /Pg 7 0 R >>
endobj

185 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 181 0 R >>
endobj

186 0 obj
<< /Type /StructElem /S /Reference /K [ 187 0 R ] /P 181 0 R >>
endobj

187 0 obj
<< /Type /StructElem /S /Link /K [ 188 0 R 44 ] /P 186 0 R >>
endobj

188 0 obj
<< /Type /OBJR /Obj 16 0 R /Pg 7 0 R >>
endobj

189 0 obj
<< /Type /StructElem /S /Reference /K [ 190 0 R ] /P 181 0 R >>
endobj

190 0 obj
<< /Type /StructElem /S /Link /K [ 191 0 R 46 ] /P 189 0 R >>
endobj

191 0 obj
<< /Type /OBJR /Obj 18 0 R /Pg 7 0 R >>
endobj

192 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 50 193 0 R 52 194 0 R 54 ]
  /P 153 0 R
  /Pg 7 0 R
>>
endobj

193 0 obj
<< /Type /StructElem /S /Code /K [ 51 ] /P 192 0 R >>
endobj

194 0 obj
<< /Type /StructElem /S /Link /K [ 195 0 R 53 ] /P 192 0 R >>
endobj

195 0 obj
<< /Type /OBJR /Obj 20 0 R /Pg 7 0 R >>
endobj

196 0 obj
<< /Type /StructElem /S /P /K [ 55 197 0 R 57 ] /P 153 0 R /Pg 7 0 R >>
endobj

197 0 obj
<< /Type /StructElem /S /Link /K [ 198 0 R 56 ] /P 196 0 R >>
endobj

198 0 obj
<< /Type /OBJR /Obj 22 0 R /Pg 7 0 R >>
endobj

199 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 153 0 R
  /Pg 32 0 R
  /T (Methods that return Taps)
>>
endobj

200 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 153 0 R
  /Pg 32 0 R
  /T (method tap)
>>
endobj

201 0 obj
<< /Type /StructElem /S /P /K [ 202 0 R ] /P 153 0 R >>
endobj

202 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 201 0 R /Pg 32 0 R >>
endobj

203 0 obj
<< /Type /StructElem /S /P /K [ 3 204 0 R 5 ] /P 153 0 R /Pg 32 0 R >>
endobj

204 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 203 0 R >>
endobj

205 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 6 206 0 R 8 207 0 R 10 208 0 R 12 209 0 R 14 210 0 R 16 211 0 R 18 212 0 R 20 ]
  /P 153 0 R
  /Pg 32 0 R
>>
endobj

206 0 obj
<< /Type /StructElem /S /Code /K [ 7 ] /P 205 0 R >>
endobj

207 0 obj
<< /Type /StructElem /S /Code /K [ 9 ] /P 205 0 R >>
endobj

208 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 205 0 R >>
endobj

209 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 205 0 R >>
endobj

210 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 205 0 R >>
endobj

211 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 205 0 R >>
endobj

212 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 205 0 R >>
endobj

213 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 21 214 0 R 23 215 0 R 25 216 0 R 27 217 0 R 29 218 0 R 31 ]
  /P 153 0 R
  /Pg 32 0 R
>>
endobj

214 0 obj
<< /Type /StructElem /S /Code /K [ 22 ] /P 213 0 R >>
endobj

215 0 obj
<< /Type /StructElem /S /Code /K [ 24 ] /P 213 0 R >>
endobj

216 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 213 0 R >>
endobj

217 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 213 0 R >>
endobj

218 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 213 0 R >>
endobj

219 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 32 220 0 R 34 221 0 R 36 223 0 R 38 224 0 R 40 225 0 R 42 226 0 R 44 227 0 R 46 228 0 R 48 229 0 R 50 ]
  /P 153 0 R
  /Pg 32 0 R
>>
endobj

220 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 219 0 R >>
endobj

221 0 obj
<< /Type /StructElem /S /Link /K [ 222 0 R 35 ] /P 219 0 R >>
endobj

222 0 obj
<< /Type /OBJR /Obj 33 0 R /Pg 32 0 R >>
endobj

223 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 219 0 R >>
endobj

224 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 219 0 R >>
endobj

225 0 obj
<< /Type /StructElem /S /Code /K [ 41 ] /P 219 0 R >>
endobj

226 0 obj
<< /Type /StructElem /S /Code /K [ 43 ] /P 219 0 R >>
endobj

227 0 obj
<< /Type /StructElem /S /Code /K [ 45 ] /P 219 0 R >>
endobj

228 0 obj
<< /Type /StructElem /S /Code /K [ 47 ] /P 219 0 R >>
endobj

229 0 obj
<< /Type /StructElem /S /Code /K [ 49 ] /P 219 0 R >>
endobj

230 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 51 231 0 R 53 232 0 R 55 234 0 R 57 ]
  /P 153 0 R
  /Pg 32 0 R
>>
endobj

231 0 obj
<< /Type /StructElem /S /Code /K [ 52 ] /P 230 0 R >>
endobj

232 0 obj
<< /Type /StructElem /S /Link /K [ 233 0 R 54 ] /P 230 0 R >>
endobj

233 0 obj
<< /Type /OBJR /Obj 35 0 R /Pg 32 0 R >>
endobj

234 0 obj
<< /Type /StructElem /S /Code /K [ 56 ] /P 230 0 R >>
endobj

235 0 obj
<< /Type /StructElem /S /P /K [ 236 0 R ] /P 153 0 R >>
endobj

236 0 obj
<< /Type /StructElem /S /Code /K [ 58 ] /P 235 0 R /Pg 32 0 R >>
endobj

237 0 obj
<< /Type /StructElem /S /P /K [ 59 ] /P 153 0 R /Pg 32 0 R >>
endobj

238 0 obj
<< /Type /StructElem /S /P /K [ 239 0 R ] /P 153 0 R >>
endobj

239 0 obj
<< /Type /StructElem /S /Code /K [ 60 ] /P 238 0 R /Pg 32 0 R >>
endobj

240 0 obj
<< /Type /StructElem /S /P /K [ 241 0 R ] /P 153 0 R >>
endobj

241 0 obj
<< /Type /StructElem /S /Code /K [ 62 ] /P 240 0 R /Pg 32 0 R >>
endobj

242 0 obj
<< /Type /StructElem /S /P /K [ 63 243 0 R 65 ] /P 153 0 R /Pg 32 0 R >>
endobj

243 0 obj
<< /Type /StructElem /S /Code /K [ 64 ] /P 242 0 R >>
endobj

244 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 153 0 R
  /Pg 40 0 R
  /T (Utility methods)
>>
endobj

245 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 153 0 R
  /Pg 40 0 R
  /T (method Capture)
>>
endobj

246 0 obj
<< /Type /StructElem /S /P /K [ 2 ] /P 153 0 R /Pg 40 0 R >>
endobj

247 0 obj
<< /Type /StructElem /S /P /K [ 248 0 R ] /P 153 0 R >>
endobj

248 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 247 0 R /Pg 40 0 R >>
endobj

249 0 obj
<< /Type /StructElem /S /P /K [ 4 250 0 R 6 ] /P 153 0 R /Pg 40 0 R >>
endobj

250 0 obj
<< /Type /StructElem /S /Link /K [ 251 0 R 5 ] /P 249 0 R >>
endobj

251 0 obj
<< /Type /OBJR /Obj 41 0 R /Pg 40 0 R >>
endobj

252 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 7 ]
  /P 153 0 R
  /Pg 40 0 R
  /T (method Channel)
>>
endobj

253 0 obj
<< /Type /StructElem /S /P /K [ 254 0 R ] /P 153 0 R >>
endobj

254 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 253 0 R /Pg 40 0 R >>
endobj

255 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 9 256 0 R 11 258 0 R 13 ]
  /P 153 0 R
  /Pg 40 0 R
>>
endobj

256 0 obj
<< /Type /StructElem /S /Link /K [ 257 0 R 10 ] /P 255 0 R >>
endobj

257 0 obj
<< /Type /OBJR /Obj 43 0 R /Pg 40 0 R >>
endobj

258 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 255 0 R >>
endobj

259 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 14 ]
  /P 153 0 R
  /Pg 40 0 R
  /T (method Promise)
>>
endobj

260 0 obj
<< /Type /StructElem /S /P /K [ 261 0 R ] /P 153 0 R >>
endobj

261 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 260 0 R /Pg 40 0 R >>
endobj

262 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 16 263 0 R 18 265 0 R 20 266 0 R 22 267 0 R 24 268 0 R 26 269 0 R 28 270 0 R 30 271 0 R 32 272 0 R 34 273 0 R 36 ]
  /P 153 0 R
  /Pg 40 0 R
>>
endobj

263 0 obj
<< /Type /StructElem /S /Link /K [ 264 0 R 17 ] /P 262 0 R >>
endobj

264 0 obj
<< /Type /OBJR /Obj 45 0 R /Pg 40 0 R >>
endobj

265 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 262 0 R >>
endobj

266 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 262 0 R >>
endobj

267 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 262 0 R >>
endobj

268 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 262 0 R >>
endobj

269 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 262 0 R >>
endobj

270 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 262 0 R >>
endobj

271 0 obj
<< /Type /StructElem /S /Code /K [ 31 ] /P 262 0 R >>
endobj

272 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 262 0 R >>
endobj

273 0 obj
<< /Type /StructElem /S /Code /K [ 35 ] /P 262 0 R >>
endobj

274 0 obj
<< /Type /StructElem /S /P /K [ 275 0 R ] /P 153 0 R >>
endobj

275 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 274 0 R /Pg 40 0 R >>
endobj

276 0 obj
<< /Type /StructElem /S /P /K [ 38 277 0 R 40 ] /P 153 0 R /Pg 40 0 R >>
endobj

277 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 276 0 R >>
endobj

278 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 41 ]
  /P 153 0 R
  /Pg 40 0 R
  /T (method live)
>>
endobj

279 0 obj
<< /Type /StructElem /S /P /K [ 280 0 R ] /P 153 0 R >>
endobj

280 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 279 0 R /Pg 40 0 R >>
endobj

281 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 43 282 0 R 45 283 0 R 47 284 0 R 49 285 0 R 51 286 0 R 53 ]
  /P 153 0 R
  /Pg 40 0 R
>>
endobj

282 0 obj
<< /Type /StructElem /S /Code /K [ 44 ] /P 281 0 R >>
endobj

283 0 obj
<< /Type /StructElem /S /Code /K [ 46 ] /P 281 0 R >>
endobj

284 0 obj
<< /Type /StructElem /S /Code /K [ 48 ] /P 281 0 R >>
endobj

285 0 obj
<< /Type /StructElem /S /Code /K [ 50 ] /P 281 0 R >>
endobj

286 0 obj
<< /Type /StructElem /S /Code /K [ 52 ] /P 281 0 R >>
endobj

287 0 obj
<< /Type /StructElem /S /P /K [ 288 0 R ] /P 153 0 R >>
endobj

288 0 obj
<< /Type /StructElem /S /Code /K [ 54 ] /P 287 0 R /Pg 40 0 R >>
endobj

289 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 55 ]
  /P 153 0 R
  /Pg 40 0 R
  /T (method schedule-on)
>>
endobj

290 0 obj
<< /Type /StructElem /S /P /K [ 291 0 R ] /P 153 0 R >>
endobj

291 0 obj
<< /Type /StructElem /S /Code /K [ 56 ] /P 290 0 R /Pg 40 0 R >>
endobj

292 0 obj
<< /Type /StructElem /S /P /K [ 57 ] /P 153 0 R /Pg 40 0 R >>
endobj

293 0 obj
<< /Type /StructElem /S /P /K [ 58 ] /P 153 0 R /Pg 40 0 R >>
endobj

294 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 153 0 R
  /Pg 50 0 R
  /T (Methods that wait until the supply is done)
>>
endobj

295 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 153 0 R
  /Pg 50 0 R
  /T (method wait)
>>
endobj

296 0 obj
<< /Type /StructElem /S /P /K [ 297 0 R ] /P 153 0 R >>
endobj

297 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 296 0 R /Pg 50 0 R >>
endobj

298 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 3 299 0 R 5 300 0 R 7 301 0 R 9 302 0 R 11 303 0 R 13 304 0 R 15 ]
  /P 153 0 R
  /Pg 50 0 R
>>
endobj

299 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 298 0 R >>
endobj

300 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 298 0 R >>
endobj

301 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 298 0 R >>
endobj

302 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 298 0 R >>
endobj

303 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 298 0 R >>
endobj

304 0 obj
<< /Type /StructElem /S /Code /K [ 14 ] /P 298 0 R >>
endobj

305 0 obj
<< /Type /StructElem /S /P /K [ 306 0 R ] /P 153 0 R >>
endobj

306 0 obj
<< /Type /StructElem /S /Code /K [ 16 ] /P 305 0 R /Pg 50 0 R >>
endobj

307 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 17 ]
  /P 153 0 R
  /Pg 50 0 R
  /T (method list)
>>
endobj

308 0 obj
<< /Type /StructElem /S /P /K [ 309 0 R ] /P 153 0 R >>
endobj

309 0 obj
<< /Type /StructElem /S /Code /K [ 18 ] /P 308 0 R /Pg 50 0 R >>
endobj

310 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 19 311 0 R 21 312 0 R 23 313 0 R 25 314 0 R 27 315 0 R 29 316 0 R 31 ]
  /P 153 0 R
  /Pg 50 0 R
>>
endobj

311 0 obj
<< /Type /StructElem /S /Code /K [ 20 ] /P 310 0 R >>
endobj

312 0 obj
<< /Type /StructElem /S /Code /K [ 22 ] /P 310 0 R >>
endobj

313 0 obj
<< /Type /StructElem /S /Code /K [ 24 ] /P 310 0 R >>
endobj

314 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 310 0 R >>
endobj

315 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 310 0 R >>
endobj

316 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 310 0 R >>
endobj

317 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 32 ]
  /P 153 0 R
  /Pg 50 0 R
  /T (method Seq)
>>
endobj

318 0 obj
<< /Type /StructElem /S /P /K [ 319 0 R ] /P 153 0 R >>
endobj

319 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 318 0 R /Pg 50 0 R >>
endobj

320 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 34 321 0 R 36 322 0 R 38 ]
  /P 153 0 R
  /Pg 50 0 R
>>
endobj

321 0 obj
<< /Type /StructElem /S /Code /K [ 35 ] /P 320 0 R >>
endobj

322 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 320 0 R >>
endobj

323 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 39 ]
  /P 153 0 R
  /Pg 50 0 R
  /T (method grab)
>>
endobj

324 0 obj
<< /Type /StructElem /S /P /K [ 325 0 R ] /P 153 0 R >>
endobj

325 0 obj
<< /Type /StructElem /S /Code /K [ 40 ] /P 324 0 R /Pg 50 0 R >>
endobj

326 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 41 327 0 R 43 328 0 R 45 329 0 R 47 330 0 R 49 331 0 R 51 332 0 R 53 333 0 R 55 ]
  /P 153 0 R
  /Pg 50 0 R
>>
endobj

327 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 326 0 R >>
endobj

328 0 obj
<< /Type /StructElem /S /Code /K [ 44 ] /P 326 0 R >>
endobj

329 0 obj
<< /Type /StructElem /S /Code /K [ 46 ] /P 326 0 R >>
endobj

330 0 obj
<< /Type /StructElem /S /Code /K [ 48 ] /P 326 0 R >>
endobj

331 0 obj
<< /Type /StructElem /S /Code /K [ 50 ] /P 326 0 R >>
endobj

332 0 obj
<< /Type /StructElem /S /Code /K [ 52 ] /P 326 0 R >>
endobj

333 0 obj
<< /Type /StructElem /S /Code /K [ 54 ] /P 326 0 R >>
endobj

334 0 obj
<< /Type /StructElem /S /P /K [ 335 0 R ] /P 153 0 R >>
endobj

335 0 obj
<< /Type /StructElem /S /Code /K [ 56 ] /P 334 0 R /Pg 50 0 R >>
endobj

336 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 57 ]
  /P 153 0 R
  /Pg 50 0 R
  /T (method reverse)
>>
endobj

337 0 obj
<< /Type /StructElem /S /P /K [ 338 0 R ] /P 153 0 R >>
endobj

338 0 obj
<< /Type /StructElem /S /Code /K [ 58 ] /P 337 0 R /Pg 50 0 R >>
endobj

339 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 59 340 0 R 61 341 0 R 63 342 0 R 65 343 0 R 67 344 0 R 69 345 0 R 71 346 0 R 73 ]
  /P 153 0 R
  /Pg 50 0 R
>>
endobj

340 0 obj
<< /Type /StructElem /S /Code /K [ 60 ] /P 339 0 R >>
endobj

341 0 obj
<< /Type /StructElem /S /Code /K [ 62 ] /P 339 0 R >>
endobj

342 0 obj
<< /Type /StructElem /S /Code /K [ 64 ] /P 339 0 R >>
endobj

343 0 obj
<< /Type /StructElem /S /Code /K [ 66 ] /P 339 0 R >>
endobj

344 0 obj
<< /Type /StructElem /S /Code /K [ 68 ] /P 339 0 R >>
endobj

345 0 obj
<< /Type /StructElem /S /Code /K [ 70 ] /P 339 0 R >>
endobj

346 0 obj
<< /Type /StructElem /S /Code /K [ 72 ] /P 339 0 R >>
endobj

347 0 obj
<< /Type /StructElem /S /P /K [ 348 0 R ] /P 153 0 R >>
endobj

348 0 obj
<< /Type /StructElem /S /Code /K [ 74 ] /P 347 0 R /Pg 50 0 R >>
endobj

349 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 153 0 R
  /Pg 54 0 R
  /T (method sort)
>>
endobj

350 0 obj
<< /Type /StructElem /S /P /K [ 351 0 R ] /P 153 0 R >>
endobj

351 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 350 0 R /Pg 54 0 R >>
endobj

352 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2 353 0 R 4 354 0 R 6 355 0 R 8 356 0 R 10 357 0 R 12 359 0 R 14 360 0 R 16 361 0 R 18 ]
  /P 153 0 R
  /Pg 54 0 R
>>
endobj

353 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 352 0 R >>
endobj

354 0 obj
<< /Type /StructElem /S /Code /K [ 5 ] /P 352 0 R >>
endobj

355 0 obj
<< /Type /StructElem /S /Code /K [ 7 ] /P 352 0 R >>
endobj

356 0 obj
<< /Type /StructElem /S /Code /K [ 9 ] /P 352 0 R >>
endobj

357 0 obj
<< /Type /StructElem /S /Link /K [ 358 0 R 11 ] /P 352 0 R >>
endobj

358 0 obj
<< /Type /OBJR /Obj 55 0 R /Pg 54 0 R >>
endobj

359 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 352 0 R >>
endobj

360 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 352 0 R >>
endobj

361 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 352 0 R >>
endobj

362 0 obj
<< /Type /StructElem /S /P /K [ 363 0 R ] /P 153 0 R >>
endobj

363 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 362 0 R /Pg 54 0 R >>
endobj

364 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 20 ]
  /P 153 0 R
  /Pg 54 0 R
  /T (method collate)
>>
endobj

365 0 obj
<< /Type /StructElem /S /P /K [ 366 0 R ] /P 153 0 R >>
endobj

366 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 365 0 R /Pg 54 0 R >>
endobj

367 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 22 368 0 R 24 369 0 R 26 370 0 R 28 371 0 R 30 372 0 R 32 ]
  /P 153 0 R
  /Pg 54 0 R
>>
endobj

368 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 367 0 R >>
endobj

369 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 367 0 R >>
endobj

370 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 367 0 R >>
endobj

371 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 367 0 R >>
endobj

372 0 obj
<< /Type /StructElem /S /Link /K [ 373 0 R 31 ] /P 367 0 R >>
endobj

373 0 obj
<< /Type /OBJR /Obj 57 0 R /Pg 54 0 R >>
endobj

374 0 obj
<< /Type /StructElem /S /P /K [ 375 0 R ] /P 153 0 R >>
endobj

375 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 374 0 R /Pg 54 0 R >>
endobj

376 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 34 ]
  /P 153 0 R
  /Pg 54 0 R
  /T (method reduce)
>>
endobj

377 0 obj
<< /Type /StructElem /S /P /K [ 35 ] /P 153 0 R /Pg 54 0 R >>
endobj

378 0 obj
<< /Type /StructElem /S /P /K [ 379 0 R ] /P 153 0 R >>
endobj

379 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 378 0 R /Pg 54 0 R >>
endobj

380 0 obj
<< /Type /StructElem /S /P /K [ 37 381 0 R 39 ] /P 153 0 R /Pg 54 0 R >>
endobj

381 0 obj
<< /Type /StructElem /S /Link /K [ 382 0 R 38 ] /P 380 0 R >>
endobj

382 0 obj
<< /Type /OBJR /Obj 59 0 R /Pg 54 0 R >>
endobj

383 0 obj
<< /Type /StructElem /S /P /K [ 384 0 R ] /P 153 0 R >>
endobj

384 0 obj
<< /Type /StructElem /S /Code /K [ 40 ] /P 383 0 R /Pg 54 0 R >>
endobj

385 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 153 0 R
  /Pg 64 0 R
  /T (Methods that return another Supply)
>>
endobj

386 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 153 0 R
  /Pg 64 0 R
  /T (method from-list)
>>
endobj

387 0 obj
<< /Type /StructElem /S /P /K [ 388 0 R ] /P 153 0 R >>
endobj

388 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 387 0 R /Pg 64 0 R >>
endobj

389 0 obj
<< /Type /StructElem /S /P /K [ 3 ] /P 153 0 R /Pg 64 0 R >>
endobj

390 0 obj
<< /Type /StructElem /S /P /K [ 391 0 R ] /P 153 0 R >>
endobj

391 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 390 0 R /Pg 64 0 R >>
endobj

392 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 5 ]
  /P 153 0 R
  /Pg 64 0 R
  /T (method share)
>>
endobj

393 0 obj
<< /Type /StructElem /S /P /K [ 394 0 R ] /P 153 0 R >>
endobj

394 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 393 0 R /Pg 64 0 R >>
endobj

395 0 obj
<< /Type /StructElem /S /P /K [ 7 ] /P 153 0 R /Pg 64 0 R >>
endobj

396 0 obj
<< /Type /StructElem /S /P /K [ 397 0 R ] /P 153 0 R >>
endobj

397 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 396 0 R /Pg 64 0 R >>
endobj

398 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 9 ]
  /P 153 0 R
  /Pg 64 0 R
  /T (method flat)
>>
endobj

399 0 obj
<< /Type /StructElem /S /P /K [ 400 0 R ] /P 153 0 R >>
endobj

400 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 399 0 R /Pg 64 0 R >>
endobj

401 0 obj
<< /Type /StructElem /S /P /K [ 11 ] /P 153 0 R /Pg 64 0 R >>
endobj

402 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 12 ]
  /P 153 0 R
  /Pg 64 0 R
  /T (method do)
>>
endobj

403 0 obj
<< /Type /StructElem /S /P /K [ 404 0 R ] /P 153 0 R >>
endobj

404 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 403 0 R /Pg 64 0 R >>
endobj

405 0 obj
<< /Type /StructElem /S /P /K [ 14 ] /P 153 0 R /Pg 64 0 R >>
endobj

406 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 15 ]
  /P 153 0 R
  /Pg 64 0 R
  /T (method on-close)
>>
endobj

407 0 obj
<< /Type /StructElem /S /P /K [ 408 0 R ] /P 153 0 R >>
endobj

408 0 obj
<< /Type /StructElem /S /Code /K [ 16 ] /P 407 0 R /Pg 64 0 R >>
endobj

409 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 17 410 0 R 19 411 0 R 21 412 0 R 23 414 0 R 25 415 0 R 27 416 0 R 29 417 0 R 31 418 0 R 33 419 0 R 35 ]
  /P 153 0 R
  /Pg 64 0 R
>>
endobj

410 0 obj
<< /Type /StructElem /S /Code /K [ 18 ] /P 409 0 R >>
endobj

411 0 obj
<< /Type /StructElem /S /Code /K [ 20 ] /P 409 0 R >>
endobj

412 0 obj
<< /Type /StructElem /S /Link /K [ 413 0 R 22 ] /P 409 0 R >>
endobj

413 0 obj
<< /Type /OBJR /Obj 65 0 R /Pg 64 0 R >>
endobj

414 0 obj
<< /Type /StructElem /S /Code /K [ 24 ] /P 409 0 R >>
endobj

415 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 409 0 R >>
endobj

416 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 409 0 R >>
endobj

417 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 409 0 R >>
endobj

418 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 409 0 R >>
endobj

419 0 obj
<< /Type /StructElem /S /Link /K [ 420 0 R 34 ] /P 409 0 R >>
endobj

420 0 obj
<< /Type /OBJR /Obj 67 0 R /Pg 64 0 R >>
endobj

421 0 obj
<< /Type /StructElem /S /P /K [ 422 0 R ] /P 153 0 R >>
endobj

422 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 421 0 R /Pg 64 0 R >>
endobj

423 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 153 0 R
  /Pg 72 0 R
  /T (method interval)
>>
endobj

424 0 obj
<< /Type /StructElem /S /P /K [ 425 0 R ] /P 153 0 R >>
endobj

425 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 424 0 R /Pg 72 0 R >>
endobj

426 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2 427 0 R 4 428 0 R 6 ]
  /P 153 0 R
  /Pg 72 0 R
>>
endobj

427 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 426 0 R >>
endobj

428 0 obj
<< /Type /StructElem /S /Code /K [ 5 ] /P 426 0 R >>
endobj

429 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 7 430 0 R 9 431 0 R 11 432 0 R 13 ]
  /P 153 0 R
  /Pg 72 0 R
>>
endobj

430 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 429 0 R >>
endobj

431 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 429 0 R >>
endobj

432 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 429 0 R >>
endobj

433 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 14 ]
  /P 153 0 R
  /Pg 72 0 R
  /T (method grep)
>>
endobj

434 0 obj
<< /Type /StructElem /S /P /K [ 435 0 R ] /P 153 0 R >>
endobj

435 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 434 0 R /Pg 72 0 R >>
endobj

436 0 obj
<< /Type /StructElem /S /P /K [ 16 437 0 R 18 ] /P 153 0 R /Pg 72 0 R >>
endobj

437 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 436 0 R >>
endobj

438 0 obj
<< /Type /StructElem /S /P /K [ 439 0 R ] /P 153 0 R >>
endobj

439 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 438 0 R /Pg 72 0 R >>
endobj

440 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 20 ]
  /P 153 0 R
  /Pg 72 0 R
  /T (method map)
>>
endobj

441 0 obj
<< /Type /StructElem /S /P /K [ 442 0 R ] /P 153 0 R >>
endobj

442 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 441 0 R /Pg 72 0 R >>
endobj

443 0 obj
<< /Type /StructElem /S /P /K [ 22 444 0 R 24 ] /P 153 0 R /Pg 72 0 R >>
endobj

444 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 443 0 R >>
endobj

445 0 obj
<< /Type /StructElem /S /P /K [ 446 0 R ] /P 153 0 R >>
endobj

446 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 445 0 R /Pg 72 0 R >>
endobj

447 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 26 ]
  /P 153 0 R
  /Pg 72 0 R
  /T (method batch)
>>
endobj

448 0 obj
<< /Type /StructElem /S /P /K [ 449 0 R ] /P 153 0 R >>
endobj

449 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 448 0 R /Pg 72 0 R >>
endobj

450 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 28 451 0 R 30 452 0 R 32 ]
  /P 153 0 R
  /Pg 72 0 R
>>
endobj

451 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 450 0 R >>
endobj

452 0 obj
<< /Type /StructElem /S /Code /K [ 31 ] /P 450 0 R >>
endobj

453 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 33 34 454 0 R 36 455 0 R 38 456 0 R 40 ]
  /P 153 0 R
  /Pg 72 0 R
>>
endobj

454 0 obj
<< /Type /StructElem /S /Code /K [ 35 ] /P 453 0 R >>
endobj

455 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 453 0 R >>
endobj

456 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 453 0 R >>
endobj

457 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 41 ]
  /P 153 0 R
  /Pg 72 0 R
  /T (method elems)
>>
endobj

458 0 obj
<< /Type /StructElem /S /P /K [ 459 0 R ] /P 153 0 R >>
endobj

459 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 458 0 R /Pg 72 0 R >>
endobj

460 0 obj
<< /Type /StructElem /S /P /K [ 43 ] /P 153 0 R /Pg 72 0 R >>
endobj

461 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 44 ]
  /P 153 0 R
  /Pg 72 0 R
  /T (method head)
>>
endobj

462 0 obj
<< /Type /StructElem /S /P /K [ 45 ] /P 153 0 R /Pg 72 0 R >>
endobj

463 0 obj
<< /Type /StructElem /S /P /K [ 464 0 R ] /P 153 0 R >>
endobj

464 0 obj
<< /Type /StructElem /S /Code /K [ 46 ] /P 463 0 R /Pg 72 0 R >>
endobj

465 0 obj
<< /Type /StructElem /S /P /K [ 47 466 0 R 49 ] /P 153 0 R /Pg 72 0 R >>
endobj

466 0 obj
<< /Type /StructElem /S /Link /K [ 467 0 R 48 ] /P 465 0 R >>
endobj

467 0 obj
<< /Type /OBJR /Obj 73 0 R /Pg 72 0 R >>
endobj

468 0 obj
<< /Type /StructElem /S /P /K [ 469 0 R ] /P 153 0 R >>
endobj

469 0 obj
<< /Type /StructElem /S /Code /K [ 0 ] /P 468 0 R /Pg 78 0 R >>
endobj

470 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1 471 0 R 3 472 0 R ]
  /P 153 0 R
  /Pg 78 0 R
>>
endobj

471 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 470 0 R >>
endobj

472 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 470 0 R >>
endobj

473 0 obj
<< /Type /StructElem /S /P /K [ 474 0 R ] /P 153 0 R >>
endobj

474 0 obj
<< /Type /StructElem /S /Code /K [ 5 ] /P 473 0 R /Pg 78 0 R >>
endobj

475 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 6 ]
  /P 153 0 R
  /Pg 78 0 R
  /T (method tail)
>>
endobj

476 0 obj
<< /Type /StructElem /S /P /K [ 477 0 R ] /P 153 0 R >>
endobj

477 0 obj
<< /Type /StructElem /S /Code /K [ 7 ] /P 476 0 R /Pg 78 0 R >>
endobj

478 0 obj
<< /Type /StructElem /S /P /K [ 8 479 0 R 10 ] /P 153 0 R /Pg 78 0 R >>
endobj

479 0 obj
<< /Type /StructElem /S /Link /K [ 480 0 R 9 ] /P 478 0 R >>
endobj

480 0 obj
<< /Type /OBJR /Obj 79 0 R /Pg 78 0 R >>
endobj

481 0 obj
<< /Type /StructElem /S /P /K [ 482 0 R ] /P 153 0 R >>
endobj

482 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 481 0 R /Pg 78 0 R >>
endobj

483 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 12 484 0 R 14 485 0 R 16 486 0 R 18 487 0 R 20 ]
  /P 153 0 R
  /Pg 78 0 R
>>
endobj

484 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 483 0 R >>
endobj

485 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 483 0 R >>
endobj

486 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 483 0 R >>
endobj

487 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 483 0 R >>
endobj

488 0 obj
<< /Type /StructElem /S /P /K [ 489 0 R ] /P 153 0 R >>
endobj

489 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 488 0 R /Pg 78 0 R >>
endobj

490 0 obj
<< /Type /StructElem /S /P /K [ 22 ] /P 153 0 R /Pg 78 0 R >>
endobj

491 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 23 ]
  /P 153 0 R
  /Pg 78 0 R
  /T (method first)
>>
endobj

492 0 obj
<< /Type /StructElem /S /P /K [ 493 0 R ] /P 153 0 R >>
endobj

493 0 obj
<< /Type /StructElem /S /Code /K [ 24 ] /P 492 0 R /Pg 78 0 R >>
endobj

494 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 25 495 0 R 27 496 0 R 29 497 0 R 31 498 0 R 33 499 0 R 35 ]
  /P 153 0 R
  /Pg 78 0 R
>>
endobj

495 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 494 0 R >>
endobj

496 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 494 0 R >>
endobj

497 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 494 0 R >>
endobj

498 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 494 0 R >>
endobj

499 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 494 0 R >>
endobj

500 0 obj
<< /Type /StructElem /S /P /K [ 501 0 R ] /P 153 0 R >>
endobj

501 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 500 0 R /Pg 78 0 R >>
endobj

502 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 37 ]
  /P 153 0 R
  /Pg 78 0 R
  /T (method split)
>>
endobj

503 0 obj
<< /Type /StructElem /S /P /K [ 504 0 R ] /P 153 0 R >>
endobj

504 0 obj
<< /Type /StructElem /S /Code /K [ 38 ] /P 503 0 R /Pg 78 0 R >>
endobj

505 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 39 506 0 R 41 507 0 R 43 509 0 R 45 510 0 R 47 511 0 R 49 ]
  /P 153 0 R
  /Pg 78 0 R
>>
endobj

506 0 obj
<< /Type /StructElem /S /Code /K [ 40 ] /P 505 0 R >>
endobj

507 0 obj
<< /Type /StructElem /S /Link /K [ 508 0 R 42 ] /P 505 0 R >>
endobj

508 0 obj
<< /Type /OBJR /Obj 81 0 R /Pg 78 0 R >>
endobj

509 0 obj
<< /Type /StructElem /S /Code /K [ 44 ] /P 505 0 R >>
endobj

510 0 obj
<< /Type /StructElem /S /Code /K [ 46 ] /P 505 0 R >>
endobj

511 0 obj
<< /Type /StructElem /S /Reference /K [ 512 0 R ] /P 505 0 R >>
endobj

512 0 obj
<< /Type /StructElem /S /Link /K [ 513 0 R 48 ] /P 511 0 R >>
endobj

513 0 obj
<< /Type /OBJR /Obj 83 0 R /Pg 78 0 R >>
endobj

514 0 obj
<< /Type /StructElem /S /P /K [ 515 0 R ] /P 153 0 R >>
endobj

515 0 obj
<< /Type /StructElem /S /Code /K [ 50 ] /P 514 0 R /Pg 78 0 R >>
endobj

516 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 153 0 R
  /Pg 88 0 R
  /T (method rotate)
>>
endobj

517 0 obj
<< /Type /StructElem /S /P /K [ 518 0 R ] /P 153 0 R >>
endobj

518 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 517 0 R /Pg 88 0 R >>
endobj

519 0 obj
<< /Type /StructElem /S /P /K [ 2 520 0 R 4 ] /P 153 0 R /Pg 88 0 R >>
endobj

520 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 519 0 R >>
endobj

521 0 obj
<< /Type /StructElem /S /P /K [ 522 0 R ] /P 153 0 R >>
endobj

522 0 obj
<< /Type /StructElem /S /Code /K [ 5 ] /P 521 0 R /Pg 88 0 R >>
endobj

523 0 obj
<< /Type /StructElem /S /P /K [ 6 7 ] /P 153 0 R /Pg 88 0 R >>
endobj

524 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 8 ]
  /P 153 0 R
  /Pg 88 0 R
  /T (method rotor)
>>
endobj

525 0 obj
<< /Type /StructElem /S /P /K [ 526 0 R ] /P 153 0 R >>
endobj

526 0 obj
<< /Type /StructElem /S /Code /K [ 9 ] /P 525 0 R /Pg 88 0 R >>
endobj

527 0 obj
<< /Type /StructElem /S /P /K [ 10 528 0 R 12 ] /P 153 0 R /Pg 88 0 R >>
endobj

528 0 obj
<< /Type /StructElem /S /Link /K [ 529 0 R 11 ] /P 527 0 R >>
endobj

529 0 obj
<< /Type /OBJR /Obj 89 0 R /Pg 88 0 R >>
endobj

530 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 13 ]
  /P 153 0 R
  /Pg 88 0 R
  /T (method delayed)
>>
endobj

531 0 obj
<< /Type /StructElem /S /P /K [ 532 0 R ] /P 153 0 R >>
endobj

532 0 obj
<< /Type /StructElem /S /Code /K [ 14 ] /P 531 0 R /Pg 88 0 R >>
endobj

533 0 obj
<< /Type /StructElem /S /P /K [ 15 ] /P 153 0 R /Pg 88 0 R >>
endobj

534 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 16 ]
  /P 153 0 R
  /Pg 88 0 R
  /T (method throttle)
>>
endobj

535 0 obj
<< /Type /StructElem /S /P /K [ 17 ] /P 153 0 R /Pg 88 0 R >>
endobj

536 0 obj
<< /Type /StructElem /S /P /K [ 537 0 R ] /P 153 0 R >>
endobj

537 0 obj
<< /Type /StructElem /S /Code /K [ 18 ] /P 536 0 R /Pg 88 0 R >>
endobj

538 0 obj
<< /Type /StructElem /S /P /K [ 539 0 R ] /P 153 0 R >>
endobj

539 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 538 0 R /Pg 88 0 R >>
endobj

540 0 obj
<< /Type /StructElem /S /P /K [ 20 541 0 R 22 ] /P 153 0 R /Pg 88 0 R >>
endobj

541 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 540 0 R >>
endobj

542 0 obj
<< /Type /StructElem /S /Table /K [ 543 0 R 547 0 R ] /P 153 0 R >>
endobj

543 0 obj
<< /Type /StructElem /S /THead /K [ 544 0 R ] /P 542 0 R >>
endobj

544 0 obj
<< /Type /StructElem /S /TR /K [ 545 0 R 546 0 R ] /P 543 0 R >>
endobj

545 0 obj
<< /Type /StructElem /S /TH /K [ 23 ] /P 544 0 R /Pg 88 0 R >>
endobj

546 0 obj
<< /Type /StructElem /S /TH /K [ 24 ] /P 544 0 R /Pg 88 0 R >>
endobj

547 0 obj
<<
  /Type /StructElem
  /S /TBody
  /K [ 548 0 R 551 0 R 554 0 R 557 0 R 560 0 R 563 0 R 566 0 R 569 0 R ]
  /P 542 0 R
>>
endobj

548 0 obj
<< /Type /StructElem /S /TR /K [ 549 0 R 550 0 R ] /P 547 0 R >>
endobj

549 0 obj
<< /Type /StructElem /S /TD /K [ 25 ] /P 548 0 R /Pg 88 0 R >>
endobj

550 0 obj
<< /Type /StructElem /S /TD /K [ 26 ] /P 548 0 R /Pg 88 0 R >>
endobj

551 0 obj
<< /Type /StructElem /S /TR /K [ 552 0 R 553 0 R ] /P 547 0 R >>
endobj

552 0 obj
<< /Type /StructElem /S /TD /K [ 27 ] /P 551 0 R /Pg 88 0 R >>
endobj

553 0 obj
<< /Type /StructElem /S /TD /K [ 28 ] /P 551 0 R /Pg 88 0 R >>
endobj

554 0 obj
<< /Type /StructElem /S /TR /K [ 555 0 R 556 0 R ] /P 547 0 R >>
endobj

555 0 obj
<< /Type /StructElem /S /TD /K [ 29 ] /P 554 0 R /Pg 88 0 R >>
endobj

556 0 obj
<< /Type /StructElem /S /TD /K [ 30 ] /P 554 0 R /Pg 88 0 R >>
endobj

557 0 obj
<< /Type /StructElem /S /TR /K [ 558 0 R 559 0 R ] /P 547 0 R >>
endobj

558 0 obj
<< /Type /StructElem /S /TD /K [ 31 ] /P 557 0 R /Pg 88 0 R >>
endobj

559 0 obj
<< /Type /StructElem /S /TD /K [ 32 ] /P 557 0 R /Pg 88 0 R >>
endobj

560 0 obj
<< /Type /StructElem /S /TR /K [ 561 0 R 562 0 R ] /P 547 0 R >>
endobj

561 0 obj
<< /Type /StructElem /S /TD /K [ 33 ] /P 560 0 R /Pg 88 0 R >>
endobj

562 0 obj
<< /Type /StructElem /S /TD /K [ 34 ] /P 560 0 R /Pg 88 0 R >>
endobj

563 0 obj
<< /Type /StructElem /S /TR /K [ 564 0 R 565 0 R ] /P 547 0 R >>
endobj

564 0 obj
<< /Type /StructElem /S /TD /K [ 35 ] /P 563 0 R /Pg 88 0 R >>
endobj

565 0 obj
<< /Type /StructElem /S /TD /K [ 36 ] /P 563 0 R /Pg 88 0 R >>
endobj

566 0 obj
<< /Type /StructElem /S /TR /K [ 567 0 R 568 0 R ] /P 547 0 R >>
endobj

567 0 obj
<< /Type /StructElem /S /TD /K [ 37 ] /P 566 0 R /Pg 88 0 R >>
endobj

568 0 obj
<< /Type /StructElem /S /TD /K [ 38 ] /P 566 0 R /Pg 88 0 R >>
endobj

569 0 obj
<< /Type /StructElem /S /TR /K [ 570 0 R 571 0 R ] /P 547 0 R >>
endobj

570 0 obj
<< /Type /StructElem /S /TD /K [ 39 ] /P 569 0 R /Pg 88 0 R >>
endobj

571 0 obj
<< /Type /StructElem /S /TD /K [ 40 ] /P 569 0 R /Pg 88 0 R >>
endobj

572 0 obj
<< /Type /StructElem /S /P /K [ 0 573 0 R 2 ] /P 153 0 R /Pg 94 0 R >>
endobj

573 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 572 0 R >>
endobj

574 0 obj
<< /Type /StructElem /S /P /K [ 3 ] /P 153 0 R /Pg 94 0 R >>
endobj

575 0 obj
<< /Type /StructElem /S /P /K [ 4 ] /P 153 0 R /Pg 94 0 R >>
endobj

576 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 5 577 0 R 7 578 0 R 9 579 0 R 11 ]
  /P 153 0 R
  /Pg 94 0 R
>>
endobj

577 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 576 0 R >>
endobj

578 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 576 0 R >>
endobj

579 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 576 0 R >>
endobj

580 0 obj
<< /Type /StructElem /S /P /K [ 12 13 14 ] /P 153 0 R /Pg 94 0 R >>
endobj

581 0 obj
<< /Type /StructElem /S /P /K [ 15 ] /P 153 0 R /Pg 94 0 R >>
endobj

582 0 obj
<< /Type /StructElem /S /P /K [ 16 ] /P 153 0 R /Pg 94 0 R >>
endobj

583 0 obj
<< /Type /StructElem /S /P /K [ 17 584 0 R 19 ] /P 153 0 R /Pg 94 0 R >>
endobj

584 0 obj
<< /Type /StructElem /S /Code /K [ 18 ] /P 583 0 R >>
endobj

585 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 20 586 0 R 22 587 0 R 24 ]
  /P 153 0 R
  /Pg 94 0 R
>>
endobj

586 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 585 0 R >>
endobj

587 0 obj
<< /Type /StructElem /S /Reference /K [ 588 0 R ] /P 585 0 R >>
endobj

588 0 obj
<< /Type /StructElem /S /Link /K [ 589 0 R 23 ] /P 587 0 R >>
endobj

589 0 obj
<< /Type /OBJR /Obj 95 0 R /Pg 94 0 R >>
endobj

590 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 25 591 0 R 27 28 29 30 31 ]
  /P 153 0 R
  /Pg 94 0 R
>>
endobj

591 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 590 0 R >>
endobj

592 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 32 593 0 R 34 594 0 R 36 595 0 R 38 ]
  /P 153 0 R
  /Pg 94 0 R
>>
endobj

593 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 592 0 R >>
endobj

594 0 obj
<< /Type /StructElem /S /Code /K [ 35 ] /P 592 0 R >>
endobj

595 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 592 0 R >>
endobj

596 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 39 597 0 R 41 598 0 R 43 ]
  /P 153 0 R
  /Pg 94 0 R
>>
endobj

597 0 obj
<< /Type /StructElem /S /Code /K [ 40 ] /P 596 0 R >>
endobj

598 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 596 0 R >>
endobj

599 0 obj
<<
  /Type /StructElem
  /S /H3
  /K [ 44 ]
  /P 153 0 R
  /Pg 94 0 R
  /T (control messages)
>>
endobj

600 0 obj
<< /Type /StructElem /S /P /K [ 45 601 0 R 47 ] /P 153 0 R /Pg 94 0 R >>
endobj

601 0 obj
<< /Type /StructElem /S /Code /K [ 46 ] /P 600 0 R >>
endobj

602 0 obj
<< /Type /StructElem /S /LI /K [ 603 0 R 604 0 R ] /P 153 0 R >>
endobj

603 0 obj
<< /Type /StructElem /S /Lbl /K [ 48 ] /P 602 0 R /Pg 94 0 R >>
endobj

604 0 obj
<< /Type /StructElem /S /LBody /K [ 605 0 R ] /P 602 0 R >>
endobj

605 0 obj
<< /Type /StructElem /S /P /K [ 49 ] /P 604 0 R /Pg 94 0 R >>
endobj

606 0 obj
<< /Type /StructElem /S /P /K [ 50 ] /P 153 0 R /Pg 94 0 R >>
endobj

607 0 obj
<< /Type /StructElem /S /LI /K [ 608 0 R 609 0 R ] /P 153 0 R >>
endobj

608 0 obj
<< /Type /StructElem /S /Lbl /K [ 51 ] /P 607 0 R /Pg 94 0 R >>
endobj

609 0 obj
<< /Type /StructElem /S /LBody /K [ 610 0 R ] /P 607 0 R >>
endobj

610 0 obj
<< /Type /StructElem /S /P /K [ 52 ] /P 609 0 R /Pg 94 0 R >>
endobj

611 0 obj
<< /Type /StructElem /S /P /K [ 53 612 0 R 55 ] /P 153 0 R /Pg 94 0 R >>
endobj

612 0 obj
<< /Type /StructElem /S /Code /K [ 54 ] /P 611 0 R >>
endobj

613 0 obj
<< /Type /StructElem /S /LI /K [ 614 0 R 615 0 R ] /P 153 0 R >>
endobj

614 0 obj
<< /Type /StructElem /S /Lbl /K [ 56 ] /P 613 0 R /Pg 94 0 R >>
endobj

615 0 obj
<< /Type /StructElem /S /LBody /K [ 616 0 R ] /P 613 0 R >>
endobj

616 0 obj
<< /Type /StructElem /S /P /K [ 57 ] /P 615 0 R /Pg 94 0 R >>
endobj

617 0 obj
<< /Type /StructElem /S /P /K [ 58 ] /P 153 0 R /Pg 94 0 R >>
endobj

618 0 obj
<< /Type /StructElem /S /LI /K [ 619 0 R 620 0 R ] /P 153 0 R >>
endobj

619 0 obj
<< /Type /StructElem /S /Lbl /K [ 59 ] /P 618 0 R /Pg 94 0 R >>
endobj

620 0 obj
<< /Type /StructElem /S /LBody /K [ 621 0 R ] /P 618 0 R >>
endobj

621 0 obj
<< /Type /StructElem /S /P /K [ 60 ] /P 620 0 R /Pg 94 0 R >>
endobj

622 0 obj
<< /Type /StructElem /S /P /K [ 61 623 0 R 63 ] /P 153 0 R /Pg 94 0 R >>
endobj

623 0 obj
<< /Type /StructElem /S /Code /K [ 62 ] /P 622 0 R >>
endobj

624 0 obj
<<
  /Type /StructElem
  /S /H3
  /K [ 64 ]
  /P 153 0 R
  /Pg 94 0 R
  /T (status message)
>>
endobj

625 0 obj
<< /Type /StructElem /S /P /K [ 65 ] /P 153 0 R /Pg 94 0 R >>
endobj

626 0 obj
<< /Type /StructElem /S /LI /K [ 627 0 R 628 0 R ] /P 153 0 R >>
endobj

627 0 obj
<< /Type /StructElem /S /Lbl /K [ 66 ] /P 626 0 R /Pg 94 0 R >>
endobj

628 0 obj
<< /Type /StructElem /S /LBody /K [ 629 0 R ] /P 626 0 R >>
endobj

629 0 obj
<< /Type /StructElem /S /P /K [ 67 ] /P 628 0 R /Pg 94 0 R >>
endobj

630 0 obj
<< /Type /StructElem /S /P /K [ 68 ] /P 153 0 R /Pg 94 0 R >>
endobj

631 0 obj
<< /Type /StructElem /S /LI /K [ 632 0 R 633 0 R ] /P 153 0 R >>
endobj

632 0 obj
<< /Type /StructElem /S /Lbl /K [ 0 ] /P 631 0 R /Pg 4 0 R >>
endobj

633 0 obj
<< /Type /StructElem /S /LBody /K [ 634 0 R ] /P 631 0 R >>
endobj

634 0 obj
<< /Type /StructElem /S /P /K [ 1 ] /P 633 0 R /Pg 4 0 R >>
endobj

635 0 obj
<< /Type /StructElem /S /P /K [ 2 636 0 R 4 ] /P 153 0 R /Pg 4 0 R >>
endobj

636 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 635 0 R >>
endobj

637 0 obj
<< /Type /StructElem /S /LI /K [ 638 0 R 639 0 R ] /P 153 0 R >>
endobj

638 0 obj
<< /Type /StructElem /S /Lbl /K [ 5 ] /P 637 0 R /Pg 4 0 R >>
endobj

639 0 obj
<< /Type /StructElem /S /LBody /K [ 640 0 R ] /P 637 0 R >>
endobj

640 0 obj
<< /Type /StructElem /S /P /K [ 6 ] /P 639 0 R /Pg 4 0 R >>
endobj

641 0 obj
<< /Type /StructElem /S /P /K [ 7 ] /P 153 0 R /Pg 4 0 R >>
endobj

642 0 obj
<< /Type /StructElem /S /LI /K [ 643 0 R 644 0 R ] /P 153 0 R >>
endobj

643 0 obj
<< /Type /StructElem /S /Lbl /K [ 8 ] /P 642 0 R /Pg 4 0 R >>
endobj

644 0 obj
<< /Type /StructElem /S /LBody /K [ 645 0 R ] /P 642 0 R >>
endobj

645 0 obj
<< /Type /StructElem /S /P /K [ 9 ] /P 644 0 R /Pg 4 0 R >>
endobj

646 0 obj
<< /Type /StructElem /S /P /K [ 10 ] /P 153 0 R /Pg 4 0 R >>
endobj

647 0 obj
<< /Type /StructElem /S /LI /K [ 648 0 R 649 0 R ] /P 153 0 R >>
endobj

648 0 obj
<< /Type /StructElem /S /Lbl /K [ 11 ] /P 647 0 R /Pg 4 0 R >>
endobj

649 0 obj
<< /Type /StructElem /S /LBody /K [ 650 0 R ] /P 647 0 R >>
endobj

650 0 obj
<< /Type /StructElem /S /P /K [ 12 ] /P 649 0 R /Pg 4 0 R >>
endobj

651 0 obj
<< /Type /StructElem /S /P /K [ 13 ] /P 153 0 R /Pg 4 0 R >>
endobj

652 0 obj
<< /Type /StructElem /S /LI /K [ 653 0 R 654 0 R ] /P 153 0 R >>
endobj

653 0 obj
<< /Type /StructElem /S /Lbl /K [ 14 ] /P 652 0 R /Pg 4 0 R >>
endobj

654 0 obj
<< /Type /StructElem /S /LBody /K [ 655 0 R ] /P 652 0 R >>
endobj

655 0 obj
<< /Type /StructElem /S /P /K [ 15 ] /P 654 0 R /Pg 4 0 R >>
endobj

656 0 obj
<< /Type /StructElem /S /P /K [ 16 ] /P 153 0 R /Pg 4 0 R >>
endobj

657 0 obj
<< /Type /StructElem /S /LI /K [ 658 0 R 659 0 R ] /P 153 0 R >>
endobj

658 0 obj
<< /Type /StructElem /S /Lbl /K [ 17 ] /P 657 0 R /Pg 4 0 R >>
endobj

659 0 obj
<< /Type /StructElem /S /LBody /K [ 660 0 R ] /P 657 0 R >>
endobj

660 0 obj
<< /Type /StructElem /S /P /K [ 18 ] /P 659 0 R /Pg 4 0 R >>
endobj

661 0 obj
<< /Type /StructElem /S /P /K [ 19 662 0 R 21 ] /P 153 0 R /Pg 4 0 R >>
endobj

662 0 obj
<< /Type /StructElem /S /Code /K [ 20 ] /P 661 0 R >>
endobj

663 0 obj
<< /Type /StructElem /S /H3 /K [ 22 ] /P 153 0 R /Pg 4 0 R /T (Examples) >>
endobj

664 0 obj
<< /Type /StructElem /S /P /K [ 23 ] /P 153 0 R /Pg 4 0 R >>
endobj

665 0 obj
<< /Type /StructElem /S /P /K [ 666 0 R ] /P 153 0 R >>
endobj

666 0 obj
<< /Type /StructElem /S /Code /K [ 24 ] /P 665 0 R /Pg 4 0 R >>
endobj

667 0 obj
<< /Type /StructElem /S /P /K [ 25 ] /P 153 0 R /Pg 4 0 R >>
endobj

668 0 obj
<< /Type /StructElem /S /P /K [ 669 0 R ] /P 153 0 R >>
endobj

669 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 668 0 R /Pg 4 0 R >>
endobj

670 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 27 ]
  /P 153 0 R
  /Pg 4 0 R
  /T (method stable)
>>
endobj

671 0 obj
<< /Type /StructElem /S /P /K [ 672 0 R ] /P 153 0 R >>
endobj

672 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 671 0 R /Pg 4 0 R >>
endobj

673 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 29 674 0 R 31 675 0 R 33 ]
  /P 153 0 R
  /Pg 4 0 R
>>
endobj

674 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 673 0 R >>
endobj

675 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 673 0 R >>
endobj

676 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 34 677 0 R 36 678 0 R 38 679 0 R 40 680 0 R 42 ]
  /P 153 0 R
  /Pg 4 0 R
>>
endobj

677 0 obj
<< /Type /StructElem /S /Code /K [ 35 ] /P 676 0 R >>
endobj

678 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 676 0 R >>
endobj

679 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 676 0 R >>
endobj

680 0 obj
<< /Type /StructElem /S /Code /K [ 41 ] /P 676 0 R >>
endobj

681 0 obj
<< /Type /StructElem /S /P /K [ 43 ] /P 153 0 R /Pg 4 0 R >>
endobj

682 0 obj
<< /Type /StructElem /S /P /K [ 683 0 R ] /P 153 0 R >>
endobj

683 0 obj
<< /Type /StructElem /S /Code /K [ 0 ] /P 682 0 R /Pg 98 0 R >>
endobj

684 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1 685 0 R 3 686 0 R 5 687 0 R 7 688 0 R 9 689 0 R 11 ]
  /P 153 0 R
  /Pg 98 0 R
>>
endobj

685 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 684 0 R >>
endobj

686 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 684 0 R >>
endobj

687 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 684 0 R >>
endobj

688 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 684 0 R >>
endobj

689 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 684 0 R >>
endobj

690 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 12 ]
  /P 153 0 R
  /Pg 98 0 R
  /T (method produce)
>>
endobj

691 0 obj
<< /Type /StructElem /S /P /K [ 692 0 R ] /P 153 0 R >>
endobj

692 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 691 0 R /Pg 98 0 R >>
endobj

693 0 obj
<< /Type /StructElem /S /P /K [ 14 694 0 R 16 ] /P 153 0 R /Pg 98 0 R >>
endobj

694 0 obj
<< /Type /StructElem /S /Link /K [ 695 0 R 15 ] /P 693 0 R >>
endobj

695 0 obj
<< /Type /OBJR /Obj 99 0 R /Pg 98 0 R >>
endobj

696 0 obj
<< /Type /StructElem /S /P /K [ 697 0 R ] /P 153 0 R >>
endobj

697 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 696 0 R /Pg 98 0 R >>
endobj

698 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 18 ]
  /P 153 0 R
  /Pg 98 0 R
  /T (method lines)
>>
endobj

699 0 obj
<< /Type /StructElem /S /P /K [ 700 0 R ] /P 153 0 R >>
endobj

700 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 699 0 R /Pg 98 0 R >>
endobj

701 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 20 702 0 R 22 703 0 R 24 ]
  /P 153 0 R
  /Pg 98 0 R
>>
endobj

702 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 701 0 R >>
endobj

703 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 701 0 R >>
endobj

704 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 25 ]
  /P 153 0 R
  /Pg 98 0 R
  /T (method words)
>>
endobj

705 0 obj
<< /Type /StructElem /S /P /K [ 706 0 R ] /P 153 0 R >>
endobj

706 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 705 0 R /Pg 98 0 R >>
endobj

707 0 obj
<< /Type /StructElem /S /P /K [ 27 ] /P 153 0 R /Pg 98 0 R >>
endobj

708 0 obj
<< /Type /StructElem /S /P /K [ 709 0 R ] /P 153 0 R >>
endobj

709 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 708 0 R /Pg 98 0 R >>
endobj

710 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 29 ]
  /P 153 0 R
  /Pg 98 0 R
  /T (method unique)
>>
endobj

711 0 obj
<< /Type /StructElem /S /P /K [ 712 0 R ] /P 153 0 R >>
endobj

712 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 711 0 R /Pg 98 0 R >>
endobj

713 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 31 714 0 R 33 715 0 R 35 716 0 R 37 718 0 R 39 ]
  /P 153 0 R
  /Pg 98 0 R
>>
endobj

714 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 713 0 R >>
endobj

715 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 713 0 R >>
endobj

716 0 obj
<< /Type /StructElem /S /Link /K [ 717 0 R 36 ] /P 713 0 R >>
endobj

717 0 obj
<< /Type /OBJR /Obj 101 0 R /Pg 98 0 R >>
endobj

718 0 obj
<< /Type /StructElem /S /Code /K [ 38 ] /P 713 0 R >>
endobj

719 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 40 ]
  /P 153 0 R
  /Pg 98 0 R
  /T (method repeated)
>>
endobj

720 0 obj
<< /Type /StructElem /S /P /K [ 721 0 R ] /P 153 0 R >>
endobj

721 0 obj
<< /Type /StructElem /S /Code /K [ 41 ] /P 720 0 R /Pg 98 0 R >>
endobj

722 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 42 723 0 R 44 724 0 R 46 725 0 R 48 ]
  /P 153 0 R
  /Pg 98 0 R
>>
endobj

723 0 obj
<< /Type /StructElem /S /Code /K [ 43 ] /P 722 0 R >>
endobj

724 0 obj
<< /Type /StructElem /S /Code /K [ 45 ] /P 722 0 R >>
endobj

725 0 obj
<< /Type /StructElem /S /Link /K [ 726 0 R 47 ] /P 722 0 R >>
endobj

726 0 obj
<< /Type /OBJR /Obj 103 0 R /Pg 98 0 R >>
endobj

727 0 obj
<< /Type /StructElem /S /P /K [ 728 0 R ] /P 153 0 R >>
endobj

728 0 obj
<< /Type /StructElem /S /Code /K [ 49 ] /P 727 0 R /Pg 98 0 R >>
endobj

729 0 obj
<< /Type /StructElem /S /P /K [ 0 730 0 R 2 ] /P 153 0 R /Pg 108 0 R >>
endobj

730 0 obj
<< /Type /StructElem /S /Link /K [ 731 0 R 1 ] /P 729 0 R >>
endobj

731 0 obj
<< /Type /OBJR /Obj 109 0 R /Pg 108 0 R >>
endobj

732 0 obj
<< /Type /StructElem /S /P /K [ 3 4 733 0 R 6 ] /P 153 0 R /Pg 108 0 R >>
endobj

733 0 obj
<< /Type /StructElem /S /Link /K [ 734 0 R 5 ] /P 732 0 R >>
endobj

734 0 obj
<< /Type /OBJR /Obj 111 0 R /Pg 108 0 R >>
endobj

735 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 7 ]
  /P 153 0 R
  /Pg 108 0 R
  /T (method squish)
>>
endobj

736 0 obj
<< /Type /StructElem /S /P /K [ 737 0 R ] /P 153 0 R >>
endobj

737 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 736 0 R /Pg 108 0 R >>
endobj

738 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 9 739 0 R 11 740 0 R 13 741 0 R 15 ]
  /P 153 0 R
  /Pg 108 0 R
>>
endobj

739 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 738 0 R >>
endobj

740 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 738 0 R >>
endobj

741 0 obj
<< /Type /StructElem /S /Link /K [ 742 0 R 14 ] /P 738 0 R >>
endobj

742 0 obj
<< /Type /OBJR /Obj 113 0 R /Pg 108 0 R >>
endobj

743 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 16 ]
  /P 153 0 R
  /Pg 108 0 R
  /T (method max)
>>
endobj

744 0 obj
<< /Type /StructElem /S /P /K [ 745 0 R ] /P 153 0 R >>
endobj

745 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 744 0 R /Pg 108 0 R >>
endobj

746 0 obj
<< /Type /StructElem /S /P /K [ 18 747 0 R 20 ] /P 153 0 R /Pg 108 0 R >>
endobj

747 0 obj
<< /Type /StructElem /S /Link /K [ 748 0 R 19 ] /P 746 0 R >>
endobj

748 0 obj
<< /Type /OBJR /Obj 115 0 R /Pg 108 0 R >>
endobj

749 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 21 ]
  /P 153 0 R
  /Pg 108 0 R
  /T (method min)
>>
endobj

750 0 obj
<< /Type /StructElem /S /P /K [ 751 0 R ] /P 153 0 R >>
endobj

751 0 obj
<< /Type /StructElem /S /Code /K [ 22 ] /P 750 0 R /Pg 108 0 R >>
endobj

752 0 obj
<< /Type /StructElem /S /P /K [ 23 753 0 R 25 ] /P 153 0 R /Pg 108 0 R >>
endobj

753 0 obj
<< /Type /StructElem /S /Link /K [ 754 0 R 24 ] /P 752 0 R >>
endobj

754 0 obj
<< /Type /OBJR /Obj 117 0 R /Pg 108 0 R >>
endobj

755 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 26 ]
  /P 153 0 R
  /Pg 108 0 R
  /T (method minmax)
>>
endobj

756 0 obj
<< /Type /StructElem /S /P /K [ 757 0 R ] /P 153 0 R >>
endobj

757 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 756 0 R /Pg 108 0 R >>
endobj

758 0 obj
<< /Type /StructElem /S /P /K [ 28 759 0 R 30 ] /P 153 0 R /Pg 108 0 R >>
endobj

759 0 obj
<< /Type /StructElem /S /Link /K [ 760 0 R 29 ] /P 758 0 R >>
endobj

760 0 obj
<< /Type /OBJR /Obj 119 0 R /Pg 108 0 R >>
endobj

761 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 31 ]
  /P 153 0 R
  /Pg 108 0 R
  /T (method skip)
>>
endobj

762 0 obj
<< /Type /StructElem /S /P /K [ 763 0 R ] /P 153 0 R >>
endobj

763 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 762 0 R /Pg 108 0 R >>
endobj

764 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 33 765 0 R 35 766 0 R 37 767 0 R 39 ]
  /P 153 0 R
  /Pg 108 0 R
>>
endobj

765 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 764 0 R >>
endobj

766 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 764 0 R >>
endobj

767 0 obj
<< /Type /StructElem /S /Code /K [ 38 ] /P 764 0 R >>
endobj

768 0 obj
<< /Type /StructElem /S /P /K [ 769 0 R ] /P 153 0 R >>
endobj

769 0 obj
<< /Type /StructElem /S /Code /K [ 40 ] /P 768 0 R /Pg 108 0 R >>
endobj

770 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 41 ]
  /P 153 0 R
  /Pg 108 0 R
  /T (method start)
>>
endobj

771 0 obj
<< /Type /StructElem /S /P /K [ 772 0 R ] /P 153 0 R >>
endobj

772 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 771 0 R /Pg 108 0 R >>
endobj

773 0 obj
<< /Type /StructElem /S /P /K [ 43 ] /P 153 0 R /Pg 108 0 R >>
endobj

774 0 obj
<< /Type /StructElem /S /P /K [ 44 ] /P 153 0 R /Pg 108 0 R >>
endobj

775 0 obj
<< /Type /StructElem /S /P /K [ 45 776 0 R 47 ] /P 153 0 R /Pg 108 0 R >>
endobj

776 0 obj
<< /Type /StructElem /S /Code /K [ 46 ] /P 775 0 R >>
endobj

777 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 153 0 R
  /Pg 124 0 R
  /T (method migrate)
>>
endobj

778 0 obj
<< /Type /StructElem /S /P /K [ 779 0 R ] /P 153 0 R >>
endobj

779 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 778 0 R /Pg 124 0 R >>
endobj

780 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2 781 0 R 4 782 0 R 6 783 0 R 8 784 0 R 10 785 0 R 12 ]
  /P 153 0 R
  /Pg 124 0 R
>>
endobj

781 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 780 0 R >>
endobj

782 0 obj
<< /Type /StructElem /S /Code /K [ 5 ] /P 780 0 R >>
endobj

783 0 obj
<< /Type /StructElem /S /Code /K [ 7 ] /P 780 0 R >>
endobj

784 0 obj
<< /Type /StructElem /S /Code /K [ 9 ] /P 780 0 R >>
endobj

785 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 780 0 R >>
endobj

786 0 obj
<< /Type /StructElem /S /P /K [ 13 787 0 R 15 ] /P 153 0 R /Pg 124 0 R >>
endobj

787 0 obj
<< /Type /StructElem /S /Code /K [ 14 ] /P 786 0 R >>
endobj

788 0 obj
<< /Type /StructElem /S /P /K [ 16 ] /P 153 0 R /Pg 124 0 R >>
endobj

789 0 obj
<< /Type /StructElem /S /P /K [ 790 0 R ] /P 153 0 R >>
endobj

790 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 789 0 R /Pg 124 0 R >>
endobj

791 0 obj
<< /Type /StructElem /S /P /K [ 18 ] /P 153 0 R /Pg 124 0 R >>
endobj

792 0 obj
<< /Type /StructElem /S /P /K [ 793 0 R ] /P 153 0 R >>
endobj

793 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 792 0 R /Pg 124 0 R >>
endobj

794 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 153 0 R
  /Pg 128 0 R
  /T (Methods that combine supplies)
>>
endobj

795 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 153 0 R
  /Pg 128 0 R
  /T (method merge)
>>
endobj

796 0 obj
<< /Type /StructElem /S /P /K [ 797 0 R ] /P 153 0 R >>
endobj

797 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 796 0 R /Pg 128 0 R >>
endobj

798 0 obj
<< /Type /StructElem /S /P /K [ 3 ] /P 153 0 R /Pg 128 0 R >>
endobj

799 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 4 ]
  /P 153 0 R
  /Pg 128 0 R
  /T (method zip)
>>
endobj

800 0 obj
<< /Type /StructElem /S /P /K [ 5 ] /P 153 0 R /Pg 128 0 R >>
endobj

801 0 obj
<< /Type /StructElem /S /P /K [ 802 0 R ] /P 153 0 R >>
endobj

802 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 801 0 R /Pg 128 0 R >>
endobj

803 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 7 8 9 804 0 R 11 806 0 R 13 14 15 ]
  /P 153 0 R
  /Pg 128 0 R
>>
endobj

804 0 obj
<< /Type /StructElem /S /Link /K [ 805 0 R 10 ] /P 803 0 R >>
endobj

805 0 obj
<< /Type /OBJR /Obj 129 0 R /Pg 128 0 R >>
endobj

806 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 803 0 R >>
endobj

807 0 obj
<< /Type /StructElem /S /P /K [ 16 ] /P 153 0 R /Pg 128 0 R >>
endobj

808 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 17 ]
  /P 153 0 R
  /Pg 128 0 R
  /T (method zip-latest)
>>
endobj

809 0 obj
<< /Type /StructElem /S /P /K [ 18 ] /P 153 0 R /Pg 128 0 R >>
endobj

810 0 obj
<< /Type /StructElem /S /P /K [ 811 0 R ] /P 153 0 R >>
endobj

811 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 810 0 R /Pg 128 0 R >>
endobj

812 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 20 21 22 813 0 R 24 815 0 R 26 27 28 ]
  /P 153 0 R
  /Pg 128 0 R
>>
endobj

813 0 obj
<< /Type /StructElem /S /Link /K [ 814 0 R 23 ] /P 812 0 R >>
endobj

814 0 obj
<< /Type /OBJR /Obj 131 0 R /Pg 128 0 R >>
endobj

815 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 812 0 R >>
endobj

816 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 153 0 R
  /Pg 136 0 R
  /T (I/O features exposed as supplies)
>>
endobj

817 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 153 0 R
  /Pg 136 0 R
  /T (sub signal)
>>
endobj

818 0 obj
<< /Type /StructElem /S /P /K [ 819 0 R ] /P 153 0 R >>
endobj

819 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 818 0 R /Pg 136 0 R >>
endobj

820 0 obj
<< /Type /StructElem /S /P /K [ 3 821 0 R 5 ] /P 153 0 R /Pg 136 0 R >>
endobj

821 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 820 0 R >>
endobj

822 0 obj
<< /Type /StructElem /S /P /K [ 823 0 R ] /P 153 0 R >>
endobj

823 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 822 0 R /Pg 136 0 R >>
endobj

824 0 obj
<< /Type /StructElem /S /P /K [ 7 ] /P 153 0 R /Pg 136 0 R >>
endobj

825 0 obj
<< /Type /StructElem /S /P /K [ 8 9 10 ] /P 153 0 R /Pg 136 0 R >>
endobj

826 0 obj
<< /Type /StructElem /S /P /K [ 827 0 R ] /P 153 0 R >>
endobj

827 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 826 0 R /Pg 136 0 R >>
endobj

828 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 12 829 0 R 14 830 0 R 832 0 R 16 ]
  /P 153 0 R
  /Pg 136 0 R
>>
endobj

829 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 828 0 R >>
endobj

830 0 obj
<< /Type /StructElem /S /Link /K [ 831 0 R ] /P 828 0 R >>
endobj

831 0 obj
<< /Type /OBJR /Obj 137 0 R /Pg 136 0 R >>
endobj

832 0 obj
<< /Type /StructElem /S /Link /K [ 833 0 R 15 ] /P 828 0 R >>
endobj

833 0 obj
<< /Type /OBJR /Obj 139 0 R /Pg 136 0 R >>
endobj

834 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 17 18 835 0 R 20 837 0 R 22 838 0 R 24 839 0 R 26 840 0 R 28 841 0 R 30 ]
  /P 153 0 R
  /Pg 136 0 R
>>
endobj

835 0 obj
<< /Type /StructElem /S /Link /K [ 836 0 R 19 ] /P 834 0 R >>
endobj

836 0 obj
<< /Type /OBJR /Obj 140 0 R /Pg 136 0 R >>
endobj

837 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 834 0 R >>
endobj

838 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 834 0 R >>
endobj

839 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 834 0 R >>
endobj

840 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 834 0 R >>
endobj

841 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 834 0 R >>
endobj

842 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 31 ]
  /P 153 0 R
  /Pg 136 0 R
  /T (method IO::Notification.watch-path)
>>
endobj

843 0 obj
<< /Type /StructElem /S /P /K [ 844 0 R ] /P 153 0 R >>
endobj

844 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 843 0 R /Pg 136 0 R >>
endobj

845 0 obj
<< /Type /StructElem /S /P /K [ 33 846 0 R 35 ] /P 153 0 R /Pg 136 0 R >>
endobj

846 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 845 0 R >>
endobj

847 0 obj
<< /Type /StructElem /S /P /K [ 848 0 R ] /P 153 0 R >>
endobj

848 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 847 0 R /Pg 136 0 R >>
endobj

849 0 obj
<<
  /Type /StructTreeRoot
  /K [ 153 0 R ]
  /ParentTree <<
    /Nums [ 0 [ 154 0 R 155 0 R 157 0 R 158 0 R 159 0 R 158 0 R 158 0 R 158 0 R 161 0 R 162 0 R 161 0 R 164 0 R 165 0 R 164 0 R 166 0 R 164 0 R 167 0 R 164 0 R 164 0 R 164 0 R 168 0 R 169 0 R 168 0 R 170 0 R 168 0 R 171 0 R 172 0 R 171 0 R 173 0 R 171 0 R 174 0 R 171 0 R 176 0 R 171 0 R 177 0 R 171 0 R 178 0 R 171 0 R 180 0 R 181 0 R 183 0 R 181 0 R 185 0 R 181 0 R 187 0 R 181 0 R 190 0 R 181 0 R 181 0 R 181 0 R 192 0 R 193 0 R 192 0 R 194 0 R 192 0 R 196 0 R 197 0 R 196 0 R ] 1 159 0 R 2 162 0 R 3 174 0 R 4 183 0 R 5 187 0 R 6 190 0 R 7 194 0 R 8 197 0 R 9 [ 199 0 R 200 0 R 202 0 R 203 0 R 204 0 R 203 0 R 205 0 R 206 0 R 205 0 R 207 0 R 205 0 R 208 0 R 205 0 R 209 0 R 205 0 R 210 0 R 205 0 R 211 0 R 205 0 R 212 0 R 205 0 R 213 0 R 214 0 R 213 0 R 215 0 R 213 0 R 216 0 R 213 0 R 217 0 R 213 0 R 218 0 R 213 0 R 219 0 R 220 0 R 219 0 R 221 0 R 219 0 R 223 0 R 219 0 R 224 0 R 219 0 R 225 0 R 219 0 R 226 0 R 219 0 R 227 0 R 219 0 R 228 0 R 219 0 R 229 0 R 219 0 R 230 0 R 231 0 R 230 0 R 232 0 R 230 0 R 234 0 R 230 0 R 236 0 R 237 0 R 239 0 R 152 0 R 241 0 R 242 0 R 243 0 R 242 0 R ] 10 221 0 R 11 232 0 R 12 [ 244 0 R 245 0 R 246 0 R 248 0 R 249 0 R 250 0 R 249 0 R 252 0 R 254 0 R 255 0 R 256 0 R 255 0 R 258 0 R 255 0 R 259 0 R 261 0 R 262 0 R 263 0 R 262 0 R 265 0 R 262 0 R 266 0 R 262 0 R 267 0 R 262 0 R 268 0 R 262 0 R 269 0 R 262 0 R 270 0 R 262 0 R 271 0 R 262 0 R 272 0 R 262 0 R 273 0 R 262 0 R 275 0 R 276 0 R 277 0 R 276 0 R 278 0 R 280 0 R 281 0 R 282 0 R 281 0 R 283 0 R 281 0 R 284 0 R 281 0 R 285 0 R 281 0 R 286 0 R 281 0 R 288 0 R 289 0 R 291 0 R 292 0 R 293 0 R ] 13 250 0 R 14 256 0 R 15 263 0 R 16 [ 294 0 R 295 0 R 297 0 R 298 0 R 299 0 R 298 0 R 300 0 R 298 0 R 301 0 R 298 0 R 302 0 R 298 0 R 303 0 R 298 0 R 304 0 R 298 0 R 306 0 R 307 0 R 309 0 R 310 0 R 311 0 R 310 0 R 312 0 R 310 0 R 313 0 R 310 0 R 314 0 R 310 0 R 315 0 R 310 0 R 316 0 R 310 0 R 317 0 R 319 0 R 320 0 R 321 0 R 320 0 R 322 0 R 320 0 R 323 0 R 325 0 R 326 0 R 327 0 R 326 0 R 328 0 R 326 0 R 329 0 R 326 0 R 330 0 R 326 0 R 331 0 R 326 0 R 332 0 R 326 0 R 333 0 R 326 0 R 335 0 R 336 0 R 338 0 R 339 0 R 340 0 R 339 0 R 341 0 R 339 0 R 342 0 R 339 0 R 343 0 R 339 0 R 344 0 R 339 0 R 345 0 R 339 0 R 346 0 R 339 0 R 348 0 R ] 17 [ 349 0 R 351 0 R 352 0 R 353 0 R 352 0 R 354 0 R 352 0 R 355 0 R 352 0 R 356 0 R 352 0 R 357 0 R 352 0 R 359 0 R 352 0 R 360 0 R 352 0 R 361 0 R 352 0 R 363 0 R 364 0 R 366 0 R 367 0 R 368 0 R 367 0 R 369 0 R 367 0 R 370 0 R 367 0 R 371 0 R 367 0 R 372 0 R 367 0 R 375 0 R 376 0 R 377 0 R 379 0 R 380 0 R 381 0 R 380 0 R 384 0 R ] 18 357 0 R 19 372 0 R 20 381 0 R 21 [ 385 0 R 386 0 R 388 0 R 389 0 R 391 0 R 392 0 R 394 0 R 395 0 R 397 0 R 398 0 R 400 0 R 401 0 R 402 0 R 404 0 R 405 0 R 406 0 R 408 0 R 409 0 R 410 0 R 409 0 R 411 0 R 409 0 R 412 0 R 409 0 R 414 0 R 409 0 R 415 0 R 409 0 R 416 0 R 409 0 R 417 0 R 409 0 R 418 0 R 409 0 R 419 0 R 409 0 R 422 0 R ] 22 412 0 R 23 419 0 R 24 [ 423 0 R 425 0 R 426 0 R 427 0 R 426 0 R 428 0 R 426 0 R 429 0 R 430 0 R 429 0 R 431 0 R 429 0 R 432 0 R 429 0 R 433 0 R 435 0 R 436 0 R 437 0 R 436 0 R 439 0 R 440 0 R 442 0 R 443 0 R 444 0 R 443 0 R 446 0 R 447 0 R 449 0 R 450 0 R 451 0 R 450 0 R 452 0 R 450 0 R 453 0 R 453 0 R 454 0 R 453 0 R 455 0 R 453 0 R 456 0 R 453 0 R 457 0 R 459 0 R 460 0 R 461 0 R 462 0 R 464 0 R 465 0 R 466 0 R 465 0 R ] 25 466 0 R 26 [ 469 0 R 470 0 R 471 0 R 470 0 R 472 0 R 474 0 R 475 0 R 477 0 R 478 0 R 479 0 R 478 0 R 482 0 R 483 0 R 484 0 R 483 0 R 485 0 R 483 0 R 486 0 R 483 0 R 487 0 R 483 0 R 489 0 R 490 0 R 491 0 R 493 0 R 494 0 R 495 0 R 494 0 R 496 0 R 494 0 R 497 0 R 494 0 R 498 0 R 494 0 R 499 0 R 494 0 R 501 0 R 502 0 R 504 0 R 505 0 R 506 0 R 505 0 R 507 0 R 505 0 R 509 0 R 505 0 R 510 0 R 505 0 R 512 0 R 505 0 R 515 0 R ] 27 479 0 R 28 507 0 R 29 512 0 R 30 [ 516 0 R 518 0 R 519 0 R 520 0 R 519 0 R 522 0 R 523 0 R 523 0 R 524 0 R 526 0 R 527 0 R 528 0 R 527 0 R 530 0 R 532 0 R 533 0 R 534 0 R 535 0 R 537 0 R 539 0 R 540 0 R 541 0 R 540 0 R 545 0 R 546 0 R 549 0 R 550 0 R 552 0 R 553 0 R 555 0 R 556 0 R 558 0 R 559 0 R 561 0 R 562 0 R 564 0 R 565 0 R 567 0 R 568 0 R 570 0 R 571 0 R ] 31 528 0 R 32 [ 572 0 R 573 0 R 572 0 R 574 0 R 575 0 R 576 0 R 577 0 R 576 0 R 578 0 R 576 0 R 579 0 R 576 0 R 580 0 R 580 0 R 580 0 R 581 0 R 582 0 R 583 0 R 584 0 R 583 0 R 585 0 R 586 0 R 585 0 R 588 0 R 585 0 R 590 0 R 591 0 R 590 0 R 590 0 R 590 0 R 590 0 R 590 0 R 592 0 R 593 0 R 592 0 R 594 0 R 592 0 R 595 0 R 592 0 R 596 0 R 597 0 R 596 0 R 598 0 R 596 0 R 599 0 R 600 0 R 601 0 R 600 0 R 603 0 R 605 0 R 606 0 R 608 0 R 610 0 R 611 0 R 612 0 R 611 0 R 614 0 R 616 0 R 617 0 R 619 0 R 621 0 R 622 0 R 623 0 R 622 0 R 624 0 R 625 0 R 627 0 R 629 0 R 630 0 R ] 33 588 0 R 34 [ 632 0 R 634 0 R 635 0 R 636 0 R 635 0 R 638 0 R 640 0 R 641 0 R 643 0 R 645 0 R 646 0 R 648 0 R 650 0 R 651 0 R 653 0 R 655 0 R 656 0 R 658 0 R 660 0 R 661 0 R 662 0 R 661 0 R 663 0 R 664 0 R 666 0 R 667 0 R 669 0 R 670 0 R 672 0 R 673 0 R 674 0 R 673 0 R 675 0 R 673 0 R 676 0 R 677 0 R 676 0 R 678 0 R 676 0 R 679 0 R 676 0 R 680 0 R 676 0 R 681 0 R ] 35 [ 683 0 R 684 0 R 685 0 R 684 0 R 686 0 R 684 0 R 687 0 R 684 0 R 688 0 R 684 0 R 689 0 R 684 0 R 690 0 R 692 0 R 693 0 R 694 0 R 693 0 R 697 0 R 698 0 R 700 0 R 701 0 R 702 0 R 701 0 R 703 0 R 701 0 R 704 0 R 706 0 R 707 0 R 709 0 R 710 0 R 712 0 R 713 0 R 714 0 R 713 0 R 715 0 R 713 0 R 716 0 R 713 0 R 718 0 R 713 0 R 719 0 R 721 0 R 722 0 R 723 0 R 722 0 R 724 0 R 722 0 R 725 0 R 722 0 R 728 0 R ] 36 694 0 R 37 716 0 R 38 725 0 R 39 [ 729 0 R 730 0 R 729 0 R 732 0 R 732 0 R 733 0 R 732 0 R 735 0 R 737 0 R 738 0 R 739 0 R 738 0 R 740 0 R 738 0 R 741 0 R 738 0 R 743 0 R 745 0 R 746 0 R 747 0 R 746 0 R 749 0 R 751 0 R 752 0 R 753 0 R 752 0 R 755 0 R 757 0 R 758 0 R 759 0 R 758 0 R 761 0 R 763 0 R 764 0 R 765 0 R 764 0 R 766 0 R 764 0 R 767 0 R 764 0 R 769 0 R 770 0 R 772 0 R 773 0 R 774 0 R 775 0 R 776 0 R 775 0 R ] 40 730 0 R 41 733 0 R 42 741 0 R 43 747 0 R 44 753 0 R 45 759 0 R 46 [ 777 0 R 779 0 R 780 0 R 781 0 R 780 0 R 782 0 R 780 0 R 783 0 R 780 0 R 784 0 R 780 0 R 785 0 R 780 0 R 786 0 R 787 0 R 786 0 R 788 0 R 790 0 R 791 0 R 793 0 R ] 47 [ 794 0 R 795 0 R 797 0 R 798 0 R 799 0 R 800 0 R 802 0 R 803 0 R 803 0 R 803 0 R 804 0 R 803 0 R 806 0 R 803 0 R 803 0 R 803 0 R 807 0 R 808 0 R 809 0 R 811 0 R 812 0 R 812 0 R 812 0 R 813 0 R 812 0 R 815 0 R 812 0 R 812 0 R 812 0 R ] 48 804 0 R 49 813 0 R 50 [ 816 0 R 817 0 R 819 0 R 820 0 R 821 0 R 820 0 R 823 0 R 824 0 R 825 0 R 825 0 R 825 0 R 827 0 R 828 0 R 829 0 R 828 0 R 832 0 R 828 0 R 834 0 R 834 0 R 835 0 R 834 0 R 837 0 R 834 0 R 838 0 R 834 0 R 839 0 R 834 0 R 840 0 R 834 0 R 841 0 R 834 0 R 842 0 R 844 0 R 845 0 R 846 0 R 845 0 R 848 0 R ] 51 830 0 R 52 832 0 R 53 835 0 R ]
  >>
>>
endobj

850 0 obj
<<
  /Count 6
  /Dest /Utility_methods
  /First 851 0 R
  /Last 855 0 R
  /Next 856 0 R
  /Prev 149 0 R
  /SE 244 0 R
  /Title (Utility methods)
>>
endobj

851 0 obj
<<
  /Count 1
  /Dest /method_Capture
  /Next 852 0 R
  /SE 245 0 R
  /Title (method Capture)
>>
endobj

852 0 obj
<<
  /Count 1
  /Dest /method_Channel
  /Next 853 0 R
  /Prev 851 0 R
  /SE 252 0 R
  /Title (method Channel)
>>
endobj

853 0 obj
<<
  /Count 1
  /Dest /method_Promise
  /Next 854 0 R
  /Prev 852 0 R
  /SE 259 0 R
  /Title (method Promise)
>>
endobj

854 0 obj
<<
  /Count 1
  /Dest /method_live
  /Next 855 0 R
  /Prev 853 0 R
  /SE 278 0 R
  /Title (method live)
>>
endobj

855 0 obj
<<
  /Count 1
  /Dest /method_schedule-on
  /Prev 854 0 R
  /SE 289 0 R
  /Title (method schedule-on)
>>
endobj

856 0 obj
<<
  /Count 9
  /Dest /Methods_that_wait_until_the_supply_is_done
  /First 857 0 R
  /Last 864 0 R
  /Next 865 0 R
  /Prev 850 0 R
  /SE 294 0 R
  /Title (Methods that wait until the supply is done)
>>
endobj

857 0 obj
<<
  /Count 1
  /Dest /method_wait
  /Next 858 0 R
  /SE 295 0 R
  /Title (method wait)
>>
endobj

858 0 obj
<<
  /Count 1
  /Dest /method_list
  /Next 859 0 R
  /Prev 857 0 R
  /SE 307 0 R
  /Title (method list)
>>
endobj

859 0 obj
<<
  /Count 1
  /Dest /method_Seq
  /Next 860 0 R
  /Prev 858 0 R
  /SE 317 0 R
  /Title (method Seq)
>>
endobj

860 0 obj
<<
  /Count 1
  /Dest /method_grab
  /Next 861 0 R
  /Prev 859 0 R
  /SE 323 0 R
  /Title (method grab)
>>
endobj

861 0 obj
<<
  /Count 1
  /Dest /method_reverse
  /Next 862 0 R
  /Prev 860 0 R
  /SE 336 0 R
  /Title (method reverse)
>>
endobj

862 0 obj
<<
  /Count 1
  /Dest /method_sort
  /Next 863 0 R
  /Prev 861 0 R
  /SE 349 0 R
  /Title (method sort)
>>
endobj

863 0 obj
<<
  /Count 1
  /Dest /method_collate
  /Next 864 0 R
  /Prev 862 0 R
  /SE 364 0 R
  /Title (method collate)
>>
endobj

864 0 obj
<<
  /Count 1
  /Dest /method_reduce
  /Prev 863 0 R
  /SE 376 0 R
  /Title (method reduce)
>>
endobj

865 0 obj
<<
  /Count 35
  /Dest /Methods_that_return_another_Supply
  /First 866 0 R
  /Last 899 0 R
  /Next 900 0 R
  /Prev 856 0 R
  /SE 385 0 R
  /Title (Methods that return another Supply)
>>
endobj

866 0 obj
<<
  /Count 1
  /Dest /method_from-list
  /Next 867 0 R
  /SE 386 0 R
  /Title (method from-list)
>>
endobj

867 0 obj
<<
  /Count 1
  /Dest /method_share
  /Next 868 0 R
  /Prev 866 0 R
  /SE 392 0 R
  /Title (method share)
>>
endobj

868 0 obj
<<
  /Count 1
  /Dest /method_flat
  /Next 869 0 R
  /Prev 867 0 R
  /SE 398 0 R
  /Title (method flat)
>>
endobj

869 0 obj
<<
  /Count 1
  /Dest /method_do
  /Next 870 0 R
  /Prev 868 0 R
  /SE 402 0 R
  /Title (method do)
>>
endobj

870 0 obj
<<
  /Count 1
  /Dest /method_on-close
  /Next 871 0 R
  /Prev 869 0 R
  /SE 406 0 R
  /Title (method on-close)
>>
endobj

871 0 obj
<<
  /Count 1
  /Dest /method_interval
  /Next 872 0 R
  /Prev 870 0 R
  /SE 423 0 R
  /Title (method interval)
>>
endobj

872 0 obj
<<
  /Count 1
  /Dest /method_grep
  /Next 873 0 R
  /Prev 871 0 R
  /SE 433 0 R
  /Title (method grep)
>>
endobj

873 0 obj
<<
  /Count 1
  /Dest /method_map
  /Next 874 0 R
  /Prev 872 0 R
  /SE 440 0 R
  /Title (method map)
>>
endobj

874 0 obj
<<
  /Count 1
  /Dest /method_batch
  /Next 875 0 R
  /Prev 873 0 R
  /SE 447 0 R
  /Title (method batch)
>>
endobj

875 0 obj
<<
  /Count 1
  /Dest /method_elems
  /Next 876 0 R
  /Prev 874 0 R
  /SE 457 0 R
  /Title (method elems)
>>
endobj

876 0 obj
<<
  /Count 1
  /Dest /method_head
  /Next 877 0 R
  /Prev 875 0 R
  /SE 461 0 R
  /Title (method head)
>>
endobj

877 0 obj
<<
  /Count 1
  /Dest /method_tail
  /Next 878 0 R
  /Prev 876 0 R
  /SE 475 0 R
  /Title (method tail)
>>
endobj

878 0 obj
<<
  /Count 1
  /Dest /method_first
  /Next 879 0 R
  /Prev 877 0 R
  /SE 491 0 R
  /Title (method first)
>>
endobj

879 0 obj
<<
  /Count 1
  /Dest /method_split
  /Next 880 0 R
  /Prev 878 0 R
  /SE 502 0 R
  /Title (method split)
>>
endobj

880 0 obj
<<
  /Count 1
  /Dest /method_rotate
  /Next 881 0 R
  /Prev 879 0 R
  /SE 516 0 R
  /Title (method rotate)
>>
endobj

881 0 obj
<<
  /Count 1
  /Dest /method_rotor
  /Next 882 0 R
  /Prev 880 0 R
  /SE 524 0 R
  /Title (method rotor)
>>
endobj

882 0 obj
<<
  /Count 1
  /Dest /method_delayed
  /Next 883 0 R
  /Prev 881 0 R
  /SE 530 0 R
  /Title (method delayed)
>>
endobj

883 0 obj
<<
  /Count 4
  /Dest /method_throttle
  /First 884 0 R
  /Last 886 0 R
  /Next 887 0 R
  /Prev 882 0 R
  /SE 534 0 R
  /Title (method throttle)
>>
endobj

884 0 obj
<<
  /Count 1
  /Dest /control_messages
  /Next 885 0 R
  /SE 599 0 R
  /Title (control messages)
>>
endobj

885 0 obj
<<
  /Count 1
  /Dest /status_message
  /Next 886 0 R
  /Prev 884 0 R
  /SE 624 0 R
  /Title (status message)
>>
endobj

886 0 obj
<< /Count 1 /Dest /Examples /Prev 885 0 R /SE 663 0 R /Title (Examples) >>
endobj

887 0 obj
<<
  /Count 1
  /Dest /method_stable
  /Next 888 0 R
  /Prev 883 0 R
  /SE 670 0 R
  /Title (method stable)
>>
endobj

888 0 obj
<<
  /Count 1
  /Dest /method_produce
  /Next 889 0 R
  /Prev 887 0 R
  /SE 690 0 R
  /Title (method produce)
>>
endobj

889 0 obj
<<
  /Count 1
  /Dest /method_lines
  /Next 890 0 R
  /Prev 888 0 R
  /SE 698 0 R
  /Title (method lines)
>>
endobj

890 0 obj
<<
  /Count 1
  /Dest /method_words
  /Next 891 0 R
  /Prev 889 0 R
  /SE 704 0 R
  /Title (method words)
>>
endobj

891 0 obj
<<
  /Count 1
  /Dest /method_unique
  /Next 892 0 R
  /Prev 890 0 R
  /SE 710 0 R
  /Title (method unique)
>>
endobj

892 0 obj
<<
  /Count 1
  /Dest /method_repeated
  /Next 893 0 R
  /Prev 891 0 R
  /SE 719 0 R
  /Title (method repeated)
>>
endobj

893 0 obj
<<
  /Count 1
  /Dest /method_squish
  /Next 894 0 R
  /Prev 892 0 R
  /SE 735 0 R
  /Title (method squish)
>>
endobj

894 0 obj
<<
  /Count 1
  /Dest /method_max
  /Next 895 0 R
  /Prev 893 0 R
  /SE 743 0 R
  /Title (method max)
>>
endobj

895 0 obj
<<
  /Count 1
  /Dest /method_min
  /Next 896 0 R
  /Prev 894 0 R
  /SE 749 0 R
  /Title (method min)
>>
endobj

896 0 obj
<<
  /Count 1
  /Dest /method_minmax
  /Next 897 0 R
  /Prev 895 0 R
  /SE 755 0 R
  /Title (method minmax)
>>
endobj

897 0 obj
<<
  /Count 1
  /Dest /method_skip
  /Next 898 0 R
  /Prev 896 0 R
  /SE 761 0 R
  /Title (method skip)
>>
endobj

898 0 obj
<<
  /Count 1
  /Dest /method_start
  /Next 899 0 R
  /Prev 897 0 R
  /SE 770 0 R
  /Title (method start)
>>
endobj

899 0 obj
<<
  /Count 1
  /Dest /method_migrate
  /Prev 898 0 R
  /SE 777 0 R
  /Title (method migrate)
>>
endobj

900 0 obj
<<
  /Count 4
  /Dest /Methods_that_combine_supplies
  /First 901 0 R
  /Last 903 0 R
  /Next 904 0 R
  /Prev 865 0 R
  /SE 794 0 R
  /Title (Methods that combine supplies)
>>
endobj

901 0 obj
<<
  /Count 1
  /Dest /method_merge
  /Next 902 0 R
  /SE 795 0 R
  /Title (method merge)
>>
endobj

902 0 obj
<<
  /Count 1
  /Dest /method_zip
  /Next 903 0 R
  /Prev 901 0 R
  /SE 799 0 R
  /Title (method zip)
>>
endobj

903 0 obj
<<
  /Count 1
  /Dest /method_zip-latest
  /Prev 902 0 R
  /SE 808 0 R
  /Title (method zip-latest)
>>
endobj

904 0 obj
<<
  /Count 3
  /Dest /I#2fO_features_exposed_as_supplies
  /First 905 0 R
  /Last 906 0 R
  /Next 907 0 R
  /Prev 900 0 R
  /SE 816 0 R
  /Title (I/O features exposed as supplies)
>>
endobj

905 0 obj
<<
  /Count 1
  /Dest /sub_signal
  /Next 906 0 R
  /SE 817 0 R
  /Title (sub signal)
>>
endobj

906 0 obj
<<
  /Count 1
  /Dest /method_IO::Notification.watch-path
  /Prev 905 0 R
  /SE 842 0 R
  /Title (method IO::Notification.watch-path)
>>
endobj

907 0 obj
<< /Count 2 /First 908 0 R /Last 908 0 R /Prev 904 0 R /Title (Index) >>
endobj

908 0 obj
<< /Count 1 /Dest /index-Signal /SE 825 0 R /Title (Signal) >>
endobj

xref
0 909
0000000000 65535 f 
0000000015 00000 n 
0000000313 00000 n 
0000000472 00000 n 
0000003134 00000 n 
0000003341 00000 n 
0000009914 00000 n 
0000010117 00000 n 
0000010402 00000 n 
0000010573 00000 n 
0000010642 00000 n 
0000010827 00000 n 
0000010932 00000 n 
0000011109 00000 n 
0000011180 00000 n 
0000011360 00000 n 
0000011422 00000 n 
0000011600 00000 n 
0000011666 00000 n 
0000011846 00000 n 
0000011913 00000 n 
0000012104 00000 n 
0000012187 00000 n 
0000012374 00000 n 
0000012461 00000 n 
0000020044 00000 n 
0000020092 00000 n 
0000020141 00000 n 
0000020249 00000 n 
0000020336 00000 n 
0000020453 00000 n 
0000020562 00000 n 
0000020672 00000 n 
0000020906 00000 n 
0000021082 00000 n 
0000021148 00000 n 
0000021324 00000 n 
0000021390 00000 n 
0000030773 00000 n 
0000030821 00000 n 
0000030870 00000 n 
0000031112 00000 n 
0000031296 00000 n 
0000031378 00000 n 
0000031554 00000 n 
0000031624 00000 n 
0000031800 00000 n 
0000031870 00000 n 
0000040325 00000 n 
0000040373 00000 n 
0000040422 00000 n 
0000040629 00000 n 
0000051022 00000 n 
0000051070 00000 n 
0000051119 00000 n 
0000051361 00000 n 
0000051537 00000 n 
0000051605 00000 n 
0000051783 00000 n 
0000051864 00000 n 
0000052046 00000 n 
0000052128 00000 n 
0000058216 00000 n 
0000058264 00000 n 
0000058313 00000 n 
0000058548 00000 n 
0000058717 00000 n 
0000058783 00000 n 
0000058954 00000 n 
0000059034 00000 n 
0000065767 00000 n 
0000065815 00000 n 
0000065864 00000 n 
0000066092 00000 n 
0000066271 00000 n 
0000066350 00000 n 
0000074690 00000 n 
0000074738 00000 n 
0000074787 00000 n 
0000075029 00000 n 
0000075208 00000 n 
0000075287 00000 n 
0000075469 00000 n 
0000075549 00000 n 
0000075726 00000 n 
0000075788 00000 n 
0000084582 00000 n 
0000084630 00000 n 
0000084679 00000 n 
0000084907 00000 n 
0000085088 00000 n 
0000085168 00000 n 
0000091654 00000 n 
0000091702 00000 n 
0000091751 00000 n 
0000091928 00000 n 
0000092109 00000 n 
0000092174 00000 n 
0000101147 00000 n 
0000101394 00000 n 
0000101579 00000 n 
0000101663 00000 n 
0000101842 00000 n 
0000101951 00000 n 
0000102131 00000 n 
0000102240 00000 n 
0000110998 00000 n 
0000111047 00000 n 
0000111097 00000 n 
0000111370 00000 n 
0000111546 00000 n 
0000111657 00000 n 
0000111833 00000 n 
0000111916 00000 n 
0000112096 00000 n 
0000112205 00000 n 
0000112386 00000 n 
0000112465 00000 n 
0000112646 00000 n 
0000112725 00000 n 
0000112909 00000 n 
0000112991 00000 n 
0000120799 00000 n 
0000120848 00000 n 
0000120898 00000 n 
0000121109 00000 n 
0000125533 00000 n 
0000125582 00000 n 
0000125632 00000 n 
0000125873 00000 n 
0000126052 00000 n 
0000126120 00000 n 
0000126299 00000 n 
0000126367 00000 n 
0000131113 00000 n 
0000131162 00000 n 
0000131212 00000 n 
0000131461 00000 n 
0000131639 00000 n 
0000131722 00000 n 
0000131895 00000 n 
0000132073 00000 n 
0000132156 00000 n 
0000138073 00000 n 
0000138122 00000 n 
0000138172 00000 n 
0000138221 00000 n 
0000138271 00000 n 
0000138334 00000 n 
0000138445 00000 n 
0000138629 00000 n 
0000138736 00000 n 
0000138843 00000 n 
0000138952 00000 n 
0000141289 00000 n 
0000141398 00000 n 
0000141545 00000 n 
0000141619 00000 n 
0000141700 00000 n 
0000141792 00000 n 
0000141871 00000 n 
0000141928 00000 n 
0000142017 00000 n 
0000142096 00000 n 
0000142154 00000 n 
0000142282 00000 n 
0000142354 00000 n 
0000142426 00000 n 
0000142498 00000 n 
0000142609 00000 n 
0000142681 00000 n 
0000142753 00000 n 
0000142908 00000 n 
0000142980 00000 n 
0000143052 00000 n 
0000143132 00000 n 
0000143190 00000 n 
0000143262 00000 n 
0000143334 00000 n 
0000143406 00000 n 
0000143480 00000 n 
0000143562 00000 n 
0000143701 00000 n 
0000143783 00000 n 
0000143863 00000 n 
0000143921 00000 n 
0000143993 00000 n 
0000144075 00000 n 
0000144155 00000 n 
0000144213 00000 n 
0000144295 00000 n 
0000144375 00000 n 
0000144433 00000 n 
0000144544 00000 n 
0000144616 00000 n 
0000144696 00000 n 
0000144754 00000 n 
0000144844 00000 n 
0000144924 00000 n 
0000144982 00000 n 
0000145104 00000 n 
0000145212 00000 n 
0000145286 00000 n 
0000145368 00000 n 
0000145457 00000 n 
0000145528 00000 n 
0000145693 00000 n 
0000145764 00000 n 
0000145835 00000 n 
0000145907 00000 n 
0000145979 00000 n 
0000146051 00000 n 
0000146123 00000 n 
0000146195 00000 n 
0000146340 00000 n 
0000146412 00000 n 
0000146484 00000 n 
0000146556 00000 n 
0000146628 00000 n 
0000146700 00000 n 
0000146889 00000 n 
0000146961 00000 n 
0000147041 00000 n 
0000147100 00000 n 
0000147172 00000 n 
0000147244 00000 n 
0000147316 00000 n 
0000147388 00000 n 
0000147460 00000 n 
0000147532 00000 n 
0000147604 00000 n 
0000147727 00000 n 
0000147799 00000 n 
0000147879 00000 n 
0000147938 00000 n 
0000148010 00000 n 
0000148084 00000 n 
0000148167 00000 n 
0000148247 00000 n 
0000148321 00000 n 
0000148404 00000 n 
0000148478 00000 n 
0000148561 00000 n 
0000148652 00000 n 
0000148724 00000 n 
0000148837 00000 n 
0000148949 00000 n 
0000149028 00000 n 
0000149102 00000 n 
0000149184 00000 n 
0000149273 00000 n 
0000149352 00000 n 
0000149411 00000 n 
0000149523 00000 n 
0000149597 00000 n 
0000149679 00000 n 
0000149790 00000 n 
0000149870 00000 n 
0000149929 00000 n 
0000150001 00000 n 
0000150114 00000 n 
0000150188 00000 n 
0000150271 00000 n 
0000150471 00000 n 
0000150551 00000 n 
0000150610 00000 n 
0000150682 00000 n 
0000150754 00000 n 
0000150826 00000 n 
0000150898 00000 n 
0000150970 00000 n 
0000151042 00000 n 
0000151114 00000 n 
0000151186 00000 n 
0000151258 00000 n 
0000151332 00000 n 
0000151415 00000 n 
0000151506 00000 n 
0000151578 00000 n 
0000151688 00000 n 
0000151762 00000 n 
0000151845 00000 n 
0000151990 00000 n 
0000152062 00000 n 
0000152134 00000 n 
0000152206 00000 n 
0000152278 00000 n 
0000152350 00000 n 
0000152424 00000 n 
0000152507 00000 n 
0000152624 00000 n 
0000152698 00000 n 
0000152781 00000 n 
0000152861 00000 n 
0000152941 00000 n 
0000153081 00000 n 
0000153190 00000 n 
0000153264 00000 n 
0000153346 00000 n 
0000153498 00000 n 
0000153569 00000 n 
0000153640 00000 n 
0000153711 00000 n 
0000153783 00000 n 
0000153855 00000 n 
0000153927 00000 n 
0000154001 00000 n 
0000154084 00000 n 
0000154194 00000 n 
0000154268 00000 n 
0000154351 00000 n 
0000154507 00000 n 
0000154579 00000 n 
0000154651 00000 n 
0000154723 00000 n 
0000154795 00000 n 
0000154867 00000 n 
0000154939 00000 n 
0000155048 00000 n 
0000155122 00000 n 
0000155205 00000 n 
0000155317 00000 n 
0000155389 00000 n 
0000155461 00000 n 
0000155571 00000 n 
0000155645 00000 n 
0000155728 00000 n 
0000155895 00000 n 
0000155967 00000 n 
0000156039 00000 n 
0000156111 00000 n 
0000156183 00000 n 
0000156255 00000 n 
0000156327 00000 n 
0000156399 00000 n 
0000156473 00000 n 
0000156556 00000 n 
0000156669 00000 n 
0000156743 00000 n 
0000156826 00000 n 
0000156993 00000 n 
0000157065 00000 n 
0000157137 00000 n 
0000157209 00000 n 
0000157281 00000 n 
0000157353 00000 n 
0000157425 00000 n 
0000157497 00000 n 
0000157571 00000 n 
0000157654 00000 n 
0000157763 00000 n 
0000157837 00000 n 
0000157919 00000 n 
0000158093 00000 n 
0000158164 00000 n 
0000158235 00000 n 
0000158306 00000 n 
0000158377 00000 n 
0000158457 00000 n 
0000158516 00000 n 
0000158588 00000 n 
0000158660 00000 n 
0000158732 00000 n 
0000158806 00000 n 
0000158889 00000 n 
0000159002 00000 n 
0000159076 00000 n 
0000159159 00000 n 
0000159304 00000 n 
0000159376 00000 n 
0000159448 00000 n 
0000159520 00000 n 
0000159592 00000 n 
0000159672 00000 n 
0000159731 00000 n 
0000159805 00000 n 
0000159888 00000 n 
0000160000 00000 n 
0000160080 00000 n 
0000160154 00000 n 
0000160237 00000 n 
0000160328 00000 n 
0000160408 00000 n 
0000160467 00000 n 
0000160541 00000 n 
0000160624 00000 n 
0000160756 00000 n 
0000160870 00000 n 
0000160944 00000 n 
0000161026 00000 n 
0000161105 00000 n 
0000161179 00000 n 
0000161261 00000 n 
0000161371 00000 n 
0000161445 00000 n 
0000161527 00000 n 
0000161606 00000 n 
0000161680 00000 n 
0000161762 00000 n 
0000161871 00000 n 
0000161945 00000 n 
0000162028 00000 n 
0000162108 00000 n 
0000162216 00000 n 
0000162290 00000 n 
0000162373 00000 n 
0000162453 00000 n 
0000162567 00000 n 
0000162641 00000 n 
0000162724 00000 n 
0000162913 00000 n 
0000162985 00000 n 
0000163057 00000 n 
0000163137 00000 n 
0000163196 00000 n 
0000163268 00000 n 
0000163340 00000 n 
0000163412 00000 n 
0000163484 00000 n 
0000163556 00000 n 
0000163636 00000 n 
0000163695 00000 n 
0000163769 00000 n 
0000163852 00000 n 
0000163965 00000 n 
0000164039 00000 n 
0000164121 00000 n 
0000164230 00000 n 
0000164301 00000 n 
0000164372 00000 n 
0000164493 00000 n 
0000164564 00000 n 
0000164636 00000 n 
0000164708 00000 n 
0000164818 00000 n 
0000164892 00000 n 
0000164975 00000 n 
0000165066 00000 n 
0000165138 00000 n 
0000165212 00000 n 
0000165295 00000 n 
0000165404 00000 n 
0000165478 00000 n 
0000165561 00000 n 
0000165652 00000 n 
0000165724 00000 n 
0000165798 00000 n 
0000165881 00000 n 
0000165992 00000 n 
0000166066 00000 n 
0000166149 00000 n 
0000166261 00000 n 
0000166333 00000 n 
0000166405 00000 n 
0000166531 00000 n 
0000166603 00000 n 
0000166675 00000 n 
0000166747 00000 n 
0000166858 00000 n 
0000166932 00000 n 
0000167015 00000 n 
0000167095 00000 n 
0000167205 00000 n 
0000167285 00000 n 
0000167359 00000 n 
0000167442 00000 n 
0000167533 00000 n 
0000167613 00000 n 
0000167672 00000 n 
0000167746 00000 n 
0000167828 00000 n 
0000167935 00000 n 
0000168006 00000 n 
0000168077 00000 n 
0000168151 00000 n 
0000168233 00000 n 
0000168342 00000 n 
0000168416 00000 n 
0000168498 00000 n 
0000168588 00000 n 
0000168667 00000 n 
0000168726 00000 n 
0000168800 00000 n 
0000168883 00000 n 
0000169017 00000 n 
0000169089 00000 n 
0000169161 00000 n 
0000169233 00000 n 
0000169305 00000 n 
0000169379 00000 n 
0000169462 00000 n 
0000169542 00000 n 
0000169653 00000 n 
0000169727 00000 n 
0000169810 00000 n 
0000169955 00000 n 
0000170027 00000 n 
0000170099 00000 n 
0000170171 00000 n 
0000170243 00000 n 
0000170315 00000 n 
0000170389 00000 n 
0000170472 00000 n 
0000170583 00000 n 
0000170657 00000 n 
0000170740 00000 n 
0000170885 00000 n 
0000170957 00000 n 
0000171037 00000 n 
0000171096 00000 n 
0000171168 00000 n 
0000171240 00000 n 
0000171322 00000 n 
0000171402 00000 n 
0000171461 00000 n 
0000171535 00000 n 
0000171618 00000 n 
0000171729 00000 n 
0000171803 00000 n 
0000171885 00000 n 
0000171974 00000 n 
0000172045 00000 n 
0000172119 00000 n 
0000172201 00000 n 
0000172282 00000 n 
0000172392 00000 n 
0000172466 00000 n 
0000172548 00000 n 
0000172639 00000 n 
0000172719 00000 n 
0000172778 00000 n 
0000172891 00000 n 
0000172965 00000 n 
0000173048 00000 n 
0000173128 00000 n 
0000173242 00000 n 
0000173322 00000 n 
0000173396 00000 n 
0000173479 00000 n 
0000173553 00000 n 
0000173636 00000 n 
0000173727 00000 n 
0000173799 00000 n 
0000173885 00000 n 
0000173963 00000 n 
0000174046 00000 n 
0000174127 00000 n 
0000174208 00000 n 
0000174350 00000 n 
0000174433 00000 n 
0000174514 00000 n 
0000174595 00000 n 
0000174678 00000 n 
0000174759 00000 n 
0000174840 00000 n 
0000174923 00000 n 
0000175004 00000 n 
0000175085 00000 n 
0000175168 00000 n 
0000175249 00000 n 
0000175330 00000 n 
0000175413 00000 n 
0000175494 00000 n 
0000175575 00000 n 
0000175658 00000 n 
0000175739 00000 n 
0000175820 00000 n 
0000175903 00000 n 
0000175984 00000 n 
0000176065 00000 n 
0000176148 00000 n 
0000176229 00000 n 
0000176310 00000 n 
0000176399 00000 n 
0000176470 00000 n 
0000176549 00000 n 
0000176628 00000 n 
0000176748 00000 n 
0000176819 00000 n 
0000176890 00000 n 
0000176962 00000 n 
0000177048 00000 n 
0000177128 00000 n 
0000177208 00000 n 
0000177299 00000 n 
0000177371 00000 n 
0000177483 00000 n 
0000177555 00000 n 
0000177637 00000 n 
0000177717 00000 n 
0000177776 00000 n 
0000177889 00000 n 
0000177961 00000 n 
0000178084 00000 n 
0000178156 00000 n 
0000178228 00000 n 
0000178300 00000 n 
0000178412 00000 n 
0000178484 00000 n 
0000178556 00000 n 
0000178671 00000 n 
0000178762 00000 n 
0000178834 00000 n 
0000178917 00000 n 
0000178999 00000 n 
0000179077 00000 n 
0000179157 00000 n 
0000179237 00000 n 
0000179320 00000 n 
0000179402 00000 n 
0000179480 00000 n 
0000179560 00000 n 
0000179651 00000 n 
0000179723 00000 n 
0000179806 00000 n 
0000179888 00000 n 
0000179966 00000 n 
0000180046 00000 n 
0000180126 00000 n 
0000180209 00000 n 
0000180291 00000 n 
0000180369 00000 n 
0000180449 00000 n 
0000180540 00000 n 
0000180612 00000 n 
0000180725 00000 n 
0000180805 00000 n 
0000180888 00000 n 
0000180970 00000 n 
0000181048 00000 n 
0000181128 00000 n 
0000181208 00000 n 
0000181291 00000 n 
0000181371 00000 n 
0000181449 00000 n 
0000181527 00000 n 
0000181615 00000 n 
0000181686 00000 n 
0000181769 00000 n 
0000181849 00000 n 
0000181927 00000 n 
0000182005 00000 n 
0000182083 00000 n 
0000182166 00000 n 
0000182246 00000 n 
0000182324 00000 n 
0000182402 00000 n 
0000182481 00000 n 
0000182564 00000 n 
0000182645 00000 n 
0000182723 00000 n 
0000182802 00000 n 
0000182881 00000 n 
0000182964 00000 n 
0000183045 00000 n 
0000183123 00000 n 
0000183202 00000 n 
0000183281 00000 n 
0000183364 00000 n 
0000183445 00000 n 
0000183523 00000 n 
0000183602 00000 n 
0000183692 00000 n 
0000183764 00000 n 
0000183858 00000 n 
0000183937 00000 n 
0000184011 00000 n 
0000184093 00000 n 
0000184172 00000 n 
0000184246 00000 n 
0000184328 00000 n 
0000184439 00000 n 
0000184513 00000 n 
0000184595 00000 n 
0000184706 00000 n 
0000184778 00000 n 
0000184850 00000 n 
0000184983 00000 n 
0000185055 00000 n 
0000185127 00000 n 
0000185199 00000 n 
0000185271 00000 n 
0000185350 00000 n 
0000185424 00000 n 
0000185506 00000 n 
0000185646 00000 n 
0000185717 00000 n 
0000185788 00000 n 
0000185859 00000 n 
0000185930 00000 n 
0000186002 00000 n 
0000186115 00000 n 
0000186189 00000 n 
0000186272 00000 n 
0000186363 00000 n 
0000186443 00000 n 
0000186502 00000 n 
0000186576 00000 n 
0000186659 00000 n 
0000186770 00000 n 
0000186844 00000 n 
0000186927 00000 n 
0000187039 00000 n 
0000187111 00000 n 
0000187183 00000 n 
0000187294 00000 n 
0000187368 00000 n 
0000187451 00000 n 
0000187531 00000 n 
0000187605 00000 n 
0000187688 00000 n 
0000187800 00000 n 
0000187874 00000 n 
0000187957 00000 n 
0000188091 00000 n 
0000188163 00000 n 
0000188235 00000 n 
0000188315 00000 n 
0000188375 00000 n 
0000188447 00000 n 
0000188561 00000 n 
0000188635 00000 n 
0000188718 00000 n 
0000188841 00000 n 
0000188913 00000 n 
0000188985 00000 n 
0000189065 00000 n 
0000189125 00000 n 
0000189199 00000 n 
0000189282 00000 n 
0000189372 00000 n 
0000189451 00000 n 
0000189512 00000 n 
0000189604 00000 n 
0000189683 00000 n 
0000189744 00000 n 
0000189856 00000 n 
0000189930 00000 n 
0000190013 00000 n 
0000190136 00000 n 
0000190208 00000 n 
0000190280 00000 n 
0000190360 00000 n 
0000190421 00000 n 
0000190531 00000 n 
0000190605 00000 n 
0000190689 00000 n 
0000190781 00000 n 
0000190861 00000 n 
0000190922 00000 n 
0000191032 00000 n 
0000191106 00000 n 
0000191190 00000 n 
0000191282 00000 n 
0000191362 00000 n 
0000191423 00000 n 
0000191536 00000 n 
0000191610 00000 n 
0000191694 00000 n 
0000191786 00000 n 
0000191866 00000 n 
0000191927 00000 n 
0000192038 00000 n 
0000192112 00000 n 
0000192196 00000 n 
0000192320 00000 n 
0000192392 00000 n 
0000192464 00000 n 
0000192536 00000 n 
0000192610 00000 n 
0000192694 00000 n 
0000192806 00000 n 
0000192880 00000 n 
0000192964 00000 n 
0000193045 00000 n 
0000193126 00000 n 
0000193218 00000 n 
0000193290 00000 n 
0000193403 00000 n 
0000193477 00000 n 
0000193560 00000 n 
0000193702 00000 n 
0000193773 00000 n 
0000193844 00000 n 
0000193915 00000 n 
0000193986 00000 n 
0000194058 00000 n 
0000194150 00000 n 
0000194222 00000 n 
0000194303 00000 n 
0000194377 00000 n 
0000194461 00000 n 
0000194542 00000 n 
0000194616 00000 n 
0000194700 00000 n 
0000194828 00000 n 
0000194939 00000 n 
0000195013 00000 n 
0000195096 00000 n 
0000195176 00000 n 
0000195285 00000 n 
0000195365 00000 n 
0000195439 00000 n 
0000195522 00000 n 
0000195644 00000 n 
0000195724 00000 n 
0000195785 00000 n 
0000195857 00000 n 
0000195938 00000 n 
0000196055 00000 n 
0000196136 00000 n 
0000196210 00000 n 
0000196294 00000 n 
0000196419 00000 n 
0000196499 00000 n 
0000196560 00000 n 
0000196632 00000 n 
0000196763 00000 n 
0000196872 00000 n 
0000196946 00000 n 
0000197029 00000 n 
0000197119 00000 n 
0000197190 00000 n 
0000197264 00000 n 
0000197347 00000 n 
0000197427 00000 n 
0000197512 00000 n 
0000197586 00000 n 
0000197670 00000 n 
0000197791 00000 n 
0000197863 00000 n 
0000197940 00000 n 
0000198001 00000 n 
0000198081 00000 n 
0000198142 00000 n 
0000198302 00000 n 
0000198382 00000 n 
0000198443 00000 n 
0000198515 00000 n 
0000198587 00000 n 
0000198659 00000 n 
0000198731 00000 n 
0000198803 00000 n 
0000198937 00000 n 
0000199011 00000 n 
0000199095 00000 n 
0000199187 00000 n 
0000199259 00000 n 
0000199333 00000 n 
0000199417 00000 n 
0000206238 00000 n 
0000206404 00000 n 
0000206519 00000 n 
0000206650 00000 n 
0000206781 00000 n 
0000206906 00000 n 
0000207029 00000 n 
0000207249 00000 n 
0000207358 00000 n 
0000207483 00000 n 
0000207606 00000 n 
0000207731 00000 n 
0000207862 00000 n 
0000207987 00000 n 
0000208118 00000 n 
0000208231 00000 n 
0000208436 00000 n 
0000208555 00000 n 
0000208682 00000 n 
0000208807 00000 n 
0000208928 00000 n 
0000209061 00000 n 
0000209194 00000 n 
0000209319 00000 n 
0000209442 00000 n 
0000209569 00000 n 
0000209696 00000 n 
0000209821 00000 n 
0000209946 00000 n 
0000210073 00000 n 
0000210200 00000 n 
0000210329 00000 n 
0000210456 00000 n 
0000210587 00000 n 
0000210753 00000 n 
0000210872 00000 n 
0000211003 00000 n 
0000211096 00000 n 
0000211225 00000 n 
0000211356 00000 n 
0000211483 00000 n 
0000211610 00000 n 
0000211739 00000 n 
0000211872 00000 n 
0000212001 00000 n 
0000212124 00000 n 
0000212247 00000 n 
0000212376 00000 n 
0000212501 00000 n 
0000212628 00000 n 
0000212743 00000 n 
0000212937 00000 n 
0000213048 00000 n 
0000213171 00000 n 
0000213292 00000 n 
0000213494 00000 n 
0000213601 00000 n 
0000213756 00000 n 
0000213847 00000 n 
trailer
<<
  /ID [ <67ac1119503732bc12da3fccb7d6498c> <67ac1119503732bc12da3fccb7d6498c> ]
  /Info 1 0 R
  /Root 2 0 R
  /Size 909
>>
startxref
213928
%%EOF