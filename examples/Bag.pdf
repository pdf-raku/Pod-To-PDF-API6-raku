%PDF-1.3
%¥±ë¼
1 0 obj
<<
  /CreationDate (D:20211228110402+13'00')
  /Creator (PDF::Class-0.4.18; PDF::Content-0.5.15; PDF-0.4.17; Raku-6.d; PDF::Tags-0.0.13; Pod::To::PDF-0.0.1)
  /Producer (PDF::API6-0.2.4)
  /Title (class Bag)
>>
endobj

2 0 obj
<<
  /Type /Catalog
  /Dests 3 0 R
  /Lang (en)
  /MarkInfo << /Marked true >>
  /Outlines 55 0 R
  /Pages 10 0 R
  /StructTreeRoot 121 0 R
>>
endobj

3 0 obj
<<
  /Creating_Bag_objects [ 4 0 R /FitBH 796 ]
  /Immutable_collection_of_distinct_objects_with_integer_weights [ 11 0 R /FitBH 730 ]
  /Note_on_reverse_and_ordering [ 45 0 R /FitBH 796 ]
  /Operators [ 35 0 R /FitBH 796 ]
  /See_also [ 49 0 R /FitBH 796 ]
  /Subroutines [ 41 0 R /FitBH 796 ]
  /class_Bag [ 11 0 R /FitBH 796 ]
  /sub_bag [ 41 0 R /FitBH 730 ]
>>
endobj

4 0 obj
<<
  /Type /Page
  /Annots [ 5 0 R 7 0 R ]
  /Contents 9 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 10 0 R
  /Resources <<
    /ExtGState << /GS1 53 0 R /GS2 54 0 R >>
    /Font << /F1 30 0 R /F2 31 0 R /F3 33 0 R >>
  >>
  /StructParents 9
>>
endobj

5 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 6 0 R
  /Border [ 0 0 0 ]
  /Contents (bag)
  /P 4 0 R
  /Rect [ 161.15 705 179.59 720 ]
  /StructParent 10
>>
endobj

6 0 obj
<< /Type /Action /S /GoTo /D /sub_bag >>
endobj

7 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 8 0 R
  /Border [ 0 0 0 ]
  /Contents (List)
  /P 4 0 R
  /Rect [ 458.31 529 477.87 544 ]
  /StructParent 11
>>
endobj

8 0 obj
<< /Type /Action /S /URI /URI (/type/List) >>
endobj

9 0 obj
<< /Length 7215 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Creating Bag objects) Tj
  ET
  q
    1 w
    20 750 m
    198.86 750 l
    S
  Q
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F2 10 Tf
    (Bag) Tj
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F3 10 Tf
    [ -2400 (s can be composed using the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 3 >> BDC
    BT
      1 0 0 1 20 708 Tm
      [ -14315 (bag) ] TJ
    ET
    q
      0.5 w
      163.15 707 m
      177.59 707 l
      S
    Q
  EMC
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 708 Tm
    [ -16009 ( subroutine \(or ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F2 10 Tf
    [ -22397 (Bag.new) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F3 10 Tf
    [ -27197 (, for which it is a shorthand\). Any positional parameters, regardless of) ] TJ
    11 TL
    T*
    (their type, become elements of the bag:) Tj
  ET
EMC
/Code << /MCID 7 >> BDC
  BT
    1 0 0 1 30 679.4 Tm
    /F2 8 Tf
    (my $n = bag "a" => 0, "b" => 1, "c" => 2, "c" => 2;) Tj
    8.8 TL
    T*
    (say $n.keys.raku;         OUTPUT: «\(:c\(2\), :b\(1\), :a\(0\)\).Seq») Tj
    T*
    (say $n.keys.map\(&WHAT\);   OUTPUT: «\(\(Pair\) \(Pair\) \(Pair\)\)») Tj
    T*
    (say $n.values.raku;       OUTPUT: «\(2, 1, 1\).Seq») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 651 562 39.2 re
  B
Q
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F3 10 Tf
    (Alternatively, the ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F2 10 Tf
    [ -7499 (.Bag) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F3 10 Tf
    [ -10499 ( coercer \(or its functional form, ) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F2 10 Tf
    [ -23551 (Bag\(\)) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F3 10 Tf
    [ -27151 (\) can be called on an existing object to coerce it to a ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F2 10 Tf
    [ -48424 (Bag) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F3 10 Tf
    [ -50824 (. Its semantics) ] TJ
    11 TL
    T*
    (depend on the type and contents of the object. In general it evaluates the object in list context and creates a bag with the resulting items as) Tj
    T*
    (elements, although for Hash-like objects or Pair items, only the keys become elements of the bag, and the \(cumulative\) values become the) Tj
    T*
    (associated integer weights:) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 30 580.4 Tm
    /F2 8 Tf
    (my $n = \("a" => 0, "b" => 1, "c" => 2, "c" => 2\).Bag;) Tj
    8.8 TL
    T*
    (say $n.keys.raku;         OUTPUT: «\("b", "c"\).Seq») Tj
    T*
    (say $n.keys.map\(&WHAT\);   OUTPUT: «\(\(Str\) \(Str\)\)») Tj
    T*
    (say $n.values.raku;       OUTPUT: «\(1, 4\).Seq») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 552 562 39.2 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 532 Tm
    /F3 10 Tf
    (Furthermore, you can get a ) Tj
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 532 Tm
    /F2 10 Tf
    [ -11303 (Bag) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 532 Tm
    /F3 10 Tf
    [ -13703 ( by using bag operators \(see next section\) on objects of other types such as ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 19 >> BDC
    BT
      1 0 0 1 20 532 Tm
      [ -44031 (List) ] TJ
    ET
    q
      0.5 w
      460.31 531 m
      475.87 531 l
      S
    Q
  EMC
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 532 Tm
    [ -45837 (, which will act like they) ] TJ
    11 TL
    T*
    (internally call ) Tj
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 521 Tm
    /F2 10 Tf
    [ -6027 (.Bag) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 521 Tm
    /F3 10 Tf
    [ -9027 ( on them before performing the operation. Be aware of the tight precedence of those operators though, which may) ] TJ
    T*
    (require you to use parentheses around arguments:) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 30 492.4 Tm
    /F2 8 Tf
    (say \(1..5\) \(+\) 4;   OUTPUT: «Bag\(1 2 3 4\(2\) 5\)») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 490.4 562 12.8 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    (Of course, you can also create a ) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 10 Tf
    [ -13245 (Bag) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -15645 ( with the ) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 10 Tf
    [ -19645 (.new) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -22645 ( method.) ] TJ
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 30 452.8 Tm
    /F2 8 Tf
    (my $breakfast = Bag.new\( <spam eggs spam spam bacon spam> \);) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 450.8 562 12.8 re
  B
Q
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 430.8 Tm
    /F3 10 Tf
    (Since 6.d \(2019.03 and later\) you can also use this syntax for parameterization of the ) Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 430.8 Tm
    /F2 10 Tf
    [ -34438 (Bag) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 430.8 Tm
    /F3 10 Tf
    [ -36838 (, to specify which type of values are acceptable:) ] TJ
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 413.2 Tm
    /F2 8 Tf
    ( only allow strings \(Str\) in the Bag) Tj
    8.8 TL
    T*
    (my $breakfast = Bag[Str].new\( <spam eggs spam spam bacon spam> \);) Tj
    T*
    [  ] TJ
    T*
    ( only allow whole numbers \(Int\) in the Bag) Tj
    T*
    (my $breakfast = Bag[Int].new\( <spam eggs spam spam bacon spam> \);) Tj
    T*
    ( Type check failed in binding; expected Int but got Str \("spam"\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 367.2 562 56.8 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 347.2 Tm
    /F3 10 Tf
    (Finally, you can create Bag masquerading as a hash by using the ) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 347.2 Tm
    /F2 10 Tf
    [ -26329 (is) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 347.2 Tm
    /F3 10 Tf
    [ -28129 ( trait:) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 329.6 Tm
    /F2 8 Tf
    (my %b is Bag = <a b c>;) Tj
    T*
    (say %b<a>;   True) Tj
    T*
    (say %b<d>;   False) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 310 562 30.4 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 290 Tm
    /F3 10 Tf
    (Since 6.d \(2019.03 and later\), this syntax also allows you to specify the type of values you would like to allow:) Tj
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 30 272.4 Tm
    /F2 8 Tf
    ( limit to strings) Tj
    T*
    (my %b is Bag[Str] = <a b c>;) Tj
    T*
    (say %b<a>;   True) Tj
    T*
    (say %b<d>;   False) Tj
    T*
    [  ] TJ
    T*
    ( limit to whole numbers) Tj
    T*
    (my %b is Bag[Int] = <a b c>;) Tj
    T*
    ( Type check failed in binding; expected Int but got Str \("a"\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 208.8 562 74.4 re
  B
Q
endstream
endobj

10 0 obj
<<
  /Type /Pages
  /Count 6
  /Kids [ 11 0 R 4 0 R 35 0 R 41 0 R 45 0 R 49 0 R ]
>>
endobj

11 0 obj
<<
  /Type /Page
  /Annots [ 12 0 R 14 0 R 16 0 R 17 0 R 19 0 R 21 0 R 23 0 R 25 0 R ]
  /Contents 27 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 10 0 R
  /Resources <<
    /ExtGState << /GS1 28 0 R /GS2 29 0 R >>
    /Font << /F1 30 0 R /F2 31 0 R /F3 33 0 R /F4 34 0 R >>
  >>
  /StructParents 0
>>
endobj

12 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 13 0 R
  /Border [ 0 0 0 ]
  /Contents (Associative)
  /P 11 0 R
  /Rect [ 235.62 634.6 286.28 649.6 ]
  /StructParent 1
>>
endobj

13 0 obj
<< /Type /Action /S /URI /URI (/type/Associative) >>
endobj

14 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 15 0 R
  /Border [ 0 0 0 ]
  /Contents (BagHash)
  /P 11 0 R
  /Rect [ 572.74 623.6 576.74 638.6 ]
  /StructParent 2
>>
endobj

15 0 obj
<< /Type /Action /S /URI /URI (/type/BagHash) >>
endobj

16 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 15 0 R
  /Border [ 0 0 0 ]
  /Contents (BagHash)
  /P 11 0 R
  /Rect [ 18 612.6 58.66 627.6 ]
  /StructParent 3
>>
endobj

17 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 18 0 R
  /Border [ 0 0 0 ]
  /Contents (.pick)
  /P 11 0 R
  /Rect [ 306.38 590.6 330.1 605.6 ]
  /StructParent 4
>>
endobj

18 0 obj
<< /Type /Action /S /URI /URI (/routine/pick) >>
endobj

19 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 20 0 R
  /Border [ 0 0 0 ]
  /Contents (.roll)
  /P 11 0 R
  /Rect [ 350.54 590.6 370.93 605.6 ]
  /StructParent 5
>>
endobj

20 0 obj
<< /Type /Action /S /URI /URI (/routine/roll) >>
endobj

21 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 22 0 R
  /Border [ 0 0 0 ]
  /Contents (===)
  /P 11 0 R
  /Rect [ 498.33 568.6 519.25 583.6 ]
  /StructParent 6
>>
endobj

22 0 obj
<< /Type /Action /S /URI /URI (/routine/===) >>
endobj

23 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 24 0 R
  /Border [ 0 0 0 ]
  /Contents ({ }\n\n postcircumfix operator)
  /P 11 0 R
  /Rect [ 214.74 454.2 329.71 469.2 ]
  /StructParent 7
>>
endobj

24 0 obj
<< /Type /Action /S /URI /URI (/language/operators#postcircumfix_{_}) >>
endobj

25 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 26 0 R
  /Border [ 0 0 0 ]
  /Contents (< > \n\n postcircumfix operator)
  /P 11 0 R
  /Rect [ 361.26 454.2 480.41 469.2 ]
  /StructParent 8
>>
endobj

26 0 obj
<< /Type /Action /S /URI /URI (/language/operators#postcircumfix_<_>) >>
endobj

27 0 obj
<< /Length 5660 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (class Bag) Tj
  ET
  q
    1 w
    20 750 m
    98.34 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (Immutable collection of distinct objects with integer weights) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (class Bag does Baggy { }) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 657.6 562 12.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (A ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 10 Tf
    [ -1222 (Bag) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -3622 ( is an immutable bag/multiset implementing ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 6 >> BDC
    BT
      1 0 0 1 20 637.6 Tm
      [ -21762 (Associative) ] TJ
    ET
    q
      0.5 w
      237.62 636.6 m
      284.28 636.6 l
      S
    Q
  EMC
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    [ -26678 (, meaning a collection of distinct elements in no particular order that each) ] TJ
    11 TL
    T*
    (have an integer weight assigned to them signifying how many copies of that element are considered "in the bag". \(For ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F4 10 Tf
    [ -47642 (mutable) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F3 10 Tf
    [ -51114 ( bags, see ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 626.6 Tm
      [ -55474 ] TJ
      T*
      (BagHash) Tj
    ET
    q
      0.5 w
      574.74 625.6 m
      574.74 625.6 l
      S
    Q
    q
      0.5 w
      20 614.6 m
      56.66 614.6 l
      S
    Q
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 615.6 Tm
    [ -3916 ( instead.\)) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 593.6 Tm
    /F2 10 Tf
    (Bag) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 593.6 Tm
    /F3 10 Tf
    [ -2400 (s are often used for performing weighted random selections - see ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 14 >> BDC
    BT
      1 0 0 1 20 593.6 Tm
      [ -28838 (.pick) ] TJ
    ET
    q
      0.5 w
      308.38 592.6 m
      328.1 592.6 l
      S
    Q
  EMC
Q
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 593.6 Tm
    [ -31060 ( and ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 16 >> BDC
    BT
      1 0 0 1 20 593.6 Tm
      [ -33254 (.roll) ] TJ
    ET
    q
      0.5 w
      352.54 592.6 m
      368.93 592.6 l
      S
    Q
  EMC
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 593.6 Tm
    [ -35143 (.) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    (Objects/values of any type are allowed as bag elements. Within a ) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F2 10 Tf
    [ -26578 (Bag) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F3 10 Tf
    [ -28978 (, items that would compare positively with the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 21 >> BDC
    BT
      1 0 0 1 20 571.6 Tm
      [ -48033 (===) ] TJ
    ET
    q
      0.5 w
      500.33 570.6 m
      517.25 570.6 l
      S
    Q
  EMC
Q
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    [ -49975 ( operator are) ] TJ
    T*
    (considered the same element, with the number of how many there are as its weight. But of course you can also easily get back the expanded) Tj
    T*
    (list of items \(without the order\):) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 30 532 Tm
    /F2 8 Tf
    (my $breakfast = bag <spam eggs spam spam bacon spam>;) Tj
    8.8 TL
    T*
    [  ] TJ
    T*
    (say $breakfast.elems;       OUTPUT: «3») Tj
    T*
    (say $breakfast.keys.sort;   OUTPUT: «bacon eggs spam») Tj
    T*
    [  ] TJ
    T*
    (say $breakfast.total;       OUTPUT: «6») Tj
    T*
    (say $breakfast.kxxv.sort;   OUTPUT: «bacon eggs spam spam spam spam») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 477.2 562 65.6 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    /F2 10 Tf
    (Bag) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    /F3 10 Tf
    [ -2400 (s can be treated as object hashes using the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 26 >> BDC
    BT
      1 0 0 1 20 457.2 Tm
      [ -19674 ({ }   postcircumfix operator) ] TJ
    ET
    q
      0.5 w
      216.74 456.2 m
      327.71 456.2 l
      S
    Q
  EMC
Q
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    [ -31021 (, or the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 28 >> BDC
    BT
      1 0 0 1 20 457.2 Tm
      [ -34326 (< >    postcircumfix operator) ] TJ
    ET
    q
      0.5 w
      363.26 456.2 m
      478.41 456.2 l
      S
    Q
  EMC
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    [ -46091 ( for literal string keys,) ] TJ
    11 TL
    T*
    (which returns the corresponding integer weight for keys that are elements of the bag, and ) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 446.2 Tm
    /F2 10 Tf
    [ -36131 (0) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 446.2 Tm
    /F3 10 Tf
    [ -37331 ( for keys that aren't:) ] TJ
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 30 428.6 Tm
    /F2 8 Tf
    (my $breakfast = bag <spam eggs spam spam bacon spam>;) Tj
    8.8 TL
    T*
    (say $breakfast<bacon>;     OUTPUT: «1») Tj
    T*
    (say $breakfast<spam>;      OUTPUT: «4») Tj
    T*
    (say $breakfast<sausage>;   OUTPUT: «0») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 400.2 562 39.2 re
  B
Q
endstream
endobj

28 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

29 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

30 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Bold
  /Encoding /WinAnsiEncoding
>>
endobj

31 0 obj
<< /Type /Font /Subtype /Type1 /BaseFont /Courier /Encoding 32 0 R >>
endobj

32 0 obj
<<
  /Type /Encoding
  /BaseEncoding /WinAnsiEncoding
  /Differences [ 1 /numbersign /propersubset /reflexsubset ]
>>
endobj

33 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Roman
  /Encoding /WinAnsiEncoding
>>
endobj

34 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Italic
  /Encoding /WinAnsiEncoding
>>
endobj

35 0 obj
<<
  /Type /Page
  /Annots [ 36 0 R ]
  /Contents 38 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 10 0 R
  /Resources <<
    /ExtGState << /GS1 39 0 R /GS2 40 0 R >>
    /Font << /F1 30 0 R /F2 33 0 R /F3 31 0 R >>
  >>
  /StructParents 12
>>
endobj

36 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 37 0 R
  /Border [ 0 0 0 ]
  /Contents (Operators with set semantics)
  /P 35 0 R
  /Rect [ 37.44 705 156.7 720 ]
  /StructParent 13
>>
endobj

37 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/setbagmix#Operators_with_set_semantics)
>>
endobj

38 0 obj
<< /Length 1607 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Operators) Tj
  ET
  q
    1 w
    20 750 m
    107.76 750 l
    S
  Q
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F2 10 Tf
    (See ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 2 >> BDC
    BT
      1 0 0 1 20 708 Tm
      [ -1944 (Operators with set semantics) ] TJ
    ET
    q
      0.5 w
      39.44 707 m
      154.7 707 l
      S
    Q
  EMC
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 708 Tm
    [ -13720 ( for a complete list of "set operators" applicable to, among other types, ) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F3 10 Tf
    [ -42476 (Bag) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F2 10 Tf
    [ -44876 (.) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 686 Tm
    (Examples:) Tj
  ET
EMC
/Code << /MCID 7 >> BDC
  BT
    1 0 0 1 30 668.4 Tm
    /F3 8 Tf
    (my \($a, $b\) = bag\(2, 2, 4\), bag\(2, 3, 3, 4\);) Tj
    8.8 TL
    T*
    [  ] TJ
    T*
    (say $a \(<\) $b;    OUTPUT: «False») Tj
    T*
    (say $a \(<=\) $b;   OUTPUT: «False») Tj
    T*
    (say $a \(^\) $b;    OUTPUT: «Bag\(3\(2\) 2\)») Tj
    T*
    (say $a \(+\) $b;    OUTPUT: «Bag\(2\(3\) 4\(2\) 3\(2\)\)») Tj
    T*
    [  ] TJ
    T*
    ( Unicode versions:) Tj
    T*
    (say $a  $b;   OUTPUT: «False») Tj
    T*
    (say $a  $b;   OUTPUT: «False») Tj
    T*
    (say $a  $b;   OUTPUT: «Bag\(3\(2\) 2\)») Tj
    T*
    (say $a  $b;   OUTPUT: «Bag\(2\(3\) 4\(2\) 3\(2\)\)») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 569.6 562 109.6 re
  B
Q
endstream
endobj

39 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

40 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

41 0 obj
<<
  /Type /Page
  /Contents 42 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 10 0 R
  /Resources <<
    /ExtGState << /GS1 43 0 R /GS2 44 0 R >>
    /Font << /F1 30 0 R /F2 31 0 R /F3 33 0 R >>
  >>
  /StructParents 14
>>
endobj

42 0 obj
<< /Length 894 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Subroutines) Tj
  ET
  q
    1 w
    20 750 m
    123.36 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (sub bag) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (sub bag\(*@args --> Bag\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 657.6 562 12.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (Creates a new ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 10 Tf
    [ -6109 (Bag) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -8509 ( from ) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 10 Tf
    [ -11203 (@args) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -14803 (.) ] TJ
  ET
EMC
endstream
endobj

43 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

44 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

45 0 obj
<<
  /Type /Page
  /Annots [ 46 0 R ]
  /Contents 48 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 10 0 R
  /Resources << /Font << /F1 30 0 R /F2 33 0 R /F3 31 0 R >> >>
  /StructParents 15
>>
endobj

46 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 47 0 R
  /Border [ 0 0 0 ]
  /Contents (Any)
  /P 45 0 R
  /Rect [ 142.44 705 163.66 720 ]
  /StructParent 16
>>
endobj

47 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_reverse) >>
endobj

48 0 obj
<< /Length 831 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Note on reverse and ordering) Tj
  ET
  q
    1 w
    20 750 m
    269.96 750 l
    S
  Q
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F2 10 Tf
    (This method is inherited from ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 2 >> BDC
    BT
      1 0 0 1 20 708 Tm
      [ -12444 (Any) ] TJ
    ET
    q
      0.5 w
      144.44 707 m
      161.66 707 l
      S
    Q
  EMC
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 708 Tm
    [ -14416 (, however, ) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F3 10 Tf
    [ -19109 (Mix) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F2 10 Tf
    [ -21509 (es do not have an inherent order and you should not trust it returning a consistent output.) ] TJ
  ET
EMC
endstream
endobj

49 0 obj
<<
  /Type /Page
  /Annots [ 50 0 R ]
  /Contents 52 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 10 0 R
  /Resources << /Font << /F1 30 0 R /F2 33 0 R >> >>
  /StructParents 17
>>
endobj

50 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 51 0 R
  /Border [ 0 0 0 ]
  /Contents (Sets, Bags, and Mixes)
  /P 49 0 R
  /Rect [ 18 705 110.61 720 ]
  /StructParent 18
>>
endobj

51 0 obj
<< /Type /Action /S /URI /URI (/language/setbagmix) >>
endobj

52 0 obj
<< /Length 351 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (See also) Tj
  ET
  q
    1 w
    20 750 m
    87.22 750 l
    S
  Q
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 1 >> BDC
    BT
      1 0 0 1 20 708 Tm
      /F2 10 Tf
      (Sets, Bags, and Mixes) Tj
    ET
    q
      0.5 w
      20 707 m
      108.61 707 l
      S
    Q
  EMC
Q
endstream
endobj

53 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

54 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

55 0 obj
<< /Count 8 /First 56 0 R /Last 127 0 R >>
endobj

56 0 obj
<<
  /Count 2
  /Dest /class_Bag
  /First 57 0 R
  /Last 57 0 R
  /Next 122 0 R
  /SE 60 0 R
  /Title (class Bag)
>>
endobj

57 0 obj
<<
  /Count 1
  /Dest /Immutable_collection_of_distinct_objects_with_integer_weights
  /SE 58 0 R
  /Title (Immutable collection of distinct objects with integer weights)
>>
endobj

58 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 59 0 R
  /Pg 11 0 R
  /T (Immutable collection of distinct objects with integer weights)
>>
endobj

59 0 obj
<<
  /Type /StructElem
  /S /Document
  /K [ 60 0 R 58 0 R 61 0 R 62 0 R 69 0 R 74 0 R 77 0 R 78 0 R 83 0 R 84 0 R 85 0 R 88 0 R 89 0 R 90 0 R 91 0 R 94 0 R 95 0 R 96 0 R 97 0 R 98 0 R 99 0 R 100 0 R 101 0 R 102 0 R 103 0 R 104 0 R 107 0 R 108 0 R 109 0 R 110 0 R 111 0 R 112 0 R 113 0 R 114 0 R 117 0 R 118 0 R ]
  /P 121 0 R
>>
endobj

60 0 obj
<< /Type /StructElem /S /H1 /K [ 0 ] /P 59 0 R /Pg 11 0 R /T (class Bag) >>
endobj

61 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 59 0 R /Pg 11 0 R >>
endobj

62 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 3 4 5 63 0 R 7 8 9 65 0 R 67 0 R 11 ]
  /P 59 0 R
  /Pg 11 0 R
>>
endobj

63 0 obj
<< /Type /StructElem /S /Link /K [ 64 0 R 6 ] /P 62 0 R >>
endobj

64 0 obj
<< /Type /OBJR /Obj 12 0 R /Pg 11 0 R >>
endobj

65 0 obj
<< /Type /StructElem /S /Link /K [ 66 0 R ] /P 62 0 R >>
endobj

66 0 obj
<< /Type /OBJR /Obj 14 0 R /Pg 11 0 R >>
endobj

67 0 obj
<< /Type /StructElem /S /Link /K [ 68 0 R 10 ] /P 62 0 R >>
endobj

68 0 obj
<< /Type /OBJR /Obj 16 0 R /Pg 11 0 R >>
endobj

69 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 12 13 70 0 R 15 72 0 R 17 ]
  /P 59 0 R
  /Pg 11 0 R
>>
endobj

70 0 obj
<< /Type /StructElem /S /Link /K [ 71 0 R 14 ] /P 69 0 R >>
endobj

71 0 obj
<< /Type /OBJR /Obj 17 0 R /Pg 11 0 R >>
endobj

72 0 obj
<< /Type /StructElem /S /Link /K [ 73 0 R 16 ] /P 69 0 R >>
endobj

73 0 obj
<< /Type /OBJR /Obj 19 0 R /Pg 11 0 R >>
endobj

74 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 18 19 20 75 0 R 22 ]
  /P 59 0 R
  /Pg 11 0 R
>>
endobj

75 0 obj
<< /Type /StructElem /S /Link /K [ 76 0 R 21 ] /P 74 0 R >>
endobj

76 0 obj
<< /Type /OBJR /Obj 21 0 R /Pg 11 0 R >>
endobj

77 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 59 0 R /Pg 11 0 R >>
endobj

78 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 24 25 79 0 R 27 81 0 R 29 30 31 ]
  /P 59 0 R
  /Pg 11 0 R
>>
endobj

79 0 obj
<< /Type /StructElem /S /Link /K [ 80 0 R 26 ] /P 78 0 R >>
endobj

80 0 obj
<< /Type /OBJR /Obj 23 0 R /Pg 11 0 R >>
endobj

81 0 obj
<< /Type /StructElem /S /Link /K [ 82 0 R 28 ] /P 78 0 R >>
endobj

82 0 obj
<< /Type /OBJR /Obj 25 0 R /Pg 11 0 R >>
endobj

83 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 59 0 R /Pg 11 0 R >>
endobj

84 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 59 0 R
  /Pg 4 0 R
  /T (Creating Bag objects)
>>
endobj

85 0 obj
<< /Type /StructElem /S /P /K [ 1 2 86 0 R 4 5 6 ] /P 59 0 R /Pg 4 0 R >>
endobj

86 0 obj
<< /Type /StructElem /S /Link /K [ 87 0 R 3 ] /P 85 0 R >>
endobj

87 0 obj
<< /Type /OBJR /Obj 5 0 R /Pg 4 0 R >>
endobj

88 0 obj
<< /Type /StructElem /S /Code /K [ 7 ] /P 59 0 R /Pg 4 0 R >>
endobj

89 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 8 9 10 11 12 13 14 ]
  /P 59 0 R
  /Pg 4 0 R
>>
endobj

90 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 59 0 R /Pg 4 0 R >>
endobj

91 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 16 17 18 92 0 R 20 21 22 ]
  /P 59 0 R
  /Pg 4 0 R
>>
endobj

92 0 obj
<< /Type /StructElem /S /Link /K [ 93 0 R 19 ] /P 91 0 R >>
endobj

93 0 obj
<< /Type /OBJR /Obj 7 0 R /Pg 4 0 R >>
endobj

94 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 59 0 R /Pg 4 0 R >>
endobj

95 0 obj
<< /Type /StructElem /S /P /K [ 24 25 26 27 28 ] /P 59 0 R /Pg 4 0 R >>
endobj

96 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 59 0 R /Pg 4 0 R >>
endobj

97 0 obj
<< /Type /StructElem /S /P /K [ 30 31 32 ] /P 59 0 R /Pg 4 0 R >>
endobj

98 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 59 0 R /Pg 4 0 R >>
endobj

99 0 obj
<< /Type /StructElem /S /P /K [ 34 35 36 ] /P 59 0 R /Pg 4 0 R >>
endobj

100 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 59 0 R /Pg 4 0 R >>
endobj

101 0 obj
<< /Type /StructElem /S /P /K [ 38 ] /P 59 0 R /Pg 4 0 R >>
endobj

102 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 59 0 R /Pg 4 0 R >>
endobj

103 0 obj
<< /Type /StructElem /S /H1 /K [ 0 ] /P 59 0 R /Pg 35 0 R /T (Operators) >>
endobj

104 0 obj
<< /Type /StructElem /S /P /K [ 1 105 0 R 3 4 5 ] /P 59 0 R /Pg 35 0 R >>
endobj

105 0 obj
<< /Type /StructElem /S /Link /K [ 106 0 R 2 ] /P 104 0 R >>
endobj

106 0 obj
<< /Type /OBJR /Obj 36 0 R /Pg 35 0 R >>
endobj

107 0 obj
<< /Type /StructElem /S /P /K [ 6 ] /P 59 0 R /Pg 35 0 R >>
endobj

108 0 obj
<< /Type /StructElem /S /Code /K [ 7 ] /P 59 0 R /Pg 35 0 R >>
endobj

109 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 59 0 R
  /Pg 41 0 R
  /T (Subroutines)
>>
endobj

110 0 obj
<< /Type /StructElem /S /H2 /K [ 1 ] /P 59 0 R /Pg 41 0 R /T (sub bag) >>
endobj

111 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 59 0 R /Pg 41 0 R >>
endobj

112 0 obj
<< /Type /StructElem /S /P /K [ 3 4 5 6 7 ] /P 59 0 R /Pg 41 0 R >>
endobj

113 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 59 0 R
  /Pg 45 0 R
  /T (Note on reverse and ordering)
>>
endobj

114 0 obj
<< /Type /StructElem /S /P /K [ 1 115 0 R 3 4 5 ] /P 59 0 R /Pg 45 0 R >>
endobj

115 0 obj
<< /Type /StructElem /S /Link /K [ 116 0 R 2 ] /P 114 0 R >>
endobj

116 0 obj
<< /Type /OBJR /Obj 46 0 R /Pg 45 0 R >>
endobj

117 0 obj
<< /Type /StructElem /S /H1 /K [ 0 ] /P 59 0 R /Pg 49 0 R /T (See also) >>
endobj

118 0 obj
<< /Type /StructElem /S /P /K [ 119 0 R ] /P 59 0 R >>
endobj

119 0 obj
<< /Type /StructElem /S /Link /K [ 120 0 R 1 ] /P 118 0 R /Pg 49 0 R >>
endobj

120 0 obj
<< /Type /OBJR /Obj 50 0 R /Pg 49 0 R >>
endobj

121 0 obj
<<
  /Type /StructTreeRoot
  /K [ 59 0 R ]
  /ParentTree <<
    /Nums [ 0 [ 60 0 R 58 0 R 61 0 R 62 0 R 62 0 R 62 0 R 63 0 R 62 0 R 62 0 R 62 0 R 67 0 R 62 0 R 69 0 R 69 0 R 70 0 R 69 0 R 72 0 R 69 0 R 74 0 R 74 0 R 74 0 R 75 0 R 74 0 R 77 0 R 78 0 R 78 0 R 79 0 R 78 0 R 81 0 R 78 0 R 78 0 R 78 0 R 83 0 R ] 1 63 0 R 2 65 0 R 3 67 0 R 4 70 0 R 5 72 0 R 6 75 0 R 7 79 0 R 8 81 0 R 9 [ 84 0 R 85 0 R 85 0 R 86 0 R 85 0 R 85 0 R 85 0 R 88 0 R 89 0 R 89 0 R 89 0 R 89 0 R 89 0 R 89 0 R 89 0 R 90 0 R 91 0 R 91 0 R 91 0 R 92 0 R 91 0 R 91 0 R 91 0 R 94 0 R 95 0 R 95 0 R 95 0 R 95 0 R 95 0 R 96 0 R 97 0 R 97 0 R 97 0 R 98 0 R 99 0 R 99 0 R 99 0 R 100 0 R 101 0 R 102 0 R ] 10 86 0 R 11 92 0 R 12 [ 103 0 R 104 0 R 105 0 R 104 0 R 104 0 R 104 0 R 107 0 R 108 0 R ] 13 105 0 R 14 [ 109 0 R 110 0 R 111 0 R 112 0 R 112 0 R 112 0 R 112 0 R 112 0 R ] 15 [ 113 0 R 114 0 R 115 0 R 114 0 R 114 0 R 114 0 R ] 16 115 0 R 17 [ 117 0 R 119 0 R ] 18 119 0 R ]
  >>
>>
endobj

122 0 obj
<<
  /Count 1
  /Dest /Creating_Bag_objects
  /Next 123 0 R
  /Prev 56 0 R
  /SE 84 0 R
  /Title (Creating Bag objects)
>>
endobj

123 0 obj
<<
  /Count 1
  /Dest /Operators
  /Next 124 0 R
  /Prev 122 0 R
  /SE 103 0 R
  /Title (Operators)
>>
endobj

124 0 obj
<<
  /Count 2
  /Dest /Subroutines
  /First 125 0 R
  /Last 125 0 R
  /Next 126 0 R
  /Prev 123 0 R
  /SE 109 0 R
  /Title (Subroutines)
>>
endobj

125 0 obj
<< /Count 1 /Dest /sub_bag /SE 110 0 R /Title (sub bag) >>
endobj

126 0 obj
<<
  /Count 1
  /Dest /Note_on_reverse_and_ordering
  /Next 127 0 R
  /Prev 124 0 R
  /SE 113 0 R
  /Title (Note on reverse and ordering)
>>
endobj

127 0 obj
<< /Count 1 /Dest /See_also /Prev 126 0 R /SE 117 0 R /Title (See also) >>
endobj

xref
0 128
0000000000 65535 f 
0000000015 00000 n 
0000000242 00000 n 
0000000401 00000 n 
0000000783 00000 n 
0000001042 00000 n 
0000001209 00000 n 
0000001266 00000 n 
0000001434 00000 n 
0000001496 00000 n 
0000008764 00000 n 
0000008866 00000 n 
0000009182 00000 n 
0000009363 00000 n 
0000009433 00000 n 
0000009610 00000 n 
0000009676 00000 n 
0000009848 00000 n 
0000010022 00000 n 
0000010088 00000 n 
0000010263 00000 n 
0000010329 00000 n 
0000010502 00000 n 
0000010567 00000 n 
0000010767 00000 n 
0000010857 00000 n 
0000011058 00000 n 
0000011148 00000 n 
0000016862 00000 n 
0000016910 00000 n 
0000016959 00000 n 
0000017067 00000 n 
0000017154 00000 n 
0000017289 00000 n 
0000017398 00000 n 
0000017508 00000 n 
0000017765 00000 n 
0000017958 00000 n 
0000018065 00000 n 
0000019726 00000 n 
0000019774 00000 n 
0000019823 00000 n 
0000020059 00000 n 
0000021006 00000 n 
0000021054 00000 n 
0000021103 00000 n 
0000021309 00000 n 
0000021479 00000 n 
0000021557 00000 n 
0000022441 00000 n 
0000022636 00000 n 
0000022820 00000 n 
0000022892 00000 n 
0000023296 00000 n 
0000023344 00000 n 
0000023393 00000 n 
0000023453 00000 n 
0000023587 00000 n 
0000023778 00000 n 
0000023935 00000 n 
0000024282 00000 n 
0000024375 00000 n 
0000024455 00000 n 
0000024576 00000 n 
0000024652 00000 n 
0000024710 00000 n 
0000024784 00000 n 
0000024842 00000 n 
0000024919 00000 n 
0000024977 00000 n 
0000025088 00000 n 
0000025165 00000 n 
0000025223 00000 n 
0000025300 00000 n 
0000025358 00000 n 
0000025462 00000 n 
0000025539 00000 n 
0000025597 00000 n 
0000025678 00000 n 
0000025795 00000 n 
0000025872 00000 n 
0000025930 00000 n 
0000026007 00000 n 
0000026065 00000 n 
0000026146 00000 n 
0000026261 00000 n 
0000026352 00000 n 
0000026428 00000 n 
0000026484 00000 n 
0000026563 00000 n 
0000026666 00000 n 
0000026746 00000 n 
0000026855 00000 n 
0000026932 00000 n 
0000026988 00000 n 
0000027068 00000 n 
0000027157 00000 n 
0000027237 00000 n 
0000027320 00000 n 
0000027400 00000 n 
0000027483 00000 n 
0000027564 00000 n 
0000027642 00000 n 
0000027723 00000 n 
0000027817 00000 n 
0000027909 00000 n 
0000027988 00000 n 
0000028047 00000 n 
0000028125 00000 n 
0000028206 00000 n 
0000028314 00000 n 
0000028406 00000 n 
0000028487 00000 n 
0000028573 00000 n 
0000028698 00000 n 
0000028790 00000 n 
0000028869 00000 n 
0000028928 00000 n 
0000029021 00000 n 
0000029094 00000 n 
0000029184 00000 n 
0000029243 00000 n 
0000030214 00000 n 
0000030355 00000 n 
0000030476 00000 n 
0000030634 00000 n 
0000030711 00000 n 
0000030870 00000 n 
trailer
<<
  /ID [ <652497e3fb8a88f37efe20c65dd751b2> <652497e3fb8a88f37efe20c65dd751b2> ]
  /Info 1 0 R
  /Root 2 0 R
  /Size 128
>>
startxref
30963
%%EOF