%PDF-1.3
%¥±ë¼
1 0 obj
<<
  /CreationDate (D:20211228110141+13'00')
  /Creator (PDF::Class-0.4.18; PDF::Content-0.5.15; PDF-0.4.17; Raku-6.d; PDF::Tags-0.0.13; Pod::To::PDF-0.0.1)
  /Producer (PDF::API6-0.2.4)
  /Title (class Supply)
>>
endobj

2 0 obj
<<
  /Type /Catalog
  /Dests 3 0 R
  /Lang (en)
  /MarkInfo << /Marked true >>
  /Outlines 151 0 R
  /Pages 22 0 R
  /StructTreeRoot 583 0 R
>>
endobj

3 0 obj
<<
  /Asynchronous_data_stream_with_multiple_subscribers [ 4 0 R /FitBH 730 ]
  /Examples [ 94 0 R /FitBH 357.1 ]
  /I#2fO_features_exposed_as_supplies [ 140 0 R /FitBH 796 ]
  /Methods_that_combine_supplies [ 132 0 R /FitBH 796 ]
  /Methods_that_return_Taps [ 23 0 R /FitBH 796 ]
  /Methods_that_return_another_Supply [ 59 0 R /FitBH 796 ]
  /Methods_that_wait_until_the_supply_is_done [ 45 0 R /FitBH 796 ]
  /Utility_methods [ 35 0 R /FitBH 796 ]
  /class_Supply [ 4 0 R /FitBH 796 ]
  /control_messages [ 90 0 R /FitBH 271 ]
  /method_Capture [ 35 0 R /FitBH 730 ]
  /method_Channel [ 35 0 R /FitBH 615.6 ]
  /method_IO::Notification.watch-path [ 140 0 R /FitBH 459.4 ]
  /method_Promise [ 35 0 R /FitBH 512.2 ]
  /method_Seq [ 45 0 R /FitBH 415.4 ]
  /method_act [ 23 0 R /FitBH 305.4 ]
  /method_batch [ 67 0 R /FitBH 360.4 ]
  /method_collate [ 49 0 R /FitBH 584.8 ]
  /method_delayed [ 82 0 R /FitBH 461.6 ]
  /method_do [ 59 0 R /FitBH 353.8 ]
  /method_elems [ 67 0 R /FitBH 224 ]
  /method_first [ 71 0 R /FitBH 327.4 ]
  /method_flat [ 59 0 R /FitBH 446.2 ]
  /method_from-list [ 59 0 R /FitBH 730 ]
  /method_grab [ 45 0 R /FitBH 323 ]
  /method_grep [ 67 0 R /FitBH 650.8 ]
  /method_head [ 71 0 R /FitBH 787.2 ]
  /method_interval [ 67 0 R /FitBH 787.2 ]
  /method_lines [ 98 0 R /FitBH 340.6 ]
  /method_list [ 45 0 R /FitBH 518.8 ]
  /method_live [ 35 0 R /FitBH 303.2 ]
  /method_map [ 67 0 R /FitBH 505.6 ]
  /method_max [ 104 0 R /FitBH 417.6 ]
  /method_merge [ 132 0 R /FitBH 730 ]
  /method_migrate [ 124 0 R /FitBH 483.6 ]
  /method_min [ 104 0 R /FitBH 303.2 ]
  /method_minmax [ 104 0 R /FitBH 188.8 ]
  /method_on-close [ 59 0 R /FitBH 250.4 ]
  /method_produce [ 98 0 R /FitBH 459.4 ]
  /method_reduce [ 49 0 R /FitBH 435.2 ]
  /method_repeated [ 104 0 R /FitBH 672.8 ]
  /method_reverse [ 45 0 R /FitBH 184.4 ]
  /method_rotate [ 82 0 R /FitBH 705.8 ]
  /method_rotor [ 82 0 R /FitBH 554 ]
  /method_schedule-on [ 35 0 R /FitBH 182.2 ]
  /method_share [ 59 0 R /FitBH 611.2 ]
  /method_skip [ 124 0 R /FitBH 787.2 ]
  /method_sort [ 49 0 R /FitBH 734.4 ]
  /method_split [ 71 0 R /FitBH 160.2 ]
  /method_squish [ 104 0 R /FitBH 510 ]
  /method_stable [ 98 0 R /FitBH 787.2 ]
  /method_start [ 124 0 R /FitBH 631 ]
  /method_tail [ 71 0 R /FitBH 562.8 ]
  /method_tap [ 23 0 R /FitBH 730 ]
  /method_throttle [ 82 0 R /FitBH 369.2 ]
  /method_unique [ 104 0 R /FitBH 787.2 ]
  /method_wait [ 45 0 R /FitBH 730 ]
  /method_words [ 98 0 R /FitBH 237.2 ]
  /method_zip [ 132 0 R /FitBH 626.6 ]
  /method_zip-latest [ 132 0 R /FitBH 457.2 ]
  /status_message [ 94 0 R /FitBH 730 ]
  /sub_signal [ 140 0 R /FitBH 730 ]
>>
endobj

4 0 obj
<<
  /Type /Page
  /Annots [ 5 0 R 7 0 R 9 0 R 11 0 R 13 0 R 15 0 R 17 0 R 19 0 R ]
  /Contents 21 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 148 0 R /GS2 149 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R /F4 150 0 R >>
  >>
  /StructParents 0
>>
endobj

5 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 6 0 R
  /Border [ 0 0 0 ]
  /Contents (Channel)
  /P 4 0 R
  /Rect [ 255.17 634.6 292.5 649.6 ]
  /StructParent 1
>>
endobj

6 0 obj
<< /Type /Action /S /URI /URI (/type/Channel) >>
endobj

7 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 8 0 R
  /Border [ 0 0 0 ]
  /Contents (Observer Pattern)
  /P 4 0 R
  /Rect [ 182.97 601.6 254.45 616.6 ]
  /StructParent 2
>>
endobj

8 0 obj
<<
  /Type /Action
  /S /URI
  /URI (https://en.wikipedia.org/wiki/Observer_pattern)
>>
endobj

9 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 10 0 R
  /Border [ 0 0 0 ]
  /Contents (Supplier)
  /P 4 0 R
  /Rect [ 194.99 491.6 232.88 506.6 ]
  /StructParent 3
>>
endobj

10 0 obj
<< /Type /Action /S /URI /URI (/type/Supplier) >>
endobj

11 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 12 0 R
  /Border [ 0 0 0 ]
  /Contents (live method)
  /P 4 0 R
  /Rect [ 38.55 414.6 90.05 429.6 ]
  /StructParent 4
>>
endobj

12 0 obj
<< /Type /Action /S /GoTo /D /method_live >>
endobj

13 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 14 0 R
  /Border [ 0 0 0 ]
  /Contents (interval)
  /P 4 0 R
  /Rect [ 327.7 414.6 362.25 429.6 ]
  /StructParent 5
>>
endobj

14 0 obj
<< /Type /Action /S /GoTo /D /method_interval >>
endobj

15 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 16 0 R
  /Border [ 0 0 0 ]
  /Contents (from-list)
  /P 4 0 R
  /Rect [ 368.25 414.6 407.25 429.6 ]
  /StructParent 6
>>
endobj

16 0 obj
<< /Type /Action /S /GoTo /D /method_from-list >>
endobj

17 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 18 0 R
  /Border [ 0 0 0 ]
  /Contents (Supplier::Preserving)
  /P 4 0 R
  /Rect [ 349.12 392.6 435.34 407.6 ]
  /StructParent 7
>>
endobj

18 0 obj
<< /Type /Action /S /URI /URI (/type/Supplier::Preserving) >>
endobj

19 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 20 0 R
  /Border [ 0 0 0 ]
  /Contents (concurrency page)
  /P 4 0 R
  /Rect [ 171.86 370.6 246.66 385.6 ]
  /StructParent 8
>>
endobj

20 0 obj
<< /Type /Action /S /URI /URI (/language/concurrency#Supplies) >>
endobj

21 0 obj
<< /Length 7964 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (class Supply) Tj
  ET
  q
    1 w
    20 750 m
    125.04 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (Asynchronous data stream with multiple subscribers) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (    class Supply does Awaitable {}) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 657.6 562 12.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (A supply is a thread-safe, asynchronous data stream like a ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 4 >> BDC
    BT
      1 0 0 1 20 637.6 Tm
      [ -23717 (Channel) ] TJ
    ET
    q
      0.5 w
      257.17 636.6 m
      290.5 636.6 l
      S
    Q
  EMC
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    [ -27300 (, but it can have multiple subscribers \() ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F4 10 Tf
    [ -42826 (taps) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -44743 (\) that all get the same values) ] TJ
    11 TL
    T*
    (flowing through the supply.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 604.6 Tm
    (It is a thread-safe implementation of the ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 9 >> BDC
    BT
      1 0 0 1 20 604.6 Tm
      [ -16497 (Observer Pattern) ] TJ
    ET
    q
      0.5 w
      184.97 603.6 m
      252.45 603.6 l
      S
    Q
  EMC
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 604.6 Tm
    [ -23495 (, and central to supporting reactive programming in Raku.) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    (There are two types of Supplies: ) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F2 10 Tf
    [ -13470 (live) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F3 10 Tf
    [ -16470 ( and ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F2 10 Tf
    [ -18664 (on demand) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F3 10 Tf
    [ -24664 (. When tapping into a ) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F2 10 Tf
    [ -33802 (live) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F3 10 Tf
    [ -36802 ( supply, the tap will only see values that are) ] TJ
    T*
    (flowing through the supply ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F1 10 Tf
    [ -11361 (after) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F3 10 Tf
    [ -13665 ( the tap has been created. Such supplies are normally infinite in nature, such as mouse movements. Closing) ] TJ
    T*
    (such a tap does not stop mouse events from occurring, it just means that the values will go by unseen. All tappers see the same flow of values.) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    (A tap on an ) Tj
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    /F2 10 Tf
    [ -5138 (on demand) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    /F3 10 Tf
    [ -11138 ( supply will initiate the production of values, and tapping the supply again may result in a new set of values. For) ] TJ
    T*
    (example, ) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F2 10 Tf
    [ -4138 (Supply.interval) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    [ -13738 ( produces a fresh timer with the appropriate interval each time it is tapped. If the tap is closed, the timer) ] TJ
    T*
    (simply stops emitting values to that tap.) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    (A ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F2 10 Tf
    [ -1222 (live) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -4222 ( ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F2 10 Tf
    [ -4722 (Supply) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -8922 ( is obtained from the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 30 >> BDC
    BT
      1 0 0 1 20 494.6 Tm
      [ -17699 (Supplier) ] TJ
    ET
    q
      0.5 w
      196.99 493.6 m
      230.88 493.6 l
      S
    Q
  EMC
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    [ -21338 ( factory method ) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F2 10 Tf
    [ -28170 (Supply) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -32370 (. New values are emitted by calling ) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F2 10 Tf
    [ -47006 (emit) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -50006 ( on the ) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F2 10 Tf
    [ -53228 ] TJ
    T*
    (Supplier) Tj
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F3 10 Tf
    [ -5400 ( object.) ] TJ
  ET
EMC
/Code << /MCID 38 >> BDC
  BT
    1 0 0 1 30 466 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply = $supplier.Supply;) Tj
    T*
    ($supply.tap\(-> $v { say "$v" }\);) Tj
    T*
    ($supplier.emit\(42\);  Will cause the tap to output "42") Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 437.6 562 39.2 re
  B
Q
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    (The ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 40 >> BDC
    BT
      1 0 0 1 20 417.6 Tm
      [ -2055 (live method) ] TJ
    ET
    q
      0.5 w
      40.55 416.6 m
      88.05 416.6 l
      S
    Q
  EMC
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    [ -7055 ( returns ) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F2 10 Tf
    [ -10582 (True) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    [ -13582 ( on live supplies. Factory methods such as ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 44 >> BDC
    BT
      1 0 0 1 20 417.6 Tm
      [ -30970 (interval) ] TJ
    ET
    q
      0.5 w
      329.7 416.6 m
      360.25 416.6 l
      S
    Q
  EMC
Q
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    [ -34275 (, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 46 >> BDC
    BT
      1 0 0 1 20 417.6 Tm
      [ -35025 (from-list) ] TJ
    ET
    q
      0.5 w
      370.25 416.6 m
      405.25 416.6 l
      S
    Q
  EMC
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    [ -38775 ( will return ) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F4 10 Tf
    [ -43719 (on demand) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    [ -48385 ( supplies.) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    (A live ) Tj
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    [ -2972 (Supply) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 10 Tf
    [ -7172 ( that keeps values until tapped the first time can be created with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 53 >> BDC
    BT
      1 0 0 1 20 395.6 Tm
      [ -33112 (Supplier::Preserving) ] TJ
    ET
    q
      0.5 w
      351.12 394.6 m
      433.34 394.6 l
      S
    Q
  EMC
Q
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    [ -41584 (.) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 373.6 Tm
    (Further examples can be found in the ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 56 >> BDC
    BT
      1 0 0 1 20 373.6 Tm
      [ -15386 (concurrency page) ] TJ
    ET
    q
      0.5 w
      173.86 372.6 m
      244.66 372.6 l
      S
    Q
  EMC
Q
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 373.6 Tm
    [ -22716 (.) ] TJ
  ET
EMC
endstream
endobj

22 0 obj
<<
  /Type /Pages
  /Count 17
  /Kids [ 4 0 R 23 0 R 35 0 R 45 0 R 49 0 R 59 0 R 67 0 R 71 0 R 82 0 R 90 0 R 94 0 R 98 0 R 104 0 R 124 0 R 128 0 R 132 0 R 140 0 R ]
>>
endobj

23 0 obj
<<
  /Type /Page
  /Annots [ 24 0 R 26 0 R ]
  /Contents 28 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 29 0 R /GS2 30 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 9
>>
endobj

24 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 25 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 23 0 R
  /Rect [ 181.02 476.2 200.57 491.2 ]
  /StructParent 10
>>
endobj

25 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

26 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 27 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 23 0 R
  /Rect [ 182.81 421.2 202.36 436.2 ]
  /StructParent 11
>>
endobj

27 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

28 0 obj
<< /Length 8970 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that return Taps) Tj
  ET
  q
    1 w
    20 750 m
    241.66 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method tap) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method tap\(Supply:D: &emit = -> $ { },) Tj
    8.8 TL
    T*
    (        :&done = -> {},) Tj
    T*
    (        :&quit = -> $ex { $ex.throw },) Tj
    T*
    (        :&tap = -> $ {} \)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 631.2 562 39.2 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 611.2 Tm
    /F3 10 Tf
    (Creates a new tap \(a kind of subscription if you will\), in addition to all existing taps. The first positional argument is a piece of code that will) Tj
    11 TL
    T*
    (be called when a new value becomes available through the ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 600.2 Tm
    /F2 10 Tf
    [ -23966 (emit) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 600.2 Tm
    /F3 10 Tf
    [ -26966 ( call.) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F2 10 Tf
    [ -2055 (&done) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F3 10 Tf
    [ -5655 ( callback can be called in a number of cases: if a supply block is being tapped, when a ) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F2 10 Tf
    [ -40564 (done) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F3 10 Tf
    [ -43564 ( routine is reached; if a supply) ] TJ
    T*
    (block is being tapped, it will be automatically triggered if the supply block reaches the end; if the ) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    /F2 10 Tf
    [ -39384 (done) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    /F3 10 Tf
    [ -42384 ( method is called on the parent ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    /F2 10 Tf
    [ -55160 ] TJ
    T*
    (Supplier) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F3 10 Tf
    [ -5400 ( \(in the case of a supply block, if there are multiple Suppliers referenced by ) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F2 10 Tf
    [ -36032 (whenever) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F3 10 Tf
    [ -41432 (, they must all have their ) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F2 10 Tf
    [ -51820 (done) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F3 10 Tf
    [ -54820 ] TJ
    T*
    (method invoked for this to trigger the ) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F2 10 Tf
    [ -15499 (&done) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F3 10 Tf
    [ -19099 ( callback of the tap as the block will then reach its end\).) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F2 10 Tf
    [ -2055 (&quit) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F3 10 Tf
    [ -5655 ( callback is called if the tap is on a supply block which exits with an error. It is also called if the ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F2 10 Tf
    [ -44455 (quit) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F3 10 Tf
    [ -47455 ( method is invoked on) ] TJ
    T*
    (the parent ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F2 10 Tf
    [ -4471 (Supplier) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F3 10 Tf
    [ -9871 ( \(in the case of a supply block any one ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F2 10 Tf
    [ -25729 (Supplier) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F3 10 Tf
    [ -31129 ( quitting with an uncaught exception will call the ) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F2 10 Tf
    [ -51239 (&quit) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F3 10 Tf
    [ -54839 ] TJ
    T*
    (callback as the block will exit with an error\). The error is passed as a parameter to the callback.) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    /F2 10 Tf
    [ -2055 (&tap) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    /F3 10 Tf
    [ -5055 ( callback is called once the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 35 >> BDC
    BT
      1 0 0 1 20 479.2 Tm
      [ -16302 (Tap) ] TJ
    ET
    q
      0.5 w
      183.02 478.2 m
      198.57 478.2 l
      S
    Q
  EMC
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    [ -18107 ( object is created, which is passed as a parameter to the callback. The callback is called ahead of ) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    /F2 10 Tf
    [ -57096 ] TJ
    T*
    (emit) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 10 Tf
    [ -3000 (/) ] TJ
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F2 10 Tf
    [ -3528 (done) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 10 Tf
    [ -6528 (/) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F2 10 Tf
    [ -7056 (quit) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 10 Tf
    [ -10056 (, providing a reliable way to get the ) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F2 10 Tf
    [ -24776 (Tap) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 10 Tf
    [ -27176 ( object. One case where this is useful is when the ) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F2 10 Tf
    [ -47311 (Supply) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 10 Tf
    [ -51511 ( begins) ] TJ
    T*
    (emitting values synchronously, since the call to ) Tj
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    /F2 10 Tf
    [ -19471 (.tap) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    /F3 10 Tf
    [ -22471 ( won't return the ) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    /F2 10 Tf
    [ -29511 (Tap) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    /F3 10 Tf
    [ -31911 ( object until it is done emitting, preventing it from being) ] TJ
    T*
    (stopped if needed.) Tj
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    (Method ) Tj
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F2 10 Tf
    [ -3611 (tap) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F3 10 Tf
    [ -6011 ( returns an object of type ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 54 >> BDC
    BT
      1 0 0 1 20 424.2 Tm
      [ -16481 (Tap) ] TJ
    ET
    q
      0.5 w
      184.81 423.2 m
      200.36 423.2 l
      S
    Q
  EMC
Q
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    [ -18286 (, on which you can call the ) ] TJ
  ET
EMC
/P << /MCID 56 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F2 10 Tf
    [ -29534 (close) ] TJ
  ET
EMC
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F3 10 Tf
    [ -33134 ( method to cancel the subscription.) ] TJ
  ET
EMC
/Code << /MCID 58 >> BDC
  BT
    1 0 0 1 30 406.6 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(0 .. 5\);) Tj
    8.8 TL
    T*
    (my $t = $s.tap\(-> $v { say $v }, done => { say "no more ticks" }\);) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 395.8 562 21.6 re
  B
Q
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 375.8 Tm
    /F3 10 Tf
    (Produces:) Tj
  ET
EMC
/Code << /MCID 60 >> BDC
  BT
    1 0 0 1 30 358.2 Tm
    /F2 8 Tf
    (0) Tj
    T*
    (1) Tj
    T*
    (2) Tj
    T*
    (3) Tj
    T*
    (4) Tj
    T*
    (5) Tj
    T*
    (no more ticks) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 303.4 562 65.6 re
  B
Q
/H2 << /MCID 61 >> BDC
  BT
    1 0 0 1 20 270.2 Tm
    /F1 16 Tf
    (method act) Tj
  ET
EMC
/Code << /MCID 62 >> BDC
  BT
    1 0 0 1 30 235 Tm
    /F2 8 Tf
    (method act\(Supply:D: &actor, *%others\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 233 562 12.8 re
  B
Q
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F3 10 Tf
    (Creates a tap on the given supply with the given code. Differently from ) Tj
  ET
EMC
/P << /MCID 64 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -29023 (tap) ] TJ
  ET
EMC
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F3 10 Tf
    [ -31423 (, the given code is guaranteed to be executed by only one thread) ] TJ
    11 TL
    T*
    (at a time.) Tj
  ET
EMC
endstream
endobj

29 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

30 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

31 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Bold
  /Encoding /WinAnsiEncoding
>>
endobj

32 0 obj
<< /Type /Font /Subtype /Type1 /BaseFont /Courier /Encoding 33 0 R >>
endobj

33 0 obj
<<
  /Type /Encoding
  /BaseEncoding /WinAnsiEncoding
  /Differences [ 1 /numbersign /infinity ]
>>
endobj

34 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Roman
  /Encoding /WinAnsiEncoding
>>
endobj

35 0 obj
<<
  /Type /Page
  /Annots [ 36 0 R 38 0 R 40 0 R ]
  /Contents 42 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 43 0 R /GS2 44 0 R >>
    /Font << /F1 31 0 R /F2 34 0 R /F3 32 0 R >>
  >>
  /StructParents 12
>>
endobj

36 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 37 0 R
  /Border [ 0 0 0 ]
  /Contents (.List.Capture)
  /P 35 0 R
  /Rect [ 106.33 612.6 162.55 627.6 ]
  /StructParent 13
>>
endobj

37 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_Capture) >>
endobj

38 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 39 0 R
  /Border [ 0 0 0 ]
  /Contents (Channel)
  /P 35 0 R
  /Rect [ 61.05 520.2 98.38 535.2 ]
  /StructParent 14
>>
endobj

39 0 obj
<< /Type /Action /S /URI /URI (/type/Channel) >>
endobj

40 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 41 0 R
  /Border [ 0 0 0 ]
  /Contents (Promise)
  /P 35 0 R
  /Rect [ 61.05 416.8 97.83 431.8 ]
  /StructParent 15
>>
endobj

41 0 obj
<< /Type /Action /S /URI /URI (/type/Promise) >>
endobj

42 0 obj
<< /Length 7951 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Utility methods) Tj
  ET
  q
    1 w
    20 750 m
    151.66 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method Capture) Tj
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 655.2 Tm
    /F2 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 30 637.6 Tm
    /F3 8 Tf
    (method Capture\(Supply:D: --> Capture:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 635.6 562 12.8 re
  B
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 615.6 Tm
    /F2 10 Tf
    (Equivalent to calling ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 5 >> BDC
    BT
      1 0 0 1 20 615.6 Tm
      [ -8833 (.List.Capture) ] TJ
    ET
    q
      0.5 w
      108.33 614.6 m
      160.55 614.6 l
      S
    Q
  EMC
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 615.6 Tm
    [ -14305 ( on the invocant.) ] TJ
  ET
EMC
/H2 << /MCID 7 >> BDC
  BT
    1 0 0 1 20 580.4 Tm
    /F1 16 Tf
    (method Channel) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 545.2 Tm
    /F3 8 Tf
    (method Channel\(Supply:D: --> Channel:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 543.2 562 12.8 re
  B
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F2 10 Tf
    (Returns a ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 523.2 Tm
      [ -4305 (Channel) ] TJ
    ET
    q
      0.5 w
      63.05 522.2 m
      96.38 522.2 l
      S
    Q
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    [ -7888 ( object that will receive all future values from the supply, and will be ) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F3 10 Tf
    [ -35995 (close) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F2 10 Tf
    [ -39595 (d when the Supply is done, and quit \(shut) ] TJ
    11 TL
    T*
    (down with error\) when the supply is quit.) Tj
  ET
EMC
/H2 << /MCID 14 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F1 16 Tf
    (method Promise) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 30 441.8 Tm
    /F3 8 Tf
    (method Promise\(Supply:D: --> Promise:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 439.8 562 12.8 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F2 10 Tf
    (Returns a ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 17 >> BDC
    BT
      1 0 0 1 20 419.8 Tm
      [ -4305 (Promise) ] TJ
    ET
    q
      0.5 w
      63.05 418.8 m
      95.83 418.8 l
      S
    Q
  EMC
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    [ -7833 ( that will be kept when the ) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F3 10 Tf
    [ -18943 (Supply) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F2 10 Tf
    [ -23143 ( is ) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F3 10 Tf
    [ -24560 (done) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F2 10 Tf
    [ -27560 (. If the ) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F3 10 Tf
    [ -30698 (Supply) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F2 10 Tf
    [ -34898 ( also emits any values, then the ) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F3 10 Tf
    [ -47869 (Promise) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F2 10 Tf
    [ -52669 ( will be) ] TJ
    T*
    (kept with the final value. Otherwise, it will be kept with ) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F3 10 Tf
    [ -22887 (Nil) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F2 10 Tf
    [ -25287 (. If the ) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F3 10 Tf
    [ -28425 (Supply) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F2 10 Tf
    [ -32625 ( ends with a ) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F3 10 Tf
    [ -37930 (quit) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F2 10 Tf
    [ -40930 ( instead of a ) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F3 10 Tf
    [ -46290 (done) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F2 10 Tf
    [ -49290 (, then the ) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F3 10 Tf
    [ -53484 ] TJ
    T*
    (Promise) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 397.8 Tm
    /F2 10 Tf
    [ -4800 ( will be broken with that exception.) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 380.2 Tm
    /F3 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $s = $supplier.Supply;) Tj
    T*
    (my $p = $s.Promise;) Tj
    T*
    ($p.then\(-> $v { say "got $v.result\(\)" }\);) Tj
    T*
    ($supplier.emit\('cha'\);          not output yet) Tj
    T*
    ($supplier.done\(\);               got cha) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 334.2 562 56.8 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F2 10 Tf
    (The ) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F3 10 Tf
    [ -2055 (Promise) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F2 10 Tf
    [ -6855 ( method is most useful when dealing with supplies that will tend to produce just one value, when only the final value is of) ] TJ
    11 TL
    T*
    (interest, or when only completion \(successful or not\) is relevant.) Tj
  ET
EMC
/H2 << /MCID 41 >> BDC
  BT
    1 0 0 1 20 268 Tm
    /F1 16 Tf
    (method live) Tj
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 30 232.8 Tm
    /F3 8 Tf
    (method live\(Supply:D: --> Bool:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 230.8 562 12.8 re
  B
Q
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F2 10 Tf
    (Returns ) Tj
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F3 10 Tf
    [ -3611 (True) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F2 10 Tf
    [ -6611 ( if the supply is "live", that is, values are emitted to taps as soon as they arrive. Always returns ) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F3 10 Tf
    [ -44867 (True) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F2 10 Tf
    [ -47867 ( in the default ) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F3 10 Tf
    [ -53894 ] TJ
    T*
    (Supply) Tj
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    /F2 10 Tf
    [ -4200 ( \(but for example on the supply returned from ) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    /F3 10 Tf
    [ -23030 (Supply.from-list) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    /F2 10 Tf
    [ -33230 ( it's ) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    /F3 10 Tf
    [ -35105 (False) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    /F2 10 Tf
    [ -38705 (\).) ] TJ
  ET
EMC
/Code << /MCID 54 >> BDC
  BT
    1 0 0 1 30 182.2 Tm
    /F3 8 Tf
    (say Supplier.new.Supply.live;     OUTPUT: «True») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 180.2 562 12.8 re
  B
Q
/H2 << /MCID 55 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F1 16 Tf
    (method schedule-on) Tj
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 30 111.8 Tm
    /F3 8 Tf
    (method schedule-on\(Supply:D: Scheduler $scheduler\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 109.8 562 12.8 re
  B
Q
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 89.8 Tm
    /F2 10 Tf
    (Runs the emit, done and quit callbacks on the specified scheduler.) Tj
  ET
EMC
/P << /MCID 58 >> BDC
  BT
    1 0 0 1 20 67.8 Tm
    (This is useful for GUI toolkits that require certain actions to be run from the GUI thread.) Tj
  ET
EMC
endstream
endobj

43 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

44 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

45 0 obj
<<
  /Type /Page
  /Contents 46 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 47 0 R /GS2 48 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 16
>>
endobj

46 0 obj
<< /Length 9162 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that wait until the supply is done) Tj
  ET
  q
    1 w
    20 750 m
    378.38 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method wait) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method wait\(Supply:D:\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 657.6 562 12.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -8116 ( it is called on, and blocks execution until the either the supply is ) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 10 Tf
    [ -34559 (done) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -37559 ( \(in which case it evaluates to the final value that) ] TJ
    11 TL
    T*
    (was emitted on the ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F2 10 Tf
    [ -8027 (Supply) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F3 10 Tf
    [ -12227 (, or ) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F2 10 Tf
    [ -14060 (Nil) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F3 10 Tf
    [ -16460 ( if not value was emitted\) or ) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F2 10 Tf
    [ -28236 (quit) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F3 10 Tf
    [ -31236 ( \(in which case it will throw the exception that was passed to ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F2 10 Tf
    [ -56066 ] TJ
    T*
    (quit) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 615.6 Tm
    /F3 10 Tf
    [ -3000 (\).) ] TJ
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 598 Tm
    /F2 8 Tf
    (my $s = Supplier.new;) Tj
    8.8 TL
    T*
    (start {) Tj
    T*
    (  sleep 1;) Tj
    T*
    (  say "One second: running.";) Tj
    T*
    (  sleep 1;) Tj
    T*
    (  $s.emit\(42\);) Tj
    T*
    (  $s.done;) Tj
    T*
    (}) Tj
    T*
    ($s.Supply.wait;) Tj
    T*
    (say "Two seconds: done";) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 516.8 562 92 re
  B
Q
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F1 16 Tf
    (method list) Tj
  ET
EMC
/Code << /MCID 18 >> BDC
  BT
    1 0 0 1 30 448.4 Tm
    /F2 8 Tf
    (multi method list\(Supply:D:\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 446.4 562 12.8 re
  B
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F3 10 Tf
    [ -8116 ( it is called on, and returns a lazy list that will be reified as the ) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F2 10 Tf
    [ -33446 (Supply) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F3 10 Tf
    [ -37646 ( emits values. The list will be terminated once) ] TJ
    11 TL
    T*
    (the ) Tj
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F2 10 Tf
    [ -1722 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F3 10 Tf
    [ -5922 ( is ) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F2 10 Tf
    [ -7339 (done) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F3 10 Tf
    [ -10339 (. If the ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F2 10 Tf
    [ -13477 (Supply) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F3 10 Tf
    [ -17677 ( ) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F2 10 Tf
    [ -18177 (quit) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F3 10 Tf
    [ -21177 (s, then an exception will be thrown once that point in the lazy list is reached.) ] TJ
  ET
EMC
/H2 << /MCID 32 >> BDC
  BT
    1 0 0 1 20 380.2 Tm
    /F1 16 Tf
    (method Seq) Tj
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 345 Tm
    /F2 8 Tf
    (method Seq\(Supply:D:\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 343 562 12.8 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 323 Tm
    /F3 10 Tf
    (Returns a ) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 323 Tm
    /F2 10 Tf
    [ -4305 (Seq) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 323 Tm
    /F3 10 Tf
    [ -6705 ( with an iterator containing the values that the ) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 323 Tm
    /F2 10 Tf
    [ -25536 (Supply) ] TJ
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 323 Tm
    /F3 10 Tf
    [ -29736 ( contains.) ] TJ
  ET
EMC
/H2 << /MCID 39 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F1 16 Tf
    (method grab) Tj
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 30 252.6 Tm
    /F2 8 Tf
    (method grab\(Supply:D: &when-done --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 250.6 562 12.8 re
  B
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 230.6 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 230.6 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 230.6 Tm
    /F3 10 Tf
    [ -8116 ( it is called on. When it is ) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 230.6 Tm
    /F2 10 Tf
    [ -18838 (done) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 230.6 Tm
    /F3 10 Tf
    [ -21838 (, calls ) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 230.6 Tm
    /F2 10 Tf
    [ -24671 (&when-done) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 230.6 Tm
    /F3 10 Tf
    [ -31271 ( and then emits the list of values that it returns on the result ) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 230.6 Tm
    /F2 10 Tf
    [ -55464 ] TJ
    T*
    (Supply) Tj
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 219.6 Tm
    /F3 10 Tf
    [ -4200 (. If the original ) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 219.6 Tm
    /F2 10 Tf
    [ -10699 (Supply) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 219.6 Tm
    /F3 10 Tf
    [ -14899 ( ) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 219.6 Tm
    /F2 10 Tf
    [ -15399 (quit) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 219.6 Tm
    /F3 10 Tf
    [ -18399 (s, then the exception is immediately conveyed on the return ) ] TJ
  ET
EMC
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 219.6 Tm
    /F2 10 Tf
    [ -42729 (Supply) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 219.6 Tm
    /F3 10 Tf
    [ -46929 (.) ] TJ
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 30 202 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $t = $s.grab\(&sum\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «19») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 182.4 562 30.4 re
  B
Q
/H2 << /MCID 57 >> BDC
  BT
    1 0 0 1 20 149.2 Tm
    /F1 16 Tf
    (method reverse) Tj
  ET
EMC
/Code << /MCID 58 >> BDC
  BT
    1 0 0 1 30 114 Tm
    /F2 8 Tf
    (method reverse\(Supply:D: --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 112 562 12.8 re
  B
Q
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 92 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 60 >> BDC
  BT
    1 0 0 1 20 92 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 61 >> BDC
  BT
    1 0 0 1 20 92 Tm
    /F3 10 Tf
    [ -8116 ( it is called on. Once that ) ] TJ
  ET
EMC
/P << /MCID 62 >> BDC
  BT
    1 0 0 1 20 92 Tm
    /F2 10 Tf
    [ -18587 (Supply) ] TJ
  ET
EMC
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 92 Tm
    /F3 10 Tf
    [ -22787 ( emits ) ] TJ
  ET
EMC
/P << /MCID 64 >> BDC
  BT
    1 0 0 1 20 92 Tm
    /F2 10 Tf
    [ -25704 (done) ] TJ
  ET
EMC
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 92 Tm
    /F3 10 Tf
    [ -28704 (, all of the values it emitted will be emitted on the returned ) ] TJ
  ET
EMC
/P << /MCID 66 >> BDC
  BT
    1 0 0 1 20 92 Tm
    /F2 10 Tf
    [ -52674 (Supply) ] TJ
  ET
EMC
/P << /MCID 67 >> BDC
  BT
    1 0 0 1 20 92 Tm
    /F3 10 Tf
    [ -56874 ] TJ
    11 TL
    T*
    (in reverse order. If the original ) Tj
  ET
EMC
/P << /MCID 68 >> BDC
  BT
    1 0 0 1 20 81 Tm
    /F2 10 Tf
    [ -12774 (Supply) ] TJ
  ET
EMC
/P << /MCID 69 >> BDC
  BT
    1 0 0 1 20 81 Tm
    /F3 10 Tf
    [ -16974 ( ) ] TJ
  ET
EMC
/P << /MCID 70 >> BDC
  BT
    1 0 0 1 20 81 Tm
    /F2 10 Tf
    [ -17474 (quit) ] TJ
  ET
EMC
/P << /MCID 71 >> BDC
  BT
    1 0 0 1 20 81 Tm
    /F3 10 Tf
    [ -20474 (s, then the exception is immediately conveyed on the return ) ] TJ
  ET
EMC
/P << /MCID 72 >> BDC
  BT
    1 0 0 1 20 81 Tm
    /F2 10 Tf
    [ -44804 (Supply) ] TJ
  ET
EMC
/P << /MCID 73 >> BDC
  BT
    1 0 0 1 20 81 Tm
    /F3 10 Tf
    [ -49004 (.) ] TJ
  ET
EMC
endstream
endobj

47 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

48 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

49 0 obj
<<
  /Type /Page
  /Annots [ 50 0 R 52 0 R 54 0 R ]
  /Contents 56 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 57 0 R /GS2 58 0 R >>
    /Font << /F1 32 0 R /F2 31 0 R /F3 34 0 R >>
  >>
  /StructParents 17
>>
endobj

50 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 51 0 R
  /Border [ 0 0 0 ]
  /Contents (Block)
  /P 49 0 R
  /Rect [ 340.77 628 368.66 643 ]
  /StructParent 18
>>
endobj

51 0 obj
<< /Type /Action /S /URI /URI (/type/Block) >>
endobj

52 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 53 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.collate)
  /P 49 0 R
  /Rect [ 423.81 478.4 474.19 493.4 ]
  /StructParent 19
>>
endobj

53 0 obj
<< /Type /Action /S /URI /URI (/type/Any#method_collate) >>
endobj

54 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 55 0 R
  /Border [ 0 0 0 ]
  /Contents (List.reduce)
  /P 49 0 R
  /Rect [ 370.84 317.8 419.55 332.8 ]
  /StructParent 20
>>
endobj

55 0 obj
<< /Type /Action /S /URI /URI (/type/List#routine_reduce) >>
endobj

56 0 obj
<< /Length 6010 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 8 Tf
    (my $s = Supply.from-list\(1, 2, 3\);) Tj
    8.8 TL
    T*
    (my $t = $s.reverse;) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «321») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 732.4 562 30.4 re
  B
Q
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 699.2 Tm
    /F2 16 Tf
    (method sort) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 664 Tm
    /F1 8 Tf
    (method sort\(Supply:D: &custom-routine-to-use? --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 662 562 12.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F1 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F3 10 Tf
    [ -8116 ( it is called on. Once that ) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F1 10 Tf
    [ -18587 (Supply) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F3 10 Tf
    [ -22787 ( emits ) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F1 10 Tf
    [ -25704 (done) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F3 10 Tf
    [ -28704 (, all of the values that it emitted will be sorted, and the results emitted) ] TJ
    11 TL
    T*
    (on the returned ) Tj
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F1 10 Tf
    [ -6554 (Supply) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F3 10 Tf
    [ -10754 ( in the sorted order. Optionally accepts a comparator ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 12 >> BDC
    BT
      1 0 0 1 20 631 Tm
      [ -32277 (Block) ] TJ
    ET
    q
      0.5 w
      342.77 630 m
      366.66 630 l
      S
    Q
  EMC
Q
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 631 Tm
    [ -34916 (. If the original ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F1 10 Tf
    [ -41415 (Supply) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F3 10 Tf
    [ -45615 ( ) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F1 10 Tf
    [ -46115 (quit) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F3 10 Tf
    [ -49115 (s, then the) ] TJ
    T*
    (exception is immediately conveyed on the return ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 620 Tm
    /F1 10 Tf
    [ -19997 (Supply) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 620 Tm
    /F3 10 Tf
    [ -24197 (.) ] TJ
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 30 602.4 Tm
    /F1 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $t = $s.sort\(\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «23410») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 582.8 562 30.4 re
  B
Q
/H2 << /MCID 21 >> BDC
  BT
    1 0 0 1 20 549.6 Tm
    /F2 16 Tf
    (method collate) Tj
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 30 514.4 Tm
    /F1 8 Tf
    (method collate\(Supply:D:\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 512.4 562 12.8 re
  B
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F1 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F3 10 Tf
    [ -8116 ( it is called on. Once that ) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F1 10 Tf
    [ -18587 (Supply) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F3 10 Tf
    [ -22787 ( emits ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F1 10 Tf
    [ -25704 (done) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F3 10 Tf
    [ -28704 (, all of the values that it emitted will be sorted taking into account) ] TJ
    11 TL
    T*
    (Unicode grapheme characteristics. A new ) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F1 10 Tf
    [ -17189 (Supply) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F3 10 Tf
    [ -21389 ( is returned with the sorted values emitted. See ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 32 >> BDC
    BT
      1 0 0 1 20 481.4 Tm
      [ -40581 (Any.collate) ] TJ
    ET
    q
      0.5 w
      425.81 480.4 m
      472.19 480.4 l
      S
    Q
  EMC
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    [ -45469 ( for more details on the) ] TJ
    T*
    (collated sort.) Tj
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 30 452.8 Tm
    /F1 8 Tf
    (my $s = Supply.from-list\(<ä a o ö>\);) Tj
    8.8 TL
    T*
    (my $t = $s.collate\(\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «aäoö») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 433.2 562 30.4 re
  B
Q
/H2 << /MCID 35 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F2 16 Tf
    (method reduce) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 360.4 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 342.8 Tm
    /F1 8 Tf
    (method reduce\(Supply:D: &with --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 340.8 562 12.8 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 320.8 Tm
    /F3 10 Tf
    (Creates a "reducing" supply, which will emit a single value with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 39 >> BDC
    BT
      1 0 0 1 20 320.8 Tm
      [ -35284 (List.reduce) ] TJ
    ET
    q
      0.5 w
      372.84 319.8 m
      417.55 319.8 l
      S
    Q
  EMC
Q
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 320.8 Tm
    [ -40005 (.) ] TJ
  ET
EMC
/Code << /MCID 41 >> BDC
  BT
    1 0 0 1 30 303.2 Tm
    /F1 8 Tf
    (my $supply = Supply.from-list\(1..5\).reduce\({$^a + $^b}\);) Tj
    T*
    ($supply.tap\(-> $v { say "$v" }\);  OUTPUT: «15») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 292.4 562 21.6 re
  B
Q
endstream
endobj

57 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

58 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

59 0 obj
<<
  /Type /Page
  /Annots [ 60 0 R 62 0 R ]
  /Contents 64 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 65 0 R /GS2 66 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 21
>>
endobj

60 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 61 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 59 0 R
  /Rect [ 301.35 155 320.9 170 ]
  /StructParent 22
>>
endobj

61 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

62 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 63 0 R
  /Border [ 0 0 0 ]
  /Contents (CLOSE)
  /P 59 0 R
  /Rect [ 86.61 133 122.28 148 ]
  /StructParent 23
>>
endobj

63 0 obj
<< /Type /Action /S /URI /URI (/language/phasers#CLOSE) >>
endobj

64 0 obj
<< /Length 6065 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that return another Supply) Tj
  ET
  q
    1 w
    20 750 m
    331.12 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method from-list) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method from-list\(Supply:U: +@values --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 657.6 562 12.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (Creates an on-demand supply from the values passed to this method.) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 30 620 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(1, 2, 3\);) Tj
    8.8 TL
    T*
    ($s.tap\(&say\);            OUTPUT: «123») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 609.2 562 21.6 re
  B
Q
/H2 << /MCID 5 >> BDC
  BT
    1 0 0 1 20 576 Tm
    /F1 16 Tf
    (method share) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 540.8 Tm
    /F2 8 Tf
    (method share\(Supply:D: --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 538.8 562 12.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 518.8 Tm
    /F3 10 Tf
    (Creates a live supply from an on-demand supply, thus making it possible to share the values of the on-demand supply on multiple taps, instead) Tj
    11 TL
    T*
    (of each tap seeing its own copy of all values from the on-demand supply.) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 490.2 Tm
    /F2 8 Tf
    ( this says in turn: "first 1" "first 2" "second 2" "first 3" "second 3") Tj
    8.8 TL
    T*
    (my $s = Supply.interval\(1\).share;) Tj
    T*
    ($s.tap: { "first $_".say };) Tj
    T*
    (sleep 1.1;) Tj
    T*
    ($s.tap: { "second $_".say };) Tj
    T*
    (sleep 2) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 444.2 562 56.8 re
  B
Q
/H2 << /MCID 9 >> BDC
  BT
    1 0 0 1 20 411 Tm
    /F1 16 Tf
    (method flat) Tj
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 30 375.8 Tm
    /F2 8 Tf
    (method flat\(Supply:D: --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 373.8 562 12.8 re
  B
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 353.8 Tm
    /F3 10 Tf
    (Creates a supply on which all of the values seen in the given supply are flattened before being emitted again.) Tj
  ET
EMC
/H2 << /MCID 12 >> BDC
  BT
    1 0 0 1 20 318.6 Tm
    /F1 16 Tf
    (method do) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 30 283.4 Tm
    /F2 8 Tf
    (method do\(Supply:D: &do --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 281.4 562 12.8 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 261.4 Tm
    /F3 10 Tf
    (Creates a supply to which all values seen in the given supply, are emitted again. The given code, executed for its side-effects only, is) Tj
    11 TL
    T*
    (guaranteed to be only executed by one thread at a time.) Tj
  ET
EMC
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 215.2 Tm
    /F1 16 Tf
    (method on-close) Tj
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 180 Tm
    /F2 8 Tf
    (method on-close\(Supply:D: &on-close --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 178 562 12.8 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F3 10 Tf
    (Returns a new ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F2 10 Tf
    [ -6221 (Supply) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F3 10 Tf
    [ -10421 ( which will run ) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F2 10 Tf
    [ -17004 (&on-close) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F3 10 Tf
    [ -23004 ( whenever a ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 22 >> BDC
    BT
      1 0 0 1 20 158 Tm
      [ -28335 (Tap) ] TJ
    ET
    q
      0.5 w
      303.35 157 m
      318.9 157 l
      S
    Q
  EMC
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 158 Tm
    [ -30140 ( of that ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F2 10 Tf
    [ -33473 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F3 10 Tf
    [ -37673 ( is closed. This includes if further operations are) ] TJ
    T*
    (chained on to the ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F2 10 Tf
    [ -7360 (Supply) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F3 10 Tf
    [ -11560 (. \(for example, ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F2 10 Tf
    [ -17947 ($supply.on-close\(&on-close\).map\(*.uc\)) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F3 10 Tf
    [ -40747 (\). When using a ) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F2 10 Tf
    [ -47579 (react) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F3 10 Tf
    [ -51179 ( or ) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F2 10 Tf
    [ -52762 (supply) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F3 10 Tf
    [ -56962 ] TJ
    T*
    (block, using the ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 34 >> BDC
    BT
      1 0 0 1 20 136 Tm
      [ -6861 (CLOSE) ] TJ
    ET
    q
      0.5 w
      88.61 135 m
      120.28 135 l
      S
    Q
  EMC
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 136 Tm
    [ -10278 ( phaser is usually a better choice.) ] TJ
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 30 118.4 Tm
    /F2 8 Tf
    (my $s = Supplier.new;) Tj
    8.8 TL
    T*
    (my $tap = $s.Supply.on-close\({ say "Tap closed" }\).tap\() Tj
    T*
    (    -> $v { say "the value is $v" },) Tj
    T*
    (    done    => { say "Supply is done" },) Tj
    T*
    (    quit    => -> $ex { say "Supply finished with error $ex" },) Tj
    T*
    (\);) Tj
    T*
    [  ] TJ
    T*
    ($s.emit\('Raku'\);) Tj
    T*
    ($tap.close;         OUTPUT: «Tap closed») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 46 562 83.2 re
  B
Q
endstream
endobj

65 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

66 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

67 0 obj
<<
  /Type /Page
  /Contents 68 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 69 0 R /GS2 70 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 24
>>
endobj

68 0 obj
<< /Length 6617 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method interval) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method interval\(Supply:U: $interval, $delay = 0, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 714.8 562 12.8 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    (Creates a supply that emits a value every ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 10 Tf
    [ -16858 ($interval) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -22858 ( seconds, starting ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 10 Tf
    [ -30274 ($delay) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -34474 ( seconds from the call. The emitted value is an integer,) ] TJ
    11 TL
    T*
    (starting from 0, and is incremented by one for each value emitted.) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    (Implementations may treat too-small and negative values as lowest resolution they support, possibly warning in such situations; e.g. treating ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    /F2 10 Tf
    [ -56635 ] TJ
    T*
    (0.0001) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 650.8 Tm
    /F3 10 Tf
    [ -4200 ( as ) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 650.8 Tm
    /F2 10 Tf
    [ -5783 (0.001) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 650.8 Tm
    /F3 10 Tf
    [ -9383 (. For 6.d language version, the minimal value specified is ) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 650.8 Tm
    /F2 10 Tf
    [ -32825 (0.001) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 650.8 Tm
    /F3 10 Tf
    [ -36425 (.) ] TJ
  ET
EMC
/H2 << /MCID 14 >> BDC
  BT
    1 0 0 1 20 615.6 Tm
    /F1 16 Tf
    (method grep) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 30 580.4 Tm
    /F2 8 Tf
    (method grep\(Supply:D: Mu $test --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 578.4 562 12.8 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F3 10 Tf
    (Creates a new supply that only emits those values from the original supply that smartmatch against ) Tj
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F2 10 Tf
    [ -40080 ($test) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F3 10 Tf
    [ -43680 (.) ] TJ
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 30 540.8 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $all      = $supplier.Supply;) Tj
    T*
    (my $ints     = $all.grep\(Int\);) Tj
    T*
    ($ints.tap\(&say\);) Tj
    T*
    ($supplier.emit\($_\) for 1, 'a string', 3.14159;    prints only 1) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 503.6 562 48 re
  B
Q
/H2 << /MCID 20 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F1 16 Tf
    (method map) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 30 435.2 Tm
    /F2 8 Tf
    (method map\(Supply:D: &mapper --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 433.2 562 12.8 re
  B
Q
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 413.2 Tm
    /F3 10 Tf
    (Returns a new supply that maps each value of the given supply through ) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 413.2 Tm
    /F2 10 Tf
    [ -29052 (&mapper) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 413.2 Tm
    /F3 10 Tf
    [ -33852 ( and emits it to the new supply.) ] TJ
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 30 395.6 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    T*
    (my $all      = $supplier.Supply;) Tj
    T*
    (my $double   = $all.map\(-> $value { $value * 2 }\);) Tj
    T*
    ($double.tap\(&say\);) Tj
    T*
    ($supplier.emit\(4\);            OUTPUT: «8») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 358.4 562 48 re
  B
Q
/H2 << /MCID 26 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F1 16 Tf
    (method batch) Tj
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 30 290 Tm
    /F2 8 Tf
    (method batch\(Supply:D: :$elems, :$seconds --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 288 562 12.8 re
  B
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 268 Tm
    /F3 10 Tf
    (Creates a new supply that batches the values of the given supply by either the number of elements in the batch \(using ) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 268 Tm
    /F2 10 Tf
    [ -47354 (:elems) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 268 Tm
    /F3 10 Tf
    [ -51554 (\) or a) ] TJ
    11 TL
    T*
    (duration \(using ) Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 257 Tm
    /F2 10 Tf
    [ -6583 (:seconds) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 257 Tm
    /F3 10 Tf
    [ -11983 (\) or both. Any remaining values are emitted in a final batch when the supply is done.) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 235 Tm
    /F1 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 235 Tm
    /F3 10 Tf
    [ -2249 (: Since Rakudo version 2020.12, the ) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 235 Tm
    /F2 10 Tf
    [ -17276 (:seconds) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 235 Tm
    /F3 10 Tf
    [ -22676 ( parameter has a millisecond granularity: for example a 1 millisecond duration could) ] TJ
    T*
    (be specified as ) Tj
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 224 Tm
    /F2 10 Tf
    [ -6387 (:seconds\(0.001\)) ] TJ
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 224 Tm
    /F3 10 Tf
    [ -15987 (. Before Rakudo version 2020.12, the ) ] TJ
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 224 Tm
    /F2 10 Tf
    [ -31485 (:seconds) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 224 Tm
    /F3 10 Tf
    [ -36885 ( parameter had a second granularity.) ] TJ
  ET
EMC
/H2 << /MCID 41 >> BDC
  BT
    1 0 0 1 20 188.8 Tm
    /F1 16 Tf
    (method elems) Tj
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 30 153.6 Tm
    /F2 8 Tf
    (method elems\(Supply:D: $seconds? --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 151.6 562 12.8 re
  B
Q
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 131.6 Tm
    /F3 10 Tf
    (Creates a new supply in which changes to the number of values seen are emitted. It optionally also takes an interval \(in seconds\) if you only) Tj
    T*
    (want to be updated every so many seconds.) Tj
  ET
EMC
endstream
endobj

69 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

70 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

71 0 obj
<<
  /Type /Page
  /Annots [ 72 0 R 74 0 R 76 0 R 78 0 R ]
  /Contents 79 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 80 0 R /GS2 81 0 R >>
    /Font << /F1 31 0 R /F2 34 0 R /F3 32 0 R >>
  >>
  /StructParents 25
>>
endobj

72 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 73 0 R
  /Border [ 0 0 0 ]
  /Contents (List.head)
  /P 71 0 R
  /Rect [ 229.46 652.2 270.4 667.2 ]
  /StructParent 26
>>
endobj

73 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_head) >>
endobj

74 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 75 0 R
  /Border [ 0 0 0 ]
  /Contents (List.tail)
  /P 71 0 R
  /Rect [ 223.36 449.8 258.2 464.8 ]
  /StructParent 27
>>
endobj

75 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_tail) >>
endobj

76 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 77 0 R
  /Border [ 0 0 0 ]
  /Contents (Str.split)
  /P 71 0 R
  /Rect [ 564.31 56 568.31 71 ]
  /StructParent 28
>>
endobj

77 0 obj
<< /Type /Action /S /URI /URI (/type/Str#routine_split) >>
endobj

78 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 77 0 R
  /Border [ 0 0 0 ]
  /Contents (Str.split)
  /P 71 0 R
  /Rect [ 18 45 53.4 60 ]
  /StructParent 29
>>
endobj

79 0 obj
<< /Length 7772 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method head) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 712.4 Tm
    /F2 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 694.8 Tm
    /F3 8 Tf
    (multi method head\(Supply:D:\)) Tj
    8.8 TL
    T*
    (multi method head\(Supply:D: Callable:D $limit\)) Tj
    T*
    (multi method head\(Supply:D: \\limit\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 675.2 562 30.4 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 655.2 Tm
    /F2 10 Tf
    (Creates a "head" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 4 >> BDC
    BT
      1 0 0 1 20 655.2 Tm
      [ -21146 (List.head) ] TJ
    ET
    q
      0.5 w
      231.46 654.2 m
      268.4 654.2 l
      S
    Q
  EMC
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 655.2 Tm
    [ -25090 (.) ] TJ
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 637.6 Tm
    /F3 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    T*
    (my $hs = $s.head\(2\);) Tj
    T*
    ($hs.tap\(&say\);            OUTPUT: «410») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 618 562 30.4 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 598 Tm
    /F2 10 Tf
    (Since release 2020.07, A ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 598 Tm
    /F3 10 Tf
    [ -10470 (WhateverCode) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 598 Tm
    /F2 10 Tf
    [ -18270 ( can be used also, again with the same semantics as ) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 598 Tm
    /F3 10 Tf
    [ -39294 (List.head) ] TJ
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 30 580.4 Tm
    /F3 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2, 1\);) Tj
    T*
    (my $hs = $s.head\( * - 2\);) Tj
    T*
    ($hs.tap\(&say\);            OUTPUT: «4103») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 560.8 562 30.4 re
  B
Q
/H2 << /MCID 12 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F1 16 Tf
    (method tail) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 30 492.4 Tm
    /F3 8 Tf
    (multi method tail\(Supply:D:\)) Tj
    T*
    (multi method tail\(Supply:D: Callable:D $limit\)) Tj
    T*
    (multi method tail\(Supply:D: \\limit\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 472.8 562 30.4 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 452.8 Tm
    /F2 10 Tf
    (Creates a "tail" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 15 >> BDC
    BT
      1 0 0 1 20 452.8 Tm
      [ -20536 (List.tail) ] TJ
    ET
    q
      0.5 w
      225.36 451.8 m
      256.2 451.8 l
      S
    Q
  EMC
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 452.8 Tm
    [ -23870 (.) ] TJ
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 30 435.2 Tm
    /F3 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    T*
    (my $ts = $s.tail\(2\);) Tj
    T*
    ($ts.tap\(&say\);            OUTPUT: «32») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 415.6 562 30.4 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    (You can call ) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 10 Tf
    [ -5554 (.tail) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    [ -9154 ( with ) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 10 Tf
    [ -11682 (Whatever) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    [ -17082 ( or ) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 10 Tf
    [ -18665 (Inf) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    [ -21065 (; which will return a new supply equivalent to the initial one. Calling it with a ) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 10 Tf
    [ -52675 ] TJ
    11 TL
    T*
    (WhateverCode) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 384.6 Tm
    /F2 10 Tf
    [ -7800 ( will be equivalent to skipping until that number.) ] TJ
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 30 367 Tm
    /F3 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $ts = $s.tail\( * - 2 \);) Tj
    T*
    ($ts.tap\(&say\);            OUTPUT: «32») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 347.4 562 30.4 re
  B
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F2 10 Tf
    (This feature is only available from the 2020.07 release of Raku.) Tj
  ET
EMC
/H2 << /MCID 29 >> BDC
  BT
    1 0 0 1 20 292.2 Tm
    /F1 16 Tf
    (method first) Tj
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 30 257 Tm
    /F3 8 Tf
    (method first\(Supply:D: :$end, |c\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 255 562 12.8 re
  B
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 235 Tm
    /F2 10 Tf
    (This method creates a supply of the first element, or the last element if the optional named parameter ) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 235 Tm
    /F3 10 Tf
    [ -40882 (:end) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 235 Tm
    /F2 10 Tf
    [ -43882 ( is truthy, from a supply created) ] TJ
    11 TL
    T*
    (by calling the ) Tj
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 224 Tm
    /F3 10 Tf
    [ -5944 (grep) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 224 Tm
    /F2 10 Tf
    [ -8944 ( method on the invocant, with any remaining arguments as parameters. If there is no remaining argument, this method is) ] TJ
    T*
    (equivalent to calling on the invocant, without parameter, the ) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F3 10 Tf
    [ -24608 (head) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -27608 ( or the ) ] TJ
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F3 10 Tf
    [ -30663 (tail) ] TJ
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -33663 ( method, according to named parameter ) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F3 10 Tf
    [ -50048 (:end) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -53048 (.) ] TJ
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 30 195.4 Tm
    /F3 8 Tf
    (my $rand = supply { emit \(rand × 100\).floor for ^ };) Tj
    8.8 TL
    T*
    (my $first-prime = $rand.first: &is-prime;) Tj
    T*
    ( output the first prime from the endless random number supply $rand,) Tj
    T*
    ( then the $first-prime supply reaches its end) Tj
    T*
    ($first-prime.tap: &say;) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 158.2 562 48 re
  B
Q
/H2 << /MCID 43 >> BDC
  BT
    1 0 0 1 20 125 Tm
    /F1 16 Tf
    (method split) Tj
  ET
EMC
/Code << /MCID 44 >> BDC
  BT
    1 0 0 1 30 89.8 Tm
    /F3 8 Tf
    (multi method split\(Supply:D: \\delimiter\)) Tj
    T*
    (multi method split\(Supply:D: \\delimiter, \\limit\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 79 562 21.6 re
  B
Q
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 59 Tm
    /F2 10 Tf
    (This method creates a supply of the values returned by the ) Tj
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 59 Tm
    /F3 10 Tf
    [ -23829 (Str.split) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 59 Tm
    /F2 10 Tf
    [ -29829 ( method called on the string collected from the invocant. See ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 48 >> BDC
    BT
      1 0 0 1 20 59 Tm
      [ -54631 ] TJ
      11 TL
      T*
      (Str.split) Tj
    ET
    q
      0.5 w
      566.31 58 m
      566.31 58 l
      S
    Q
    q
      0.5 w
      20 47 m
      51.4 47 l
      S
    Q
  EMC
Q
endstream
endobj

80 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

81 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

82 0 obj
<<
  /Type /Page
  /Annots [ 83 0 R 85 0 R ]
  /Contents 87 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 88 0 R /GS2 89 0 R >>
    /Font << /F1 34 0 R /F2 32 0 R /F3 31 0 R >>
  >>
  /StructParents 30
>>
endobj

83 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 84 0 R
  /Border [ 0 0 0 ]
  /Contents (.head)
  /P 82 0 R
  /Rect [ 123.04 738 148.42 753 ]
  /StructParent 31
>>
endobj

84 0 obj
<< /Type /Action /S /GoTo /D /method_head >>
endobj

85 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 86 0 R
  /Border [ 0 0 0 ]
  /Contents (List.rotor)
  /P 82 0 R
  /Rect [ 242.8 458.6 284.3 473.6 ]
  /StructParent 32
>>
endobj

86 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_rotor) >>
endobj

87 0 obj
<< /Length 5227 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    ( for details on the ) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -7499 (\\delimiter) ] TJ
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -14099 ( argument as well as available extra named parameters. The created supply can be limited with the ) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -53951 ] TJ
    11 TL
    T*
    (\\limit) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -4200 ( argument, see ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 5 >> BDC
    BT
      1 0 0 1 20 741 Tm
      [ -10504 (.head) ] TJ
    ET
    q
      0.5 w
      125.04 740 m
      146.42 740 l
      S
    Q
  EMC
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 741 Tm
    [ -12892 (.) ] TJ
  ET
EMC
/Code << /MCID 7 >> BDC
  BT
    1 0 0 1 30 723.4 Tm
    /F2 8 Tf
    (my $words = Supply.from-list\(<Hello World From Raku!>\);) Tj
    8.8 TL
    T*
    (my $s = $words.split\(/ <?upper> /, 2, :skip-empty\);) Tj
    T*
    ($s.tap\(&say\);  OUTPUT: «HelloWorld») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 703.8 562 30.4 re
  B
Q
/H2 << /MCID 8 >> BDC
  BT
    1 0 0 1 20 670.6 Tm
    /F3 16 Tf
    (method rotate) Tj
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 30 635.4 Tm
    /F2 8 Tf
    (method rotate\(Supply:D: $rotate = 1\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 633.4 562 12.8 re
  B
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 613.4 Tm
    /F1 10 Tf
    (Creates a supply with elements rotated to the left when ) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 613.4 Tm
    /F2 10 Tf
    [ -22469 ($rotate) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 613.4 Tm
    /F1 10 Tf
    [ -27269 ( is positive or to the right otherwise, in which case the invocant is tapped) ] TJ
    11 TL
    T*
    (on before a new supply is returned.) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 30 584.8 Tm
    /F2 8 Tf
    (my $supply = Supply.from-list\(<a b c d e>\).rotate\(2\);) Tj
    8.8 TL
    T*
    ($supply.tap\(&say\);  OUTPUT: «cdeab») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 574 562 21.6 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 554 Tm
    /F3 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 554 Tm
    /F1 10 Tf
    [ -2249 (: Available since Rakudo 2020.06.) ] TJ
  ET
EMC
/H2 << /MCID 16 >> BDC
  BT
    1 0 0 1 20 518.8 Tm
    /F3 16 Tf
    (method rotor) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 30 483.6 Tm
    /F2 8 Tf
    (method rotor\(Supply:D: @cycle --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 481.6 562 12.8 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 461.6 Tm
    /F1 10 Tf
    (Creates a "rotoring" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 19 >> BDC
    BT
      1 0 0 1 20 461.6 Tm
      [ -22480 (List.rotor) ] TJ
    ET
    q
      0.5 w
      244.8 460.6 m
      282.3 460.6 l
      S
    Q
  EMC
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 461.6 Tm
    [ -26480 (.) ] TJ
  ET
EMC
/H2 << /MCID 21 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F3 16 Tf
    (method delayed) Tj
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 30 391.2 Tm
    /F2 8 Tf
    (method delayed\(Supply:D: $seconds, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 389.2 562 12.8 re
  B
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 369.2 Tm
    /F1 10 Tf
    (Creates a new supply in which all values flowing through the given supply are emitted, but with the given delay in seconds.) Tj
  ET
EMC
/H2 << /MCID 24 >> BDC
  BT
    1 0 0 1 20 334 Tm
    /F3 16 Tf
    (method throttle) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 294.4 Tm
    /F1 10 Tf
    (Defined as) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 30 276.8 Tm
    /F2 8 Tf
    (multi method throttle\(Supply:D:) Tj
    T*
    (      Int\(\)  $elems,) Tj
    T*
    (      Real\(\) $seconds,) Tj
    T*
    (      Real\(\) $delay  = 0,) Tj
    T*
    (      :$scheduler    = $*SCHEDULER,) Tj
    T*
    (      :$control,) Tj
    T*
    (      :$status,) Tj
    T*
    (      :$bleed,) Tj
    T*
    (      :$vent-at,) Tj
    T*
    (    \)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 195.6 562 92 re
  B
Q
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 30 180 Tm
    (multi method throttle\(Supply:D:) Tj
    T*
    (      Int\(\)  $elems,) Tj
    T*
    (      Callable:D $process,) Tj
    T*
    (      Real\(\) $delay = 0,) Tj
    T*
    (      :$scheduler   = $*SCHEDULER,) Tj
    T*
    (      :$control,) Tj
    T*
    (      :$status,) Tj
    T*
    (      :$bleed,) Tj
    T*
    (      :$vent-at,) Tj
    T*
    (    \)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 98.8 562 92 re
  B
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    /F1 10 Tf
    (Arguments to ) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    /F2 10 Tf
    [ -5972 (.throttle) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    /F1 10 Tf
    [ -11972 ( are defined as follows:) ] TJ
  ET
EMC
endstream
endobj

88 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

89 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

90 0 obj
<<
  /Type /Page
  /Annots [ 91 0 R ]
  /Contents 93 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources << /Font << /F1 31 0 R /F2 34 0 R /F3 32 0 R >> >>
  /StructParents 33
>>
endobj

91 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 92 0 R
  /Border [ 0 0 0 ]
  /Contents (status message)
  /P 90 0 R
  /Rect [ 253.25 367 316.41 382 ]
  /StructParent 34
>>
endobj

92 0 obj
<< /Type /Action /S /GoTo /D /status_message >>
endobj

93 0 obj
<< /Length 9746 >> stream
/TH << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (Argument) Tj
  ET
  q
    1 w
    20 750 m
    104.98 750 l
    S
  Q
EMC
/TH << /MCID 1 >> BDC
  BT
    1 0 0 1 114.98 752 Tm
    (Meaning) Tj
  ET
  q
    1 w
    114.98 750 m
    297.75 750 l
    S
  Q
EMC
/TD << /MCID 2 >> BDC
  BT
    1 0 0 1 20 738 Tm
    /F2 10 Tf
    ($limit,) Tj
  ET
EMC
/TD << /MCID 3 >> BDC
  BT
    1 0 0 1 114.98 738 Tm
    (values / time or simultaneous processing) Tj
  ET
EMC
/TD << /MCID 4 >> BDC
  BT
    1 0 0 1 20 725 Tm
    ($seconds or $process) Tj
  ET
EMC
/TD << /MCID 5 >> BDC
  BT
    1 0 0 1 114.98 725 Tm
    (time-unit / code to process simultaneously) Tj
  ET
EMC
/TD << /MCID 6 >> BDC
  BT
    1 0 0 1 20 712 Tm
    ($delay = 0,) Tj
  ET
EMC
/TD << /MCID 7 >> BDC
  BT
    1 0 0 1 114.98 712 Tm
    (initial delay before starting, in seconds) Tj
  ET
EMC
/TD << /MCID 8 >> BDC
  BT
    1 0 0 1 20 699 Tm
    (:$control,) Tj
  ET
EMC
/TD << /MCID 9 >> BDC
  BT
    1 0 0 1 114.98 699 Tm
    (supply to emit control messages on \(optional\)) Tj
  ET
EMC
/TD << /MCID 10 >> BDC
  BT
    1 0 0 1 20 686 Tm
    (:$status,) Tj
  ET
EMC
/TD << /MCID 11 >> BDC
  BT
    1 0 0 1 114.98 686 Tm
    (supply to tap status messages from \(optional\)) Tj
  ET
EMC
/TD << /MCID 12 >> BDC
  BT
    1 0 0 1 20 673 Tm
    (:$bleed,) Tj
  ET
EMC
/TD << /MCID 13 >> BDC
  BT
    1 0 0 1 114.98 673 Tm
    (supply to bleed messages to \(optional\)) Tj
  ET
EMC
/TD << /MCID 14 >> BDC
  BT
    1 0 0 1 20 660 Tm
    (:$vent-at,) Tj
  ET
EMC
/TD << /MCID 15 >> BDC
  BT
    1 0 0 1 114.98 660 Tm
    (bleed when so many buffered \(optional\)) Tj
  ET
EMC
/TD << /MCID 16 >> BDC
  BT
    1 0 0 1 20 647 Tm
    (:$scheduler,) Tj
  ET
EMC
/TD << /MCID 17 >> BDC
  BT
    1 0 0 1 114.98 647 Tm
    (scheduler to use, default $*SCHEDULER) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 612 Tm
    (This method produces a ) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 612 Tm
    /F3 10 Tf
    [ -10082 (Supply) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 612 Tm
    /F2 10 Tf
    [ -14282 ( from a given one, but makes sure the number of messages passed through is limited.) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 590 Tm
    (It has two modes of operation: per time-unit or by maximum number of executions of a block of code: this is determined by the type of the) Tj
    11 TL
    T*
    (second positional parameter.) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 557 Tm
    (The first positional parameter specifies the limit that should be applied.) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 535 Tm
    (If the second positional parameter is a ) Tj
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 535 Tm
    /F3 10 Tf
    [ -15719 (Callable) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 535 Tm
    /F2 10 Tf
    [ -21119 (, then the limit indicates the maximum number of parallel processes executing the) ] TJ
    T*
    (Callable, which is given the value that was received. The emitted values in this case will be the ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 524 Tm
    /F3 10 Tf
    [ -38522 (Promise) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 524 Tm
    /F2 10 Tf
    [ -43322 (s that were obtained from ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 524 Tm
    /F3 10 Tf
    [ -54042 (start) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 524 Tm
    /F2 10 Tf
    [ -57642 ] TJ
    T*
    (ing the Callable.) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 491 Tm
    (If the second positional parameter is a real number, it is interpreted as the time-unit \(in seconds\). If you specify ) Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 491 Tm
    /F1 10 Tf
    [ -44964 (.1) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 491 Tm
    /F2 10 Tf
    [ -45964 ( as the value, then it makes) ] TJ
    T*
    (sure you don't exceed the limit for every tenth of a second.) Tj
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 458 Tm
    (If the limit is exceeded, then incoming messages are buffered until there is room to pass on / execute the Callable again.) Tj
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 436 Tm
    (The third positional parameter is optional: it indicates the number of seconds the throttle will wait before passing on any values.) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 414 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 414 Tm
    /F3 10 Tf
    [ -2055 (:control) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 414 Tm
    /F2 10 Tf
    [ -7455 ( named parameter optionally specifies a Supply that you can use to control the throttle while it is in operation. Messages) ] TJ
    T*
    (that can be sent, are strings in the form of "key:value". Please see below for the types of messages that you can send to control the throttle.) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 381 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 381 Tm
    /F3 10 Tf
    [ -2055 (:status) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 381 Tm
    /F2 10 Tf
    [ -6855 ( named parameter optionally specifies a Supply that will receive any status messages. If specified, it will at least send one) ] TJ
    T*
    (status message after the original Supply is exhausted. See ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 41 >> BDC
    BT
      1 0 0 1 20 370 Tm
      [ -23525 (status message) ] TJ
    ET
    q
      0.5 w
      255.25 369 m
      314.41 369 l
      S
    Q
  EMC
Q
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 370 Tm
    [ -29691 ( below.) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 348 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 348 Tm
    /F3 10 Tf
    [ -2055 (:bleed) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 348 Tm
    /F2 10 Tf
    [ -6255 ( named parameter optionally specifies a Supply that will receive any values that were either explicitly bled \(with the ) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 348 Tm
    /F1 10 Tf
    [ -53247 (bleed) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 348 Tm
    /F2 10 Tf
    [ -55775 ] TJ
    T*
    (control message\), or automatically bled \(if there's a ) Tj
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 337 Tm
    /F1 10 Tf
    [ -21009 (vent-at) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 337 Tm
    /F2 10 Tf
    [ -24258 ( active\).) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 315 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 315 Tm
    /F3 10 Tf
    [ -2055 (:vent-at) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 315 Tm
    /F2 10 Tf
    [ -7455 ( named parameter indicates the number of values that may be buffered before any additional value will be routed to the ) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 315 Tm
    /F3 10 Tf
    [ -55611 ] TJ
    T*
    (:bleed) Tj
  ET
EMC
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 304 Tm
    /F2 10 Tf
    [ -4200 ( Supply. Defaults to 0 if not specified \(causing no automatic bleeding to happen\). Only makes sense if a ) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 304 Tm
    /F3 10 Tf
    [ -46250 (:bleed) ] TJ
  ET
EMC
/P << /MCID 56 >> BDC
  BT
    1 0 0 1 20 304 Tm
    /F2 10 Tf
    [ -50450 ( Supply has also) ] TJ
    T*
    (been specified.) Tj
  ET
EMC
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 271 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 58 >> BDC
  BT
    1 0 0 1 20 271 Tm
    /F3 10 Tf
    [ -2055 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 271 Tm
    /F2 10 Tf
    [ -8655 ( named parameter indicates the scheduler to be used. Defaults to ) ] TJ
  ET
EMC
/P << /MCID 60 >> BDC
  BT
    1 0 0 1 20 271 Tm
    /F3 10 Tf
    [ -34899 ($*SCHEDULER) ] TJ
  ET
EMC
/P << /MCID 61 >> BDC
  BT
    1 0 0 1 20 271 Tm
    /F2 10 Tf
    [ -42099 (.) ] TJ
  ET
EMC
/H3 << /MCID 62 >> BDC
  BT
    1 0 0 1 20 242.4 Tm
    /F1 13 Tf
    (control messages) Tj
  ET
EMC
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 206.1 Tm
    /F2 10 Tf
    (These messages can be sent to the ) Tj
  ET
EMC
/P << /MCID 64 >> BDC
  BT
    1 0 0 1 20 206.1 Tm
    /F3 10 Tf
    [ -14108 (:control) ] TJ
  ET
EMC
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 206.1 Tm
    /F2 10 Tf
    [ -19508 ( Supply. A control message consists of a string of the form "key: value", e.g. "limit: 4".) ] TJ
  ET
EMC
/Lbl << /MCID 66 >> BDC
  BT
    1 0 0 1 20 184.1 Tm
    () Tj
  ET
EMC
/P << /MCID 67 >> BDC
  BT
    1 0 0 1 30 184.1 Tm
    (limit) Tj
  ET
EMC
/P << /MCID 68 >> BDC
  BT
    1 0 0 1 20 162.1 Tm
    (Change the number of messages \(as initially given in the first positional\) to the value given.) Tj
  ET
EMC
/Lbl << /MCID 69 >> BDC
  BT
    1 0 0 1 20 140.1 Tm
    () Tj
  ET
EMC
/P << /MCID 70 >> BDC
  BT
    1 0 0 1 30 140.1 Tm
    (bleed) Tj
  ET
EMC
/P << /MCID 71 >> BDC
  BT
    1 0 0 1 20 118.1 Tm
    (Route the given number of buffered messages to the ) Tj
  ET
EMC
/P << /MCID 72 >> BDC
  BT
    1 0 0 1 20 118.1 Tm
    /F3 10 Tf
    [ -21385 (:bleed) ] TJ
  ET
EMC
/P << /MCID 73 >> BDC
  BT
    1 0 0 1 20 118.1 Tm
    /F2 10 Tf
    [ -25585 ( Supply.) ] TJ
  ET
EMC
/Lbl << /MCID 74 >> BDC
  BT
    1 0 0 1 20 96.1 Tm
    () Tj
  ET
EMC
/P << /MCID 75 >> BDC
  BT
    1 0 0 1 30 96.1 Tm
    (vent-at) Tj
  ET
EMC
/P << /MCID 76 >> BDC
  BT
    1 0 0 1 20 74.1 Tm
    (Change the maximum number of buffered values before automatic bleeding takes place. If the value is lower than before, will cause) Tj
    T*
    (immediate rerouting of buffered values to match the new maximum.) Tj
  ET
EMC
endstream
endobj

94 0 obj
<<
  /Type /Page
  /Contents 95 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 96 0 R /GS2 97 0 R >>
    /Font << /F1 34 0 R /F2 32 0 R /F3 31 0 R >>
  >>
  /StructParents 35
>>
endobj

95 0 obj
<< /Length 4808 >> stream
/Lbl << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    () Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 30 752 Tm
    (status) Tj
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 730 Tm
    (Send a status message to the ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 730 Tm
    /F2 10 Tf
    [ -11860 (:status) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 730 Tm
    /F1 10 Tf
    [ -16660 ( Supply with the given id.) ] TJ
  ET
EMC
/H3 << /MCID 5 >> BDC
  BT
    1 0 0 1 20 701.4 Tm
    /F3 13 Tf
    (status message) Tj
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 665.1 Tm
    /F1 10 Tf
    (The status return message is a hash with the following keys:) Tj
  ET
EMC
/Lbl << /MCID 7 >> BDC
  BT
    1 0 0 1 20 643.1 Tm
    () Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 30 643.1 Tm
    (allowed) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 621.1 Tm
    (The current number of messages / callables that is still allowed to be passed / executed.) Tj
  ET
EMC
/Lbl << /MCID 10 >> BDC
  BT
    1 0 0 1 20 599.1 Tm
    () Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 30 599.1 Tm
    (bled) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 577.1 Tm
    (The number of messages routed to the ) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 577.1 Tm
    /F2 10 Tf
    [ -15775 (:bleed) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 577.1 Tm
    /F1 10 Tf
    [ -19975 ( Supply.) ] TJ
  ET
EMC
/Lbl << /MCID 15 >> BDC
  BT
    1 0 0 1 20 555.1 Tm
    () Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 30 555.1 Tm
    (buffered) Tj
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 533.1 Tm
    (The number of messages currently buffered because of overflow.) Tj
  ET
EMC
/Lbl << /MCID 18 >> BDC
  BT
    1 0 0 1 20 511.1 Tm
    () Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 30 511.1 Tm
    (emitted) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 489.1 Tm
    (The number of messages emitted \(passed through\).) Tj
  ET
EMC
/Lbl << /MCID 21 >> BDC
  BT
    1 0 0 1 20 467.1 Tm
    () Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 30 467.1 Tm
    (id) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 445.1 Tm
    (The id of this status message \(a monotonically increasing number\). Handy if you want to log status messages.) Tj
  ET
EMC
/Lbl << /MCID 24 >> BDC
  BT
    1 0 0 1 20 423.1 Tm
    () Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 30 423.1 Tm
    (limit) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 401.1 Tm
    (The current limit that is being applied.) Tj
  ET
EMC
/Lbl << /MCID 27 >> BDC
  BT
    1 0 0 1 20 379.1 Tm
    () Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 30 379.1 Tm
    (vent-at) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 357.1 Tm
    (The maximum number of messages that may be buffered before they're automatically re-routed to the ) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 357.1 Tm
    /F2 10 Tf
    [ -41171 (:bleed) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 357.1 Tm
    /F1 10 Tf
    [ -45371 ( Supply.) ] TJ
  ET
EMC
/H3 << /MCID 32 >> BDC
  BT
    1 0 0 1 20 328.5 Tm
    /F3 13 Tf
    (Examples) Tj
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 292.2 Tm
    /F1 10 Tf
    (Have a simple piece of code announce when it starts running asynchronously, wait a random amount of time, then announce when it is done.) Tj
    11 TL
    T*
    (Do this 6 times, but don't let more than 3 of them run simultaneously.) Tj
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 30 263.6 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(^6\);   set up supply) Tj
    8.8 TL
    T*
    (my $t = $s.throttle: 3,         only allow 3 at a time) Tj
    T*
    ({                               code block to run) Tj
    T*
    (    say "running $_";           announce we've started) Tj
    T*
    (    sleep rand;                 wait some random time) Tj
    T*
    (    say "done $_"               announce we're done) Tj
    T*
    (}                               don't need ; because } at end of line) Tj
    T*
    ($t.wait;                        wait for the supply to be done) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 200 562 74.4 re
  B
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 180 Tm
    /F1 10 Tf
    (and the result of one run will be:) Tj
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 30 162.4 Tm
    /F2 8 Tf
    (running 0) Tj
    T*
    (running 1) Tj
    T*
    (running 2) Tj
    T*
    (done 2) Tj
    T*
    (running 3) Tj
    T*
    (done 1) Tj
    T*
    (running 4) Tj
    T*
    (done 4) Tj
    T*
    (running 5) Tj
    T*
    (done 0) Tj
    T*
    (done 3) Tj
    T*
    (done 5) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 63.6 562 109.6 re
  B
Q
endstream
endobj

96 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

97 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

98 0 obj
<<
  /Type /Page
  /Annots [ 99 0 R ]
  /Contents 101 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 102 0 R /GS2 103 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 36
>>
endobj

99 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 100 0 R
  /Border [ 0 0 0 ]
  /Contents (List.produce)
  /P 98 0 R
  /Rect [ 251.13 364 305.4 379 ]
  /StructParent 37
>>
endobj

100 0 obj
<< /Type /Action /S /URI /URI (/type/List#routine_produce) >>
endobj

101 0 obj
<< /Length 7419 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method stable) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method stable\(Supply:D: $time, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 714.8 562 12.8 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    (Creates a new supply that only passes on a value flowing through the given supply if it wasn't superseded by another value in the given ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 10 Tf
    [ -54562 ] TJ
    11 TL
    T*
    ($time) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F3 10 Tf
    [ -3600 ( \(in seconds\). Optionally uses another scheduler than the default scheduler, using the ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F2 10 Tf
    [ -37983 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F3 10 Tf
    [ -44583 ( parameter.) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    (To clarify the above, if, during the timeout ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    /F2 10 Tf
    [ -17581 ($time) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    /F3 10 Tf
    [ -21181 (, additional values are emitted to the ) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    /F2 10 Tf
    [ -36207 (Supplier) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    /F3 10 Tf
    [ -41607 ( all but the last one will be thrown) ] TJ
    T*
    (away. Each time an additional value is emitted to the ) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 650.8 Tm
    /F2 10 Tf
    [ -21664 (Supplier) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 650.8 Tm
    /F3 10 Tf
    [ -27064 (, during the timeout, ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 650.8 Tm
    /F2 10 Tf
    [ -35703 ($time) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 650.8 Tm
    /F3 10 Tf
    [ -39303 ( is reset.) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    (This method can be quite useful when handling UI input, where it is not desired to perform an operation until the user has stopped typing for a) Tj
    T*
    (while rather than on every keystroke.) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 30 600.2 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply1 = $supplier.Supply;) Tj
    T*
    ($supply1.tap\(-> $v { say "Supply1 got: $v" }\);) Tj
    T*
    ($supplier.emit\(42\);) Tj
    T*
    [  ] TJ
    T*
    (my Supply $supply2 = $supply1.stable\(5\);) Tj
    T*
    ($supply2.tap\(-> $v { say "Supply2 got: $v" }\);) Tj
    T*
    (sleep\(3\);) Tj
    T*
    ($supplier.emit\(43\);   will not be seen by $supply2 but will reset $time) Tj
    T*
    ($supplier.emit\(44\);) Tj
    T*
    (sleep\(10\);) Tj
    T*
    ( OUTPUT: «Supply1 got: 42Supply1 got: 43Supply1 got: 44Supply2 got: 44») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 501.4 562 109.6 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F3 10 Tf
    (As can be seen above, ) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F2 10 Tf
    [ -9358 ($supply1) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F3 10 Tf
    [ -14758 ( received all values emitted to the ) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F2 10 Tf
    [ -28700 (Supplier) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F3 10 Tf
    [ -34100 ( while ) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F2 10 Tf
    [ -37072 ($supply2) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F3 10 Tf
    [ -42472 ( only received one value. The 43) ] TJ
    11 TL
    T*
    (was thrown away because it was followed by another 'last' value 44 which was retained and sent to ) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 10 Tf
    [ -40046 ($supply2) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -45446 ( after approximately eight) ] TJ
    T*
    (seconds, this due to the fact that the timeout ) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 10 Tf
    [ -18082 ($time) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -21682 ( was reset after three seconds.) ] TJ
  ET
EMC
/H2 << /MCID 29 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F1 16 Tf
    (method produce) Tj
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 30 389 Tm
    /F2 8 Tf
    (method produce\(Supply:D: &with --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 387 562 12.8 re
  B
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 367 Tm
    /F3 10 Tf
    (Creates a "producing" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 32 >> BDC
    BT
      1 0 0 1 20 367 Tm
      [ -23313 (List.produce) ] TJ
    ET
    q
      0.5 w
      253.13 366 m
      303.4 366 l
      S
    Q
  EMC
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 367 Tm
    [ -28590 (.) ] TJ
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 30 349.4 Tm
    /F2 8 Tf
    (my $supply = Supply.from-list\(1..5\).produce\({$^a + $^b}\);) Tj
    8.8 TL
    T*
    ($supply.tap\(-> $v { say "$v" }\);  OUTPUT: «1361015») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 338.6 562 21.6 re
  B
Q
/H2 << /MCID 35 >> BDC
  BT
    1 0 0 1 20 305.4 Tm
    /F1 16 Tf
    (method lines) Tj
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 30 270.2 Tm
    /F2 8 Tf
    (method lines\(Supply:D: :$chomp = True --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 268.2 562 12.8 re
  B
Q
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 248.2 Tm
    /F3 10 Tf
    (Creates a supply that will emit the characters coming in line by line from a supply that's usually created by some asynchronous I/O operation.) Tj
    11 TL
    T*
    (The optional ) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    /F2 10 Tf
    [ -5583 (:chomp) ] TJ
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    /F3 10 Tf
    [ -9783 ( parameter indicates whether to remove line separators: the default is ) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    /F2 10 Tf
    [ -37832 (True) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    /F3 10 Tf
    [ -40832 (.) ] TJ
  ET
EMC
/H2 << /MCID 42 >> BDC
  BT
    1 0 0 1 20 202 Tm
    /F1 16 Tf
    (method words) Tj
  ET
EMC
/Code << /MCID 43 >> BDC
  BT
    1 0 0 1 30 166.8 Tm
    /F2 8 Tf
    (method words\(Supply:D: --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 164.8 562 12.8 re
  B
Q
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 144.8 Tm
    /F3 10 Tf
    (Creates a supply that will emit the characters coming in word for word from a supply that's usually created by some asynchronous I/O) Tj
    T*
    (operation.) Tj
  ET
EMC
/Code << /MCID 45 >> BDC
  BT
    1 0 0 1 30 116.2 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\("Hello Word!".comb\);) Tj
    8.8 TL
    T*
    (my $ws = $s.words;) Tj
    T*
    ($ws.tap\(&say\);            OUTPUT: «HelloWord!») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 96.6 562 30.4 re
  B
Q
endstream
endobj

102 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

103 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

104 0 obj
<<
  /Type /Page
  /Annots [ 105 0 R 107 0 R 109 0 R 111 0 R 113 0 R 115 0 R 117 0 R 119 0 R ]
  /Contents 121 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 122 0 R /GS2 123 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 38
>>
endobj

105 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 106 0 R
  /Border [ 0 0 0 ]
  /Contents (unique)
  /P 104 0 R
  /Rect [ 520.71 691.8 551.93 706.8 ]
  /StructParent 39
>>
endobj

106 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_unique)
>>
endobj

107 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 108 0 R
  /Border [ 0 0 0 ]
  /Contents (unique)
  /P 104 0 R
  /Rect [ 527.36 577.4 558.58 592.4 ]
  /StructParent 40
>>
endobj

108 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_unique)
>>
endobj

109 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 110 0 R
  /Border [ 0 0 0 ]
  /Contents (repeated)
  /P 104 0 R
  /Rect [ 37.44 529 75.31 544 ]
  /StructParent 41
>>
endobj

110 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_repeated)
>>
endobj

111 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 112 0 R
  /Border [ 0 0 0 ]
  /Contents (Rakudo)
  /P 104 0 R
  /Rect [ 162.41 507 197.52 522 ]
  /StructParent 42
>>
endobj

112 0 obj
<< /Type /Action /S /URI /URI (/language/glossary#Rakudo) >>
endobj

113 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 114 0 R
  /Border [ 0 0 0 ]
  /Contents (squish)
  /P 104 0 R
  /Rect [ 520.71 414.6 550.27 429.6 ]
  /StructParent 43
>>
endobj

114 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_squish)
>>
endobj

115 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 116 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.max)
  /P 104 0 R
  /Rect [ 213.79 300.2 254.73 315.2 ]
  /StructParent 44
>>
endobj

116 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_max) >>
endobj

117 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 118 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.min)
  /P 104 0 R
  /Rect [ 213.79 185.8 253.07 200.8 ]
  /StructParent 45
>>
endobj

118 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_min) >>
endobj

119 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 120 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.minmax)
  /P 104 0 R
  /Rect [ 171.31 82.4 227.81 97.4 ]
  /StructParent 46
>>
endobj

120 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_minmax) >>
endobj

121 0 obj
<< /Length 8069 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method unique) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method unique\(Supply:D: :$as, :$with, :$expires --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 714.8 562 12.8 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    (Creates a supply that only provides unique values, as defined by the optional ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 10 Tf
    [ -31191 (:as) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -33591 ( and ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 10 Tf
    [ -35785 (:with) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -39385 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 7 >> BDC
    BT
      1 0 0 1 20 694.8 Tm
      [ -50271 (unique) ] TJ
    ET
    q
      0.5 w
      522.71 693.8 m
      549.93 693.8 l
      S
    Q
  EMC
Q
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    [ -53243 (\). The) ] TJ
    11 TL
    T*
    (optional ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F2 10 Tf
    [ -3778 (:expires) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F3 10 Tf
    [ -9178 ( parameter how long to wait \(in seconds\) before "resetting" and not considering a value to have been seen, even if it's) ] TJ
    T*
    (the same as an old value.) Tj
  ET
EMC
/H2 << /MCID 11 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F1 16 Tf
    (method repeated) Tj
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 30 602.4 Tm
    /F2 8 Tf
    (method repeated\(Supply:D: :&as, :&with\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 600.4 562 12.8 re
  B
Q
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 580.4 Tm
    /F3 10 Tf
    (Creates a supply that only provides repeated values, as defined by the optional ) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 580.4 Tm
    /F2 10 Tf
    [ -31856 (:as) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 580.4 Tm
    /F3 10 Tf
    [ -34256 ( and ) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 580.4 Tm
    /F2 10 Tf
    [ -36450 (:with) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 580.4 Tm
    /F3 10 Tf
    [ -40050 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 18 >> BDC
    BT
      1 0 0 1 20 580.4 Tm
      [ -50936 (unique) ] TJ
    ET
    q
      0.5 w
      529.36 579.4 m
      556.58 579.4 l
      S
    Q
  EMC
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 580.4 Tm
    [ -53908 (\).) ] TJ
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 30 562.8 Tm
    /F2 8 Tf
    (my $supply = Supply.from-list\(<a A B b c b C>\).repeated\(:as\(&lc\)\);) Tj
    8.8 TL
    T*
    ($supply.tap\(&say\);            OUTPUT: «AbbC») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 552 562 21.6 re
  B
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 532 Tm
    /F3 10 Tf
    (See ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 22 >> BDC
    BT
      1 0 0 1 20 532 Tm
      [ -1944 (repeated) ] TJ
    ET
    q
      0.5 w
      39.44 531 m
      73.31 531 l
      S
    Q
  EMC
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 532 Tm
    [ -5581 ( for more examples that use its sub form.) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 510 Tm
    /F1 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 510 Tm
    /F3 10 Tf
    [ -2249 (: Available since version 6.e \() ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 26 >> BDC
    BT
      1 0 0 1 20 510 Tm
      [ -14441 (Rakudo) ] TJ
    ET
    q
      0.5 w
      164.41 509 m
      195.52 509 l
      S
    Q
  EMC
Q
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 510 Tm
    [ -17802 ( 2020.01 and later\).) ] TJ
  ET
EMC
/H2 << /MCID 28 >> BDC
  BT
    1 0 0 1 20 474.8 Tm
    /F1 16 Tf
    (method squish) Tj
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 30 439.6 Tm
    /F2 8 Tf
    (method squish\(Supply:D: :$as, :$with --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 437.6 562 12.8 re
  B
Q
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    (Creates a supply that only provides unique values, as defined by the optional ) Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F2 10 Tf
    [ -31191 (:as) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    [ -33591 ( and ) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F2 10 Tf
    [ -35785 (:with) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    [ -39385 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 35 >> BDC
    BT
      1 0 0 1 20 417.6 Tm
      [ -50271 (squish) ] TJ
    ET
    q
      0.5 w
      522.71 416.6 m
      548.27 416.6 l
      S
    Q
  EMC
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    [ -53077 (\).) ] TJ
  ET
EMC
/H2 << /MCID 37 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F1 16 Tf
    (method max) Tj
  ET
EMC
/Code << /MCID 38 >> BDC
  BT
    1 0 0 1 30 347.2 Tm
    /F2 8 Tf
    (method max\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 345.2 562 12.8 re
  B
Q
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F3 10 Tf
    (Creates a supply that only emits values from the given supply if they are larger than any value seen before. In other words, from a) Tj
    11 TL
    T*
    (continuously ascending supply it will emit all the values. From a continuously descending supply it will only emit the first value. The optional) Tj
    T*
    (parameter specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 40 >> BDC
    BT
      1 0 0 1 20 303.2 Tm
      [ -19579 (Any.max) ] TJ
    ET
    q
      0.5 w
      215.79 302.2 m
      252.73 302.2 l
      S
    Q
  EMC
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 303.2 Tm
    [ -23523 (.) ] TJ
  ET
EMC
/H2 << /MCID 42 >> BDC
  BT
    1 0 0 1 20 268 Tm
    /F1 16 Tf
    (method min) Tj
  ET
EMC
/Code << /MCID 43 >> BDC
  BT
    1 0 0 1 30 232.8 Tm
    /F2 8 Tf
    (method min\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 230.8 562 12.8 re
  B
Q
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F3 10 Tf
    (Creates a supply that only emits values from the given supply if they are smaller than any value seen before. In other words, from a) Tj
    T*
    (continuously descending supply it will emit all the values. From a continuously ascending supply it will only emit the first value. The optional) Tj
    T*
    (parameter specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 45 >> BDC
    BT
      1 0 0 1 20 188.8 Tm
      [ -19579 (Any.min) ] TJ
    ET
    q
      0.5 w
      215.79 187.8 m
      251.07 187.8 l
      S
    Q
  EMC
Q
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 188.8 Tm
    [ -23357 (.) ] TJ
  ET
EMC
/H2 << /MCID 47 >> BDC
  BT
    1 0 0 1 20 153.6 Tm
    /F1 16 Tf
    (method minmax) Tj
  ET
EMC
/Code << /MCID 48 >> BDC
  BT
    1 0 0 1 30 118.4 Tm
    /F2 8 Tf
    (method minmax\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 116.4 562 12.8 re
  B
Q
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 10 Tf
    (Creates a supply that emits a Range every time a new minimum or maximum values is seen from the given supply. The optional parameter) Tj
    T*
    (specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 50 >> BDC
    BT
      1 0 0 1 20 85.4 Tm
      [ -15331 (Any.minmax) ] TJ
    ET
    q
      0.5 w
      173.31 84.4 m
      225.81 84.4 l
      S
    Q
  EMC
Q
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    [ -20831 (.) ] TJ
  ET
EMC
endstream
endobj

122 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

123 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

124 0 obj
<<
  /Type /Page
  /Contents 125 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 126 0 R /GS2 127 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 47
>>
endobj

125 0 obj
<< /Length 6527 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method skip) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method skip\(Supply:D: Int\(Cool\) $number = 1 --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 714.8 562 12.8 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    (Returns a new ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 10 Tf
    [ -6221 (Supply) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -10421 ( which will emit all values from the given ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 10 Tf
    [ -27642 (Supply) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -31842 ( except for the first ) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 10 Tf
    [ -39951 ($number) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -44751 ( values, which will be thrown) ] TJ
    11 TL
    T*
    (away.) Tj
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 30 666.2 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply = $supplier.Supply;) Tj
    T*
    ($supply = $supply.skip\(3\);) Tj
    T*
    ($supply.tap\({ say $_ }\);) Tj
    T*
    ($supplier.emit\($_\) for 1..10;  OUTPUT: «45678910») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 629 562 48 re
  B
Q
/H2 << /MCID 10 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F1 16 Tf
    (method start) Tj
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 30 560.6 Tm
    /F2 8 Tf
    (method start\(Supply:D: &startee --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 558.6 562 12.8 re
  B
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    /F3 10 Tf
    (Creates a supply of supplies. For each value in the original supply, the code object is scheduled on another thread, and returns a supply either) Tj
    11 TL
    T*
    (of a single value \(if the code succeeds\), or one that quits without a value \(if the code fails\).) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    (This is useful for asynchronously starting work that you don't block on.) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    (Use ) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F2 10 Tf
    [ -2055 (migrate) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F3 10 Tf
    [ -6855 ( to join the values into a single supply again.) ] TJ
  ET
EMC
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    /F1 16 Tf
    (method migrate) Tj
  ET
EMC
/Code << /MCID 18 >> BDC
  BT
    1 0 0 1 30 413.2 Tm
    /F2 8 Tf
    (method migrate\(Supply:D: --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 411.2 562 12.8 re
  B
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F3 10 Tf
    (Takes a ) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F2 10 Tf
    [ -3582 (Supply) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F3 10 Tf
    [ -7782 ( which itself has values that are of type ) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F2 10 Tf
    [ -23890 (Supply) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F3 10 Tf
    [ -28090 ( as input. Each time the outer ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F2 10 Tf
    [ -40283 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F3 10 Tf
    [ -44483 ( emits a new ) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F2 10 Tf
    [ -50010 (Supply) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F3 10 Tf
    [ -54210 (, this) ] TJ
    T*
    (will be tapped and its values emitted. Any previously tapped ) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 380.2 Tm
    /F2 10 Tf
    [ -24720 (Supply) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 380.2 Tm
    /F3 10 Tf
    [ -28920 ( will be closed. This is useful for migrating between different data) ] TJ
    T*
    (sources, and only paying attention to the latest one.) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 347.2 Tm
    (For example, imagine an application where the user can switch between different stocks. When they switch to a new one, a connection is) Tj
    T*
    (established to a web socket to get the latest values, and any previous connection should be closed. Each stream of values coming over the web) Tj
    T*
    (socket would be represented as a Supply, which themselves are emitted into a Supply of latest data sources to watch. The ) Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F2 10 Tf
    [ -48992 (migrate) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F3 10 Tf
    [ -53792 ( method) ] TJ
    T*
    (could be used to flatten this supply of supplies into a single Supply of the current values that the user cares about.) Tj
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 292.2 Tm
    (Here is a simple simulation of such a program:) Tj
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 30 274.6 Tm
    /F2 8 Tf
    (my Supplier $stock-sources .= new;) Tj
    8.8 TL
    T*
    [  ] TJ
    T*
    (sub watch-stock\($symbol\) {) Tj
    T*
    (    $stock-sources.emit: supply {) Tj
    T*
    (        say "Starting to watch $symbol";) Tj
    T*
    (        whenever Supply.interval\(1\) {) Tj
    T*
    (            emit "$symbol: 111." ~ 99.rand.Int;) Tj
    T*
    (        }) Tj
    T*
    (        CLOSE say "Lost interest in $symbol";) Tj
    T*
    (    }) Tj
    T*
    (}) Tj
    T*
    [  ] TJ
    T*
    ($stock-sources.Supply.migrate.tap: *.say;) Tj
    T*
    [  ] TJ
    T*
    (watch-stock\('GOOG'\);) Tj
    T*
    (sleep 3;) Tj
    T*
    (watch-stock\('AAPL'\);) Tj
    T*
    (sleep 3;) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 123 562 162.4 re
  B
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 103 Tm
    /F3 10 Tf
    (Which produces output like:) Tj
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 30 85.4 Tm
    /F2 8 Tf
    (Starting to watch GOOG) Tj
    T*
    (GOOG: 111.67) Tj
    T*
    (GOOG: 111.20) Tj
    T*
    (GOOG: 111.37) Tj
    T*
    (Lost interest in GOOG) Tj
    T*
    (Starting to watch AAPL) Tj
    T*
    (AAPL: 111.55) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 30.6 562 65.6 re
  B
Q
endstream
endobj

126 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

127 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

128 0 obj
<<
  /Type /Page
  /Contents 129 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources << /ExtGState << /GS1 130 0 R /GS2 131 0 R >> /Font << /F1 32 0 R >> >>
  /StructParents 48
>>
endobj

129 0 obj
<< /Length 178 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 6.4 Tf
    (AAPL:111.55AAPL:111.55AAPL:111.6) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 750 562 11.04 re
  B
Q
endstream
endobj

130 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

131 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

132 0 obj
<<
  /Type /Page
  /Annots [ 133 0 R 135 0 R ]
  /Contents 137 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 138 0 R /GS2 139 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 49
>>
endobj

133 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 134 0 R
  /Border [ 0 0 0 ]
  /Contents (Lists)
  /P 132 0 R
  /Rect [ 486.83 509.2 510.28 524.2 ]
  /StructParent 50
>>
endobj

134 0 obj
<< /Type /Action /S /URI /URI (/type/List) >>
endobj

135 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 136 0 R
  /Border [ 0 0 0 ]
  /Contents (Lists)
  /P 132 0 R
  /Rect [ 491.83 339.8 515.28 354.8 ]
  /StructParent 51
>>
endobj

136 0 obj
<< /Type /Action /S /URI /URI (/type/List) >>
endobj

137 0 obj
<< /Length 4609 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that combine supplies) Tj
  ET
  q
    1 w
    20 750 m
    285.02 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method merge) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method merge\(Supply @*supplies --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 657.6 562 12.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (Creates a supply to which any value seen from the given supplies, is emitted. The resulting supply is done only when all given supplies are) Tj
    11 TL
    T*
    (done. Can also be called as a class method.) Tj
  ET
EMC
/H2 << /MCID 4 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F1 16 Tf
    (method zip) Tj
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 551.8 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 534.2 Tm
    /F2 8 Tf
    (method zip\(**@s, :&with\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 532.2 562 12.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F3 10 Tf
    (Creates a supply that emits combined values as soon as there is a new value seen on ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F1 10 Tf
    [ -34050 (all) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F3 10 Tf
    [ -35356 ( of the supplies. By default, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 512.2 Tm
      [ -46883 (Lists) ] TJ
    ET
    q
      0.5 w
      488.83 511.2 m
      508.28 511.2 l
      S
    Q
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    [ -49078 ( are created, but this) ] TJ
    T*
    (can be changed by specifying your own combiner with the ) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F2 10 Tf
    [ -23912 (:with) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F3 10 Tf
    [ -27512 ( parameter. The resulting supply is done as soon as ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F1 10 Tf
    [ -48398 (any) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F3 10 Tf
    [ -50204 ( of the given) ] TJ
    T*
    (supplies are done. Can also be called as a class method.) Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    (This can also be used as a class method; in case it's used as an object method the corresponding supply will be one of the supplies combined) Tj
    T*
    (\(with no special treatment\).) Tj
  ET
EMC
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 422 Tm
    /F1 16 Tf
    (method zip-latest) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 30 364.8 Tm
    /F2 8 Tf
    (method zip-latest\(**@s, :&with, :$initial \)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 362.8 562 12.8 re
  B
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 342.8 Tm
    /F3 10 Tf
    (Creates a supply that emits combined values as soon as there is a new value seen on ) Tj
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 342.8 Tm
    /F1 10 Tf
    [ -34050 (any) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 342.8 Tm
    /F3 10 Tf
    [ -35856 ( of the supplies. By default, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 23 >> BDC
    BT
      1 0 0 1 20 342.8 Tm
      [ -47383 (Lists) ] TJ
    ET
    q
      0.5 w
      493.83 341.8 m
      513.28 341.8 l
      S
    Q
  EMC
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 342.8 Tm
    [ -49578 ( are created, but) ] TJ
    T*
    (this can be changed by specifying your own combiner with the ) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 331.8 Tm
    /F2 10 Tf
    [ -25607 (:with) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 331.8 Tm
    /F3 10 Tf
    [ -29207 ( parameter. The optional :initial parameter can be used to indicate the) ] TJ
    T*
    (initial state of the combined values. By default, all supplies have to have at least one value emitted on them before the first combined values is) Tj
    T*
    (emitted on the resulting supply. The resulting supply is done as soon as ) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 309.8 Tm
    /F1 10 Tf
    [ -29027 (any) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 309.8 Tm
    /F3 10 Tf
    [ -30833 ( of the given supplies are done. Can also be called as a class) ] TJ
    T*
    (method.) Tj
  ET
EMC
endstream
endobj

138 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

139 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

140 0 obj
<<
  /Type /Page
  /Annots [ 141 0 R 143 0 R ]
  /Contents 145 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 146 0 R /GS2 147 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 52
>>
endobj

141 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 142 0 R
  /Border [ 0 0 0 ]
  /Contents (enum)
  /P 140 0 R
  /Rect [ 35.77 511.4 61.99 526.4 ]
  /StructParent 53
>>
endobj

142 0 obj
<< /Type /Action /S /URI /URI (/language/typesystem#enum) >>
endobj

143 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 144 0 R
  /Border [ 0 0 0 ]
  /Contents (Rakudo)
  /P 140 0 R
  /Rect [ 48.82 489.4 83.93 504.4 ]
  /StructParent 54
>>
endobj

144 0 obj
<< /Type /Action /S /URI /URI (/language/glossary#Rakudo) >>
endobj

145 0 obj
<< /Length 5500 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (I/O features exposed as supplies) Tj
  ET
  q
    1 w
    20 750 m
    292.24 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (sub signal) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (sub signal\(*@signals, :$scheduler = $*SCHEDULER\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 657.6 562 12.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (Creates a supply for the Signal enums \(such as SIGINT\) specified, and an optional ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 10 Tf
    [ -33550 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -40150 ( parameter. Any signals received, will be) ] TJ
    11 TL
    T*
    (emitted on the supply. For example:) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 609 Tm
    /F2 8 Tf
    (signal\(SIGINT\).tap\( { say "Thank you for your attention"; exit 0 } \);) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 607 562 12.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 587 Tm
    /F3 10 Tf
    (would catch Control-C, thank you, and then exit.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 565 Tm
    (To go from a signal number to a ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 565 Tm
    [ -13415 (Signal) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 565 Tm
    [ -16221 (, you can do something like this:) ] TJ
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 30 547.4 Tm
    /F2 8 Tf
    (signal\(Signal\(2\)\).tap\( -> $sig { say "Received signal: $sig" } \);) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 545.4 562 12.8 re
  B
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 525.4 Tm
    /F3 10 Tf
    (The list of supported signals can be found by checking ) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 525.4 Tm
    /F2 10 Tf
    [ -22358 (Signal::.keys) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 525.4 Tm
    /F3 10 Tf
    [ -30758 ( \(as you would any enum\). For more details on how enums work) ] TJ
    T*
    (see ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 15 >> BDC
    BT
      1 0 0 1 20 514.4 Tm
      [ -1777 (enum) ] TJ
    ET
    q
      0.5 w
      37.77 513.4 m
      59.99 513.4 l
      S
    Q
  EMC
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    [ -4249 (.) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F1 10 Tf
    (Note:) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F3 10 Tf
    [ -2582 ( ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 19 >> BDC
    BT
      1 0 0 1 20 492.4 Tm
      [ -3082 (Rakudo) ] TJ
    ET
    q
      0.5 w
      50.82 491.4 m
      81.93 491.4 l
      S
    Q
  EMC
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    [ -6443 ( versions up to 2018.05 had a bug due to which numeric values of signals were incorrect on some systems. For example, ) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F2 10 Tf
    [ -55103 ] TJ
    T*
    (Signal\(10\)) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F3 10 Tf
    [ -6600 ( was returning ) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F2 10 Tf
    [ -12821 (SIGBUS) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F3 10 Tf
    [ -17021 ( even if it was actually ) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F2 10 Tf
    [ -26547 (SIGUSR1) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F3 10 Tf
    [ -31347 ( on a particular system. That being said, using ) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 481.4 Tm
    /F2 10 Tf
    [ -50234 ] TJ
    T*
    (signal\(SIGUSR1\)) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -9600 ( was working as expected on all Rakudo versions except 2018.04, 2018.04.1 and 2018.05, where the intended) ] TJ
    T*
    (behavior can be achieved by using ) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 10 Tf
    [ -14302 (signal\(SIGBUS\)) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -23302 ( instead. These issues are resolved in Rakudo releases after 2018.05.) ] TJ
  ET
EMC
/H2 << /MCID 31 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F1 16 Tf
    (method IO::Notification.watch-path) Tj
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 30 389 Tm
    /F2 8 Tf
    (method watch-path\($path --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 387 562 12.8 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 367 Tm
    /F3 10 Tf
    (Creates a supply to which the OS will emit values to indicate changes on the filesystem for the given path. Also has a shortcut with the ) Tj
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 367 Tm
    /F2 10 Tf
    [ -54439 ] TJ
    T*
    (watch) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 356 Tm
    /F3 10 Tf
    [ -3600 ( method on an IO object, like this:) ] TJ
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 30 338.4 Tm
    /F2 8 Tf
    (IO::Notification.watch-path\("."\).act\( { say "$^file changed" } \);) Tj
    8.8 TL
    T*
    (".".IO.watch.act\(                     { say "$^file changed" } \);    same) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 327.6 562 21.6 re
  B
Q
endstream
endobj

146 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

147 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

148 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

149 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

150 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Italic
  /Encoding /WinAnsiEncoding
>>
endobj

151 0 obj
<< /Count 62 /First 152 0 R /Last 641 0 R >>
endobj

152 0 obj
<<
  /Count 2
  /Dest /class_Supply
  /First 153 0 R
  /Last 153 0 R
  /Next 584 0 R
  /SE 156 0 R
  /Title (class Supply)
>>
endobj

153 0 obj
<<
  /Count 1
  /Dest /Asynchronous_data_stream_with_multiple_subscribers
  /SE 154 0 R
  /Title (Asynchronous data stream with multiple subscribers)
>>
endobj

154 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 155 0 R
  /Pg 4 0 R
  /T (Asynchronous data stream with multiple subscribers)
>>
endobj

155 0 obj
<<
  /Type /StructElem
  /S /Document
  /K [ 156 0 R 154 0 R 157 0 R 158 0 R 161 0 R 164 0 R 165 0 R 166 0 R 169 0 R 170 0 R 177 0 R 180 0 R 183 0 R 184 0 R 185 0 R 186 0 R 187 0 R 188 0 R 189 0 R 192 0 R 195 0 R 196 0 R 197 0 R 198 0 R 199 0 R 200 0 R 201 0 R 202 0 R 203 0 R 204 0 R 205 0 R 208 0 R 209 0 R 210 0 R 213 0 R 214 0 R 215 0 R 218 0 R 219 0 R 220 0 R 221 0 R 222 0 R 223 0 R 224 0 R 225 0 R 226 0 R 227 0 R 228 0 R 229 0 R 230 0 R 231 0 R 232 0 R 233 0 R 234 0 R 235 0 R 236 0 R 237 0 R 238 0 R 239 0 R 240 0 R 241 0 R 242 0 R 243 0 R 244 0 R 245 0 R 246 0 R 247 0 R 248 0 R 249 0 R 252 0 R 253 0 R 254 0 R 255 0 R 258 0 R 259 0 R 260 0 R 261 0 R 262 0 R 265 0 R 266 0 R 267 0 R 268 0 R 269 0 R 270 0 R 271 0 R 272 0 R 273 0 R 274 0 R 275 0 R 276 0 R 277 0 R 278 0 R 279 0 R 280 0 R 281 0 R 282 0 R 283 0 R 288 0 R 289 0 R 290 0 R 291 0 R 292 0 R 293 0 R 294 0 R 295 0 R 296 0 R 297 0 R 298 0 R 299 0 R 300 0 R 301 0 R 302 0 R 303 0 R 304 0 R 305 0 R 306 0 R 307 0 R 308 0 R 309 0 R 310 0 R 311 0 R 314 0 R 315 0 R 316 0 R 317 0 R 318 0 R 319 0 R 322 0 R 323 0 R 324 0 R 325 0 R 326 0 R 327 0 R 328 0 R 329 0 R 330 0 R 331 0 R 332 0 R 346 0 R 347 0 R 348 0 R 349 0 R 350 0 R 351 0 R 352 0 R 353 0 R 354 0 R 357 0 R 358 0 R 359 0 R 360 0 R 361 0 R 362 0 R 363 0 R 364 0 R 365 0 R 395 0 R 396 0 R 397 0 R 398 0 R 399 0 R 400 0 R 401 0 R 402 0 R 403 0 R 406 0 R 407 0 R 408 0 R 409 0 R 410 0 R 411 0 R 415 0 R 416 0 R 420 0 R 421 0 R 425 0 R 426 0 R 430 0 R 431 0 R 432 0 R 433 0 R 437 0 R 438 0 R 442 0 R 443 0 R 447 0 R 448 0 R 452 0 R 453 0 R 457 0 R 458 0 R 462 0 R 463 0 R 467 0 R 468 0 R 469 0 R 470 0 R 471 0 R 472 0 R 473 0 R 474 0 R 475 0 R 476 0 R 477 0 R 478 0 R 479 0 R 480 0 R 481 0 R 482 0 R 485 0 R 486 0 R 487 0 R 488 0 R 489 0 R 490 0 R 491 0 R 492 0 R 493 0 R 494 0 R 495 0 R 498 0 R 499 0 R 500 0 R 503 0 R 504 0 R 507 0 R 510 0 R 511 0 R 512 0 R 515 0 R 516 0 R 517 0 R 520 0 R 521 0 R 522 0 R 525 0 R 526 0 R 527 0 R 530 0 R 531 0 R 532 0 R 533 0 R 534 0 R 535 0 R 536 0 R 537 0 R 538 0 R 539 0 R 540 0 R 541 0 R 542 0 R 543 0 R 544 0 R 545 0 R 546 0 R 548 0 R 549 0 R 550 0 R 551 0 R 552 0 R 553 0 R 554 0 R 555 0 R 558 0 R 559 0 R 560 0 R 561 0 R 562 0 R 565 0 R 566 0 R 567 0 R 568 0 R 569 0 R 570 0 R 571 0 R 572 0 R 573 0 R 576 0 R 579 0 R 580 0 R 581 0 R 582 0 R ]
  /P 583 0 R
>>
endobj

156 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 155 0 R
  /Pg 4 0 R
  /T (class Supply)
>>
endobj

157 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 155 0 R /Pg 4 0 R >>
endobj

158 0 obj
<< /Type /StructElem /S /P /K [ 3 159 0 R 5 6 7 ] /P 155 0 R /Pg 4 0 R >>
endobj

159 0 obj
<< /Type /StructElem /S /Link /K [ 160 0 R 4 ] /P 158 0 R >>
endobj

160 0 obj
<< /Type /OBJR /Obj 5 0 R /Pg 4 0 R >>
endobj

161 0 obj
<< /Type /StructElem /S /P /K [ 8 162 0 R 10 ] /P 155 0 R /Pg 4 0 R >>
endobj

162 0 obj
<< /Type /StructElem /S /Link /K [ 163 0 R 9 ] /P 161 0 R >>
endobj

163 0 obj
<< /Type /OBJR /Obj 7 0 R /Pg 4 0 R >>
endobj

164 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 11 12 13 14 15 16 17 18 19 ]
  /P 155 0 R
  /Pg 4 0 R
>>
endobj

165 0 obj
<< /Type /StructElem /S /P /K [ 20 21 22 23 24 ] /P 155 0 R /Pg 4 0 R >>
endobj

166 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 25 26 27 28 29 167 0 R 31 32 33 34 35 36 37 ]
  /P 155 0 R
  /Pg 4 0 R
>>
endobj

167 0 obj
<< /Type /StructElem /S /Link /K [ 168 0 R 30 ] /P 166 0 R >>
endobj

168 0 obj
<< /Type /OBJR /Obj 9 0 R /Pg 4 0 R >>
endobj

169 0 obj
<< /Type /StructElem /S /Code /K [ 38 ] /P 155 0 R /Pg 4 0 R >>
endobj

170 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 39 171 0 R 41 42 43 173 0 R 45 175 0 R 47 48 49 ]
  /P 155 0 R
  /Pg 4 0 R
>>
endobj

171 0 obj
<< /Type /StructElem /S /Link /K [ 172 0 R 40 ] /P 170 0 R >>
endobj

172 0 obj
<< /Type /OBJR /Obj 11 0 R /Pg 4 0 R >>
endobj

173 0 obj
<< /Type /StructElem /S /Link /K [ 174 0 R 44 ] /P 170 0 R >>
endobj

174 0 obj
<< /Type /OBJR /Obj 13 0 R /Pg 4 0 R >>
endobj

175 0 obj
<< /Type /StructElem /S /Link /K [ 176 0 R 46 ] /P 170 0 R >>
endobj

176 0 obj
<< /Type /OBJR /Obj 15 0 R /Pg 4 0 R >>
endobj

177 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 50 51 52 178 0 R 54 ]
  /P 155 0 R
  /Pg 4 0 R
>>
endobj

178 0 obj
<< /Type /StructElem /S /Link /K [ 179 0 R 53 ] /P 177 0 R >>
endobj

179 0 obj
<< /Type /OBJR /Obj 17 0 R /Pg 4 0 R >>
endobj

180 0 obj
<< /Type /StructElem /S /P /K [ 55 181 0 R 57 ] /P 155 0 R /Pg 4 0 R >>
endobj

181 0 obj
<< /Type /StructElem /S /Link /K [ 182 0 R 56 ] /P 180 0 R >>
endobj

182 0 obj
<< /Type /OBJR /Obj 19 0 R /Pg 4 0 R >>
endobj

183 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 155 0 R
  /Pg 23 0 R
  /T (Methods that return Taps)
>>
endobj

184 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 155 0 R
  /Pg 23 0 R
  /T (method tap)
>>
endobj

185 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 155 0 R /Pg 23 0 R >>
endobj

186 0 obj
<< /Type /StructElem /S /P /K [ 3 4 5 ] /P 155 0 R /Pg 23 0 R >>
endobj

187 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]
  /P 155 0 R
  /Pg 23 0 R
>>
endobj

188 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 21 22 23 24 25 26 27 28 29 30 31 ]
  /P 155 0 R
  /Pg 23 0 R
>>
endobj

189 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 32 33 34 190 0 R 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 ]
  /P 155 0 R
  /Pg 23 0 R
>>
endobj

190 0 obj
<< /Type /StructElem /S /Link /K [ 191 0 R 35 ] /P 189 0 R >>
endobj

191 0 obj
<< /Type /OBJR /Obj 24 0 R /Pg 23 0 R >>
endobj

192 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 51 52 53 193 0 R 55 56 57 ]
  /P 155 0 R
  /Pg 23 0 R
>>
endobj

193 0 obj
<< /Type /StructElem /S /Link /K [ 194 0 R 54 ] /P 192 0 R >>
endobj

194 0 obj
<< /Type /OBJR /Obj 26 0 R /Pg 23 0 R >>
endobj

195 0 obj
<< /Type /StructElem /S /Code /K [ 58 ] /P 155 0 R /Pg 23 0 R >>
endobj

196 0 obj
<< /Type /StructElem /S /P /K [ 59 ] /P 155 0 R /Pg 23 0 R >>
endobj

197 0 obj
<< /Type /StructElem /S /Code /K [ 60 ] /P 155 0 R /Pg 23 0 R >>
endobj

198 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 61 ]
  /P 155 0 R
  /Pg 23 0 R
  /T (method act)
>>
endobj

199 0 obj
<< /Type /StructElem /S /Code /K [ 62 ] /P 155 0 R /Pg 23 0 R >>
endobj

200 0 obj
<< /Type /StructElem /S /P /K [ 63 64 65 ] /P 155 0 R /Pg 23 0 R >>
endobj

201 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 155 0 R
  /Pg 35 0 R
  /T (Utility methods)
>>
endobj

202 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 155 0 R
  /Pg 35 0 R
  /T (method Capture)
>>
endobj

203 0 obj
<< /Type /StructElem /S /P /K [ 2 ] /P 155 0 R /Pg 35 0 R >>
endobj

204 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 155 0 R /Pg 35 0 R >>
endobj

205 0 obj
<< /Type /StructElem /S /P /K [ 4 206 0 R 6 ] /P 155 0 R /Pg 35 0 R >>
endobj

206 0 obj
<< /Type /StructElem /S /Link /K [ 207 0 R 5 ] /P 205 0 R >>
endobj

207 0 obj
<< /Type /OBJR /Obj 36 0 R /Pg 35 0 R >>
endobj

208 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 7 ]
  /P 155 0 R
  /Pg 35 0 R
  /T (method Channel)
>>
endobj

209 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 155 0 R /Pg 35 0 R >>
endobj

210 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 9 211 0 R 11 12 13 ]
  /P 155 0 R
  /Pg 35 0 R
>>
endobj

211 0 obj
<< /Type /StructElem /S /Link /K [ 212 0 R 10 ] /P 210 0 R >>
endobj

212 0 obj
<< /Type /OBJR /Obj 38 0 R /Pg 35 0 R >>
endobj

213 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 14 ]
  /P 155 0 R
  /Pg 35 0 R
  /T (method Promise)
>>
endobj

214 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 155 0 R /Pg 35 0 R >>
endobj

215 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 16 216 0 R 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 ]
  /P 155 0 R
  /Pg 35 0 R
>>
endobj

216 0 obj
<< /Type /StructElem /S /Link /K [ 217 0 R 17 ] /P 215 0 R >>
endobj

217 0 obj
<< /Type /OBJR /Obj 40 0 R /Pg 35 0 R >>
endobj

218 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 155 0 R /Pg 35 0 R >>
endobj

219 0 obj
<< /Type /StructElem /S /P /K [ 38 39 40 ] /P 155 0 R /Pg 35 0 R >>
endobj

220 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 41 ]
  /P 155 0 R
  /Pg 35 0 R
  /T (method live)
>>
endobj

221 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 155 0 R /Pg 35 0 R >>
endobj

222 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 43 44 45 46 47 48 49 50 51 52 53 ]
  /P 155 0 R
  /Pg 35 0 R
>>
endobj

223 0 obj
<< /Type /StructElem /S /Code /K [ 54 ] /P 155 0 R /Pg 35 0 R >>
endobj

224 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 55 ]
  /P 155 0 R
  /Pg 35 0 R
  /T (method schedule-on)
>>
endobj

225 0 obj
<< /Type /StructElem /S /Code /K [ 56 ] /P 155 0 R /Pg 35 0 R >>
endobj

226 0 obj
<< /Type /StructElem /S /P /K [ 57 ] /P 155 0 R /Pg 35 0 R >>
endobj

227 0 obj
<< /Type /StructElem /S /P /K [ 58 ] /P 155 0 R /Pg 35 0 R >>
endobj

228 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 155 0 R
  /Pg 45 0 R
  /T (Methods that wait until the supply is done)
>>
endobj

229 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 155 0 R
  /Pg 45 0 R
  /T (method wait)
>>
endobj

230 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 155 0 R /Pg 45 0 R >>
endobj

231 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 3 4 5 6 7 8 9 10 11 12 13 14 15 ]
  /P 155 0 R
  /Pg 45 0 R
>>
endobj

232 0 obj
<< /Type /StructElem /S /Code /K [ 16 ] /P 155 0 R /Pg 45 0 R >>
endobj

233 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 17 ]
  /P 155 0 R
  /Pg 45 0 R
  /T (method list)
>>
endobj

234 0 obj
<< /Type /StructElem /S /Code /K [ 18 ] /P 155 0 R /Pg 45 0 R >>
endobj

235 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 19 20 21 22 23 24 25 26 27 28 29 30 31 ]
  /P 155 0 R
  /Pg 45 0 R
>>
endobj

236 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 32 ]
  /P 155 0 R
  /Pg 45 0 R
  /T (method Seq)
>>
endobj

237 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 155 0 R /Pg 45 0 R >>
endobj

238 0 obj
<< /Type /StructElem /S /P /K [ 34 35 36 37 38 ] /P 155 0 R /Pg 45 0 R >>
endobj

239 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 39 ]
  /P 155 0 R
  /Pg 45 0 R
  /T (method grab)
>>
endobj

240 0 obj
<< /Type /StructElem /S /Code /K [ 40 ] /P 155 0 R /Pg 45 0 R >>
endobj

241 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 ]
  /P 155 0 R
  /Pg 45 0 R
>>
endobj

242 0 obj
<< /Type /StructElem /S /Code /K [ 56 ] /P 155 0 R /Pg 45 0 R >>
endobj

243 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 57 ]
  /P 155 0 R
  /Pg 45 0 R
  /T (method reverse)
>>
endobj

244 0 obj
<< /Type /StructElem /S /Code /K [ 58 ] /P 155 0 R /Pg 45 0 R >>
endobj

245 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 ]
  /P 155 0 R
  /Pg 45 0 R
>>
endobj

246 0 obj
<< /Type /StructElem /S /Code /K [ 0 ] /P 155 0 R /Pg 49 0 R >>
endobj

247 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 155 0 R
  /Pg 49 0 R
  /T (method sort)
>>
endobj

248 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 155 0 R /Pg 49 0 R >>
endobj

249 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 3 4 5 6 7 8 9 10 11 250 0 R 13 14 15 16 17 18 19 ]
  /P 155 0 R
  /Pg 49 0 R
>>
endobj

250 0 obj
<< /Type /StructElem /S /Link /K [ 251 0 R 12 ] /P 249 0 R >>
endobj

251 0 obj
<< /Type /OBJR /Obj 50 0 R /Pg 49 0 R >>
endobj

252 0 obj
<< /Type /StructElem /S /Code /K [ 20 ] /P 155 0 R /Pg 49 0 R >>
endobj

253 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 21 ]
  /P 155 0 R
  /Pg 49 0 R
  /T (method collate)
>>
endobj

254 0 obj
<< /Type /StructElem /S /Code /K [ 22 ] /P 155 0 R /Pg 49 0 R >>
endobj

255 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 23 24 25 26 27 28 29 30 31 256 0 R 33 ]
  /P 155 0 R
  /Pg 49 0 R
>>
endobj

256 0 obj
<< /Type /StructElem /S /Link /K [ 257 0 R 32 ] /P 255 0 R >>
endobj

257 0 obj
<< /Type /OBJR /Obj 52 0 R /Pg 49 0 R >>
endobj

258 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 155 0 R /Pg 49 0 R >>
endobj

259 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 35 ]
  /P 155 0 R
  /Pg 49 0 R
  /T (method reduce)
>>
endobj

260 0 obj
<< /Type /StructElem /S /P /K [ 36 ] /P 155 0 R /Pg 49 0 R >>
endobj

261 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 155 0 R /Pg 49 0 R >>
endobj

262 0 obj
<< /Type /StructElem /S /P /K [ 38 263 0 R 40 ] /P 155 0 R /Pg 49 0 R >>
endobj

263 0 obj
<< /Type /StructElem /S /Link /K [ 264 0 R 39 ] /P 262 0 R >>
endobj

264 0 obj
<< /Type /OBJR /Obj 54 0 R /Pg 49 0 R >>
endobj

265 0 obj
<< /Type /StructElem /S /Code /K [ 41 ] /P 155 0 R /Pg 49 0 R >>
endobj

266 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 155 0 R
  /Pg 59 0 R
  /T (Methods that return another Supply)
>>
endobj

267 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 155 0 R
  /Pg 59 0 R
  /T (method from-list)
>>
endobj

268 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 155 0 R /Pg 59 0 R >>
endobj

269 0 obj
<< /Type /StructElem /S /P /K [ 3 ] /P 155 0 R /Pg 59 0 R >>
endobj

270 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 155 0 R /Pg 59 0 R >>
endobj

271 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 5 ]
  /P 155 0 R
  /Pg 59 0 R
  /T (method share)
>>
endobj

272 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 155 0 R /Pg 59 0 R >>
endobj

273 0 obj
<< /Type /StructElem /S /P /K [ 7 ] /P 155 0 R /Pg 59 0 R >>
endobj

274 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 155 0 R /Pg 59 0 R >>
endobj

275 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 9 ]
  /P 155 0 R
  /Pg 59 0 R
  /T (method flat)
>>
endobj

276 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 155 0 R /Pg 59 0 R >>
endobj

277 0 obj
<< /Type /StructElem /S /P /K [ 11 ] /P 155 0 R /Pg 59 0 R >>
endobj

278 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 12 ]
  /P 155 0 R
  /Pg 59 0 R
  /T (method do)
>>
endobj

279 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 155 0 R /Pg 59 0 R >>
endobj

280 0 obj
<< /Type /StructElem /S /P /K [ 14 ] /P 155 0 R /Pg 59 0 R >>
endobj

281 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 15 ]
  /P 155 0 R
  /Pg 59 0 R
  /T (method on-close)
>>
endobj

282 0 obj
<< /Type /StructElem /S /Code /K [ 16 ] /P 155 0 R /Pg 59 0 R >>
endobj

283 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 17 18 19 20 21 284 0 R 23 24 25 26 27 28 29 30 31 32 33 286 0 R 35 ]
  /P 155 0 R
  /Pg 59 0 R
>>
endobj

284 0 obj
<< /Type /StructElem /S /Link /K [ 285 0 R 22 ] /P 283 0 R >>
endobj

285 0 obj
<< /Type /OBJR /Obj 60 0 R /Pg 59 0 R >>
endobj

286 0 obj
<< /Type /StructElem /S /Link /K [ 287 0 R 34 ] /P 283 0 R >>
endobj

287 0 obj
<< /Type /OBJR /Obj 62 0 R /Pg 59 0 R >>
endobj

288 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 155 0 R /Pg 59 0 R >>
endobj

289 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 155 0 R
  /Pg 67 0 R
  /T (method interval)
>>
endobj

290 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 155 0 R /Pg 67 0 R >>
endobj

291 0 obj
<< /Type /StructElem /S /P /K [ 2 3 4 5 6 ] /P 155 0 R /Pg 67 0 R >>
endobj

292 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 7 8 9 10 11 12 13 ]
  /P 155 0 R
  /Pg 67 0 R
>>
endobj

293 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 14 ]
  /P 155 0 R
  /Pg 67 0 R
  /T (method grep)
>>
endobj

294 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 155 0 R /Pg 67 0 R >>
endobj

295 0 obj
<< /Type /StructElem /S /P /K [ 16 17 18 ] /P 155 0 R /Pg 67 0 R >>
endobj

296 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 155 0 R /Pg 67 0 R >>
endobj

297 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 20 ]
  /P 155 0 R
  /Pg 67 0 R
  /T (method map)
>>
endobj

298 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 155 0 R /Pg 67 0 R >>
endobj

299 0 obj
<< /Type /StructElem /S /P /K [ 22 23 24 ] /P 155 0 R /Pg 67 0 R >>
endobj

300 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 155 0 R /Pg 67 0 R >>
endobj

301 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 26 ]
  /P 155 0 R
  /Pg 67 0 R
  /T (method batch)
>>
endobj

302 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 155 0 R /Pg 67 0 R >>
endobj

303 0 obj
<< /Type /StructElem /S /P /K [ 28 29 30 31 32 ] /P 155 0 R /Pg 67 0 R >>
endobj

304 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 33 34 35 36 37 38 39 40 ]
  /P 155 0 R
  /Pg 67 0 R
>>
endobj

305 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 41 ]
  /P 155 0 R
  /Pg 67 0 R
  /T (method elems)
>>
endobj

306 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 155 0 R /Pg 67 0 R >>
endobj

307 0 obj
<< /Type /StructElem /S /P /K [ 43 ] /P 155 0 R /Pg 67 0 R >>
endobj

308 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 155 0 R
  /Pg 71 0 R
  /T (method head)
>>
endobj

309 0 obj
<< /Type /StructElem /S /P /K [ 1 ] /P 155 0 R /Pg 71 0 R >>
endobj

310 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 155 0 R /Pg 71 0 R >>
endobj

311 0 obj
<< /Type /StructElem /S /P /K [ 3 312 0 R 5 ] /P 155 0 R /Pg 71 0 R >>
endobj

312 0 obj
<< /Type /StructElem /S /Link /K [ 313 0 R 4 ] /P 311 0 R >>
endobj

313 0 obj
<< /Type /OBJR /Obj 72 0 R /Pg 71 0 R >>
endobj

314 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 155 0 R /Pg 71 0 R >>
endobj

315 0 obj
<< /Type /StructElem /S /P /K [ 7 8 9 10 ] /P 155 0 R /Pg 71 0 R >>
endobj

316 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 155 0 R /Pg 71 0 R >>
endobj

317 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 12 ]
  /P 155 0 R
  /Pg 71 0 R
  /T (method tail)
>>
endobj

318 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 155 0 R /Pg 71 0 R >>
endobj

319 0 obj
<< /Type /StructElem /S /P /K [ 14 320 0 R 16 ] /P 155 0 R /Pg 71 0 R >>
endobj

320 0 obj
<< /Type /StructElem /S /Link /K [ 321 0 R 15 ] /P 319 0 R >>
endobj

321 0 obj
<< /Type /OBJR /Obj 74 0 R /Pg 71 0 R >>
endobj

322 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 155 0 R /Pg 71 0 R >>
endobj

323 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 18 19 20 21 22 23 24 25 26 ]
  /P 155 0 R
  /Pg 71 0 R
>>
endobj

324 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 155 0 R /Pg 71 0 R >>
endobj

325 0 obj
<< /Type /StructElem /S /P /K [ 28 ] /P 155 0 R /Pg 71 0 R >>
endobj

326 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 29 ]
  /P 155 0 R
  /Pg 71 0 R
  /T (method first)
>>
endobj

327 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 155 0 R /Pg 71 0 R >>
endobj

328 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 31 32 33 34 35 36 37 38 39 40 41 ]
  /P 155 0 R
  /Pg 71 0 R
>>
endobj

329 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 155 0 R /Pg 71 0 R >>
endobj

330 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 43 ]
  /P 155 0 R
  /Pg 71 0 R
  /T (method split)
>>
endobj

331 0 obj
<< /Type /StructElem /S /Code /K [ 44 ] /P 155 0 R /Pg 71 0 R >>
endobj

332 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 45 46 47 333 0 R 335 0 R 337 0 R 338 0 R 339 0 R 340 0 R 341 0 R 342 0 R 345 0 R ]
  /P 155 0 R
  /Pg 71 0 R
>>
endobj

333 0 obj
<< /Type /StructElem /S /Link /K [ 334 0 R ] /P 332 0 R >>
endobj

334 0 obj
<< /Type /OBJR /Obj 76 0 R /Pg 71 0 R >>
endobj

335 0 obj
<< /Type /StructElem /S /Link /K [ 336 0 R 48 ] /P 332 0 R >>
endobj

336 0 obj
<< /Type /OBJR /Obj 78 0 R /Pg 71 0 R >>
endobj

337 0 obj
<< /Type /MCR /MCID 0 /Pg 82 0 R >>
endobj

338 0 obj
<< /Type /MCR /MCID 1 /Pg 82 0 R >>
endobj

339 0 obj
<< /Type /MCR /MCID 2 /Pg 82 0 R >>
endobj

340 0 obj
<< /Type /MCR /MCID 3 /Pg 82 0 R >>
endobj

341 0 obj
<< /Type /MCR /MCID 4 /Pg 82 0 R >>
endobj

342 0 obj
<< /Type /StructElem /S /Link /K [ 343 0 R 344 0 R ] /P 332 0 R >>
endobj

343 0 obj
<< /Type /OBJR /Obj 83 0 R /Pg 82 0 R >>
endobj

344 0 obj
<< /Type /MCR /MCID 5 /Pg 82 0 R >>
endobj

345 0 obj
<< /Type /MCR /MCID 6 /Pg 82 0 R >>
endobj

346 0 obj
<< /Type /StructElem /S /Code /K [ 7 ] /P 155 0 R /Pg 82 0 R >>
endobj

347 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 8 ]
  /P 155 0 R
  /Pg 82 0 R
  /T (method rotate)
>>
endobj

348 0 obj
<< /Type /StructElem /S /Code /K [ 9 ] /P 155 0 R /Pg 82 0 R >>
endobj

349 0 obj
<< /Type /StructElem /S /P /K [ 10 11 12 ] /P 155 0 R /Pg 82 0 R >>
endobj

350 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 155 0 R /Pg 82 0 R >>
endobj

351 0 obj
<< /Type /StructElem /S /P /K [ 14 15 ] /P 155 0 R /Pg 82 0 R >>
endobj

352 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 16 ]
  /P 155 0 R
  /Pg 82 0 R
  /T (method rotor)
>>
endobj

353 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 155 0 R /Pg 82 0 R >>
endobj

354 0 obj
<< /Type /StructElem /S /P /K [ 18 355 0 R 20 ] /P 155 0 R /Pg 82 0 R >>
endobj

355 0 obj
<< /Type /StructElem /S /Link /K [ 356 0 R 19 ] /P 354 0 R >>
endobj

356 0 obj
<< /Type /OBJR /Obj 85 0 R /Pg 82 0 R >>
endobj

357 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 21 ]
  /P 155 0 R
  /Pg 82 0 R
  /T (method delayed)
>>
endobj

358 0 obj
<< /Type /StructElem /S /Code /K [ 22 ] /P 155 0 R /Pg 82 0 R >>
endobj

359 0 obj
<< /Type /StructElem /S /P /K [ 23 ] /P 155 0 R /Pg 82 0 R >>
endobj

360 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 24 ]
  /P 155 0 R
  /Pg 82 0 R
  /T (method throttle)
>>
endobj

361 0 obj
<< /Type /StructElem /S /P /K [ 25 ] /P 155 0 R /Pg 82 0 R >>
endobj

362 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 155 0 R /Pg 82 0 R >>
endobj

363 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 155 0 R /Pg 82 0 R >>
endobj

364 0 obj
<< /Type /StructElem /S /P /K [ 28 29 30 ] /P 155 0 R /Pg 82 0 R >>
endobj

365 0 obj
<< /Type /StructElem /S /Table /K [ 366 0 R 370 0 R ] /P 155 0 R >>
endobj

366 0 obj
<< /Type /StructElem /S /THead /K [ 367 0 R ] /P 365 0 R >>
endobj

367 0 obj
<< /Type /StructElem /S /TR /K [ 368 0 R 369 0 R ] /P 366 0 R >>
endobj

368 0 obj
<< /Type /StructElem /S /TH /K [ 0 ] /P 367 0 R /Pg 90 0 R >>
endobj

369 0 obj
<< /Type /StructElem /S /TH /K [ 1 ] /P 367 0 R /Pg 90 0 R >>
endobj

370 0 obj
<<
  /Type /StructElem
  /S /TBody
  /K [ 371 0 R 374 0 R 377 0 R 380 0 R 383 0 R 386 0 R 389 0 R 392 0 R ]
  /P 365 0 R
>>
endobj

371 0 obj
<< /Type /StructElem /S /TR /K [ 372 0 R 373 0 R ] /P 370 0 R >>
endobj

372 0 obj
<< /Type /StructElem /S /TD /K [ 2 ] /P 371 0 R /Pg 90 0 R >>
endobj

373 0 obj
<< /Type /StructElem /S /TD /K [ 3 ] /P 371 0 R /Pg 90 0 R >>
endobj

374 0 obj
<< /Type /StructElem /S /TR /K [ 375 0 R 376 0 R ] /P 370 0 R >>
endobj

375 0 obj
<< /Type /StructElem /S /TD /K [ 4 ] /P 374 0 R /Pg 90 0 R >>
endobj

376 0 obj
<< /Type /StructElem /S /TD /K [ 5 ] /P 374 0 R /Pg 90 0 R >>
endobj

377 0 obj
<< /Type /StructElem /S /TR /K [ 378 0 R 379 0 R ] /P 370 0 R >>
endobj

378 0 obj
<< /Type /StructElem /S /TD /K [ 6 ] /P 377 0 R /Pg 90 0 R >>
endobj

379 0 obj
<< /Type /StructElem /S /TD /K [ 7 ] /P 377 0 R /Pg 90 0 R >>
endobj

380 0 obj
<< /Type /StructElem /S /TR /K [ 381 0 R 382 0 R ] /P 370 0 R >>
endobj

381 0 obj
<< /Type /StructElem /S /TD /K [ 8 ] /P 380 0 R /Pg 90 0 R >>
endobj

382 0 obj
<< /Type /StructElem /S /TD /K [ 9 ] /P 380 0 R /Pg 90 0 R >>
endobj

383 0 obj
<< /Type /StructElem /S /TR /K [ 384 0 R 385 0 R ] /P 370 0 R >>
endobj

384 0 obj
<< /Type /StructElem /S /TD /K [ 10 ] /P 383 0 R /Pg 90 0 R >>
endobj

385 0 obj
<< /Type /StructElem /S /TD /K [ 11 ] /P 383 0 R /Pg 90 0 R >>
endobj

386 0 obj
<< /Type /StructElem /S /TR /K [ 387 0 R 388 0 R ] /P 370 0 R >>
endobj

387 0 obj
<< /Type /StructElem /S /TD /K [ 12 ] /P 386 0 R /Pg 90 0 R >>
endobj

388 0 obj
<< /Type /StructElem /S /TD /K [ 13 ] /P 386 0 R /Pg 90 0 R >>
endobj

389 0 obj
<< /Type /StructElem /S /TR /K [ 390 0 R 391 0 R ] /P 370 0 R >>
endobj

390 0 obj
<< /Type /StructElem /S /TD /K [ 14 ] /P 389 0 R /Pg 90 0 R >>
endobj

391 0 obj
<< /Type /StructElem /S /TD /K [ 15 ] /P 389 0 R /Pg 90 0 R >>
endobj

392 0 obj
<< /Type /StructElem /S /TR /K [ 393 0 R 394 0 R ] /P 370 0 R >>
endobj

393 0 obj
<< /Type /StructElem /S /TD /K [ 16 ] /P 392 0 R /Pg 90 0 R >>
endobj

394 0 obj
<< /Type /StructElem /S /TD /K [ 17 ] /P 392 0 R /Pg 90 0 R >>
endobj

395 0 obj
<< /Type /StructElem /S /P /K [ 18 19 20 ] /P 155 0 R /Pg 90 0 R >>
endobj

396 0 obj
<< /Type /StructElem /S /P /K [ 21 ] /P 155 0 R /Pg 90 0 R >>
endobj

397 0 obj
<< /Type /StructElem /S /P /K [ 22 ] /P 155 0 R /Pg 90 0 R >>
endobj

398 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 23 24 25 26 27 28 29 ]
  /P 155 0 R
  /Pg 90 0 R
>>
endobj

399 0 obj
<< /Type /StructElem /S /P /K [ 30 31 32 ] /P 155 0 R /Pg 90 0 R >>
endobj

400 0 obj
<< /Type /StructElem /S /P /K [ 33 ] /P 155 0 R /Pg 90 0 R >>
endobj

401 0 obj
<< /Type /StructElem /S /P /K [ 34 ] /P 155 0 R /Pg 90 0 R >>
endobj

402 0 obj
<< /Type /StructElem /S /P /K [ 35 36 37 ] /P 155 0 R /Pg 90 0 R >>
endobj

403 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 38 39 40 404 0 R 42 ]
  /P 155 0 R
  /Pg 90 0 R
>>
endobj

404 0 obj
<< /Type /StructElem /S /Link /K [ 405 0 R 41 ] /P 403 0 R >>
endobj

405 0 obj
<< /Type /OBJR /Obj 91 0 R /Pg 90 0 R >>
endobj

406 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 43 44 45 46 47 48 49 ]
  /P 155 0 R
  /Pg 90 0 R
>>
endobj

407 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 50 51 52 53 54 55 56 ]
  /P 155 0 R
  /Pg 90 0 R
>>
endobj

408 0 obj
<< /Type /StructElem /S /P /K [ 57 58 59 60 61 ] /P 155 0 R /Pg 90 0 R >>
endobj

409 0 obj
<<
  /Type /StructElem
  /S /H3
  /K [ 62 ]
  /P 155 0 R
  /Pg 90 0 R
  /T (control messages)
>>
endobj

410 0 obj
<< /Type /StructElem /S /P /K [ 63 64 65 ] /P 155 0 R /Pg 90 0 R >>
endobj

411 0 obj
<< /Type /StructElem /S /LI /K [ 412 0 R 413 0 R ] /P 155 0 R >>
endobj

412 0 obj
<< /Type /StructElem /S /Lbl /K [ 66 ] /P 411 0 R /Pg 90 0 R >>
endobj

413 0 obj
<< /Type /StructElem /S /LBody /K [ 414 0 R ] /P 411 0 R >>
endobj

414 0 obj
<< /Type /StructElem /S /P /K [ 67 ] /P 413 0 R /Pg 90 0 R >>
endobj

415 0 obj
<< /Type /StructElem /S /P /K [ 68 ] /P 155 0 R /Pg 90 0 R >>
endobj

416 0 obj
<< /Type /StructElem /S /LI /K [ 417 0 R 418 0 R ] /P 155 0 R >>
endobj

417 0 obj
<< /Type /StructElem /S /Lbl /K [ 69 ] /P 416 0 R /Pg 90 0 R >>
endobj

418 0 obj
<< /Type /StructElem /S /LBody /K [ 419 0 R ] /P 416 0 R >>
endobj

419 0 obj
<< /Type /StructElem /S /P /K [ 70 ] /P 418 0 R /Pg 90 0 R >>
endobj

420 0 obj
<< /Type /StructElem /S /P /K [ 71 72 73 ] /P 155 0 R /Pg 90 0 R >>
endobj

421 0 obj
<< /Type /StructElem /S /LI /K [ 422 0 R 423 0 R ] /P 155 0 R >>
endobj

422 0 obj
<< /Type /StructElem /S /Lbl /K [ 74 ] /P 421 0 R /Pg 90 0 R >>
endobj

423 0 obj
<< /Type /StructElem /S /LBody /K [ 424 0 R ] /P 421 0 R >>
endobj

424 0 obj
<< /Type /StructElem /S /P /K [ 75 ] /P 423 0 R /Pg 90 0 R >>
endobj

425 0 obj
<< /Type /StructElem /S /P /K [ 76 ] /P 155 0 R /Pg 90 0 R >>
endobj

426 0 obj
<< /Type /StructElem /S /LI /K [ 427 0 R 428 0 R ] /P 155 0 R >>
endobj

427 0 obj
<< /Type /StructElem /S /Lbl /K [ 0 ] /P 426 0 R /Pg 94 0 R >>
endobj

428 0 obj
<< /Type /StructElem /S /LBody /K [ 429 0 R ] /P 426 0 R >>
endobj

429 0 obj
<< /Type /StructElem /S /P /K [ 1 ] /P 428 0 R /Pg 94 0 R >>
endobj

430 0 obj
<< /Type /StructElem /S /P /K [ 2 3 4 ] /P 155 0 R /Pg 94 0 R >>
endobj

431 0 obj
<<
  /Type /StructElem
  /S /H3
  /K [ 5 ]
  /P 155 0 R
  /Pg 94 0 R
  /T (status message)
>>
endobj

432 0 obj
<< /Type /StructElem /S /P /K [ 6 ] /P 155 0 R /Pg 94 0 R >>
endobj

433 0 obj
<< /Type /StructElem /S /LI /K [ 434 0 R 435 0 R ] /P 155 0 R >>
endobj

434 0 obj
<< /Type /StructElem /S /Lbl /K [ 7 ] /P 433 0 R /Pg 94 0 R >>
endobj

435 0 obj
<< /Type /StructElem /S /LBody /K [ 436 0 R ] /P 433 0 R >>
endobj

436 0 obj
<< /Type /StructElem /S /P /K [ 8 ] /P 435 0 R /Pg 94 0 R >>
endobj

437 0 obj
<< /Type /StructElem /S /P /K [ 9 ] /P 155 0 R /Pg 94 0 R >>
endobj

438 0 obj
<< /Type /StructElem /S /LI /K [ 439 0 R 440 0 R ] /P 155 0 R >>
endobj

439 0 obj
<< /Type /StructElem /S /Lbl /K [ 10 ] /P 438 0 R /Pg 94 0 R >>
endobj

440 0 obj
<< /Type /StructElem /S /LBody /K [ 441 0 R ] /P 438 0 R >>
endobj

441 0 obj
<< /Type /StructElem /S /P /K [ 11 ] /P 440 0 R /Pg 94 0 R >>
endobj

442 0 obj
<< /Type /StructElem /S /P /K [ 12 13 14 ] /P 155 0 R /Pg 94 0 R >>
endobj

443 0 obj
<< /Type /StructElem /S /LI /K [ 444 0 R 445 0 R ] /P 155 0 R >>
endobj

444 0 obj
<< /Type /StructElem /S /Lbl /K [ 15 ] /P 443 0 R /Pg 94 0 R >>
endobj

445 0 obj
<< /Type /StructElem /S /LBody /K [ 446 0 R ] /P 443 0 R >>
endobj

446 0 obj
<< /Type /StructElem /S /P /K [ 16 ] /P 445 0 R /Pg 94 0 R >>
endobj

447 0 obj
<< /Type /StructElem /S /P /K [ 17 ] /P 155 0 R /Pg 94 0 R >>
endobj

448 0 obj
<< /Type /StructElem /S /LI /K [ 449 0 R 450 0 R ] /P 155 0 R >>
endobj

449 0 obj
<< /Type /StructElem /S /Lbl /K [ 18 ] /P 448 0 R /Pg 94 0 R >>
endobj

450 0 obj
<< /Type /StructElem /S /LBody /K [ 451 0 R ] /P 448 0 R >>
endobj

451 0 obj
<< /Type /StructElem /S /P /K [ 19 ] /P 450 0 R /Pg 94 0 R >>
endobj

452 0 obj
<< /Type /StructElem /S /P /K [ 20 ] /P 155 0 R /Pg 94 0 R >>
endobj

453 0 obj
<< /Type /StructElem /S /LI /K [ 454 0 R 455 0 R ] /P 155 0 R >>
endobj

454 0 obj
<< /Type /StructElem /S /Lbl /K [ 21 ] /P 453 0 R /Pg 94 0 R >>
endobj

455 0 obj
<< /Type /StructElem /S /LBody /K [ 456 0 R ] /P 453 0 R >>
endobj

456 0 obj
<< /Type /StructElem /S /P /K [ 22 ] /P 455 0 R /Pg 94 0 R >>
endobj

457 0 obj
<< /Type /StructElem /S /P /K [ 23 ] /P 155 0 R /Pg 94 0 R >>
endobj

458 0 obj
<< /Type /StructElem /S /LI /K [ 459 0 R 460 0 R ] /P 155 0 R >>
endobj

459 0 obj
<< /Type /StructElem /S /Lbl /K [ 24 ] /P 458 0 R /Pg 94 0 R >>
endobj

460 0 obj
<< /Type /StructElem /S /LBody /K [ 461 0 R ] /P 458 0 R >>
endobj

461 0 obj
<< /Type /StructElem /S /P /K [ 25 ] /P 460 0 R /Pg 94 0 R >>
endobj

462 0 obj
<< /Type /StructElem /S /P /K [ 26 ] /P 155 0 R /Pg 94 0 R >>
endobj

463 0 obj
<< /Type /StructElem /S /LI /K [ 464 0 R 465 0 R ] /P 155 0 R >>
endobj

464 0 obj
<< /Type /StructElem /S /Lbl /K [ 27 ] /P 463 0 R /Pg 94 0 R >>
endobj

465 0 obj
<< /Type /StructElem /S /LBody /K [ 466 0 R ] /P 463 0 R >>
endobj

466 0 obj
<< /Type /StructElem /S /P /K [ 28 ] /P 465 0 R /Pg 94 0 R >>
endobj

467 0 obj
<< /Type /StructElem /S /P /K [ 29 30 31 ] /P 155 0 R /Pg 94 0 R >>
endobj

468 0 obj
<<
  /Type /StructElem
  /S /H3
  /K [ 32 ]
  /P 155 0 R
  /Pg 94 0 R
  /T (Examples)
>>
endobj

469 0 obj
<< /Type /StructElem /S /P /K [ 33 ] /P 155 0 R /Pg 94 0 R >>
endobj

470 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 155 0 R /Pg 94 0 R >>
endobj

471 0 obj
<< /Type /StructElem /S /P /K [ 35 ] /P 155 0 R /Pg 94 0 R >>
endobj

472 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 155 0 R /Pg 94 0 R >>
endobj

473 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 155 0 R
  /Pg 98 0 R
  /T (method stable)
>>
endobj

474 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 155 0 R /Pg 98 0 R >>
endobj

475 0 obj
<< /Type /StructElem /S /P /K [ 2 3 4 5 6 ] /P 155 0 R /Pg 98 0 R >>
endobj

476 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 7 8 9 10 11 12 13 14 15 ]
  /P 155 0 R
  /Pg 98 0 R
>>
endobj

477 0 obj
<< /Type /StructElem /S /P /K [ 16 ] /P 155 0 R /Pg 98 0 R >>
endobj

478 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 155 0 R /Pg 98 0 R >>
endobj

479 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 18 19 20 21 22 23 24 25 26 27 28 ]
  /P 155 0 R
  /Pg 98 0 R
>>
endobj

480 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 29 ]
  /P 155 0 R
  /Pg 98 0 R
  /T (method produce)
>>
endobj

481 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 155 0 R /Pg 98 0 R >>
endobj

482 0 obj
<< /Type /StructElem /S /P /K [ 31 483 0 R 33 ] /P 155 0 R /Pg 98 0 R >>
endobj

483 0 obj
<< /Type /StructElem /S /Link /K [ 484 0 R 32 ] /P 482 0 R >>
endobj

484 0 obj
<< /Type /OBJR /Obj 99 0 R /Pg 98 0 R >>
endobj

485 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 155 0 R /Pg 98 0 R >>
endobj

486 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 35 ]
  /P 155 0 R
  /Pg 98 0 R
  /T (method lines)
>>
endobj

487 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 155 0 R /Pg 98 0 R >>
endobj

488 0 obj
<< /Type /StructElem /S /P /K [ 37 38 39 40 41 ] /P 155 0 R /Pg 98 0 R >>
endobj

489 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 42 ]
  /P 155 0 R
  /Pg 98 0 R
  /T (method words)
>>
endobj

490 0 obj
<< /Type /StructElem /S /Code /K [ 43 ] /P 155 0 R /Pg 98 0 R >>
endobj

491 0 obj
<< /Type /StructElem /S /P /K [ 44 ] /P 155 0 R /Pg 98 0 R >>
endobj

492 0 obj
<< /Type /StructElem /S /Code /K [ 45 ] /P 155 0 R /Pg 98 0 R >>
endobj

493 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 155 0 R
  /Pg 104 0 R
  /T (method unique)
>>
endobj

494 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 155 0 R /Pg 104 0 R >>
endobj

495 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2 3 4 5 6 496 0 R 8 9 10 ]
  /P 155 0 R
  /Pg 104 0 R
>>
endobj

496 0 obj
<< /Type /StructElem /S /Link /K [ 497 0 R 7 ] /P 495 0 R >>
endobj

497 0 obj
<< /Type /OBJR /Obj 105 0 R /Pg 104 0 R >>
endobj

498 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 11 ]
  /P 155 0 R
  /Pg 104 0 R
  /T (method repeated)
>>
endobj

499 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 155 0 R /Pg 104 0 R >>
endobj

500 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 13 14 15 16 17 501 0 R 19 ]
  /P 155 0 R
  /Pg 104 0 R
>>
endobj

501 0 obj
<< /Type /StructElem /S /Link /K [ 502 0 R 18 ] /P 500 0 R >>
endobj

502 0 obj
<< /Type /OBJR /Obj 107 0 R /Pg 104 0 R >>
endobj

503 0 obj
<< /Type /StructElem /S /Code /K [ 20 ] /P 155 0 R /Pg 104 0 R >>
endobj

504 0 obj
<< /Type /StructElem /S /P /K [ 21 505 0 R 23 ] /P 155 0 R /Pg 104 0 R >>
endobj

505 0 obj
<< /Type /StructElem /S /Link /K [ 506 0 R 22 ] /P 504 0 R >>
endobj

506 0 obj
<< /Type /OBJR /Obj 109 0 R /Pg 104 0 R >>
endobj

507 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 24 25 508 0 R 27 ]
  /P 155 0 R
  /Pg 104 0 R
>>
endobj

508 0 obj
<< /Type /StructElem /S /Link /K [ 509 0 R 26 ] /P 507 0 R >>
endobj

509 0 obj
<< /Type /OBJR /Obj 111 0 R /Pg 104 0 R >>
endobj

510 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 28 ]
  /P 155 0 R
  /Pg 104 0 R
  /T (method squish)
>>
endobj

511 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 155 0 R /Pg 104 0 R >>
endobj

512 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 30 31 32 33 34 513 0 R 36 ]
  /P 155 0 R
  /Pg 104 0 R
>>
endobj

513 0 obj
<< /Type /StructElem /S /Link /K [ 514 0 R 35 ] /P 512 0 R >>
endobj

514 0 obj
<< /Type /OBJR /Obj 113 0 R /Pg 104 0 R >>
endobj

515 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 37 ]
  /P 155 0 R
  /Pg 104 0 R
  /T (method max)
>>
endobj

516 0 obj
<< /Type /StructElem /S /Code /K [ 38 ] /P 155 0 R /Pg 104 0 R >>
endobj

517 0 obj
<< /Type /StructElem /S /P /K [ 39 518 0 R 41 ] /P 155 0 R /Pg 104 0 R >>
endobj

518 0 obj
<< /Type /StructElem /S /Link /K [ 519 0 R 40 ] /P 517 0 R >>
endobj

519 0 obj
<< /Type /OBJR /Obj 115 0 R /Pg 104 0 R >>
endobj

520 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 42 ]
  /P 155 0 R
  /Pg 104 0 R
  /T (method min)
>>
endobj

521 0 obj
<< /Type /StructElem /S /Code /K [ 43 ] /P 155 0 R /Pg 104 0 R >>
endobj

522 0 obj
<< /Type /StructElem /S /P /K [ 44 523 0 R 46 ] /P 155 0 R /Pg 104 0 R >>
endobj

523 0 obj
<< /Type /StructElem /S /Link /K [ 524 0 R 45 ] /P 522 0 R >>
endobj

524 0 obj
<< /Type /OBJR /Obj 117 0 R /Pg 104 0 R >>
endobj

525 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 47 ]
  /P 155 0 R
  /Pg 104 0 R
  /T (method minmax)
>>
endobj

526 0 obj
<< /Type /StructElem /S /Code /K [ 48 ] /P 155 0 R /Pg 104 0 R >>
endobj

527 0 obj
<< /Type /StructElem /S /P /K [ 49 528 0 R 51 ] /P 155 0 R /Pg 104 0 R >>
endobj

528 0 obj
<< /Type /StructElem /S /Link /K [ 529 0 R 50 ] /P 527 0 R >>
endobj

529 0 obj
<< /Type /OBJR /Obj 119 0 R /Pg 104 0 R >>
endobj

530 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 155 0 R
  /Pg 124 0 R
  /T (method skip)
>>
endobj

531 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 155 0 R /Pg 124 0 R >>
endobj

532 0 obj
<< /Type /StructElem /S /P /K [ 2 3 4 5 6 7 8 ] /P 155 0 R /Pg 124 0 R >>
endobj

533 0 obj
<< /Type /StructElem /S /Code /K [ 9 ] /P 155 0 R /Pg 124 0 R >>
endobj

534 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 10 ]
  /P 155 0 R
  /Pg 124 0 R
  /T (method start)
>>
endobj

535 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 155 0 R /Pg 124 0 R >>
endobj

536 0 obj
<< /Type /StructElem /S /P /K [ 12 ] /P 155 0 R /Pg 124 0 R >>
endobj

537 0 obj
<< /Type /StructElem /S /P /K [ 13 ] /P 155 0 R /Pg 124 0 R >>
endobj

538 0 obj
<< /Type /StructElem /S /P /K [ 14 15 16 ] /P 155 0 R /Pg 124 0 R >>
endobj

539 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 17 ]
  /P 155 0 R
  /Pg 124 0 R
  /T (method migrate)
>>
endobj

540 0 obj
<< /Type /StructElem /S /Code /K [ 18 ] /P 155 0 R /Pg 124 0 R >>
endobj

541 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 19 20 21 22 23 24 25 26 27 28 29 ]
  /P 155 0 R
  /Pg 124 0 R
>>
endobj

542 0 obj
<< /Type /StructElem /S /P /K [ 30 31 32 ] /P 155 0 R /Pg 124 0 R >>
endobj

543 0 obj
<< /Type /StructElem /S /P /K [ 33 ] /P 155 0 R /Pg 124 0 R >>
endobj

544 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 155 0 R /Pg 124 0 R >>
endobj

545 0 obj
<< /Type /StructElem /S /P /K [ 35 ] /P 155 0 R /Pg 124 0 R >>
endobj

546 0 obj
<< /Type /StructElem /S /Code /K [ 36 547 0 R ] /P 155 0 R /Pg 124 0 R >>
endobj

547 0 obj
<< /Type /MCR /MCID 0 /Pg 128 0 R >>
endobj

548 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 155 0 R
  /Pg 132 0 R
  /T (Methods that combine supplies)
>>
endobj

549 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 155 0 R
  /Pg 132 0 R
  /T (method merge)
>>
endobj

550 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 155 0 R /Pg 132 0 R >>
endobj

551 0 obj
<< /Type /StructElem /S /P /K [ 3 ] /P 155 0 R /Pg 132 0 R >>
endobj

552 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 4 ]
  /P 155 0 R
  /Pg 132 0 R
  /T (method zip)
>>
endobj

553 0 obj
<< /Type /StructElem /S /P /K [ 5 ] /P 155 0 R /Pg 132 0 R >>
endobj

554 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 155 0 R /Pg 132 0 R >>
endobj

555 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 7 8 9 556 0 R 11 12 13 14 15 ]
  /P 155 0 R
  /Pg 132 0 R
>>
endobj

556 0 obj
<< /Type /StructElem /S /Link /K [ 557 0 R 10 ] /P 555 0 R >>
endobj

557 0 obj
<< /Type /OBJR /Obj 133 0 R /Pg 132 0 R >>
endobj

558 0 obj
<< /Type /StructElem /S /P /K [ 16 ] /P 155 0 R /Pg 132 0 R >>
endobj

559 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 17 ]
  /P 155 0 R
  /Pg 132 0 R
  /T (method zip-latest)
>>
endobj

560 0 obj
<< /Type /StructElem /S /P /K [ 18 ] /P 155 0 R /Pg 132 0 R >>
endobj

561 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 155 0 R /Pg 132 0 R >>
endobj

562 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 20 21 22 563 0 R 24 25 26 27 28 ]
  /P 155 0 R
  /Pg 132 0 R
>>
endobj

563 0 obj
<< /Type /StructElem /S /Link /K [ 564 0 R 23 ] /P 562 0 R >>
endobj

564 0 obj
<< /Type /OBJR /Obj 135 0 R /Pg 132 0 R >>
endobj

565 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 155 0 R
  /Pg 140 0 R
  /T (I/O features exposed as supplies)
>>
endobj

566 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 155 0 R
  /Pg 140 0 R
  /T (sub signal)
>>
endobj

567 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 155 0 R /Pg 140 0 R >>
endobj

568 0 obj
<< /Type /StructElem /S /P /K [ 3 4 5 ] /P 155 0 R /Pg 140 0 R >>
endobj

569 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 155 0 R /Pg 140 0 R >>
endobj

570 0 obj
<< /Type /StructElem /S /P /K [ 7 ] /P 155 0 R /Pg 140 0 R >>
endobj

571 0 obj
<< /Type /StructElem /S /P /K [ 8 9 10 ] /P 155 0 R /Pg 140 0 R >>
endobj

572 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 155 0 R /Pg 140 0 R >>
endobj

573 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 12 13 14 574 0 R 16 ]
  /P 155 0 R
  /Pg 140 0 R
>>
endobj

574 0 obj
<< /Type /StructElem /S /Link /K [ 575 0 R 15 ] /P 573 0 R >>
endobj

575 0 obj
<< /Type /OBJR /Obj 141 0 R /Pg 140 0 R >>
endobj

576 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 17 18 577 0 R 20 21 22 23 24 25 26 27 28 29 30 ]
  /P 155 0 R
  /Pg 140 0 R
>>
endobj

577 0 obj
<< /Type /StructElem /S /Link /K [ 578 0 R 19 ] /P 576 0 R >>
endobj

578 0 obj
<< /Type /OBJR /Obj 143 0 R /Pg 140 0 R >>
endobj

579 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 31 ]
  /P 155 0 R
  /Pg 140 0 R
  /T (method IO::Notification.watch-path)
>>
endobj

580 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 155 0 R /Pg 140 0 R >>
endobj

581 0 obj
<< /Type /StructElem /S /P /K [ 33 34 35 ] /P 155 0 R /Pg 140 0 R >>
endobj

582 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 155 0 R /Pg 140 0 R >>
endobj

583 0 obj
<<
  /Type /StructTreeRoot
  /K [ 155 0 R ]
  /ParentTree <<
    /Nums [ 0 [ 156 0 R 154 0 R 157 0 R 158 0 R 159 0 R 158 0 R 158 0 R 158 0 R 161 0 R 162 0 R 161 0 R 164 0 R 164 0 R 164 0 R 164 0 R 164 0 R 164 0 R 164 0 R 164 0 R 164 0 R 165 0 R 165 0 R 165 0 R 165 0 R 165 0 R 166 0 R 166 0 R 166 0 R 166 0 R 166 0 R 167 0 R 166 0 R 166 0 R 166 0 R 166 0 R 166 0 R 166 0 R 166 0 R 169 0 R 170 0 R 171 0 R 170 0 R 170 0 R 170 0 R 173 0 R 170 0 R 175 0 R 170 0 R 170 0 R 170 0 R 177 0 R 177 0 R 177 0 R 178 0 R 177 0 R 180 0 R 181 0 R 180 0 R ] 1 159 0 R 2 162 0 R 3 167 0 R 4 171 0 R 5 173 0 R 6 175 0 R 7 178 0 R 8 181 0 R 9 [ 183 0 R 184 0 R 185 0 R 186 0 R 186 0 R 186 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 187 0 R 188 0 R 188 0 R 188 0 R 188 0 R 188 0 R 188 0 R 188 0 R 188 0 R 188 0 R 188 0 R 188 0 R 189 0 R 189 0 R 189 0 R 190 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 189 0 R 192 0 R 192 0 R 192 0 R 193 0 R 192 0 R 192 0 R 192 0 R 195 0 R 196 0 R 197 0 R 198 0 R 199 0 R 200 0 R 200 0 R 200 0 R ] 10 190 0 R 11 193 0 R 12 [ 201 0 R 202 0 R 203 0 R 204 0 R 205 0 R 206 0 R 205 0 R 208 0 R 209 0 R 210 0 R 211 0 R 210 0 R 210 0 R 210 0 R 213 0 R 214 0 R 215 0 R 216 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 215 0 R 218 0 R 219 0 R 219 0 R 219 0 R 220 0 R 221 0 R 222 0 R 222 0 R 222 0 R 222 0 R 222 0 R 222 0 R 222 0 R 222 0 R 222 0 R 222 0 R 222 0 R 223 0 R 224 0 R 225 0 R 226 0 R 227 0 R ] 13 206 0 R 14 211 0 R 15 216 0 R 16 [ 228 0 R 229 0 R 230 0 R 231 0 R 231 0 R 231 0 R 231 0 R 231 0 R 231 0 R 231 0 R 231 0 R 231 0 R 231 0 R 231 0 R 231 0 R 231 0 R 232 0 R 233 0 R 234 0 R 235 0 R 235 0 R 235 0 R 235 0 R 235 0 R 235 0 R 235 0 R 235 0 R 235 0 R 235 0 R 235 0 R 235 0 R 235 0 R 236 0 R 237 0 R 238 0 R 238 0 R 238 0 R 238 0 R 238 0 R 239 0 R 240 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 241 0 R 242 0 R 243 0 R 244 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R 245 0 R ] 17 [ 246 0 R 247 0 R 248 0 R 249 0 R 249 0 R 249 0 R 249 0 R 249 0 R 249 0 R 249 0 R 249 0 R 249 0 R 250 0 R 249 0 R 249 0 R 249 0 R 249 0 R 249 0 R 249 0 R 249 0 R 252 0 R 253 0 R 254 0 R 255 0 R 255 0 R 255 0 R 255 0 R 255 0 R 255 0 R 255 0 R 255 0 R 255 0 R 256 0 R 255 0 R 258 0 R 259 0 R 260 0 R 261 0 R 262 0 R 263 0 R 262 0 R 265 0 R ] 18 250 0 R 19 256 0 R 20 263 0 R 21 [ 266 0 R 267 0 R 268 0 R 269 0 R 270 0 R 271 0 R 272 0 R 273 0 R 274 0 R 275 0 R 276 0 R 277 0 R 278 0 R 279 0 R 280 0 R 281 0 R 282 0 R 283 0 R 283 0 R 283 0 R 283 0 R 283 0 R 284 0 R 283 0 R 283 0 R 283 0 R 283 0 R 283 0 R 283 0 R 283 0 R 283 0 R 283 0 R 283 0 R 283 0 R 286 0 R 283 0 R 288 0 R ] 22 284 0 R 23 286 0 R 24 [ 289 0 R 290 0 R 291 0 R 291 0 R 291 0 R 291 0 R 291 0 R 292 0 R 292 0 R 292 0 R 292 0 R 292 0 R 292 0 R 292 0 R 293 0 R 294 0 R 295 0 R 295 0 R 295 0 R 296 0 R 297 0 R 298 0 R 299 0 R 299 0 R 299 0 R 300 0 R 301 0 R 302 0 R 303 0 R 303 0 R 303 0 R 303 0 R 303 0 R 304 0 R 304 0 R 304 0 R 304 0 R 304 0 R 304 0 R 304 0 R 304 0 R 305 0 R 306 0 R 307 0 R ] 25 [ 308 0 R 309 0 R 310 0 R 311 0 R 312 0 R 311 0 R 314 0 R 315 0 R 315 0 R 315 0 R 315 0 R 316 0 R 317 0 R 318 0 R 319 0 R 320 0 R 319 0 R 322 0 R 323 0 R 323 0 R 323 0 R 323 0 R 323 0 R 323 0 R 323 0 R 323 0 R 323 0 R 324 0 R 325 0 R 326 0 R 327 0 R 328 0 R 328 0 R 328 0 R 328 0 R 328 0 R 328 0 R 328 0 R 328 0 R 328 0 R 328 0 R 328 0 R 329 0 R 330 0 R 331 0 R 332 0 R 332 0 R 332 0 R 335 0 R ] 26 312 0 R 27 320 0 R 28 333 0 R 29 335 0 R 30 [ 332 0 R 332 0 R 332 0 R 332 0 R 332 0 R 342 0 R 332 0 R 346 0 R 347 0 R 348 0 R 349 0 R 349 0 R 349 0 R 350 0 R 351 0 R 351 0 R 352 0 R 353 0 R 354 0 R 355 0 R 354 0 R 357 0 R 358 0 R 359 0 R 360 0 R 361 0 R 362 0 R 363 0 R 364 0 R 364 0 R 364 0 R ] 31 342 0 R 32 355 0 R 33 [ 368 0 R 369 0 R 372 0 R 373 0 R 375 0 R 376 0 R 378 0 R 379 0 R 381 0 R 382 0 R 384 0 R 385 0 R 387 0 R 388 0 R 390 0 R 391 0 R 393 0 R 394 0 R 395 0 R 395 0 R 395 0 R 396 0 R 397 0 R 398 0 R 398 0 R 398 0 R 398 0 R 398 0 R 398 0 R 398 0 R 399 0 R 399 0 R 399 0 R 400 0 R 401 0 R 402 0 R 402 0 R 402 0 R 403 0 R 403 0 R 403 0 R 404 0 R 403 0 R 406 0 R 406 0 R 406 0 R 406 0 R 406 0 R 406 0 R 406 0 R 407 0 R 407 0 R 407 0 R 407 0 R 407 0 R 407 0 R 407 0 R 408 0 R 408 0 R 408 0 R 408 0 R 408 0 R 409 0 R 410 0 R 410 0 R 410 0 R 412 0 R 414 0 R 415 0 R 417 0 R 419 0 R 420 0 R 420 0 R 420 0 R 422 0 R 424 0 R 425 0 R ] 34 404 0 R 35 [ 427 0 R 429 0 R 430 0 R 430 0 R 430 0 R 431 0 R 432 0 R 434 0 R 436 0 R 437 0 R 439 0 R 441 0 R 442 0 R 442 0 R 442 0 R 444 0 R 446 0 R 447 0 R 449 0 R 451 0 R 452 0 R 454 0 R 456 0 R 457 0 R 459 0 R 461 0 R 462 0 R 464 0 R 466 0 R 467 0 R 467 0 R 467 0 R 468 0 R 469 0 R 470 0 R 471 0 R 472 0 R ] 36 [ 473 0 R 474 0 R 475 0 R 475 0 R 475 0 R 475 0 R 475 0 R 476 0 R 476 0 R 476 0 R 476 0 R 476 0 R 476 0 R 476 0 R 476 0 R 476 0 R 477 0 R 478 0 R 479 0 R 479 0 R 479 0 R 479 0 R 479 0 R 479 0 R 479 0 R 479 0 R 479 0 R 479 0 R 479 0 R 480 0 R 481 0 R 482 0 R 483 0 R 482 0 R 485 0 R 486 0 R 487 0 R 488 0 R 488 0 R 488 0 R 488 0 R 488 0 R 489 0 R 490 0 R 491 0 R 492 0 R ] 37 483 0 R 38 [ 493 0 R 494 0 R 495 0 R 495 0 R 495 0 R 495 0 R 495 0 R 496 0 R 495 0 R 495 0 R 495 0 R 498 0 R 499 0 R 500 0 R 500 0 R 500 0 R 500 0 R 500 0 R 501 0 R 500 0 R 503 0 R 504 0 R 505 0 R 504 0 R 507 0 R 507 0 R 508 0 R 507 0 R 510 0 R 511 0 R 512 0 R 512 0 R 512 0 R 512 0 R 512 0 R 513 0 R 512 0 R 515 0 R 516 0 R 517 0 R 518 0 R 517 0 R 520 0 R 521 0 R 522 0 R 523 0 R 522 0 R 525 0 R 526 0 R 527 0 R 528 0 R 527 0 R ] 39 496 0 R 40 501 0 R 41 505 0 R 42 508 0 R 43 513 0 R 44 518 0 R 45 523 0 R 46 528 0 R 47 [ 530 0 R 531 0 R 532 0 R 532 0 R 532 0 R 532 0 R 532 0 R 532 0 R 532 0 R 533 0 R 534 0 R 535 0 R 536 0 R 537 0 R 538 0 R 538 0 R 538 0 R 539 0 R 540 0 R 541 0 R 541 0 R 541 0 R 541 0 R 541 0 R 541 0 R 541 0 R 541 0 R 541 0 R 541 0 R 541 0 R 542 0 R 542 0 R 542 0 R 543 0 R 544 0 R 545 0 R 546 0 R ] 48 [ 546 0 R ] 49 [ 548 0 R 549 0 R 550 0 R 551 0 R 552 0 R 553 0 R 554 0 R 555 0 R 555 0 R 555 0 R 556 0 R 555 0 R 555 0 R 555 0 R 555 0 R 555 0 R 558 0 R 559 0 R 560 0 R 561 0 R 562 0 R 562 0 R 562 0 R 563 0 R 562 0 R 562 0 R 562 0 R 562 0 R 562 0 R ] 50 556 0 R 51 563 0 R 52 [ 565 0 R 566 0 R 567 0 R 568 0 R 568 0 R 568 0 R 569 0 R 570 0 R 571 0 R 571 0 R 571 0 R 572 0 R 573 0 R 573 0 R 573 0 R 574 0 R 573 0 R 576 0 R 576 0 R 577 0 R 576 0 R 576 0 R 576 0 R 576 0 R 576 0 R 576 0 R 576 0 R 576 0 R 576 0 R 576 0 R 576 0 R 579 0 R 580 0 R 581 0 R 581 0 R 581 0 R 582 0 R ] 53 574 0 R 54 577 0 R ]
  >>
>>
endobj

584 0 obj
<<
  /Count 3
  /Dest /Methods_that_return_Taps
  /First 585 0 R
  /Last 586 0 R
  /Next 587 0 R
  /Prev 152 0 R
  /SE 183 0 R
  /Title (Methods that return Taps)
>>
endobj

585 0 obj
<<
  /Count 1
  /Dest /method_tap
  /Next 586 0 R
  /SE 184 0 R
  /Title (method tap)
>>
endobj

586 0 obj
<<
  /Count 1
  /Dest /method_act
  /Prev 585 0 R
  /SE 198 0 R
  /Title (method act)
>>
endobj

587 0 obj
<<
  /Count 6
  /Dest /Utility_methods
  /First 588 0 R
  /Last 592 0 R
  /Next 593 0 R
  /Prev 584 0 R
  /SE 201 0 R
  /Title (Utility methods)
>>
endobj

588 0 obj
<<
  /Count 1
  /Dest /method_Capture
  /Next 589 0 R
  /SE 202 0 R
  /Title (method Capture)
>>
endobj

589 0 obj
<<
  /Count 1
  /Dest /method_Channel
  /Next 590 0 R
  /Prev 588 0 R
  /SE 208 0 R
  /Title (method Channel)
>>
endobj

590 0 obj
<<
  /Count 1
  /Dest /method_Promise
  /Next 591 0 R
  /Prev 589 0 R
  /SE 213 0 R
  /Title (method Promise)
>>
endobj

591 0 obj
<<
  /Count 1
  /Dest /method_live
  /Next 592 0 R
  /Prev 590 0 R
  /SE 220 0 R
  /Title (method live)
>>
endobj

592 0 obj
<<
  /Count 1
  /Dest /method_schedule-on
  /Prev 591 0 R
  /SE 224 0 R
  /Title (method schedule-on)
>>
endobj

593 0 obj
<<
  /Count 9
  /Dest /Methods_that_wait_until_the_supply_is_done
  /First 594 0 R
  /Last 601 0 R
  /Next 602 0 R
  /Prev 587 0 R
  /SE 228 0 R
  /Title (Methods that wait until the supply is done)
>>
endobj

594 0 obj
<<
  /Count 1
  /Dest /method_wait
  /Next 595 0 R
  /SE 229 0 R
  /Title (method wait)
>>
endobj

595 0 obj
<<
  /Count 1
  /Dest /method_list
  /Next 596 0 R
  /Prev 594 0 R
  /SE 233 0 R
  /Title (method list)
>>
endobj

596 0 obj
<<
  /Count 1
  /Dest /method_Seq
  /Next 597 0 R
  /Prev 595 0 R
  /SE 236 0 R
  /Title (method Seq)
>>
endobj

597 0 obj
<<
  /Count 1
  /Dest /method_grab
  /Next 598 0 R
  /Prev 596 0 R
  /SE 239 0 R
  /Title (method grab)
>>
endobj

598 0 obj
<<
  /Count 1
  /Dest /method_reverse
  /Next 599 0 R
  /Prev 597 0 R
  /SE 243 0 R
  /Title (method reverse)
>>
endobj

599 0 obj
<<
  /Count 1
  /Dest /method_sort
  /Next 600 0 R
  /Prev 598 0 R
  /SE 247 0 R
  /Title (method sort)
>>
endobj

600 0 obj
<<
  /Count 1
  /Dest /method_collate
  /Next 601 0 R
  /Prev 599 0 R
  /SE 253 0 R
  /Title (method collate)
>>
endobj

601 0 obj
<<
  /Count 1
  /Dest /method_reduce
  /Prev 600 0 R
  /SE 259 0 R
  /Title (method reduce)
>>
endobj

602 0 obj
<<
  /Count 35
  /Dest /Methods_that_return_another_Supply
  /First 603 0 R
  /Last 636 0 R
  /Next 637 0 R
  /Prev 593 0 R
  /SE 266 0 R
  /Title (Methods that return another Supply)
>>
endobj

603 0 obj
<<
  /Count 1
  /Dest /method_from-list
  /Next 604 0 R
  /SE 267 0 R
  /Title (method from-list)
>>
endobj

604 0 obj
<<
  /Count 1
  /Dest /method_share
  /Next 605 0 R
  /Prev 603 0 R
  /SE 271 0 R
  /Title (method share)
>>
endobj

605 0 obj
<<
  /Count 1
  /Dest /method_flat
  /Next 606 0 R
  /Prev 604 0 R
  /SE 275 0 R
  /Title (method flat)
>>
endobj

606 0 obj
<<
  /Count 1
  /Dest /method_do
  /Next 607 0 R
  /Prev 605 0 R
  /SE 278 0 R
  /Title (method do)
>>
endobj

607 0 obj
<<
  /Count 1
  /Dest /method_on-close
  /Next 608 0 R
  /Prev 606 0 R
  /SE 281 0 R
  /Title (method on-close)
>>
endobj

608 0 obj
<<
  /Count 1
  /Dest /method_interval
  /Next 609 0 R
  /Prev 607 0 R
  /SE 289 0 R
  /Title (method interval)
>>
endobj

609 0 obj
<<
  /Count 1
  /Dest /method_grep
  /Next 610 0 R
  /Prev 608 0 R
  /SE 293 0 R
  /Title (method grep)
>>
endobj

610 0 obj
<<
  /Count 1
  /Dest /method_map
  /Next 611 0 R
  /Prev 609 0 R
  /SE 297 0 R
  /Title (method map)
>>
endobj

611 0 obj
<<
  /Count 1
  /Dest /method_batch
  /Next 612 0 R
  /Prev 610 0 R
  /SE 301 0 R
  /Title (method batch)
>>
endobj

612 0 obj
<<
  /Count 1
  /Dest /method_elems
  /Next 613 0 R
  /Prev 611 0 R
  /SE 305 0 R
  /Title (method elems)
>>
endobj

613 0 obj
<<
  /Count 1
  /Dest /method_head
  /Next 614 0 R
  /Prev 612 0 R
  /SE 308 0 R
  /Title (method head)
>>
endobj

614 0 obj
<<
  /Count 1
  /Dest /method_tail
  /Next 615 0 R
  /Prev 613 0 R
  /SE 317 0 R
  /Title (method tail)
>>
endobj

615 0 obj
<<
  /Count 1
  /Dest /method_first
  /Next 616 0 R
  /Prev 614 0 R
  /SE 326 0 R
  /Title (method first)
>>
endobj

616 0 obj
<<
  /Count 1
  /Dest /method_split
  /Next 617 0 R
  /Prev 615 0 R
  /SE 330 0 R
  /Title (method split)
>>
endobj

617 0 obj
<<
  /Count 1
  /Dest /method_rotate
  /Next 618 0 R
  /Prev 616 0 R
  /SE 347 0 R
  /Title (method rotate)
>>
endobj

618 0 obj
<<
  /Count 1
  /Dest /method_rotor
  /Next 619 0 R
  /Prev 617 0 R
  /SE 352 0 R
  /Title (method rotor)
>>
endobj

619 0 obj
<<
  /Count 1
  /Dest /method_delayed
  /Next 620 0 R
  /Prev 618 0 R
  /SE 357 0 R
  /Title (method delayed)
>>
endobj

620 0 obj
<<
  /Count 4
  /Dest /method_throttle
  /First 621 0 R
  /Last 623 0 R
  /Next 624 0 R
  /Prev 619 0 R
  /SE 360 0 R
  /Title (method throttle)
>>
endobj

621 0 obj
<<
  /Count 1
  /Dest /control_messages
  /Next 622 0 R
  /SE 409 0 R
  /Title (control messages)
>>
endobj

622 0 obj
<<
  /Count 1
  /Dest /status_message
  /Next 623 0 R
  /Prev 621 0 R
  /SE 431 0 R
  /Title (status message)
>>
endobj

623 0 obj
<< /Count 1 /Dest /Examples /Prev 622 0 R /SE 468 0 R /Title (Examples) >>
endobj

624 0 obj
<<
  /Count 1
  /Dest /method_stable
  /Next 625 0 R
  /Prev 620 0 R
  /SE 473 0 R
  /Title (method stable)
>>
endobj

625 0 obj
<<
  /Count 1
  /Dest /method_produce
  /Next 626 0 R
  /Prev 624 0 R
  /SE 480 0 R
  /Title (method produce)
>>
endobj

626 0 obj
<<
  /Count 1
  /Dest /method_lines
  /Next 627 0 R
  /Prev 625 0 R
  /SE 486 0 R
  /Title (method lines)
>>
endobj

627 0 obj
<<
  /Count 1
  /Dest /method_words
  /Next 628 0 R
  /Prev 626 0 R
  /SE 489 0 R
  /Title (method words)
>>
endobj

628 0 obj
<<
  /Count 1
  /Dest /method_unique
  /Next 629 0 R
  /Prev 627 0 R
  /SE 493 0 R
  /Title (method unique)
>>
endobj

629 0 obj
<<
  /Count 1
  /Dest /method_repeated
  /Next 630 0 R
  /Prev 628 0 R
  /SE 498 0 R
  /Title (method repeated)
>>
endobj

630 0 obj
<<
  /Count 1
  /Dest /method_squish
  /Next 631 0 R
  /Prev 629 0 R
  /SE 510 0 R
  /Title (method squish)
>>
endobj

631 0 obj
<<
  /Count 1
  /Dest /method_max
  /Next 632 0 R
  /Prev 630 0 R
  /SE 515 0 R
  /Title (method max)
>>
endobj

632 0 obj
<<
  /Count 1
  /Dest /method_min
  /Next 633 0 R
  /Prev 631 0 R
  /SE 520 0 R
  /Title (method min)
>>
endobj

633 0 obj
<<
  /Count 1
  /Dest /method_minmax
  /Next 634 0 R
  /Prev 632 0 R
  /SE 525 0 R
  /Title (method minmax)
>>
endobj

634 0 obj
<<
  /Count 1
  /Dest /method_skip
  /Next 635 0 R
  /Prev 633 0 R
  /SE 530 0 R
  /Title (method skip)
>>
endobj

635 0 obj
<<
  /Count 1
  /Dest /method_start
  /Next 636 0 R
  /Prev 634 0 R
  /SE 534 0 R
  /Title (method start)
>>
endobj

636 0 obj
<<
  /Count 1
  /Dest /method_migrate
  /Prev 635 0 R
  /SE 539 0 R
  /Title (method migrate)
>>
endobj

637 0 obj
<<
  /Count 4
  /Dest /Methods_that_combine_supplies
  /First 638 0 R
  /Last 640 0 R
  /Next 641 0 R
  /Prev 602 0 R
  /SE 548 0 R
  /Title (Methods that combine supplies)
>>
endobj

638 0 obj
<<
  /Count 1
  /Dest /method_merge
  /Next 639 0 R
  /SE 549 0 R
  /Title (method merge)
>>
endobj

639 0 obj
<<
  /Count 1
  /Dest /method_zip
  /Next 640 0 R
  /Prev 638 0 R
  /SE 552 0 R
  /Title (method zip)
>>
endobj

640 0 obj
<<
  /Count 1
  /Dest /method_zip-latest
  /Prev 639 0 R
  /SE 559 0 R
  /Title (method zip-latest)
>>
endobj

641 0 obj
<<
  /Count 3
  /Dest /I#2fO_features_exposed_as_supplies
  /First 642 0 R
  /Last 643 0 R
  /Prev 637 0 R
  /SE 565 0 R
  /Title (I/O features exposed as supplies)
>>
endobj

642 0 obj
<<
  /Count 1
  /Dest /sub_signal
  /Next 643 0 R
  /SE 566 0 R
  /Title (sub signal)
>>
endobj

643 0 obj
<<
  /Count 1
  /Dest /method_IO::Notification.watch-path
  /Prev 642 0 R
  /SE 579 0 R
  /Title (method IO::Notification.watch-path)
>>
endobj

xref
0 644
0000000000 65535 f 
0000000015 00000 n 
0000000245 00000 n 
0000000405 00000 n 
0000003067 00000 n 
0000003382 00000 n 
0000003555 00000 n 
0000003620 00000 n 
0000003803 00000 n 
0000003907 00000 n 
0000004083 00000 n 
0000004150 00000 n 
0000004328 00000 n 
0000004390 00000 n 
0000004566 00000 n 
0000004632 00000 n 
0000004810 00000 n 
0000004877 00000 n 
0000005066 00000 n 
0000005145 00000 n 
0000005330 00000 n 
0000005413 00000 n 
0000013431 00000 n 
0000013616 00000 n 
0000013879 00000 n 
0000014053 00000 n 
0000014115 00000 n 
0000014289 00000 n 
0000014351 00000 n 
0000023375 00000 n 
0000023423 00000 n 
0000023472 00000 n 
0000023580 00000 n 
0000023667 00000 n 
0000023784 00000 n 
0000023893 00000 n 
0000024164 00000 n 
0000024348 00000 n 
0000024426 00000 n 
0000024602 00000 n 
0000024668 00000 n 
0000024844 00000 n 
0000024910 00000 n 
0000032915 00000 n 
0000032963 00000 n 
0000033012 00000 n 
0000033248 00000 n 
0000042464 00000 n 
0000042512 00000 n 
0000042561 00000 n 
0000042832 00000 n 
0000043004 00000 n 
0000043068 00000 n 
0000043250 00000 n 
0000043327 00000 n 
0000043509 00000 n 
0000043587 00000 n 
0000049651 00000 n 
0000049699 00000 n 
0000049748 00000 n 
0000050012 00000 n 
0000050181 00000 n 
0000050243 00000 n 
0000050414 00000 n 
0000050490 00000 n 
0000056609 00000 n 
0000056657 00000 n 
0000056706 00000 n 
0000056942 00000 n 
0000063613 00000 n 
0000063661 00000 n 
0000063710 00000 n 
0000063988 00000 n 
0000064167 00000 n 
0000064242 00000 n 
0000064421 00000 n 
0000064496 00000 n 
0000064670 00000 n 
0000064746 00000 n 
0000064914 00000 n 
0000072740 00000 n 
0000072788 00000 n 
0000072837 00000 n 
0000073101 00000 n 
0000073273 00000 n 
0000073335 00000 n 
0000073514 00000 n 
0000073590 00000 n 
0000078871 00000 n 
0000078919 00000 n 
0000078968 00000 n 
0000079174 00000 n 
0000079355 00000 n 
0000079420 00000 n 
0000089220 00000 n 
0000089456 00000 n 
0000094318 00000 n 
0000094366 00000 n 
0000094415 00000 n 
0000094675 00000 n 
0000094854 00000 n 
0000094934 00000 n 
0000102408 00000 n 
0000102457 00000 n 
0000102507 00000 n 
0000102825 00000 n 
0000103005 00000 n 
0000103110 00000 n 
0000103290 00000 n 
0000103395 00000 n 
0000103571 00000 n 
0000103678 00000 n 
0000103854 00000 n 
0000103933 00000 n 
0000104113 00000 n 
0000104218 00000 n 
0000104399 00000 n 
0000104474 00000 n 
0000104655 00000 n 
0000104730 00000 n 
0000104912 00000 n 
0000104990 00000 n 
0000113114 00000 n 
0000113163 00000 n 
0000113213 00000 n 
0000113453 00000 n 
0000120035 00000 n 
0000120084 00000 n 
0000120134 00000 n 
0000120342 00000 n 
0000120574 00000 n 
0000120623 00000 n 
0000120673 00000 n 
0000120943 00000 n 
0000121122 00000 n 
0000121186 00000 n 
0000121365 00000 n 
0000121429 00000 n 
0000126093 00000 n 
0000126142 00000 n 
0000126192 00000 n 
0000126462 00000 n 
0000126638 00000 n 
0000126717 00000 n 
0000126895 00000 n 
0000126974 00000 n 
0000132529 00000 n 
0000132578 00000 n 
0000132628 00000 n 
0000132677 00000 n 
0000132727 00000 n 
0000132838 00000 n 
0000132901 00000 n 
0000133045 00000 n 
0000133216 00000 n 
0000133363 00000 n 
0000135700 00000 n 
0000135809 00000 n 
0000135890 00000 n 
0000135982 00000 n 
0000136061 00000 n 
0000136118 00000 n 
0000136207 00000 n 
0000136286 00000 n 
0000136343 00000 n 
0000136456 00000 n 
0000136547 00000 n 
0000136677 00000 n 
0000136757 00000 n 
0000136814 00000 n 
0000136896 00000 n 
0000137030 00000 n 
0000137110 00000 n 
0000137168 00000 n 
0000137248 00000 n 
0000137306 00000 n 
0000137386 00000 n 
0000137444 00000 n 
0000137550 00000 n 
0000137630 00000 n 
0000137688 00000 n 
0000137778 00000 n 
0000137858 00000 n 
0000137916 00000 n 
0000138038 00000 n 
0000138146 00000 n 
0000138228 00000 n 
0000138311 00000 n 
0000138439 00000 n 
0000138559 00000 n 
0000138708 00000 n 
0000138788 00000 n 
0000138847 00000 n 
0000138960 00000 n 
0000139040 00000 n 
0000139099 00000 n 
0000139182 00000 n 
0000139262 00000 n 
0000139345 00000 n 
0000139454 00000 n 
0000139537 00000 n 
0000139623 00000 n 
0000139736 00000 n 
0000139848 00000 n 
0000139927 00000 n 
0000140009 00000 n 
0000140098 00000 n 
0000140177 00000 n 
0000140236 00000 n 
0000140348 00000 n 
0000140430 00000 n 
0000140536 00000 n 
0000140616 00000 n 
0000140675 00000 n 
0000140788 00000 n 
0000140871 00000 n 
0000141026 00000 n 
0000141106 00000 n 
0000141165 00000 n 
0000141248 00000 n 
0000141334 00000 n 
0000141444 00000 n 
0000141527 00000 n 
0000141647 00000 n 
0000141730 00000 n 
0000141847 00000 n 
0000141930 00000 n 
0000142010 00000 n 
0000142090 00000 n 
0000142230 00000 n 
0000142339 00000 n 
0000142421 00000 n 
0000142540 00000 n 
0000142623 00000 n 
0000142733 00000 n 
0000142816 00000 n 
0000142942 00000 n 
0000143051 00000 n 
0000143134 00000 n 
0000143226 00000 n 
0000143336 00000 n 
0000143419 00000 n 
0000143551 00000 n 
0000143634 00000 n 
0000143747 00000 n 
0000143830 00000 n 
0000143962 00000 n 
0000144044 00000 n 
0000144153 00000 n 
0000144235 00000 n 
0000144371 00000 n 
0000144451 00000 n 
0000144510 00000 n 
0000144593 00000 n 
0000144706 00000 n 
0000144789 00000 n 
0000144914 00000 n 
0000144994 00000 n 
0000145053 00000 n 
0000145136 00000 n 
0000145248 00000 n 
0000145328 00000 n 
0000145411 00000 n 
0000145502 00000 n 
0000145582 00000 n 
0000145641 00000 n 
0000145724 00000 n 
0000145856 00000 n 
0000145970 00000 n 
0000146052 00000 n 
0000146131 00000 n 
0000146213 00000 n 
0000146323 00000 n 
0000146405 00000 n 
0000146484 00000 n 
0000146566 00000 n 
0000146675 00000 n 
0000146758 00000 n 
0000146838 00000 n 
0000146946 00000 n 
0000147029 00000 n 
0000147109 00000 n 
0000147223 00000 n 
0000147306 00000 n 
0000147460 00000 n 
0000147540 00000 n 
0000147599 00000 n 
0000147679 00000 n 
0000147738 00000 n 
0000147821 00000 n 
0000147934 00000 n 
0000148016 00000 n 
0000148103 00000 n 
0000148208 00000 n 
0000148318 00000 n 
0000148401 00000 n 
0000148487 00000 n 
0000148570 00000 n 
0000148679 00000 n 
0000148762 00000 n 
0000148848 00000 n 
0000148931 00000 n 
0000149042 00000 n 
0000149125 00000 n 
0000149217 00000 n 
0000149328 00000 n 
0000149439 00000 n 
0000149522 00000 n 
0000149602 00000 n 
0000149711 00000 n 
0000149790 00000 n 
0000149872 00000 n 
0000149961 00000 n 
0000150040 00000 n 
0000150099 00000 n 
0000150181 00000 n 
0000150267 00000 n 
0000150350 00000 n 
0000150460 00000 n 
0000150543 00000 n 
0000150634 00000 n 
0000150714 00000 n 
0000150773 00000 n 
0000150856 00000 n 
0000150970 00000 n 
0000151053 00000 n 
0000151133 00000 n 
0000151244 00000 n 
0000151327 00000 n 
0000151447 00000 n 
0000151530 00000 n 
0000151641 00000 n 
0000151724 00000 n 
0000151892 00000 n 
0000151969 00000 n 
0000152028 00000 n 
0000152108 00000 n 
0000152167 00000 n 
0000152221 00000 n 
0000152275 00000 n 
0000152329 00000 n 
0000152383 00000 n 
0000152437 00000 n 
0000152522 00000 n 
0000152581 00000 n 
0000152635 00000 n 
0000152689 00000 n 
0000152771 00000 n 
0000152882 00000 n 
0000152964 00000 n 
0000153050 00000 n 
0000153133 00000 n 
0000153216 00000 n 
0000153327 00000 n 
0000153410 00000 n 
0000153501 00000 n 
0000153581 00000 n 
0000153640 00000 n 
0000153753 00000 n 
0000153836 00000 n 
0000153916 00000 n 
0000154030 00000 n 
0000154110 00000 n 
0000154193 00000 n 
0000154276 00000 n 
0000154362 00000 n 
0000154448 00000 n 
0000154526 00000 n 
0000154609 00000 n 
0000154689 00000 n 
0000154769 00000 n 
0000154911 00000 n 
0000154994 00000 n 
0000155074 00000 n 
0000155154 00000 n 
0000155237 00000 n 
0000155317 00000 n 
0000155397 00000 n 
0000155480 00000 n 
0000155560 00000 n 
0000155640 00000 n 
0000155723 00000 n 
0000155803 00000 n 
0000155883 00000 n 
0000155966 00000 n 
0000156047 00000 n 
0000156128 00000 n 
0000156211 00000 n 
0000156292 00000 n 
0000156373 00000 n 
0000156456 00000 n 
0000156537 00000 n 
0000156618 00000 n 
0000156701 00000 n 
0000156782 00000 n 
0000156863 00000 n 
0000156949 00000 n 
0000157029 00000 n 
0000157109 00000 n 
0000157217 00000 n 
0000157303 00000 n 
0000157383 00000 n 
0000157463 00000 n 
0000157549 00000 n 
0000157656 00000 n 
0000157736 00000 n 
0000157795 00000 n 
0000157903 00000 n 
0000158011 00000 n 
0000158103 00000 n 
0000158218 00000 n 
0000158304 00000 n 
0000158387 00000 n 
0000158469 00000 n 
0000158547 00000 n 
0000158627 00000 n 
0000158707 00000 n 
0000158790 00000 n 
0000158872 00000 n 
0000158950 00000 n 
0000159030 00000 n 
0000159116 00000 n 
0000159199 00000 n 
0000159281 00000 n 
0000159359 00000 n 
0000159439 00000 n 
0000159519 00000 n 
0000159602 00000 n 
0000159683 00000 n 
0000159761 00000 n 
0000159840 00000 n 
0000159923 00000 n 
0000160035 00000 n 
0000160114 00000 n 
0000160197 00000 n 
0000160278 00000 n 
0000160356 00000 n 
0000160435 00000 n 
0000160514 00000 n 
0000160597 00000 n 
0000160679 00000 n 
0000160757 00000 n 
0000160837 00000 n 
0000160923 00000 n 
0000161006 00000 n 
0000161088 00000 n 
0000161166 00000 n 
0000161246 00000 n 
0000161326 00000 n 
0000161409 00000 n 
0000161491 00000 n 
0000161569 00000 n 
0000161649 00000 n 
0000161729 00000 n 
0000161812 00000 n 
0000161894 00000 n 
0000161972 00000 n 
0000162052 00000 n 
0000162132 00000 n 
0000162215 00000 n 
0000162297 00000 n 
0000162375 00000 n 
0000162455 00000 n 
0000162535 00000 n 
0000162618 00000 n 
0000162700 00000 n 
0000162778 00000 n 
0000162858 00000 n 
0000162944 00000 n 
0000163051 00000 n 
0000163131 00000 n 
0000163214 00000 n 
0000163294 00000 n 
0000163377 00000 n 
0000163488 00000 n 
0000163570 00000 n 
0000163657 00000 n 
0000163768 00000 n 
0000163848 00000 n 
0000163931 00000 n 
0000164051 00000 n 
0000164164 00000 n 
0000164247 00000 n 
0000164338 00000 n 
0000164418 00000 n 
0000164477 00000 n 
0000164560 00000 n 
0000164671 00000 n 
0000164754 00000 n 
0000164846 00000 n 
0000164957 00000 n 
0000165040 00000 n 
0000165120 00000 n 
0000165203 00000 n 
0000165315 00000 n 
0000165398 00000 n 
0000165511 00000 n 
0000165590 00000 n 
0000165651 00000 n 
0000165766 00000 n 
0000165850 00000 n 
0000165964 00000 n 
0000166044 00000 n 
0000166105 00000 n 
0000166189 00000 n 
0000166281 00000 n 
0000166361 00000 n 
0000166422 00000 n 
0000166527 00000 n 
0000166607 00000 n 
0000166668 00000 n 
0000166781 00000 n 
0000166865 00000 n 
0000166979 00000 n 
0000167059 00000 n 
0000167120 00000 n 
0000167230 00000 n 
0000167314 00000 n 
0000167406 00000 n 
0000167486 00000 n 
0000167547 00000 n 
0000167657 00000 n 
0000167741 00000 n 
0000167833 00000 n 
0000167913 00000 n 
0000167974 00000 n 
0000168087 00000 n 
0000168171 00000 n 
0000168263 00000 n 
0000168343 00000 n 
0000168404 00000 n 
0000168514 00000 n 
0000168597 00000 n 
0000168689 00000 n 
0000168772 00000 n 
0000168884 00000 n 
0000168968 00000 n 
0000169049 00000 n 
0000169130 00000 n 
0000169217 00000 n 
0000169331 00000 n 
0000169415 00000 n 
0000169536 00000 n 
0000169623 00000 n 
0000169704 00000 n 
0000169788 00000 n 
0000169869 00000 n 
0000169961 00000 n 
0000170016 00000 n 
0000170144 00000 n 
0000170255 00000 n 
0000170338 00000 n 
0000170418 00000 n 
0000170527 00000 n 
0000170607 00000 n 
0000170690 00000 n 
0000170807 00000 n 
0000170887 00000 n 
0000170948 00000 n 
0000171029 00000 n 
0000171146 00000 n 
0000171227 00000 n 
0000171311 00000 n 
0000171431 00000 n 
0000171511 00000 n 
0000171572 00000 n 
0000171703 00000 n 
0000171812 00000 n 
0000171895 00000 n 
0000171979 00000 n 
0000172062 00000 n 
0000172142 00000 n 
0000172227 00000 n 
0000172311 00000 n 
0000172419 00000 n 
0000172499 00000 n 
0000172560 00000 n 
0000172695 00000 n 
0000172775 00000 n 
0000172836 00000 n 
0000172970 00000 n 
0000173054 00000 n 
0000173141 00000 n 
0000173225 00000 n 
0000180061 00000 n 
0000180245 00000 n 
0000180352 00000 n 
0000180459 00000 n 
0000180625 00000 n 
0000180740 00000 n 
0000180871 00000 n 
0000181002 00000 n 
0000181127 00000 n 
0000181250 00000 n 
0000181470 00000 n 
0000181579 00000 n 
0000181704 00000 n 
0000181827 00000 n 
0000181952 00000 n 
0000182083 00000 n 
0000182208 00000 n 
0000182339 00000 n 
0000182452 00000 n 
0000182657 00000 n 
0000182776 00000 n 
0000182903 00000 n 
0000183028 00000 n 
0000183149 00000 n 
0000183282 00000 n 
0000183415 00000 n 
0000183540 00000 n 
0000183663 00000 n 
0000183790 00000 n 
0000183917 00000 n 
0000184042 00000 n 
0000184167 00000 n 
0000184294 00000 n 
0000184421 00000 n 
0000184550 00000 n 
0000184677 00000 n 
0000184808 00000 n 
0000184974 00000 n 
0000185093 00000 n 
0000185224 00000 n 
0000185317 00000 n 
0000185446 00000 n 
0000185577 00000 n 
0000185704 00000 n 
0000185831 00000 n 
0000185960 00000 n 
0000186093 00000 n 
0000186222 00000 n 
0000186345 00000 n 
0000186468 00000 n 
0000186597 00000 n 
0000186722 00000 n 
0000186849 00000 n 
0000186964 00000 n 
0000187158 00000 n 
0000187269 00000 n 
0000187392 00000 n 
0000187513 00000 n 
0000187699 00000 n 
0000187806 00000 n 
trailer
<<
  /ID [ <96ebadecd4fb1d6bfdf0ad1e678e4324> <96ebadecd4fb1d6bfdf0ad1e678e4324> ]
  /Info 1 0 R
  /Root 2 0 R
  /Size 644
>>
startxref
187961
%%EOF