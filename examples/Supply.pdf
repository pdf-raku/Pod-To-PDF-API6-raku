%PDF-1.3
%¥±ë¼
1 0 obj
<<
  /CreationDate (D:20211215111314+13'00')
  /Creator (PDF::Class-0.4.17; PDF::Content-0.5.12; PDF-0.4.17; Raku-6.d; PDF::Tags-0.0.10; Pod::To::PDF-0.0.1)
  /Producer (PDF::API6-0.2.3)
  /Title (class Supply)
>>
endobj

2 0 obj
<<
  /Type /Catalog
  /Dests 3 0 R
  /MarkInfo << /Marked true >>
  /Outlines 297 0 R
  /Pages 22 0 R
  /StructTreeRoot 2232 0 R
>>
endobj

3 0 obj
<<
  /Asynchronous_data_stream_with_multiple_subscribers [ 4 0 R /FitBH 712.4 ]
  /Examples [ 192 0 R /FitBH 141.5 ]
  /I#2fO_features_exposed_as_supplies [ 276 0 R /FitBH 774 ]
  /Methods_that_combine_supplies [ 264 0 R /FitBH 774 ]
  /Methods_that_return_Taps [ 23 0 R /FitBH 774 ]
  /Methods_that_return_another_Supply [ 103 0 R /FitBH 774 ]
  /Methods_that_wait_until_the_supply_is_done [ 65 0 R /FitBH 774 ]
  /Utility_methods [ 41 0 R /FitBH 774 ]
  /class_Supply [ 4 0 R /FitBH 774 ]
  /control_messages [ 192 0 R /FitBH 766.3 ]
  /method_Capture [ 41 0 R /FitBH 712.4 ]
  /method_Channel [ 41 0 R /FitBH 589.2 ]
  /method_IO::Notification.watch-path [ 276 0 R /FitBH 415.4 ]
  /method_Promise [ 41 0 R /FitBH 477 ]
  /method_Seq [ 65 0 R /FitBH 371.4 ]
  /method_act [ 23 0 R /FitBH 261.4 ]
  /method_batch [ 125 0 R /FitBH 184.4 ]
  /method_collate [ 81 0 R /FitBH 512.2 ]
  /method_delayed [ 161 0 R /FitBH 215.2 ]
  /method_do [ 103 0 R /FitBH 292.2 ]
  /method_elems [ 139 0 R /FitBH 769.6 ]
  /method_first [ 139 0 R /FitBH 144.8 ]
  /method_flat [ 103 0 R /FitBH 393.4 ]
  /method_from-list [ 103 0 R /FitBH 712.4 ]
  /method_grab [ 65 0 R /FitBH 270.2 ]
  /method_grep [ 125 0 R /FitBH 510 ]
  /method_head [ 139 0 R /FitBH 657.4 ]
  /method_interval [ 125 0 R /FitBH 655.2 ]
  /method_lines [ 210 0 R /FitBH 734.4 ]
  /method_list [ 65 0 R /FitBH 483.6 ]
  /method_live [ 41 0 R /FitBH 250.4 ]
  /method_map [ 125 0 R /FitBH 347.2 ]
  /method_max [ 236 0 R /FitBH 769.6 ]
  /method_merge [ 264 0 R /FitBH 712.4 ]
  /method_migrate [ 256 0 R /FitBH 769.6 ]
  /method_min [ 236 0 R /FitBH 646.4 ]
  /method_minmax [ 236 0 R /FitBH 523.2 ]
  /method_on-close [ 103 0 R /FitBH 180 ]
  /method_produce [ 196 0 R /FitBH 173.4 ]
  /method_reduce [ 81 0 R /FitBH 345 ]
  /method_repeated [ 210 0 R /FitBH 342.8 ]
  /method_reverse [ 65 0 R /FitBH 114 ]
  /method_rotate [ 161 0 R /FitBH 485.8 ]
  /method_rotor [ 161 0 R /FitBH 316.4 ]
  /method_schedule-on [ 41 0 R /FitBH 111.8 ]
  /method_share [ 103 0 R /FitBH 576 ]
  /method_skip [ 236 0 R /FitBH 411 ]
  /method_sort [ 81 0 R /FitBH 679.4 ]
  /method_split [ 161 0 R /FitBH 661.8 ]
  /method_squish [ 210 0 R /FitBH 162.4 ]
  /method_stable [ 196 0 R /FitBH 518.8 ]
  /method_start [ 236 0 R /FitBH 237.2 ]
  /method_tail [ 139 0 R /FitBH 406.6 ]
  /method_tap [ 23 0 R /FitBH 712.4 ]
  /method_throttle [ 161 0 R /FitBH 114 ]
  /method_unique [ 210 0 R /FitBH 466 ]
  /method_wait [ 65 0 R /FitBH 712.4 ]
  /method_words [ 210 0 R /FitBH 622.2 ]
  /method_zip [ 264 0 R /FitBH 600.2 ]
  /method_zip-latest [ 264 0 R /FitBH 422 ]
  /status_message [ 192 0 R /FitBH 514.4 ]
  /sub_signal [ 276 0 R /FitBH 712.4 ]
>>
endobj

4 0 obj
<<
  /Type /Page
  /Annots [ 5 0 R 7 0 R 9 0 R 11 0 R 13 0 R 15 0 R 17 0 R 19 0 R ]
  /Contents 21 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 292 0 R /GS2 293 0 R /GS3 294 0 R /GS4 295 0 R >>
    /Font << /F1 37 0 R /F2 38 0 R /F3 40 0 R /F4 296 0 R >>
  >>
  /StructParents 0
>>
endobj

5 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 6 0 R
  /Border [ 0 0 0 ]
  /Contents (Channel)
  /P 4 0 R
  /Rect [ 255.17 625.8 292.5 640.8 ]
>>
endobj

6 0 obj
<< /Type /Action /S /URI /URI (/type/Channel) >>
endobj

7 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 8 0 R
  /Border [ 0 0 0 ]
  /Contents (Observer Pattern)
  /P 4 0 R
  /Rect [ 182.97 592.8 254.45 607.8 ]
>>
endobj

8 0 obj
<<
  /Type /Action
  /S /URI
  /URI (https://en.wikipedia.org/wiki/Observer_pattern)
>>
endobj

9 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 10 0 R
  /Border [ 0 0 0 ]
  /Contents (Supplier)
  /P 4 0 R
  /Rect [ 194.99 482.8 232.88 497.8 ]
>>
endobj

10 0 obj
<< /Type /Action /S /URI /URI (/type/Supplier) >>
endobj

11 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 12 0 R
  /Border [ 0 0 0 ]
  /Contents (live method)
  /P 4 0 R
  /Rect [ 38.55 397 90.05 412 ]
>>
endobj

12 0 obj
<< /Type /Action /S /GoTo /D /method_live >>
endobj

13 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 14 0 R
  /Border [ 0 0 0 ]
  /Contents (interval)
  /P 4 0 R
  /Rect [ 327.7 397 362.25 412 ]
>>
endobj

14 0 obj
<< /Type /Action /S /GoTo /D /method_interval >>
endobj

15 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 16 0 R
  /Border [ 0 0 0 ]
  /Contents (from-list)
  /P 4 0 R
  /Rect [ 368.25 397 407.25 412 ]
>>
endobj

16 0 obj
<< /Type /Action /S /GoTo /D /method_from-list >>
endobj

17 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 18 0 R
  /Border [ 0 0 0 ]
  /Contents (Supplier::Preserving)
  /P 4 0 R
  /Rect [ 349.12 375 435.34 390 ]
>>
endobj

18 0 obj
<< /Type /Action /S /URI /URI (/type/Supplier::Preserving) >>
endobj

19 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 20 0 R
  /Border [ 0 0 0 ]
  /Contents (concurrency page)
  /P 4 0 R
  /Rect [ 171.86 353 246.66 368 ]
>>
endobj

20 0 obj
<< /Type /Action /S /URI /URI (/language/concurrency#Supplies) >>
endobj

21 0 obj
<< /Length 7965 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (class Supply) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    125.04 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (Asynchronous data stream with multiple subscribers) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (    class Supply does Awaitable {}) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 648.8 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    (A supply is a thread-safe, asynchronous data stream like a ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 4 >> BDC
    BT
      1 0 0 1 20 628.8 Tm
      [ -23717 (Channel) ] TJ
    ET
    q
      0.5 w
      257.17 627.8 m
      290.5 627.8 l
      S
    Q
  EMC
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    [ -27300 (, but it can have multiple subscribers \() ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F4 10 Tf
    [ -42826 (taps) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    [ -44743 (\) that all get the same values) ] TJ
    11 TL
    T*
    (flowing through the supply.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    (It is a thread-safe implementation of the ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 9 >> BDC
    BT
      1 0 0 1 20 595.8 Tm
      [ -16497 (Observer Pattern) ] TJ
    ET
    q
      0.5 w
      184.97 594.8 m
      252.45 594.8 l
      S
    Q
  EMC
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    [ -23495 (, and central to supporting reactive programming in Raku.) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    (There are two types of Supplies: ) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F2 10 Tf
    [ -13470 (live) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F3 10 Tf
    [ -16470 ( and ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F2 10 Tf
    [ -18664 (on demand) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F3 10 Tf
    [ -24664 (. When tapping into a ) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F2 10 Tf
    [ -33802 (live) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F3 10 Tf
    [ -36802 ( supply, the tap will only see values that are) ] TJ
    T*
    (flowing through the supply ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 562.8 Tm
    /F1 10 Tf
    [ -11361 (after) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 562.8 Tm
    /F3 10 Tf
    [ -13665 ( the tap has been created. Such supplies are normally infinite in nature, such as mouse movements. Closing) ] TJ
    T*
    (such a tap does not stop mouse events from occurring, it just means that the values will go by unseen. All tappers see the same flow of values.) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 529.8 Tm
    (A tap on an ) Tj
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 529.8 Tm
    /F2 10 Tf
    [ -5138 (on demand) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 529.8 Tm
    /F3 10 Tf
    [ -11138 ( supply will initiate the production of values, and tapping the supply again may result in a new set of values. For) ] TJ
    T*
    (example, ) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 518.8 Tm
    /F2 10 Tf
    [ -4138 (Supply.interval) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 518.8 Tm
    /F3 10 Tf
    [ -13738 ( produces a fresh timer with the appropriate interval each time it is tapped. If the tap is closed, the timer) ] TJ
    T*
    (simply stops emitting values to that tap.) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    (A ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F2 10 Tf
    [ -1222 (live) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F3 10 Tf
    [ -4222 ( ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F2 10 Tf
    [ -4722 (Supply) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F3 10 Tf
    [ -8922 ( is obtained from the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 30 >> BDC
    BT
      1 0 0 1 20 485.8 Tm
      [ -17699 (Supplier) ] TJ
    ET
    q
      0.5 w
      196.99 484.8 m
      230.88 484.8 l
      S
    Q
  EMC
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    [ -21338 ( factory method ) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F2 10 Tf
    [ -28170 (Supply) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F3 10 Tf
    [ -32370 (. New values are emitted by calling ) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F2 10 Tf
    [ -47006 (emit) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F3 10 Tf
    [ -50006 ( on the ) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F2 10 Tf
    [ -53228 ] TJ
    T*
    (Supplier) Tj
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 474.8 Tm
    /F3 10 Tf
    [ -5400 ( object.) ] TJ
  ET
EMC
/Code << /MCID 38 >> BDC
  BT
    1 0 0 1 30 457.2 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply = $supplier.Supply;) Tj
    T*
    ($supply.tap\(-> $v { say "$v" }\);) Tj
    T*
    ($supplier.emit\(42\);  Will cause the tap to output "42") Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 420 562 48 re
  B
Q
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    (The ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 40 >> BDC
    BT
      1 0 0 1 20 400 Tm
      [ -2055 (live method) ] TJ
    ET
    q
      0.5 w
      40.55 399 m
      88.05 399 l
      S
    Q
  EMC
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 400 Tm
    [ -7055 ( returns ) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F2 10 Tf
    [ -10582 (True) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    [ -13582 ( on live supplies. Factory methods such as ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 44 >> BDC
    BT
      1 0 0 1 20 400 Tm
      [ -30970 (interval) ] TJ
    ET
    q
      0.5 w
      329.7 399 m
      360.25 399 l
      S
    Q
  EMC
Q
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 400 Tm
    [ -34275 (, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 46 >> BDC
    BT
      1 0 0 1 20 400 Tm
      [ -35025 (from-list) ] TJ
    ET
    q
      0.5 w
      370.25 399 m
      405.25 399 l
      S
    Q
  EMC
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 400 Tm
    [ -38775 ( will return ) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F4 10 Tf
    [ -43719 (on demand) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    [ -48385 ( supplies.) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 378 Tm
    (A live ) Tj
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 378 Tm
    /F2 10 Tf
    [ -2972 (Supply) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 378 Tm
    /F3 10 Tf
    [ -7172 ( that keeps values until tapped the first time can be created with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 53 >> BDC
    BT
      1 0 0 1 20 378 Tm
      [ -33112 (Supplier::Preserving) ] TJ
    ET
    q
      0.5 w
      351.12 377 m
      433.34 377 l
      S
    Q
  EMC
Q
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 378 Tm
    [ -41584 (.) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 356 Tm
    (Further examples can be found in the ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 56 >> BDC
    BT
      1 0 0 1 20 356 Tm
      [ -15386 (concurrency page) ] TJ
    ET
    q
      0.5 w
      173.86 355 m
      244.66 355 l
      S
    Q
  EMC
Q
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 356 Tm
    [ -22716 (.) ] TJ
  ET
EMC
endstream
endobj

22 0 obj
<<
  /Type /Pages
  /Count 18
  /Kids [ 4 0 R 23 0 R 41 0 R 63 0 R 65 0 R 81 0 R 103 0 R 125 0 R 139 0 R 161 0 R 184 0 R 192 0 R 196 0 R 210 0 R 236 0 R 256 0 R 264 0 R 276 0 R ]
>>
endobj

23 0 obj
<<
  /Type /Page
  /Annots [ 24 0 R 26 0 R ]
  /Contents 28 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 29 0 R
      /GS2 30 0 R
      /GS3 31 0 R
      /GS4 32 0 R
      /GS5 33 0 R
      /GS6 34 0 R
      /GS7 35 0 R
      /GS8 36 0 R
    >>
    /Font << /F1 37 0 R /F2 38 0 R /F3 40 0 R >>
  >>
  /StructParents 1
>>
endobj

24 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 25 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 23 0 R
  /Rect [ 181.02 467.4 200.57 482.4 ]
>>
endobj

25 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

26 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 27 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 23 0 R
  /Rect [ 182.81 412.4 202.36 427.4 ]
>>
endobj

27 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

28 0 obj
<< /Length 9070 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that return Taps) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    241.66 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method tap) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method tap\(Supply:D: &emit = -> $ { },) Tj
    8.8 TL
    T*
    (        :&done = -> {},) Tj
    T*
    (        :&quit = -> $ex { $ex.throw },) Tj
    T*
    (        :&tap = -> $ {} \)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 622.4 562 48 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 602.4 Tm
    /F3 10 Tf
    (Creates a new tap \(a kind of subscription if you will\), in addition to all existing taps. The first positional argument is a piece of code that will) Tj
    11 TL
    T*
    (be called when a new value becomes available through the ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F2 10 Tf
    [ -23966 (emit) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F3 10 Tf
    [ -26966 ( call.) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F2 10 Tf
    [ -2055 (&done) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F3 10 Tf
    [ -5655 ( callback can be called in a number of cases: if a supply block is being tapped, when a ) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F2 10 Tf
    [ -40564 (done) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F3 10 Tf
    [ -43564 ( routine is reached; if a supply) ] TJ
    T*
    (block is being tapped, it will be automatically triggered if the supply block reaches the end; if the ) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F2 10 Tf
    [ -39384 (done) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F3 10 Tf
    [ -42384 ( method is called on the parent ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F2 10 Tf
    [ -55160 ] TJ
    T*
    (Supplier) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F3 10 Tf
    [ -5400 ( \(in the case of a supply block, if there are multiple Suppliers referenced by ) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F2 10 Tf
    [ -36032 (whenever) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F3 10 Tf
    [ -41432 (, they must all have their ) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F2 10 Tf
    [ -51820 (done) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F3 10 Tf
    [ -54820 ] TJ
    T*
    (method invoked for this to trigger the ) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F2 10 Tf
    [ -15499 (&done) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F3 10 Tf
    [ -19099 ( callback of the tap as the block will then reach its end\).) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    /F2 10 Tf
    [ -2055 (&quit) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    /F3 10 Tf
    [ -5655 ( callback is called if the tap is on a supply block which exits with an error. It is also called if the ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    /F2 10 Tf
    [ -44455 (quit) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    /F3 10 Tf
    [ -47455 ( method is invoked on) ] TJ
    T*
    (the parent ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F2 10 Tf
    [ -4471 (Supplier) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F3 10 Tf
    [ -9871 ( \(in the case of a supply block any one ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F2 10 Tf
    [ -25729 (Supplier) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F3 10 Tf
    [ -31129 ( quitting with an uncaught exception will call the ) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F2 10 Tf
    [ -51239 (&quit) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F3 10 Tf
    [ -54839 ] TJ
    T*
    (callback as the block will exit with an error\). The error is passed as a parameter to the callback.) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 10 Tf
    [ -2055 (&tap) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -5055 ( callback is called once the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 35 >> BDC
    BT
      1 0 0 1 20 470.4 Tm
      [ -16302 (Tap) ] TJ
    ET
    q
      0.5 w
      183.02 469.4 m
      198.57 469.4 l
      S
    Q
  EMC
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    [ -18107 ( object is created, which is passed as a parameter to the callback. The callback is called ahead of ) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 10 Tf
    [ -57096 ] TJ
    T*
    (emit) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -3000 (/) ] TJ
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 10 Tf
    [ -3528 (done) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -6528 (/) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 10 Tf
    [ -7056 (quit) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -10056 (, providing a reliable way to get the ) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 10 Tf
    [ -24776 (Tap) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -27176 ( object. One case where this is useful is when the ) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 10 Tf
    [ -47311 (Supply) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -51511 ( begins) ] TJ
    T*
    (emitting values synchronously, since the call to ) Tj
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    /F2 10 Tf
    [ -19471 (.tap) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    /F3 10 Tf
    [ -22471 ( won't return the ) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    /F2 10 Tf
    [ -29511 (Tap) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    /F3 10 Tf
    [ -31911 ( object until it is done emitting, preventing it from being) ] TJ
    T*
    (stopped if needed.) Tj
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    (Method ) Tj
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F2 10 Tf
    [ -3611 (tap) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F3 10 Tf
    [ -6011 ( returns an object of type ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 54 >> BDC
    BT
      1 0 0 1 20 415.4 Tm
      [ -16481 (Tap) ] TJ
    ET
    q
      0.5 w
      184.81 414.4 m
      200.36 414.4 l
      S
    Q
  EMC
Q
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    [ -18286 (, on which you can call the ) ] TJ
  ET
EMC
/P << /MCID 56 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F2 10 Tf
    [ -29534 (close) ] TJ
  ET
EMC
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F3 10 Tf
    [ -33134 ( method to cancel the subscription.) ] TJ
  ET
EMC
/Code << /MCID 58 >> BDC
  BT
    1 0 0 1 30 397.8 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(0 .. 5\);) Tj
    8.8 TL
    T*
    (my $t = $s.tap\(-> $v { say $v }, done => { say "no more ticks" }\);) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 378.2 562 30.4 re
  B
Q
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 358.2 Tm
    /F3 10 Tf
    (Produces:) Tj
  ET
EMC
/Code << /MCID 60 >> BDC
  BT
    1 0 0 1 30 340.6 Tm
    /F2 8 Tf
    (0) Tj
    T*
    (1) Tj
    T*
    (2) Tj
    T*
    (3) Tj
    T*
    (4) Tj
    T*
    (5) Tj
    T*
    (no more ticks) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 277 562 74.4 re
  B
Q
/H2 << /MCID 61 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F1 16 Tf
    (method act) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 62 >> BDC
  BT
    1 0 0 1 30 208.6 Tm
    /F2 8 Tf
    (method act\(Supply:D: &actor, *%others\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 197.8 562 21.6 re
  B
Q
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 177.8 Tm
    /F3 10 Tf
    (Creates a tap on the given supply with the given code. Differently from ) Tj
  ET
EMC
/P << /MCID 64 >> BDC
  BT
    1 0 0 1 20 177.8 Tm
    /F2 10 Tf
    [ -29023 (tap) ] TJ
  ET
EMC
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 177.8 Tm
    /F3 10 Tf
    [ -31423 (, the given code is guaranteed to be executed by only one thread) ] TJ
    11 TL
    T*
    (at a time.) Tj
  ET
EMC
endstream
endobj

29 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

30 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

31 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

32 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

33 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

34 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

35 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

36 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

37 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Bold
  /Encoding /WinAnsiEncoding
>>
endobj

38 0 obj
<< /Type /Font /Subtype /Type1 /BaseFont /Courier /Encoding 39 0 R >>
endobj

39 0 obj
<<
  /Type /Encoding
  /BaseEncoding /WinAnsiEncoding
  /Differences [ 1 /numbersign /infinity ]
>>
endobj

40 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Roman
  /Encoding /WinAnsiEncoding
>>
endobj

41 0 obj
<<
  /Type /Page
  /Annots [ 42 0 R 44 0 R 46 0 R ]
  /Contents 48 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 49 0 R
      /GS10 50 0 R
      /GS11 51 0 R
      /GS12 52 0 R
      /GS13 53 0 R
      /GS14 54 0 R
      /GS2 55 0 R
      /GS3 56 0 R
      /GS4 57 0 R
      /GS5 58 0 R
      /GS6 59 0 R
      /GS7 60 0 R
      /GS8 61 0 R
      /GS9 62 0 R
    >>
    /Font << /F1 37 0 R /F2 40 0 R /F3 38 0 R >>
  >>
  /StructParents 2
>>
endobj

42 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 43 0 R
  /Border [ 0 0 0 ]
  /Contents (.List.Capture)
  /P 41 0 R
  /Rect [ 106.33 603.8 162.55 618.8 ]
>>
endobj

43 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_Capture) >>
endobj

44 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 45 0 R
  /Border [ 0 0 0 ]
  /Contents (Channel)
  /P 41 0 R
  /Rect [ 61.05 502.6 98.38 517.6 ]
>>
endobj

45 0 obj
<< /Type /Action /S /URI /URI (/type/Channel) >>
endobj

46 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 47 0 R
  /Border [ 0 0 0 ]
  /Contents (Promise)
  /P 41 0 R
  /Rect [ 61.05 390.4 97.83 405.4 ]
>>
endobj

47 0 obj
<< /Type /Action /S /URI /URI (/type/Promise) >>
endobj

48 0 obj
<< /Length 7887 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Utility methods) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    151.66 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method Capture) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 655.2 Tm
    /F2 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 30 637.6 Tm
    /F3 8 Tf
    (method Capture\(Supply:D: --> Capture:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 626.8 562 21.6 re
  B
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 606.8 Tm
    /F2 10 Tf
    (Equivalent to calling ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 5 >> BDC
    BT
      1 0 0 1 20 606.8 Tm
      [ -8833 (.List.Capture) ] TJ
    ET
    q
      0.5 w
      108.33 605.8 m
      160.55 605.8 l
      S
    Q
  EMC
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 606.8 Tm
    [ -14305 ( on the invocant.) ] TJ
  ET
EMC
/H2 << /MCID 7 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F1 16 Tf
    (method Channel) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 536.4 Tm
    /F3 8 Tf
    (method Channel\(Supply:D: --> Channel:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 525.6 562 21.6 re
  B
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    /F2 10 Tf
    (Returns a ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 505.6 Tm
      [ -4305 (Channel) ] TJ
    ET
    q
      0.5 w
      63.05 504.6 m
      96.38 504.6 l
      S
    Q
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    [ -7888 ( object that will receive all future values from the supply, and will be ) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    /F3 10 Tf
    [ -35995 (close) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    /F2 10 Tf
    [ -39595 (d when the Supply is done, and quit \(shut) ] TJ
    11 TL
    T*
    (down with error\) when the supply is quit.) Tj
  ET
EMC
/H2 << /MCID 14 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F1 16 Tf
    (method Promise) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 30 424.2 Tm
    /F3 8 Tf
    (method Promise\(Supply:D: --> Promise:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 413.4 562 21.6 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F2 10 Tf
    (Returns a ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 17 >> BDC
    BT
      1 0 0 1 20 393.4 Tm
      [ -4305 (Promise) ] TJ
    ET
    q
      0.5 w
      63.05 392.4 m
      95.83 392.4 l
      S
    Q
  EMC
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    [ -7833 ( that will be kept when the ) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F3 10 Tf
    [ -18943 (Supply) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F2 10 Tf
    [ -23143 ( is ) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F3 10 Tf
    [ -24560 (done) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F2 10 Tf
    [ -27560 (. If the ) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F3 10 Tf
    [ -30698 (Supply) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F2 10 Tf
    [ -34898 ( also emits any values, then the ) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F3 10 Tf
    [ -47869 (Promise) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F2 10 Tf
    [ -52669 ( will be) ] TJ
    11 TL
    T*
    (kept with the final value. Otherwise, it will be kept with ) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -22887 (Nil) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F2 10 Tf
    [ -25287 (. If the ) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -28425 (Supply) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F2 10 Tf
    [ -32625 ( ends with a ) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -37930 (quit) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F2 10 Tf
    [ -40930 ( instead of a ) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -46290 (done) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F2 10 Tf
    [ -49290 (, then the ) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -53484 ] TJ
    T*
    (Promise) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 371.4 Tm
    /F2 10 Tf
    [ -4800 ( will be broken with that exception.) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 353.8 Tm
    /F3 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $s = $supplier.Supply;) Tj
    T*
    (my $p = $s.Promise;) Tj
    T*
    ($p.then\(-> $v { say "got $v.result\(\)" }\);) Tj
    T*
    ($supplier.emit\('cha'\);          not output yet) Tj
    T*
    ($supplier.done\(\);               got cha) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 299 562 65.6 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 279 Tm
    /F2 10 Tf
    (The ) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 279 Tm
    /F3 10 Tf
    [ -2055 (Promise) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 279 Tm
    /F2 10 Tf
    [ -6855 ( method is most useful when dealing with supplies that will tend to produce just one value, when only the final value is of) ] TJ
    11 TL
    T*
    (interest, or when only completion \(successful or not\) is relevant.) Tj
  ET
EMC
/H2 << /MCID 41 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F1 16 Tf
    (method live) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 30 197.6 Tm
    /F3 8 Tf
    (method live\(Supply:D: --> Bool:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 186.8 562 21.6 re
  B
Q
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F2 10 Tf
    (Returns ) Tj
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F3 10 Tf
    [ -3611 (True) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F2 10 Tf
    [ -6611 ( if the supply is "live", that is, values are emitted to taps as soon as they arrive. Always returns ) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F3 10 Tf
    [ -44867 (True) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F2 10 Tf
    [ -47867 ( in the default ) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F3 10 Tf
    [ -53894 ] TJ
    11 TL
    T*
    (Supply) Tj
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F2 10 Tf
    [ -4200 ( \(but for example on the supply returned from ) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F3 10 Tf
    [ -23030 (Supply.from-list) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F2 10 Tf
    [ -33230 ( it's ) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F3 10 Tf
    [ -35105 (False) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F2 10 Tf
    [ -38705 (\).) ] TJ
  ET
EMC
/Code << /MCID 54 >> BDC
  BT
    1 0 0 1 30 138.2 Tm
    /F3 8 Tf
    (say Supplier.new.Supply.live;     OUTPUT: «True») Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS11 gs
  /GS12 gs
  28 127.4 562 21.6 re
  B
Q
/H2 << /MCID 55 >> BDC
  BT
    1 0 0 1 20 94.2 Tm
    /F1 16 Tf
    (method schedule-on) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 30 59 Tm
    /F3 8 Tf
    (method schedule-on\(Supply:D: Scheduler $scheduler\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS13 gs
  /GS14 gs
  28 48.2 562 21.6 re
  B
Q
endstream
endobj

49 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

50 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

51 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

52 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

53 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

54 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

55 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

56 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

57 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

58 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

59 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

60 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

61 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

62 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

63 0 obj
<<
  /Type /Page
  /Contents 64 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources << /Font << /F1 40 0 R >> >>
  /StructParents 3
>>
endobj

64 0 obj
<< /Length 304 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (Runs the emit, done and quit callbacks on the specified scheduler.) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 730 Tm
    (This is useful for GUI toolkits that require certain actions to be run from the GUI thread.) Tj
  ET
EMC
endstream
endobj

65 0 obj
<<
  /Type /Page
  /Contents 66 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 67 0 R
      /GS10 68 0 R
      /GS11 69 0 R
      /GS12 70 0 R
      /GS13 71 0 R
      /GS14 72 0 R
      /GS2 73 0 R
      /GS3 74 0 R
      /GS4 75 0 R
      /GS5 76 0 R
      /GS6 77 0 R
      /GS7 78 0 R
      /GS8 79 0 R
      /GS9 80 0 R
    >>
    /Font << /F1 37 0 R /F2 38 0 R /F3 40 0 R >>
  >>
  /StructParents 4
>>
endobj

66 0 obj
<< /Length 7751 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that wait until the supply is done) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    378.38 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method wait) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method wait\(Supply:D:\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 648.8 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    [ -8116 ( it is called on, and blocks execution until the either the supply is ) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F2 10 Tf
    [ -34559 (done) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    [ -37559 ( \(in which case it evaluates to the final value that) ] TJ
    11 TL
    T*
    (was emitted on the ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F2 10 Tf
    [ -8027 (Supply) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F3 10 Tf
    [ -12227 (, or ) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F2 10 Tf
    [ -14060 (Nil) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F3 10 Tf
    [ -16460 ( if not value was emitted\) or ) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F2 10 Tf
    [ -28236 (quit) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F3 10 Tf
    [ -31236 ( \(in which case it will throw the exception that was passed to ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F2 10 Tf
    [ -56066 ] TJ
    T*
    (quit) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 606.8 Tm
    /F3 10 Tf
    [ -3000 (\).) ] TJ
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 589.2 Tm
    /F2 8 Tf
    (my $s = Supplier.new;) Tj
    8.8 TL
    T*
    (start {) Tj
    T*
    (  sleep 1;) Tj
    T*
    (  say "One second: running.";) Tj
    T*
    (  sleep 1;) Tj
    T*
    (  $s.emit\(42\);) Tj
    T*
    (  $s.done;) Tj
    T*
    (}) Tj
    T*
    ($s.Supply.wait;) Tj
    T*
    (say "Two seconds: done";) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 499.2 562 100.8 re
  B
Q
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 466 Tm
    /F1 16 Tf
    (method list) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 18 >> BDC
  BT
    1 0 0 1 30 430.8 Tm
    /F2 8 Tf
    (multi method list\(Supply:D:\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 420 562 21.6 re
  B
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    [ -8116 ( it is called on, and returns a lazy list that will be reified as the ) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F2 10 Tf
    [ -33446 (Supply) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    [ -37646 ( emits values. The list will be terminated once) ] TJ
    11 TL
    T*
    (the ) Tj
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F2 10 Tf
    [ -1722 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F3 10 Tf
    [ -5922 ( is ) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F2 10 Tf
    [ -7339 (done) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F3 10 Tf
    [ -10339 (. If the ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F2 10 Tf
    [ -13477 (Supply) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F3 10 Tf
    [ -17677 ( ) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F2 10 Tf
    [ -18177 (quit) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F3 10 Tf
    [ -21177 (s, then an exception will be thrown once that point in the lazy list is reached.) ] TJ
  ET
EMC
/H2 << /MCID 32 >> BDC
  BT
    1 0 0 1 20 353.8 Tm
    /F1 16 Tf
    (method Seq) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 318.6 Tm
    /F2 8 Tf
    (method Seq\(Supply:D:\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 307.8 562 21.6 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F3 10 Tf
    (Returns a ) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F2 10 Tf
    [ -4305 (Seq) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F3 10 Tf
    [ -6705 ( with an iterator containing the values that the ) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F2 10 Tf
    [ -25536 (Supply) ] TJ
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F3 10 Tf
    [ -29736 ( contains.) ] TJ
  ET
EMC
/H2 << /MCID 39 >> BDC
  BT
    1 0 0 1 20 252.6 Tm
    /F1 16 Tf
    (method grab) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 30 217.4 Tm
    /F2 8 Tf
    (method grab\(Supply:D: &when-done --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 206.6 562 21.6 re
  B
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F3 10 Tf
    [ -8116 ( it is called on. When it is ) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F2 10 Tf
    [ -18838 (done) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F3 10 Tf
    [ -21838 (, calls ) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F2 10 Tf
    [ -24671 (&when-done) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F3 10 Tf
    [ -31271 ( and then emits the list of values that it returns on the result ) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F2 10 Tf
    [ -55464 ] TJ
    11 TL
    T*
    (Supply) Tj
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F3 10 Tf
    [ -4200 (. If the original ) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F2 10 Tf
    [ -10699 (Supply) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F3 10 Tf
    [ -14899 ( ) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F2 10 Tf
    [ -15399 (quit) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F3 10 Tf
    [ -18399 (s, then the exception is immediately conveyed on the return ) ] TJ
  ET
EMC
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F2 10 Tf
    [ -42729 (Supply) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F3 10 Tf
    [ -46929 (.) ] TJ
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 30 158 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $t = $s.grab\(&sum\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «19») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS11 gs
  /GS12 gs
  28 129.6 562 39.2 re
  B
Q
/H2 << /MCID 57 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F1 16 Tf
    (method reverse) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 58 >> BDC
  BT
    1 0 0 1 30 61.2 Tm
    /F2 8 Tf
    (method reverse\(Supply:D: --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS13 gs
  /GS14 gs
  28 50.4 562 21.6 re
  B
Q
endstream
endobj

67 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

68 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

69 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

70 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

71 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

72 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

73 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

74 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

75 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

76 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

77 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

78 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

79 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

80 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

81 0 obj
<<
  /Type /Page
  /Annots [ 82 0 R 84 0 R 86 0 R ]
  /Contents 88 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 89 0 R
      /GS10 90 0 R
      /GS11 91 0 R
      /GS12 92 0 R
      /GS13 93 0 R
      /GS14 94 0 R
      /GS2 95 0 R
      /GS3 96 0 R
      /GS4 97 0 R
      /GS5 98 0 R
      /GS6 99 0 R
      /GS7 100 0 R
      /GS8 101 0 R
      /GS9 102 0 R
    >>
    /Font << /F1 40 0 R /F2 38 0 R /F3 37 0 R >>
  >>
  /StructParents 5
>>
endobj

82 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 83 0 R
  /Border [ 0 0 0 ]
  /Contents (Block)
  /P 81 0 R
  /Rect [ 340.77 581.8 368.66 596.8 ]
>>
endobj

83 0 obj
<< /Type /Action /S /URI /URI (/type/Block) >>
endobj

84 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 85 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.collate)
  /P 81 0 R
  /Rect [ 423.81 414.6 474.19 429.6 ]
>>
endobj

85 0 obj
<< /Type /Action /S /URI /URI (/type/Any#method_collate) >>
endobj

86 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 87 0 R
  /Border [ 0 0 0 ]
  /Contents (List.reduce)
  /P 81 0 R
  /Rect [ 370.84 236.4 419.55 251.4 ]
>>
endobj

87 0 obj
<< /Type /Action /S /URI /URI (/type/List#routine_reduce) >>
endobj

88 0 obj
<< /Length 7843 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -8116 ( it is called on. Once that ) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -18587 (Supply) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -22787 ( emits ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -25704 (done) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -28704 (, all of the values it emitted will be emitted on the returned ) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -52674 (Supply) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -56874 ] TJ
    11 TL
    T*
    (in reverse order. If the original ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -12774 (Supply) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -16974 ( ) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -17474 (quit) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -20474 (s, then the exception is immediately conveyed on the return ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -44804 (Supply) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -49004 (.) ] TJ
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 30 723.4 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(1, 2, 3\);) Tj
    8.8 TL
    T*
    (my $t = $s.reverse;) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «321») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 695 562 39.2 re
  B
Q
/H2 << /MCID 16 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    /F3 16 Tf
    (method sort) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 30 626.6 Tm
    /F2 8 Tf
    (method sort\(Supply:D: &custom-routine-to-use? --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 615.8 562 21.6 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F1 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F1 10 Tf
    [ -8116 ( it is called on. Once that ) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F2 10 Tf
    [ -18587 (Supply) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F1 10 Tf
    [ -22787 ( emits ) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F2 10 Tf
    [ -25704 (done) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F1 10 Tf
    [ -28704 (, all of the values that it emitted will be sorted, and the results emitted) ] TJ
    11 TL
    T*
    (on the returned ) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F2 10 Tf
    [ -6554 (Supply) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F1 10 Tf
    [ -10754 ( in the sorted order. Optionally accepts a comparator ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 27 >> BDC
    BT
      1 0 0 1 20 584.8 Tm
      [ -32277 (Block) ] TJ
    ET
    q
      0.5 w
      342.77 583.8 m
      366.66 583.8 l
      S
    Q
  EMC
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    [ -34916 (. If the original ) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F2 10 Tf
    [ -41415 (Supply) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F1 10 Tf
    [ -45615 ( ) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F2 10 Tf
    [ -46115 (quit) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F1 10 Tf
    [ -49115 (s, then the) ] TJ
    T*
    (exception is immediately conveyed on the return ) Tj
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F2 10 Tf
    [ -19997 (Supply) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F1 10 Tf
    [ -24197 (.) ] TJ
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 30 556.2 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $t = $s.sort\(\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «23410») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 527.8 562 39.2 re
  B
Q
/H2 << /MCID 36 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 16 Tf
    (method collate) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 459.4 Tm
    /F2 8 Tf
    (method collate\(Supply:D:\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 448.6 562 21.6 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F1 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F1 10 Tf
    [ -8116 ( it is called on. Once that ) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F2 10 Tf
    [ -18587 (Supply) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F1 10 Tf
    [ -22787 ( emits ) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F2 10 Tf
    [ -25704 (done) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F1 10 Tf
    [ -28704 (, all of the values that it emitted will be sorted taking into account) ] TJ
    11 TL
    T*
    (Unicode grapheme characteristics. A new ) Tj
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F2 10 Tf
    [ -17189 (Supply) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F1 10 Tf
    [ -21389 ( is returned with the sorted values emitted. See ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 47 >> BDC
    BT
      1 0 0 1 20 417.6 Tm
      [ -40581 (Any.collate) ] TJ
    ET
    q
      0.5 w
      425.81 416.6 m
      472.19 416.6 l
      S
    Q
  EMC
Q
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    [ -45469 ( for more details on the) ] TJ
    T*
    (collated sort.) Tj
  ET
EMC
/Code << /MCID 49 >> BDC
  BT
    1 0 0 1 30 389 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(<ä a o ö>\);) Tj
    8.8 TL
    T*
    (my $t = $s.collate\(\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «aäoö») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 360.6 562 39.2 re
  B
Q
/H2 << /MCID 50 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F3 16 Tf
    (method reduce) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F1 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 52 >> BDC
  BT
    1 0 0 1 30 270.2 Tm
    /F2 8 Tf
    (method reduce\(Supply:D: &with --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS11 gs
  /GS12 gs
  28 259.4 562 21.6 re
  B
Q
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F1 10 Tf
    (Creates a "reducing" supply, which will emit a single value with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 54 >> BDC
    BT
      1 0 0 1 20 239.4 Tm
      [ -35284 (List.reduce) ] TJ
    ET
    q
      0.5 w
      372.84 238.4 m
      417.55 238.4 l
      S
    Q
  EMC
Q
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    [ -40005 (.) ] TJ
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 30 221.8 Tm
    /F2 8 Tf
    (my $supply = Supply.from-list\(1..5\).reduce\({$^a + $^b}\);) Tj
    T*
    ($supply.tap\(-> $v { say "$v" }\);  OUTPUT: «15») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS13 gs
  /GS14 gs
  28 202.2 562 30.4 re
  B
Q
endstream
endobj

89 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

90 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

91 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

92 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

93 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

94 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

95 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

96 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

97 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

98 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

99 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

100 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

101 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

102 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

103 0 obj
<<
  /Type /Page
  /Annots [ 104 0 R 106 0 R ]
  /Contents 108 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 109 0 R
      /GS10 110 0 R
      /GS11 111 0 R
      /GS12 112 0 R
      /GS13 113 0 R
      /GS14 114 0 R
      /GS15 115 0 R
      /GS16 116 0 R
      /GS2 117 0 R
      /GS3 118 0 R
      /GS4 119 0 R
      /GS5 120 0 R
      /GS6 121 0 R
      /GS7 122 0 R
      /GS8 123 0 R
      /GS9 124 0 R
    >>
    /Font << /F1 37 0 R /F2 38 0 R /F3 40 0 R >>
  >>
  /StructParents 6
>>
endobj

104 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 105 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 103 0 R
  /Rect [ 301.35 93.4 320.9 108.4 ]
>>
endobj

105 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

106 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 107 0 R
  /Border [ 0 0 0 ]
  /Contents (CLOSE)
  /P 103 0 R
  /Rect [ 86.61 71.4 122.28 86.4 ]
>>
endobj

107 0 obj
<< /Type /Action /S /URI /URI (/language/phasers#CLOSE) >>
endobj

108 0 obj
<< /Length 5804 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that return another Supply) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    331.12 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method from-list) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method from-list\(Supply:U: +@values --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 648.8 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    (Creates an on-demand supply from the values passed to this method.) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 30 611.2 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(1, 2, 3\);) Tj
    T*
    ($s.tap\(&say\);            OUTPUT: «123») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 591.6 562 30.4 re
  B
Q
/H2 << /MCID 5 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F1 16 Tf
    (method share) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 523.2 Tm
    /F2 8 Tf
    (method share\(Supply:D: --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 512.4 562 21.6 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F3 10 Tf
    (Creates a live supply from an on-demand supply, thus making it possible to share the values of the on-demand supply on multiple taps, instead) Tj
    11 TL
    T*
    (of each tap seeing its own copy of all values from the on-demand supply.) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 463.8 Tm
    /F2 8 Tf
    ( this says in turn: "first 1" "first 2" "second 2" "first 3" "second 3") Tj
    8.8 TL
    T*
    (my $s = Supply.interval\(1\).share;) Tj
    T*
    ($s.tap: { "first $_".say };) Tj
    T*
    (sleep 1.1;) Tj
    T*
    ($s.tap: { "second $_".say };) Tj
    T*
    (sleep 2) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 409 562 65.6 re
  B
Q
/H2 << /MCID 9 >> BDC
  BT
    1 0 0 1 20 375.8 Tm
    /F1 16 Tf
    (method flat) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 30 340.6 Tm
    /F2 8 Tf
    (method flat\(Supply:D: --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 329.8 562 21.6 re
  B
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 309.8 Tm
    /F3 10 Tf
    (Creates a supply on which all of the values seen in the given supply are flattened before being emitted again.) Tj
  ET
EMC
/H2 << /MCID 12 >> BDC
  BT
    1 0 0 1 20 274.6 Tm
    /F1 16 Tf
    (method do) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 30 239.4 Tm
    /F2 8 Tf
    (method do\(Supply:D: &do --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS11 gs
  /GS12 gs
  28 228.6 562 21.6 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 208.6 Tm
    /F3 10 Tf
    (Creates a supply to which all values seen in the given supply, are emitted again. The given code, executed for its side-effects only, is) Tj
    11 TL
    T*
    (guaranteed to be only executed by one thread at a time.) Tj
  ET
EMC
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 162.4 Tm
    /F1 16 Tf
    (method on-close) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 127.2 Tm
    /F2 8 Tf
    (method on-close\(Supply:D: &on-close --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS13 gs
  /GS14 gs
  28 116.4 562 21.6 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 10 Tf
    (Returns a new ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F2 10 Tf
    [ -6221 (Supply) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 10 Tf
    [ -10421 ( which will run ) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F2 10 Tf
    [ -17004 (&on-close) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 10 Tf
    [ -23004 ( whenever a ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 22 >> BDC
    BT
      1 0 0 1 20 96.4 Tm
      [ -28335 (Tap) ] TJ
    ET
    q
      0.5 w
      303.35 95.4 m
      318.9 95.4 l
      S
    Q
  EMC
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    [ -30140 ( of that ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F2 10 Tf
    [ -33473 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 10 Tf
    [ -37673 ( is closed. This includes if further operations are) ] TJ
    11 TL
    T*
    (chained on to the ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F2 10 Tf
    [ -7360 (Supply) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F3 10 Tf
    [ -11560 (. \(for example, ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F2 10 Tf
    [ -17947 ($supply.on-close\(&on-close\).map\(*.uc\)) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F3 10 Tf
    [ -40747 (\). When using a ) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F2 10 Tf
    [ -47579 (react) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F3 10 Tf
    [ -51179 ( or ) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F2 10 Tf
    [ -52762 (supply) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F3 10 Tf
    [ -56962 ] TJ
    T*
    (block, using the ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 34 >> BDC
    BT
      1 0 0 1 20 74.4 Tm
      [ -6861 (CLOSE) ] TJ
    ET
    q
      0.5 w
      88.61 73.4 m
      120.28 73.4 l
      S
    Q
  EMC
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 74.4 Tm
    [ -10278 ( phaser is usually a better choice.) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS15 gs
  /GS16 gs
  28 670.8 562 92 re
  B
Q
endstream
endobj

109 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

110 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

111 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

112 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

113 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

114 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

115 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

116 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

117 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

118 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

119 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

120 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

121 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

122 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

123 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

124 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

125 0 obj
<<
  /Type /Page
  /Contents 126 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 127 0 R
      /GS10 128 0 R
      /GS11 129 0 R
      /GS12 130 0 R
      /GS2 131 0 R
      /GS3 132 0 R
      /GS4 133 0 R
      /GS5 134 0 R
      /GS6 135 0 R
      /GS7 136 0 R
      /GS8 137 0 R
      /GS9 138 0 R
    >>
    /Font << /F1 38 0 R /F2 37 0 R /F3 40 0 R >>
  >>
  /StructParents 7
>>
endobj

126 0 obj
<< /Length 6734 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 8 Tf
    (my $s = Supplier.new;) Tj
    8.8 TL
    T*
    (my $tap = $s.Supply.on-close\({ say "Tap closed" }\).tap\() Tj
    T*
    (    -> $v { say "the value is $v" },) Tj
    T*
    (    done    => { say "Supply is done" },) Tj
    T*
    (    quit    => -> $ex { say "Supply finished with error $ex" },) Tj
    T*
    (\);) Tj
    T*
    [  ] TJ
    T*
    ($s.emit\('Raku'\);) Tj
    T*
    ($tap.close;         OUTPUT: «Tap closed») Tj
    T*
  ET
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 16 Tf
    (method interval) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 602.4 Tm
    /F1 8 Tf
    (method interval\(Supply:U: $interval, $delay = 0, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 591.6 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F3 10 Tf
    (Creates a supply that emits a value every ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F1 10 Tf
    [ -16858 ($interval) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F3 10 Tf
    [ -22858 ( seconds, starting ) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F1 10 Tf
    [ -30274 ($delay) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F3 10 Tf
    [ -34474 ( seconds from the call. The emitted value is an integer,) ] TJ
    11 TL
    T*
    (starting from 0, and is incremented by one for each value emitted.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    (Implementations may treat too-small and negative values as lowest resolution they support, possibly warning in such situations; e.g. treating ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    /F1 10 Tf
    [ -56635 ] TJ
    T*
    (0.0001) Tj
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    [ -4200 ( as ) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F1 10 Tf
    [ -5783 (0.001) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    [ -9383 (. For 6.d language version, the minimal value specified is ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F1 10 Tf
    [ -32825 (0.001) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    [ -36425 (.) ] TJ
  ET
EMC
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F2 16 Tf
    (method grep) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 457.2 Tm
    /F1 8 Tf
    (method grep\(Supply:D: Mu $test --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 446.4 562 21.6 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F3 10 Tf
    (Creates a new supply that only emits those values from the original supply that smartmatch against ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F1 10 Tf
    [ -40080 ($test) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F3 10 Tf
    [ -43680 (.) ] TJ
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 30 408.8 Tm
    /F1 8 Tf
    (my $supplier = Supplier.new;) Tj
    T*
    (my $all      = $supplier.Supply;) Tj
    T*
    (my $ints     = $all.grep\(Int\);) Tj
    T*
    ($ints.tap\(&say\);) Tj
    T*
    ($supplier.emit\($_\) for 1, 'a string', 3.14159;    prints only 1) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 362.8 562 56.8 re
  B
Q
/H2 << /MCID 21 >> BDC
  BT
    1 0 0 1 20 329.6 Tm
    /F2 16 Tf
    (method map) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 30 294.4 Tm
    /F1 8 Tf
    (method map\(Supply:D: &mapper --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 283.6 562 21.6 re
  B
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 263.6 Tm
    /F3 10 Tf
    (Returns a new supply that maps each value of the given supply through ) Tj
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 263.6 Tm
    /F1 10 Tf
    [ -29052 (&mapper) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 263.6 Tm
    /F3 10 Tf
    [ -33852 ( and emits it to the new supply.) ] TJ
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 30 246 Tm
    /F1 8 Tf
    (my $supplier = Supplier.new;) Tj
    T*
    (my $all      = $supplier.Supply;) Tj
    T*
    (my $double   = $all.map\(-> $value { $value * 2 }\);) Tj
    T*
    ($double.tap\(&say\);) Tj
    T*
    ($supplier.emit\(4\);            OUTPUT: «8») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 200 562 56.8 re
  B
Q
/H2 << /MCID 27 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F2 16 Tf
    (method batch) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 30 131.6 Tm
    /F1 8 Tf
    (method batch\(Supply:D: :$elems, :$seconds --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS11 gs
  /GS12 gs
  28 120.8 562 21.6 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 100.8 Tm
    /F3 10 Tf
    (Creates a new supply that batches the values of the given supply by either the number of elements in the batch \(using ) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 100.8 Tm
    /F1 10 Tf
    [ -47354 (:elems) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 100.8 Tm
    /F3 10 Tf
    [ -51554 (\) or a) ] TJ
    11 TL
    T*
    (duration \(using ) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 89.8 Tm
    /F1 10 Tf
    [ -6583 (:seconds) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 89.8 Tm
    /F3 10 Tf
    [ -11983 (\) or both. Any remaining values are emitted in a final batch when the supply is done.) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 67.8 Tm
    /F2 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 67.8 Tm
    /F3 10 Tf
    [ -2249 (: Since Rakudo version 2020.12, the ) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 67.8 Tm
    /F1 10 Tf
    [ -17276 (:seconds) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 67.8 Tm
    /F3 10 Tf
    [ -22676 ( parameter has a millisecond granularity: for example a 1 millisecond duration could) ] TJ
    T*
    (be specified as ) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 56.8 Tm
    /F1 10 Tf
    [ -6387 (:seconds\(0.001\)) ] TJ
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 56.8 Tm
    /F3 10 Tf
    [ -15987 (. Before Rakudo version 2020.12, the ) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 56.8 Tm
    /F1 10 Tf
    [ -31485 (:seconds) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 56.8 Tm
    /F3 10 Tf
    [ -36885 ( parameter had a second granularity.) ] TJ
  ET
EMC
endstream
endobj

127 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

128 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

129 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

130 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

131 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

132 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

133 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

134 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

135 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

136 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

137 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

138 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

139 0 obj
<<
  /Type /Page
  /Annots [ 140 0 R 142 0 R ]
  /Contents 144 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 145 0 R
      /GS10 146 0 R
      /GS11 147 0 R
      /GS12 148 0 R
      /GS13 149 0 R
      /GS14 150 0 R
      /GS15 151 0 R
      /GS16 152 0 R
      /GS2 153 0 R
      /GS3 154 0 R
      /GS4 155 0 R
      /GS5 156 0 R
      /GS6 157 0 R
      /GS7 158 0 R
      /GS8 159 0 R
      /GS9 160 0 R
    >>
    /Font << /F1 37 0 R /F2 38 0 R /F3 40 0 R >>
  >>
  /StructParents 8
>>
endobj

140 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 141 0 R
  /Border [ 0 0 0 ]
  /Contents (List.head)
  /P 139 0 R
  /Rect [ 229.46 531.2 270.4 546.2 ]
>>
endobj

141 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_head) >>
endobj

142 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 143 0 R
  /Border [ 0 0 0 ]
  /Contents (List.tail)
  /P 139 0 R
  /Rect [ 223.36 302.4 258.2 317.4 ]
>>
endobj

143 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_tail) >>
endobj

144 0 obj
<< /Length 6045 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method elems) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method elems\(Supply:D: $seconds? --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 706 562 21.6 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    (Creates a new supply in which changes to the number of values seen are emitted. It optionally also takes an interval \(in seconds\) if you only) Tj
    11 TL
    T*
    (want to be updated every so many seconds.) Tj
  ET
EMC
/H2 << /MCID 3 >> BDC
  BT
    1 0 0 1 20 639.8 Tm
    /F1 16 Tf
    (method head) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 600.2 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 5 >> BDC
  BT
    1 0 0 1 30 582.6 Tm
    /F2 8 Tf
    (multi method head\(Supply:D:\)) Tj
    8.8 TL
    T*
    (multi method head\(Supply:D: Callable:D $limit\)) Tj
    T*
    (multi method head\(Supply:D: \\limit\)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 554.2 562 39.2 re
  B
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 534.2 Tm
    /F3 10 Tf
    (Creates a "head" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 7 >> BDC
    BT
      1 0 0 1 20 534.2 Tm
      [ -21146 (List.head) ] TJ
    ET
    q
      0.5 w
      231.46 533.2 m
      268.4 533.2 l
      S
    Q
  EMC
Q
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 534.2 Tm
    [ -25090 (.) ] TJ
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 30 516.6 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    T*
    (my $hs = $s.head\(2\);) Tj
    T*
    ($hs.tap\(&say\);            OUTPUT: «410») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 488.2 562 39.2 re
  B
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 10 Tf
    (Since release 2020.07, A ) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F2 10 Tf
    [ -10470 (WhateverCode) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 10 Tf
    [ -18270 ( can be used also, again with the same semantics as ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F2 10 Tf
    [ -39294 (List.head) ] TJ
  ET
EMC
/Code << /MCID 14 >> BDC
  BT
    1 0 0 1 30 450.6 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2, 1\);) Tj
    T*
    (my $hs = $s.head\( * - 2\);) Tj
    T*
    ($hs.tap\(&say\);            OUTPUT: «4103») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 422.2 562 39.2 re
  B
Q
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F1 16 Tf
    (method tail) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 353.8 Tm
    /F2 8 Tf
    (multi method tail\(Supply:D:\)) Tj
    8.8 TL
    T*
    (multi method tail\(Supply:D: Callable:D $limit\)) Tj
    T*
    (multi method tail\(Supply:D: \\limit\)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 325.4 562 39.2 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 305.4 Tm
    /F3 10 Tf
    (Creates a "tail" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 18 >> BDC
    BT
      1 0 0 1 20 305.4 Tm
      [ -20536 (List.tail) ] TJ
    ET
    q
      0.5 w
      225.36 304.4 m
      256.2 304.4 l
      S
    Q
  EMC
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 305.4 Tm
    [ -23870 (.) ] TJ
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 30 287.8 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    T*
    (my $ts = $s.tail\(2\);) Tj
    T*
    ($ts.tap\(&say\);            OUTPUT: «32») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS11 gs
  /GS12 gs
  28 259.4 562 39.2 re
  B
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F3 10 Tf
    (You can call ) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F2 10 Tf
    [ -5554 (.tail) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F3 10 Tf
    [ -9154 ( with ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F2 10 Tf
    [ -11682 (Whatever) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F3 10 Tf
    [ -17082 ( or ) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F2 10 Tf
    [ -18665 (Inf) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F3 10 Tf
    [ -21065 (; which will return a new supply equivalent to the initial one. Calling it with a ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F2 10 Tf
    [ -52675 ] TJ
    11 TL
    T*
    (WhateverCode) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 228.4 Tm
    /F3 10 Tf
    [ -7800 ( will be equivalent to skipping until that number.) ] TJ
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 30 210.8 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $ts = $s.tail\( * - 2 \);) Tj
    T*
    ($ts.tap\(&say\);            OUTPUT: «32») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS13 gs
  /GS14 gs
  28 182.4 562 39.2 re
  B
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 162.4 Tm
    /F3 10 Tf
    (This feature is only available from the 2020.07 release of Raku.) Tj
  ET
EMC
/H2 << /MCID 32 >> BDC
  BT
    1 0 0 1 20 127.2 Tm
    /F1 16 Tf
    (method first) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 92 Tm
    /F2 8 Tf
    (method first\(Supply:D: :$end, |c\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS15 gs
  /GS16 gs
  28 81.2 562 21.6 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 61.2 Tm
    /F3 10 Tf
    (This method creates a supply of the first element, or the last element if the optional named parameter ) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 61.2 Tm
    /F2 10 Tf
    [ -40882 (:end) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 61.2 Tm
    /F3 10 Tf
    [ -43882 ( is truthy, from a supply created) ] TJ
    11 TL
    T*
    (by calling the ) Tj
  ET
EMC
endstream
endobj

145 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

146 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

147 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

148 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

149 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

150 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

151 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

152 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

153 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

154 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

155 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

156 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

157 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

158 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

159 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

160 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

161 0 obj
<<
  /Type /Page
  /Annots [ 162 0 R 164 0 R 165 0 R 167 0 R ]
  /Contents 169 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 170 0 R
      /GS10 171 0 R
      /GS11 172 0 R
      /GS12 173 0 R
      /GS13 174 0 R
      /GS14 175 0 R
      /GS2 176 0 R
      /GS3 177 0 R
      /GS4 178 0 R
      /GS5 179 0 R
      /GS6 180 0 R
      /GS7 181 0 R
      /GS8 182 0 R
      /GS9 183 0 R
    >>
    /Font << /F1 38 0 R /F2 40 0 R /F3 37 0 R >>
  >>
  /StructParents 9
>>
endobj

162 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 163 0 R
  /Border [ 0 0 0 ]
  /Contents (Str.split)
  /P 161 0 R
  /Rect [ 564.31 566.4 568.31 581.4 ]
>>
endobj

163 0 obj
<< /Type /Action /S /URI /URI (/type/Str#routine_split) >>
endobj

164 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 163 0 R
  /Border [ 0 0 0 ]
  /Contents (Str.split)
  /P 161 0 R
  /Rect [ 18 555.4 53.4 570.4 ]
>>
endobj

165 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 166 0 R
  /Border [ 0 0 0 ]
  /Contents (.head)
  /P 161 0 R
  /Rect [ 123.04 544.4 148.42 559.4 ]
>>
endobj

166 0 obj
<< /Type /Action /S /GoTo /D /method_head >>
endobj

167 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 168 0 R
  /Border [ 0 0 0 ]
  /Contents (List.rotor)
  /P 161 0 R
  /Rect [ 242.8 229.8 284.3 244.8 ]
>>
endobj

168 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_rotor) >>
endobj

169 0 obj
<< /Length 6646 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (grep) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -3000 ( method on the invocant, with any remaining arguments as parameters. If there is no remaining argument, this method is equivalent to) ] TJ
    11 TL
    T*
    (calling on the invocant, without parameter, the ) Tj
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -19164 (head) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -22164 ( or the ) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -25219 (tail) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -28219 ( method, according to named parameter ) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -44604 (:end) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -47604 (.) ] TJ
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 723.4 Tm
    /F1 8 Tf
    (my $rand = supply { emit \(rand × 100\).floor for ^ };) Tj
    8.8 TL
    T*
    (my $first-prime = $rand.first: &is-prime;) Tj
    T*
    ( output the first prime from the endless random number supply $rand,) Tj
    T*
    ( then the $first-prime supply reaches its end) Tj
    T*
    ($first-prime.tap: &say;) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 677.4 562 56.8 re
  B
Q
/H2 << /MCID 9 >> BDC
  BT
    1 0 0 1 20 644.2 Tm
    /F3 16 Tf
    (method split) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 30 609 Tm
    /F1 8 Tf
    (multi method split\(Supply:D: \\delimiter\)) Tj
    8.8 TL
    T*
    (multi method split\(Supply:D: \\delimiter, \\limit\)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 589.4 562 30.4 re
  B
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F2 10 Tf
    (This method creates a supply of the values returned by the ) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F1 10 Tf
    [ -23829 (Str.split) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F2 10 Tf
    [ -29829 ( method called on the string collected from the invocant. See ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 14 >> BDC
    BT
      1 0 0 1 20 569.4 Tm
      [ -54631 ] TJ
      11 TL
      T*
      (Str.split) Tj
    ET
    q
      0.5 w
      566.31 568.4 m
      566.31 568.4 l
      S
    Q
    q
      0.5 w
      20 557.4 m
      51.4 557.4 l
      S
    Q
  EMC
Q
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    [ -3390 ( for details on the ) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F1 10 Tf
    [ -10889 (\\delimiter) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F2 10 Tf
    [ -17489 ( argument as well as available extra named parameters. The created supply can be limited with the ) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F1 10 Tf
    [ -57341 ] TJ
    11 TL
    T*
    (\\limit) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F2 10 Tf
    [ -4200 ( argument, see ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 20 >> BDC
    BT
      1 0 0 1 20 547.4 Tm
      [ -10504 (.head) ] TJ
    ET
    q
      0.5 w
      125.04 546.4 m
      146.42 546.4 l
      S
    Q
  EMC
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    [ -12892 (.) ] TJ
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 30 529.8 Tm
    /F1 8 Tf
    (my $words = Supply.from-list\(<Hello World From Raku!>\);) Tj
    8.8 TL
    T*
    (my $s = $words.split\(/ <?upper> /, 2, :skip-empty\);) Tj
    T*
    ($s.tap\(&say\);  OUTPUT: «HelloWorld») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 501.4 562 39.2 re
  B
Q
/H2 << /MCID 23 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 16 Tf
    (method rotate) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 30 433 Tm
    /F1 8 Tf
    (method rotate\(Supply:D: $rotate = 1\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 422.2 562 21.6 re
  B
Q
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F2 10 Tf
    (Creates a supply with elements rotated to the left when ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F1 10 Tf
    [ -22469 ($rotate) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F2 10 Tf
    [ -27269 ( is positive or to the right otherwise, in which case the invocant is tapped) ] TJ
    11 TL
    T*
    (on before a new supply is returned.) Tj
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 30 373.6 Tm
    /F1 8 Tf
    (my $supply = Supply.from-list\(<a b c d e>\).rotate\(2\);) Tj
    8.8 TL
    T*
    ($supply.tap\(&say\);  OUTPUT: «cdeab») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 354 562 30.4 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 334 Tm
    /F3 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 334 Tm
    /F2 10 Tf
    [ -2249 (: Available since Rakudo 2020.06.) ] TJ
  ET
EMC
/H2 << /MCID 31 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F3 16 Tf
    (method rotor) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 30 263.6 Tm
    /F1 8 Tf
    (method rotor\(Supply:D: @cycle --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS11 gs
  /GS12 gs
  28 252.8 562 21.6 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F2 10 Tf
    (Creates a "rotoring" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 34 >> BDC
    BT
      1 0 0 1 20 232.8 Tm
      [ -22480 (List.rotor) ] TJ
    ET
    q
      0.5 w
      244.8 231.8 m
      282.3 231.8 l
      S
    Q
  EMC
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    [ -26480 (.) ] TJ
  ET
EMC
/H2 << /MCID 36 >> BDC
  BT
    1 0 0 1 20 197.6 Tm
    /F3 16 Tf
    (method delayed) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 162.4 Tm
    /F1 8 Tf
    (method delayed\(Supply:D: $seconds, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS13 gs
  /GS14 gs
  28 151.6 562 21.6 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 131.6 Tm
    /F2 10 Tf
    (Creates a new supply in which all values flowing through the given supply are emitted, but with the given delay in seconds.) Tj
  ET
EMC
/H2 << /MCID 39 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 16 Tf
    (method throttle) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 56.8 Tm
    /F2 10 Tf
    (Defined as) Tj
  ET
EMC
endstream
endobj

170 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

171 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

172 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

173 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

174 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

175 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

176 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

177 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

178 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

179 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

180 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

181 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

182 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

183 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

184 0 obj
<<
  /Type /Page
  /Annots [ 185 0 R ]
  /Contents 187 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 188 0 R /GS2 189 0 R /GS3 190 0 R /GS4 191 0 R >>
    /Font << /F1 38 0 R /F2 40 0 R /F3 37 0 R >>
  >>
  /StructParents 10
>>
endobj

185 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 186 0 R
  /Border [ 0 0 0 ]
  /Contents (status message)
  /P 184 0 R
  /Rect [ 253.25 151.4 316.41 166.4 ]
>>
endobj

186 0 obj
<< /Type /Action /S /GoTo /D /status_message >>
endobj

187 0 obj
<< /Length 9496 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 8 Tf
    (multi method throttle\(Supply:D:) Tj
    8.8 TL
    T*
    (      Int\(\)  $elems,) Tj
    T*
    (      Real\(\) $seconds,) Tj
    T*
    (      Real\(\) $delay  = 0,) Tj
    T*
    (      :$scheduler    = $*SCHEDULER,) Tj
    T*
    (      :$control,) Tj
    T*
    (      :$status,) Tj
    T*
    (      :$bleed,) Tj
    T*
    (      :$vent-at,) Tj
    T*
    (    \)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 662 562 100.8 re
  B
Q
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 646.4 Tm
    (multi method throttle\(Supply:D:) Tj
    T*
    (      Int\(\)  $elems,) Tj
    T*
    (      Callable:D $process,) Tj
    T*
    (      Real\(\) $delay = 0,) Tj
    T*
    (      :$scheduler   = $*SCHEDULER,) Tj
    T*
    (      :$control,) Tj
    T*
    (      :$status,) Tj
    T*
    (      :$bleed,) Tj
    T*
    (      :$vent-at,) Tj
    T*
    (    \)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 556.4 562 100.8 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F2 10 Tf
    (Arguments to ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F1 10 Tf
    [ -5972 (.throttle) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F2 10 Tf
    [ -11972 ( are defined as follows:) ] TJ
  ET
EMC
/TH << /MCID 5 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F3 10 Tf
    (Argument) Tj
  ET
  q
    1 w
    20 534.4 m
    104.98 534.4 l
    S
  Q
EMC
/TH << /MCID 6 >> BDC
  BT
    1 0 0 1 114.98 536.4 Tm
    (Meaning) Tj
  ET
  q
    1 w
    114.98 534.4 m
    297.75 534.4 l
    S
  Q
EMC
/TD << /MCID 7 >> BDC
  BT
    1 0 0 1 20 522.4 Tm
    /F2 10 Tf
    ($limit,) Tj
  ET
EMC
/TD << /MCID 8 >> BDC
  BT
    1 0 0 1 114.98 522.4 Tm
    (values / time or simultaneous processing) Tj
  ET
EMC
/TD << /MCID 9 >> BDC
  BT
    1 0 0 1 20 509.4 Tm
    ($seconds or $process) Tj
  ET
EMC
/TD << /MCID 10 >> BDC
  BT
    1 0 0 1 114.98 509.4 Tm
    (time-unit / code to process simultaneously) Tj
  ET
EMC
/TD << /MCID 11 >> BDC
  BT
    1 0 0 1 20 496.4 Tm
    ($delay = 0,) Tj
  ET
EMC
/TD << /MCID 12 >> BDC
  BT
    1 0 0 1 114.98 496.4 Tm
    (initial delay before starting, in seconds) Tj
  ET
EMC
/TD << /MCID 13 >> BDC
  BT
    1 0 0 1 20 483.4 Tm
    (:$control,) Tj
  ET
EMC
/TD << /MCID 14 >> BDC
  BT
    1 0 0 1 114.98 483.4 Tm
    (supply to emit control messages on \(optional\)) Tj
  ET
EMC
/TD << /MCID 15 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    (:$status,) Tj
  ET
EMC
/TD << /MCID 16 >> BDC
  BT
    1 0 0 1 114.98 470.4 Tm
    (supply to tap status messages from \(optional\)) Tj
  ET
EMC
/TD << /MCID 17 >> BDC
  BT
    1 0 0 1 20 457.4 Tm
    (:$bleed,) Tj
  ET
EMC
/TD << /MCID 18 >> BDC
  BT
    1 0 0 1 114.98 457.4 Tm
    (supply to bleed messages to \(optional\)) Tj
  ET
EMC
/TD << /MCID 19 >> BDC
  BT
    1 0 0 1 20 444.4 Tm
    (:$vent-at,) Tj
  ET
EMC
/TD << /MCID 20 >> BDC
  BT
    1 0 0 1 114.98 444.4 Tm
    (bleed when so many buffered \(optional\)) Tj
  ET
EMC
/TD << /MCID 21 >> BDC
  BT
    1 0 0 1 20 431.4 Tm
    (:$scheduler,) Tj
  ET
EMC
/TD << /MCID 22 >> BDC
  BT
    1 0 0 1 114.98 431.4 Tm
    (scheduler to use, default $*SCHEDULER) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 396.4 Tm
    (This method produces a ) Tj
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 396.4 Tm
    /F1 10 Tf
    [ -10082 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 396.4 Tm
    /F2 10 Tf
    [ -14282 ( from a given one, but makes sure the number of messages passed through is limited.) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 374.4 Tm
    (It has two modes of operation: per time-unit or by maximum number of executions of a block of code: this is determined by the type of the) Tj
    11 TL
    T*
    (second positional parameter.) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 341.4 Tm
    (The first positional parameter specifies the limit that should be applied.) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 319.4 Tm
    (If the second positional parameter is a ) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 319.4 Tm
    /F1 10 Tf
    [ -15719 (Callable) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 319.4 Tm
    /F2 10 Tf
    [ -21119 (, then the limit indicates the maximum number of parallel processes executing the) ] TJ
    T*
    (Callable, which is given the value that was received. The emitted values in this case will be the ) Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 308.4 Tm
    /F1 10 Tf
    [ -38522 (Promise) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 308.4 Tm
    /F2 10 Tf
    [ -43322 (s that were obtained from ) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 308.4 Tm
    /F1 10 Tf
    [ -54042 (start) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 308.4 Tm
    /F2 10 Tf
    [ -57642 ] TJ
    T*
    (ing the Callable.) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 275.4 Tm
    (If the second positional parameter is a real number, it is interpreted as the time-unit \(in seconds\). If you specify ) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 275.4 Tm
    /F3 10 Tf
    [ -44964 (.1) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 275.4 Tm
    /F2 10 Tf
    [ -45964 ( as the value, then it makes) ] TJ
    T*
    (sure you don't exceed the limit for every tenth of a second.) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 242.4 Tm
    (If the limit is exceeded, then incoming messages are buffered until there is room to pass on / execute the Callable again.) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 220.4 Tm
    (The third positional parameter is optional: it indicates the number of seconds the throttle will wait before passing on any values.) Tj
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 198.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 198.4 Tm
    /F1 10 Tf
    [ -2055 (:control) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 198.4 Tm
    /F2 10 Tf
    [ -7455 ( named parameter optionally specifies a Supply that you can use to control the throttle while it is in operation. Messages) ] TJ
    T*
    (that can be sent, are strings in the form of "key:value". Please see below for the types of messages that you can send to control the throttle.) Tj
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 165.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 165.4 Tm
    /F1 10 Tf
    [ -2055 (:status) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 165.4 Tm
    /F2 10 Tf
    [ -6855 ( named parameter optionally specifies a Supply that will receive any status messages. If specified, it will at least send one) ] TJ
    T*
    (status message after the original Supply is exhausted. See ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 46 >> BDC
    BT
      1 0 0 1 20 154.4 Tm
      [ -23525 (status message) ] TJ
    ET
    q
      0.5 w
      255.25 153.4 m
      314.41 153.4 l
      S
    Q
  EMC
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 154.4 Tm
    [ -29691 ( below.) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 132.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 132.4 Tm
    /F1 10 Tf
    [ -2055 (:bleed) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 132.4 Tm
    /F2 10 Tf
    [ -6255 ( named parameter optionally specifies a Supply that will receive any values that were either explicitly bled \(with the ) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 132.4 Tm
    /F3 10 Tf
    [ -53247 (bleed) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 132.4 Tm
    /F2 10 Tf
    [ -55775 ] TJ
    T*
    (control message\), or automatically bled \(if there's a ) Tj
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 121.4 Tm
    /F3 10 Tf
    [ -21009 (vent-at) ] TJ
  ET
EMC
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 121.4 Tm
    /F2 10 Tf
    [ -24258 ( active\).) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 99.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 56 >> BDC
  BT
    1 0 0 1 20 99.4 Tm
    /F1 10 Tf
    [ -2055 (:vent-at) ] TJ
  ET
EMC
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 99.4 Tm
    /F2 10 Tf
    [ -7455 ( named parameter indicates the number of values that may be buffered before any additional value will be routed to the ) ] TJ
  ET
EMC
/P << /MCID 58 >> BDC
  BT
    1 0 0 1 20 99.4 Tm
    /F1 10 Tf
    [ -55611 ] TJ
    T*
    (:bleed) Tj
  ET
EMC
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 88.4 Tm
    /F2 10 Tf
    [ -4200 ( Supply. Defaults to 0 if not specified \(causing no automatic bleeding to happen\). Only makes sense if a ) ] TJ
  ET
EMC
/P << /MCID 60 >> BDC
  BT
    1 0 0 1 20 88.4 Tm
    /F1 10 Tf
    [ -46250 (:bleed) ] TJ
  ET
EMC
/P << /MCID 61 >> BDC
  BT
    1 0 0 1 20 88.4 Tm
    /F2 10 Tf
    [ -50450 ( Supply has also) ] TJ
    T*
    (been specified.) Tj
  ET
EMC
/P << /MCID 62 >> BDC
  BT
    1 0 0 1 20 55.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 55.4 Tm
    /F1 10 Tf
    [ -2055 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 64 >> BDC
  BT
    1 0 0 1 20 55.4 Tm
    /F2 10 Tf
    [ -8655 ( named parameter indicates the scheduler to be used. Defaults to ) ] TJ
  ET
EMC
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 55.4 Tm
    /F1 10 Tf
    [ -34899 ($*SCHEDULER) ] TJ
  ET
EMC
/P << /MCID 66 >> BDC
  BT
    1 0 0 1 20 55.4 Tm
    /F2 10 Tf
    [ -42099 (.) ] TJ
  ET
EMC
endstream
endobj

188 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

189 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

190 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

191 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

192 0 obj
<<
  /Type /Page
  /Contents 193 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 194 0 R /GS2 195 0 R >>
    /Font << /F1 37 0 R /F2 40 0 R /F3 38 0 R >>
  >>
  /StructParents 11
>>
endobj

193 0 obj
<< /Length 5377 >> stream
/H3 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 13 Tf
    (control messages) Tj
    14.3 TL
    T*
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 715.7 Tm
    /F2 10 Tf
    (These messages can be sent to the ) Tj
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 715.7 Tm
    /F3 10 Tf
    [ -14108 (:control) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 715.7 Tm
    /F2 10 Tf
    [ -19508 ( Supply. A control message consists of a string of the form "key: value", e.g. "limit: 4".) ] TJ
  ET
EMC
/Lbl << /MCID 4 >> BDC
  BT
    1 0 0 1 20 693.7 Tm
    () Tj
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 30 693.7 Tm
    (limit) Tj
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 671.7 Tm
    (Change the number of messages \(as initially given in the first positional\) to the value given.) Tj
  ET
EMC
/Lbl << /MCID 7 >> BDC
  BT
    1 0 0 1 20 649.7 Tm
    () Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 30 649.7 Tm
    (bleed) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 627.7 Tm
    (Route the given number of buffered messages to the ) Tj
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 627.7 Tm
    /F3 10 Tf
    [ -21385 (:bleed) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 627.7 Tm
    /F2 10 Tf
    [ -25585 ( Supply.) ] TJ
  ET
EMC
/Lbl << /MCID 12 >> BDC
  BT
    1 0 0 1 20 605.7 Tm
    () Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 30 605.7 Tm
    (vent-at) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 583.7 Tm
    (Change the maximum number of buffered values before automatic bleeding takes place. If the value is lower than before, will cause) Tj
    11 TL
    T*
    (immediate rerouting of buffered values to match the new maximum.) Tj
  ET
EMC
/Lbl << /MCID 15 >> BDC
  BT
    1 0 0 1 20 550.7 Tm
    () Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 30 550.7 Tm
    (status) Tj
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 528.7 Tm
    (Send a status message to the ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 528.7 Tm
    /F3 10 Tf
    [ -11860 (:status) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 528.7 Tm
    /F2 10 Tf
    [ -16660 ( Supply with the given id.) ] TJ
  ET
EMC
/H3 << /MCID 20 >> BDC
  BT
    1 0 0 1 20 500.1 Tm
    /F1 13 Tf
    (status message) Tj
    14.3 TL
    T*
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 463.8 Tm
    /F2 10 Tf
    (The status return message is a hash with the following keys:) Tj
  ET
EMC
/Lbl << /MCID 22 >> BDC
  BT
    1 0 0 1 20 441.8 Tm
    () Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 30 441.8 Tm
    (allowed) Tj
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    (The current number of messages / callables that is still allowed to be passed / executed.) Tj
  ET
EMC
/Lbl << /MCID 25 >> BDC
  BT
    1 0 0 1 20 397.8 Tm
    () Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 30 397.8 Tm
    (bled) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 375.8 Tm
    (The number of messages routed to the ) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 375.8 Tm
    /F3 10 Tf
    [ -15775 (:bleed) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 375.8 Tm
    /F2 10 Tf
    [ -19975 ( Supply.) ] TJ
  ET
EMC
/Lbl << /MCID 30 >> BDC
  BT
    1 0 0 1 20 353.8 Tm
    () Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 30 353.8 Tm
    (buffered) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 331.8 Tm
    (The number of messages currently buffered because of overflow.) Tj
  ET
EMC
/Lbl << /MCID 33 >> BDC
  BT
    1 0 0 1 20 309.8 Tm
    () Tj
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 30 309.8 Tm
    (emitted) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    (The number of messages emitted \(passed through\).) Tj
  ET
EMC
/Lbl << /MCID 36 >> BDC
  BT
    1 0 0 1 20 265.8 Tm
    () Tj
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 30 265.8 Tm
    (id) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    (The id of this status message \(a monotonically increasing number\). Handy if you want to log status messages.) Tj
  ET
EMC
/Lbl << /MCID 39 >> BDC
  BT
    1 0 0 1 20 221.8 Tm
    () Tj
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 30 221.8 Tm
    (limit) Tj
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    (The current limit that is being applied.) Tj
  ET
EMC
/Lbl << /MCID 42 >> BDC
  BT
    1 0 0 1 20 177.8 Tm
    () Tj
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 30 177.8 Tm
    (vent-at) Tj
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    (The maximum number of messages that may be buffered before they're automatically re-routed to the ) Tj
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F3 10 Tf
    [ -41171 (:bleed) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F2 10 Tf
    [ -45371 ( Supply.) ] TJ
  ET
EMC
/H3 << /MCID 47 >> BDC
  BT
    1 0 0 1 20 127.2 Tm
    /F1 13 Tf
    (Examples) Tj
    T*
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 90.9 Tm
    /F2 10 Tf
    (Have a simple piece of code announce when it starts running asynchronously, wait a random amount of time, then announce when it is done.) Tj
    11 TL
    T*
    (Do this 6 times, but don't let more than 3 of them run simultaneously.) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 679.6 562 83.2 re
  B
Q
endstream
endobj

194 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

195 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

196 0 obj
<<
  /Type /Page
  /Annots [ 197 0 R ]
  /Contents 199 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 200 0 R
      /GS10 201 0 R
      /GS2 202 0 R
      /GS3 203 0 R
      /GS4 204 0 R
      /GS5 205 0 R
      /GS6 206 0 R
      /GS7 207 0 R
      /GS8 208 0 R
      /GS9 209 0 R
    >>
    /Font << /F1 38 0 R /F2 40 0 R /F3 37 0 R >>
  >>
  /StructParents 12
>>
endobj

197 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 198 0 R
  /Border [ 0 0 0 ]
  /Contents (List.produce)
  /P 196 0 R
  /Rect [ 251.13 86.8 305.4 101.8 ]
>>
endobj

198 0 obj
<< /Type /Action /S /URI /URI (/type/List#routine_produce) >>
endobj

199 0 obj
<< /Length 6841 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 8 Tf
    (my $s = Supply.from-list\(^6\);   set up supply) Tj
    8.8 TL
    T*
    (my $t = $s.throttle: 3,         only allow 3 at a time) Tj
    T*
    ({                               code block to run) Tj
    T*
    (    say "running $_";           announce we've started) Tj
    T*
    (    sleep rand;                 wait some random time) Tj
    T*
    (    say "done $_"               announce we're done) Tj
    T*
    (}                               don't need ; because } at end of line) Tj
    T*
    ($t.wait;                        wait for the supply to be done) Tj
    T*
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 659.6 Tm
    /F2 10 Tf
    (and the result of one run will be:) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 642 Tm
    /F1 8 Tf
    (running 0) Tj
    T*
    (running 1) Tj
    T*
    (running 2) Tj
    T*
    (done 2) Tj
    T*
    (running 3) Tj
    T*
    (done 1) Tj
    T*
    (running 4) Tj
    T*
    (done 4) Tj
    T*
    (running 5) Tj
    T*
    (done 0) Tj
    T*
    (done 3) Tj
    T*
    (done 5) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 534.4 562 118.4 re
  B
Q
/H2 << /MCID 3 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F3 16 Tf
    (method stable) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 30 466 Tm
    /F1 8 Tf
    (method stable\(Supply:D: $time, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 455.2 562 21.6 re
  B
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 435.2 Tm
    /F2 10 Tf
    (Creates a new supply that only passes on a value flowing through the given supply if it wasn't superseded by another value in the given ) Tj
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 435.2 Tm
    /F1 10 Tf
    [ -54562 ] TJ
    11 TL
    T*
    ($time) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F2 10 Tf
    [ -3600 ( \(in seconds\). Optionally uses another scheduler than the default scheduler, using the ) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F1 10 Tf
    [ -37983 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F2 10 Tf
    [ -44583 ( parameter.) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    (To clarify the above, if, during the timeout ) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F1 10 Tf
    [ -17581 ($time) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F2 10 Tf
    [ -21181 (, additional values are emitted to the ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F1 10 Tf
    [ -36207 (Supplier) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F2 10 Tf
    [ -41607 ( all but the last one will be thrown) ] TJ
    T*
    (away. Each time an additional value is emitted to the ) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F1 10 Tf
    [ -21664 (Supplier) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F2 10 Tf
    [ -27064 (, during the timeout, ) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F1 10 Tf
    [ -35703 ($time) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F2 10 Tf
    [ -39303 ( is reset.) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 369.2 Tm
    (This method can be quite useful when handling UI input, where it is not desired to perform an operation until the user has stopped typing for a) Tj
    T*
    (while rather than on every keystroke.) Tj
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 30 340.6 Tm
    /F1 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply1 = $supplier.Supply;) Tj
    T*
    ($supply1.tap\(-> $v { say "Supply1 got: $v" }\);) Tj
    T*
    ($supplier.emit\(42\);) Tj
    T*
    [  ] TJ
    T*
    (my Supply $supply2 = $supply1.stable\(5\);) Tj
    T*
    ($supply2.tap\(-> $v { say "Supply2 got: $v" }\);) Tj
    T*
    (sleep\(3\);) Tj
    T*
    ($supplier.emit\(43\);   will not be seen by $supply2 but will reset $time) Tj
    T*
    ($supplier.emit\(44\);) Tj
    T*
    (sleep\(10\);) Tj
    T*
    ( OUTPUT: «Supply1 got: 42Supply1 got: 43Supply1 got: 44Supply2 got: 44») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 233 562 118.4 re
  B
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    (As can be seen above, ) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F1 10 Tf
    [ -9358 ($supply1) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -14758 ( received all values emitted to the ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F1 10 Tf
    [ -28700 (Supplier) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -34100 ( while ) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F1 10 Tf
    [ -37072 ($supply2) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -42472 ( only received one value. The 43) ] TJ
    11 TL
    T*
    (was thrown away because it was followed by another 'last' value 44 which was retained and sent to ) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 202 Tm
    /F1 10 Tf
    [ -40046 ($supply2) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 202 Tm
    /F2 10 Tf
    [ -45446 ( after approximately eight) ] TJ
    T*
    (seconds, this due to the fact that the timeout ) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 191 Tm
    /F1 10 Tf
    [ -18082 ($time) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 191 Tm
    /F2 10 Tf
    [ -21682 ( was reset after three seconds.) ] TJ
  ET
EMC
/H2 << /MCID 32 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F3 16 Tf
    (method produce) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 120.6 Tm
    /F1 8 Tf
    (method produce\(Supply:D: &with --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 109.8 562 21.6 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 89.8 Tm
    /F2 10 Tf
    (Creates a "producing" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 35 >> BDC
    BT
      1 0 0 1 20 89.8 Tm
      [ -23313 (List.produce) ] TJ
    ET
    q
      0.5 w
      253.13 88.8 m
      303.4 88.8 l
      S
    Q
  EMC
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 89.8 Tm
    [ -28590 (.) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 72.2 Tm
    /F1 8 Tf
    (my $supply = Supply.from-list\(1..5\).produce\({$^a + $^b}\);) Tj
    T*
    ($supply.tap\(-> $v { say "$v" }\);  OUTPUT: «1361015») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 52.6 562 30.4 re
  B
Q
endstream
endobj

200 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

201 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

202 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

203 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

204 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

205 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

206 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

207 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

208 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

209 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

210 0 obj
<<
  /Type /Page
  /Annots [ 211 0 R 213 0 R 215 0 R 217 0 R 219 0 R ]
  /Contents 221 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 222 0 R
      /GS10 223 0 R
      /GS11 224 0 R
      /GS12 225 0 R
      /GS13 226 0 R
      /GS14 227 0 R
      /GS2 228 0 R
      /GS3 229 0 R
      /GS4 230 0 R
      /GS5 231 0 R
      /GS6 232 0 R
      /GS7 233 0 R
      /GS8 234 0 R
      /GS9 235 0 R
    >>
    /Font << /F1 37 0 R /F2 38 0 R /F3 40 0 R >>
  >>
  /StructParents 13
>>
endobj

211 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 212 0 R
  /Border [ 0 0 0 ]
  /Contents (unique)
  /P 210 0 R
  /Rect [ 520.71 379.4 551.93 394.4 ]
>>
endobj

212 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_unique)
>>
endobj

213 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 214 0 R
  /Border [ 0 0 0 ]
  /Contents (unique)
  /P 210 0 R
  /Rect [ 527.36 256.2 558.58 271.2 ]
>>
endobj

214 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_unique)
>>
endobj

215 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 216 0 R
  /Border [ 0 0 0 ]
  /Contents (repeated)
  /P 210 0 R
  /Rect [ 37.44 199 75.31 214 ]
>>
endobj

216 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_repeated)
>>
endobj

217 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 218 0 R
  /Border [ 0 0 0 ]
  /Contents (Rakudo)
  /P 210 0 R
  /Rect [ 162.41 177 197.52 192 ]
>>
endobj

218 0 obj
<< /Type /Action /S /URI /URI (/language/glossary#Rakudo) >>
endobj

219 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 220 0 R
  /Border [ 0 0 0 ]
  /Contents (squish)
  /P 210 0 R
  /Rect [ 520.71 75.8 550.27 90.8 ]
>>
endobj

220 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_squish)
>>
endobj

221 0 obj
<< /Length 7142 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 716.8 Tm
    /F1 16 Tf
    (method lines) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 681.6 Tm
    /F2 8 Tf
    (method lines\(Supply:D: :$chomp = True --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 670.8 562 21.6 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 650.8 Tm
    /F3 10 Tf
    (Creates a supply that will emit the characters coming in line by line from a supply that's usually created by some asynchronous I/O operation.) Tj
    11 TL
    T*
    (The optional ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 639.8 Tm
    /F2 10 Tf
    [ -5583 (:chomp) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 639.8 Tm
    /F3 10 Tf
    [ -9783 ( parameter indicates whether to remove line separators: the default is ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 639.8 Tm
    /F2 10 Tf
    [ -37832 (True) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 639.8 Tm
    /F3 10 Tf
    [ -40832 (.) ] TJ
  ET
EMC
/H2 << /MCID 7 >> BDC
  BT
    1 0 0 1 20 604.6 Tm
    /F1 16 Tf
    (method words) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 569.4 Tm
    /F2 8 Tf
    (method words\(Supply:D: --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 558.6 562 21.6 re
  B
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    /F3 10 Tf
    (Creates a supply that will emit the characters coming in word for word from a supply that's usually created by some asynchronous I/O) Tj
    11 TL
    T*
    (operation.) Tj
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 30 510 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\("Hello Word!".comb\);) Tj
    8.8 TL
    T*
    (my $ws = $s.words;) Tj
    T*
    ($ws.tap\(&say\);            OUTPUT: «HelloWord!») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 481.6 562 39.2 re
  B
Q
/H2 << /MCID 11 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    /F1 16 Tf
    (method unique) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 30 413.2 Tm
    /F2 8 Tf
    (method unique\(Supply:D: :$as, :$with, :$expires --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 402.4 562 21.6 re
  B
Q
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    (Creates a supply that only provides unique values, as defined by the optional ) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F2 10 Tf
    [ -31191 (:as) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -33591 ( and ) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F2 10 Tf
    [ -35785 (:with) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -39385 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 18 >> BDC
    BT
      1 0 0 1 20 382.4 Tm
      [ -50271 (unique) ] TJ
    ET
    q
      0.5 w
      522.71 381.4 m
      549.93 381.4 l
      S
    Q
  EMC
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    [ -53243 (\). The) ] TJ
    11 TL
    T*
    (optional ) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 371.4 Tm
    /F2 10 Tf
    [ -3778 (:expires) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 371.4 Tm
    /F3 10 Tf
    [ -9178 ( parameter how long to wait \(in seconds\) before "resetting" and not considering a value to have been seen, even if it's) ] TJ
    T*
    (the same as an old value.) Tj
  ET
EMC
/H2 << /MCID 22 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    /F1 16 Tf
    (method repeated) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 30 290 Tm
    /F2 8 Tf
    (method repeated\(Supply:D: :&as, :&with\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 279.2 562 21.6 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 259.2 Tm
    /F3 10 Tf
    (Creates a supply that only provides repeated values, as defined by the optional ) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 259.2 Tm
    /F2 10 Tf
    [ -31856 (:as) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 259.2 Tm
    /F3 10 Tf
    [ -34256 ( and ) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 259.2 Tm
    /F2 10 Tf
    [ -36450 (:with) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 259.2 Tm
    /F3 10 Tf
    [ -40050 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 29 >> BDC
    BT
      1 0 0 1 20 259.2 Tm
      [ -50936 (unique) ] TJ
    ET
    q
      0.5 w
      529.36 258.2 m
      556.58 258.2 l
      S
    Q
  EMC
Q
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 259.2 Tm
    [ -53908 (\).) ] TJ
  ET
EMC
/Code << /MCID 31 >> BDC
  BT
    1 0 0 1 30 241.6 Tm
    /F2 8 Tf
    (my $supply = Supply.from-list\(<a A B b c b C>\).repeated\(:as\(&lc\)\);) Tj
    T*
    ($supply.tap\(&say\);            OUTPUT: «AbbC») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS11 gs
  /GS12 gs
  28 222 562 30.4 re
  B
Q
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 202 Tm
    /F3 10 Tf
    (See ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 33 >> BDC
    BT
      1 0 0 1 20 202 Tm
      [ -1944 (repeated) ] TJ
    ET
    q
      0.5 w
      39.44 201 m
      73.31 201 l
      S
    Q
  EMC
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 202 Tm
    [ -5581 ( for more examples that use its sub form.) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 180 Tm
    /F1 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 180 Tm
    /F3 10 Tf
    [ -2249 (: Available since version 6.e \() ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 37 >> BDC
    BT
      1 0 0 1 20 180 Tm
      [ -14441 (Rakudo) ] TJ
    ET
    q
      0.5 w
      164.41 179 m
      195.52 179 l
      S
    Q
  EMC
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 180 Tm
    [ -17802 ( 2020.01 and later\).) ] TJ
  ET
EMC
/H2 << /MCID 39 >> BDC
  BT
    1 0 0 1 20 144.8 Tm
    /F1 16 Tf
    (method squish) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 30 109.6 Tm
    /F2 8 Tf
    (method squish\(Supply:D: :$as, :$with --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS13 gs
  /GS14 gs
  28 98.8 562 21.6 re
  B
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    /F3 10 Tf
    (Creates a supply that only provides unique values, as defined by the optional ) Tj
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    /F2 10 Tf
    [ -31191 (:as) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    /F3 10 Tf
    [ -33591 ( and ) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    /F2 10 Tf
    [ -35785 (:with) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    /F3 10 Tf
    [ -39385 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 46 >> BDC
    BT
      1 0 0 1 20 78.8 Tm
      [ -50271 (squish) ] TJ
    ET
    q
      0.5 w
      522.71 77.8 m
      548.27 77.8 l
      S
    Q
  EMC
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 78.8 Tm
    [ -53077 (\).) ] TJ
  ET
EMC
endstream
endobj

222 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

223 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

224 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

225 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

226 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

227 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

228 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

229 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

230 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

231 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

232 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

233 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

234 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

235 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

236 0 obj
<<
  /Type /Page
  /Annots [ 237 0 R 239 0 R 241 0 R ]
  /Contents 243 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 244 0 R
      /GS10 245 0 R
      /GS11 246 0 R
      /GS12 247 0 R
      /GS2 248 0 R
      /GS3 249 0 R
      /GS4 250 0 R
      /GS5 251 0 R
      /GS6 252 0 R
      /GS7 253 0 R
      /GS8 254 0 R
      /GS9 255 0 R
    >>
    /Font << /F1 37 0 R /F2 38 0 R /F3 40 0 R >>
  >>
  /StructParents 14
>>
endobj

237 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 238 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.max)
  /P 236 0 R
  /Rect [ 213.79 661 254.73 676 ]
>>
endobj

238 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_max) >>
endobj

239 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 240 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.min)
  /P 236 0 R
  /Rect [ 213.79 537.8 253.07 552.8 ]
>>
endobj

240 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_min) >>
endobj

241 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 242 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.minmax)
  /P 236 0 R
  /Rect [ 171.31 425.6 227.81 440.6 ]
>>
endobj

242 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_minmax) >>
endobj

243 0 obj
<< /Length 5788 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method max) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method max\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 706 562 21.6 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    (Creates a supply that only emits values from the given supply if they are larger than any value seen before. In other words, from a) Tj
    11 TL
    T*
    (continuously ascending supply it will emit all the values. From a continuously descending supply it will only emit the first value. The optional) Tj
    T*
    (parameter specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 3 >> BDC
    BT
      1 0 0 1 20 664 Tm
      [ -19579 (Any.max) ] TJ
    ET
    q
      0.5 w
      215.79 663 m
      252.73 663 l
      S
    Q
  EMC
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 664 Tm
    [ -23523 (.) ] TJ
  ET
EMC
/H2 << /MCID 5 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F1 16 Tf
    (method min) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 593.6 Tm
    /F2 8 Tf
    (method min\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 582.8 562 21.6 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 562.8 Tm
    /F3 10 Tf
    (Creates a supply that only emits values from the given supply if they are smaller than any value seen before. In other words, from a) Tj
    11 TL
    T*
    (continuously descending supply it will emit all the values. From a continuously ascending supply it will only emit the first value. The optional) Tj
    T*
    (parameter specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 8 >> BDC
    BT
      1 0 0 1 20 540.8 Tm
      [ -19579 (Any.min) ] TJ
    ET
    q
      0.5 w
      215.79 539.8 m
      251.07 539.8 l
      S
    Q
  EMC
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 540.8 Tm
    [ -23357 (.) ] TJ
  ET
EMC
/H2 << /MCID 10 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    /F1 16 Tf
    (method minmax) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 30 470.4 Tm
    /F2 8 Tf
    (method minmax\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 459.6 562 21.6 re
  B
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 439.6 Tm
    /F3 10 Tf
    (Creates a supply that emits a Range every time a new minimum or maximum values is seen from the given supply. The optional parameter) Tj
    11 TL
    T*
    (specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 13 >> BDC
    BT
      1 0 0 1 20 428.6 Tm
      [ -15331 (Any.minmax) ] TJ
    ET
    q
      0.5 w
      173.31 427.6 m
      225.81 427.6 l
      S
    Q
  EMC
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    [ -20831 (.) ] TJ
  ET
EMC
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F1 16 Tf
    (method skip) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 358.2 Tm
    /F2 8 Tf
    (method skip\(Supply:D: Int\(Cool\) $number = 1 --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 347.4 562 21.6 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F3 10 Tf
    (Returns a new ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F2 10 Tf
    [ -6221 (Supply) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F3 10 Tf
    [ -10421 ( which will emit all values from the given ) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F2 10 Tf
    [ -27642 (Supply) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F3 10 Tf
    [ -31842 ( except for the first ) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F2 10 Tf
    [ -39951 ($number) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F3 10 Tf
    [ -44751 ( values, which will be thrown) ] TJ
    11 TL
    T*
    (away.) Tj
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 30 298.8 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply = $supplier.Supply;) Tj
    T*
    ($supply = $supply.skip\(3\);) Tj
    T*
    ($supply.tap\({ say $_ }\);) Tj
    T*
    ($supplier.emit\($_\) for 1..10;  OUTPUT: «45678910») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 252.8 562 56.8 re
  B
Q
/H2 << /MCID 25 >> BDC
  BT
    1 0 0 1 20 219.6 Tm
    /F1 16 Tf
    (method start) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 30 184.4 Tm
    /F2 8 Tf
    (method start\(Supply:D: &startee --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS11 gs
  /GS12 gs
  28 173.6 562 21.6 re
  B
Q
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 153.6 Tm
    /F3 10 Tf
    (Creates a supply of supplies. For each value in the original supply, the code object is scheduled on another thread, and returns a supply either) Tj
    11 TL
    T*
    (of a single value \(if the code succeeds\), or one that quits without a value \(if the code fails\).) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 120.6 Tm
    (This is useful for asynchronously starting work that you don't block on.) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 98.6 Tm
    (Use ) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 98.6 Tm
    /F2 10 Tf
    [ -2055 (migrate) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 98.6 Tm
    /F3 10 Tf
    [ -6855 ( to join the values into a single supply again.) ] TJ
  ET
EMC
endstream
endobj

244 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

245 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

246 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

247 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

248 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

249 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

250 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

251 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

252 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

253 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

254 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

255 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

256 0 obj
<<
  /Type /Page
  /Contents 257 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 258 0 R
      /GS2 259 0 R
      /GS3 260 0 R
      /GS4 261 0 R
      /GS5 262 0 R
      /GS6 263 0 R
    >>
    /Font << /F1 37 0 R /F2 38 0 R /F3 40 0 R >>
  >>
  /StructParents 15
>>
endobj

257 0 obj
<< /Length 4000 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method migrate) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method migrate\(Supply:D: --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 706 562 21.6 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    (Takes a ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F2 10 Tf
    [ -3582 (Supply) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    [ -7782 ( which itself has values that are of type ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F2 10 Tf
    [ -23890 (Supply) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    [ -28090 ( as input. Each time the outer ) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F2 10 Tf
    [ -40283 (Supply) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    [ -44483 ( emits a new ) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F2 10 Tf
    [ -50010 (Supply) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    [ -54210 (, this) ] TJ
    11 TL
    T*
    (will be tapped and its values emitted. Any previously tapped ) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F2 10 Tf
    [ -24720 (Supply) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F3 10 Tf
    [ -28920 ( will be closed. This is useful for migrating between different data) ] TJ
    T*
    (sources, and only paying attention to the latest one.) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 642 Tm
    (For example, imagine an application where the user can switch between different stocks. When they switch to a new one, a connection is) Tj
    T*
    (established to a web socket to get the latest values, and any previous connection should be closed. Each stream of values coming over the web) Tj
    T*
    (socket would be represented as a Supply, which themselves are emitted into a Supply of latest data sources to watch. The ) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 620 Tm
    /F2 10 Tf
    [ -48992 (migrate) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 620 Tm
    /F3 10 Tf
    [ -53792 ( method) ] TJ
    T*
    (could be used to flatten this supply of supplies into a single Supply of the current values that the user cares about.) Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 587 Tm
    (Here is a simple simulation of such a program:) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 30 569.4 Tm
    /F2 8 Tf
    (my Supplier $stock-sources .= new;) Tj
    8.8 TL
    T*
    [  ] TJ
    T*
    (sub watch-stock\($symbol\) {) Tj
    T*
    (    $stock-sources.emit: supply {) Tj
    T*
    (        say "Starting to watch $symbol";) Tj
    T*
    (        whenever Supply.interval\(1\) {) Tj
    T*
    (            emit "$symbol: 111." ~ 99.rand.Int;) Tj
    T*
    (        }) Tj
    T*
    (        CLOSE say "Lost interest in $symbol";) Tj
    T*
    (    }) Tj
    T*
    (}) Tj
    T*
    [  ] TJ
    T*
    ($stock-sources.Supply.migrate.tap: *.say;) Tj
    T*
    [  ] TJ
    T*
    (watch-stock\('GOOG'\);) Tj
    T*
    (sleep 3;) Tj
    T*
    (watch-stock\('AAPL'\);) Tj
    T*
    (sleep 3;) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 409 562 171.2 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F3 10 Tf
    (Which produces output like:) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 30 371.4 Tm
    /F2 8 Tf
    (Starting to watch GOOG) Tj
    T*
    (GOOG: 111.67) Tj
    T*
    (GOOG: 111.20) Tj
    T*
    (GOOG: 111.37) Tj
    T*
    (Lost interest in GOOG) Tj
    T*
    (Starting to watch AAPL) Tj
    T*
    (AAPL: 111.55) Tj
    T*
    (AAPL: 111.6) Tj
    T*
    (AAPL: 111.6) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 290.2 562 92 re
  B
Q
endstream
endobj

258 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

259 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

260 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

261 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

262 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

263 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

264 0 obj
<<
  /Type /Page
  /Annots [ 265 0 R 267 0 R ]
  /Contents 269 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 270 0 R
      /GS2 271 0 R
      /GS3 272 0 R
      /GS4 273 0 R
      /GS5 274 0 R
      /GS6 275 0 R
    >>
    /Font << /F1 37 0 R /F2 38 0 R /F3 40 0 R >>
  >>
  /StructParents 16
>>
endobj

265 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 266 0 R
  /Border [ 0 0 0 ]
  /Contents (Lists)
  /P 264 0 R
  /Rect [ 486.83 491.6 510.28 506.6 ]
>>
endobj

266 0 obj
<< /Type /Action /S /URI /URI (/type/List) >>
endobj

267 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 268 0 R
  /Border [ 0 0 0 ]
  /Contents (Lists)
  /P 264 0 R
  /Rect [ 491.83 313.4 515.28 328.4 ]
>>
endobj

268 0 obj
<< /Type /Action /S /URI /URI (/type/List) >>
endobj

269 0 obj
<< /Length 4757 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that combine supplies) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    285.02 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method merge) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method merge\(Supply @*supplies --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 648.8 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    (Creates a supply to which any value seen from the given supplies, is emitted. The resulting supply is done only when all given supplies are) Tj
    11 TL
    T*
    (done. Can also be called as a class method.) Tj
  ET
EMC
/H2 << /MCID 4 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F1 16 Tf
    (method zip) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 543 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 525.4 Tm
    /F2 8 Tf
    (method zip\(**@s, :&with\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 514.6 562 21.6 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    (Creates a supply that emits combined values as soon as there is a new value seen on ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F1 10 Tf
    [ -34050 (all) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -35356 ( of the supplies. By default, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 494.6 Tm
      [ -46883 (Lists) ] TJ
    ET
    q
      0.5 w
      488.83 493.6 m
      508.28 493.6 l
      S
    Q
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    [ -49078 ( are created, but this) ] TJ
    11 TL
    T*
    (can be changed by specifying your own combiner with the ) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F2 10 Tf
    [ -23912 (:with) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F3 10 Tf
    [ -27512 ( parameter. The resulting supply is done as soon as ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F1 10 Tf
    [ -48398 (any) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F3 10 Tf
    [ -50204 ( of the given) ] TJ
    T*
    (supplies are done. Can also be called as a class method.) Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 450.6 Tm
    (This can also be used as a class method; in case it's used as an object method the corresponding supply will be one of the supplies combined) Tj
    T*
    (\(with no special treatment\).) Tj
  ET
EMC
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 404.4 Tm
    /F1 16 Tf
    (method zip-latest) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 364.8 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 30 347.2 Tm
    /F2 8 Tf
    (method zip-latest\(**@s, :&with, :$initial \)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 336.4 562 21.6 re
  B
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 316.4 Tm
    /F3 10 Tf
    (Creates a supply that emits combined values as soon as there is a new value seen on ) Tj
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 316.4 Tm
    /F1 10 Tf
    [ -34050 (any) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 316.4 Tm
    /F3 10 Tf
    [ -35856 ( of the supplies. By default, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 23 >> BDC
    BT
      1 0 0 1 20 316.4 Tm
      [ -47383 (Lists) ] TJ
    ET
    q
      0.5 w
      493.83 315.4 m
      513.28 315.4 l
      S
    Q
  EMC
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 316.4 Tm
    [ -49578 ( are created, but) ] TJ
    11 TL
    T*
    (this can be changed by specifying your own combiner with the ) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 305.4 Tm
    /F2 10 Tf
    [ -25607 (:with) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 305.4 Tm
    /F3 10 Tf
    [ -29207 ( parameter. The optional :initial parameter can be used to indicate the) ] TJ
    T*
    (initial state of the combined values. By default, all supplies have to have at least one value emitted on them before the first combined values is) Tj
    T*
    (emitted on the resulting supply. The resulting supply is done as soon as ) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 283.4 Tm
    /F1 10 Tf
    [ -29027 (any) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 283.4 Tm
    /F3 10 Tf
    [ -30833 ( of the given supplies are done. Can also be called as a class) ] TJ
    T*
    (method.) Tj
  ET
EMC
endstream
endobj

270 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

271 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

272 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

273 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

274 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

275 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

276 0 obj
<<
  /Type /Page
  /Annots [ 277 0 R 279 0 R ]
  /Contents 281 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState <<
      /GS1 282 0 R
      /GS10 283 0 R
      /GS2 284 0 R
      /GS3 285 0 R
      /GS4 286 0 R
      /GS5 287 0 R
      /GS6 288 0 R
      /GS7 289 0 R
      /GS8 290 0 R
      /GS9 291 0 R
    >>
    /Font << /F1 37 0 R /F2 38 0 R /F3 40 0 R >>
  >>
  /StructParents 17
>>
endobj

277 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 278 0 R
  /Border [ 0 0 0 ]
  /Contents (enum)
  /P 276 0 R
  /Rect [ 35.77 485 61.99 500 ]
>>
endobj

278 0 obj
<< /Type /Action /S /URI /URI (/language/typesystem#enum) >>
endobj

279 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 280 0 R
  /Border [ 0 0 0 ]
  /Contents (Rakudo)
  /P 276 0 R
  /Rect [ 48.82 463 83.93 478 ]
>>
endobj

280 0 obj
<< /Type /Action /S /URI /URI (/language/glossary#Rakudo) >>
endobj

281 0 obj
<< /Length 5618 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (I/O features exposed as supplies) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    292.24 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (sub signal) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (sub signal\(*@signals, :$scheduler = $*SCHEDULER\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 648.8 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    (Creates a supply for the Signal enums \(such as SIGINT\) specified, and an optional ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F2 10 Tf
    [ -33550 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    [ -40150 ( parameter. Any signals received, will be) ] TJ
    11 TL
    T*
    (emitted on the supply. For example:) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 600.2 Tm
    /F2 8 Tf
    (signal\(SIGINT\).tap\( { say "Thank you for your attention"; exit 0 } \);) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS3 gs
  /GS4 gs
  28 589.4 562 21.6 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F3 10 Tf
    (would catch Control-C, thank you, and then exit.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    (To go from a signal number to a ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    [ -13415 (Signal) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    [ -16221 (, you can do something like this:) ] TJ
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 30 529.8 Tm
    /F2 8 Tf
    (signal\(Signal\(2\)\).tap\( -> $sig { say "Received signal: $sig" } \);) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS5 gs
  /GS6 gs
  28 519 562 21.6 re
  B
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 499 Tm
    /F3 10 Tf
    (The list of supported signals can be found by checking ) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 499 Tm
    /F2 10 Tf
    [ -22358 (Signal::.keys) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 499 Tm
    /F3 10 Tf
    [ -30758 ( \(as you would any enum\). For more details on how enums work) ] TJ
    11 TL
    T*
    (see ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 15 >> BDC
    BT
      1 0 0 1 20 488 Tm
      [ -1777 (enum) ] TJ
    ET
    q
      0.5 w
      37.77 487 m
      59.99 487 l
      S
    Q
  EMC
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 488 Tm
    [ -4249 (.) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 466 Tm
    /F1 10 Tf
    (Note:) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 466 Tm
    /F3 10 Tf
    [ -2582 ( ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 19 >> BDC
    BT
      1 0 0 1 20 466 Tm
      [ -3082 (Rakudo) ] TJ
    ET
    q
      0.5 w
      50.82 465 m
      81.93 465 l
      S
    Q
  EMC
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 466 Tm
    [ -6443 ( versions up to 2018.05 had a bug due to which numeric values of signals were incorrect on some systems. For example, ) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 466 Tm
    /F2 10 Tf
    [ -55103 ] TJ
    T*
    (Signal\(10\)) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F3 10 Tf
    [ -6600 ( was returning ) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F2 10 Tf
    [ -12821 (SIGBUS) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F3 10 Tf
    [ -17021 ( even if it was actually ) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F2 10 Tf
    [ -26547 (SIGUSR1) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F3 10 Tf
    [ -31347 ( on a particular system. That being said, using ) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F2 10 Tf
    [ -50234 ] TJ
    T*
    (signal\(SIGUSR1\)) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 444 Tm
    /F3 10 Tf
    [ -9600 ( was working as expected on all Rakudo versions except 2018.04, 2018.04.1 and 2018.05, where the intended) ] TJ
    T*
    (behavior can be achieved by using ) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 433 Tm
    /F2 10 Tf
    [ -14302 (signal\(SIGBUS\)) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 433 Tm
    /F3 10 Tf
    [ -23302 ( instead. These issues are resolved in Rakudo releases after 2018.05.) ] TJ
  ET
EMC
/H2 << /MCID 31 >> BDC
  BT
    1 0 0 1 20 397.8 Tm
    /F1 16 Tf
    (method IO::Notification.watch-path) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 30 362.6 Tm
    /F2 8 Tf
    (method watch-path\($path --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS7 gs
  /GS8 gs
  28 351.8 562 21.6 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 331.8 Tm
    /F3 10 Tf
    (Creates a supply to which the OS will emit values to indicate changes on the filesystem for the given path. Also has a shortcut with the ) Tj
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 331.8 Tm
    /F2 10 Tf
    [ -54439 ] TJ
    11 TL
    T*
    (watch) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 320.8 Tm
    /F3 10 Tf
    [ -3600 ( method on an IO object, like this:) ] TJ
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 30 303.2 Tm
    /F2 8 Tf
    (IO::Notification.watch-path\("."\).act\( { say "$^file changed" } \);) Tj
    8.8 TL
    T*
    (".".IO.watch.act\(                     { say "$^file changed" } \);    same) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS9 gs
  /GS10 gs
  28 283.6 562 30.4 re
  B
Q
endstream
endobj

282 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

283 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

284 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

285 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

286 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

287 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

288 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

289 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

290 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

291 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

292 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

293 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

294 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

295 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

296 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Italic
  /Encoding /WinAnsiEncoding
>>
endobj

297 0 obj
<< /Count 62 /First 298 0 R /Last 2290 0 R >>
endobj

298 0 obj
<<
  /Count 2
  /Dest /class_Supply
  /First 299 0 R
  /Last 299 0 R
  /Next 2233 0 R
  /SE 304 0 R
  /Title (class Supply)
>>
endobj

299 0 obj
<<
  /Count 1
  /Dest /Asynchronous_data_stream_with_multiple_subscribers
  /SE 300 0 R
  /Title (Asynchronous data stream with multiple subscribers)
>>
endobj

300 0 obj
<< /Type /StructElem /S /H2 /K [ 301 0 R ] /P 303 0 R >>
endobj

301 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Asynchronous data stream with multiple subscribers\n)
  /K [ 302 0 R ]
  /P 300 0 R
>>
endobj

302 0 obj
<< /Type /MCR /MCID 1 /Pg 4 0 R >>
endobj

303 0 obj
<<
  /Type /StructElem
  /S /Document
  /K [ 304 0 R 300 0 R 307 0 R 310 0 R 322 0 R 330 0 R 349 0 R 360 0 R 388 0 R 391 0 R 417 0 R 429 0 R 437 0 R 440 0 R 443 0 R 446 0 R 453 0 R 484 0 R 507 0 R 547 0 R 563 0 R 566 0 R 569 0 R 572 0 R 575 0 R 578 0 R 585 0 R 588 0 R 591 0 R 594 0 R 597 0 R 605 0 R 608 0 R 611 0 R 623 0 R 626 0 R 629 0 R 673 0 R 676 0 R 683 0 R 686 0 R 689 0 R 712 0 R 715 0 R 718 0 R 721 0 R 724 0 R 727 0 R 730 0 R 733 0 R 736 0 R 763 0 R 766 0 R 769 0 R 772 0 R 799 0 R 802 0 R 805 0 R 816 0 R 819 0 R 822 0 R 853 0 R 856 0 R 859 0 R 862 0 R 893 0 R 896 0 R 899 0 R 902 0 R 938 0 R 941 0 R 944 0 R 947 0 R 971 0 R 974 0 R 977 0 R 980 0 R 983 0 R 991 0 R 994 0 R 997 0 R 1000 0 R 1003 0 R 1006 0 R 1009 0 R 1012 0 R 1015 0 R 1018 0 R 1021 0 R 1024 0 R 1027 0 R 1030 0 R 1033 0 R 1036 0 R 1039 0 R 1042 0 R 1045 0 R 1086 0 R 1089 0 R 1092 0 R 1095 0 R 1106 0 R 1121 0 R 1124 0 R 1127 0 R 1134 0 R 1137 0 R 1140 0 R 1143 0 R 1150 0 R 1153 0 R 1156 0 R 1159 0 R 1170 0 R 1187 0 R 1190 0 R 1193 0 R 1196 0 R 1199 0 R 1202 0 R 1205 0 R 1213 0 R 1216 0 R 1225 0 R 1228 0 R 1231 0 R 1234 0 R 1242 0 R 1245 0 R 1264 0 R 1267 0 R 1270 0 R 1273 0 R 1276 0 R 1299 0 R 1302 0 R 1305 0 R 1308 0 R 1333 0 R 1336 0 R 1339 0 R 1342 0 R 1349 0 R 1352 0 R 1357 0 R 1360 0 R 1363 0 R 1371 0 R 1374 0 R 1377 0 R 1380 0 R 1383 0 R 1386 0 R 1389 0 R 1392 0 R 1399 0 R 1465 0 R 1472 0 R 1475 0 R 1478 0 R 1493 0 R 1500 0 R 1503 0 R 1506 0 R 1513 0 R 1525 0 R 1540 0 R 1555 0 R 1566 0 R 1569 0 R 1576 0 R 1584 0 R 1587 0 R 1595 0 R 1602 0 R 1610 0 R 1613 0 R 1621 0 R 1628 0 R 1631 0 R 1634 0 R 1642 0 R 1645 0 R 1653 0 R 1660 0 R 1668 0 R 1671 0 R 1679 0 R 1682 0 R 1690 0 R 1693 0 R 1701 0 R 1704 0 R 1712 0 R 1719 0 R 1722 0 R 1725 0 R 1728 0 R 1731 0 R 1734 0 R 1737 0 R 1740 0 R 1751 0 R 1770 0 R 1773 0 R 1776 0 R 1799 0 R 1802 0 R 1805 0 R 1813 0 R 1816 0 R 1819 0 R 1822 0 R 1833 0 R 1836 0 R 1839 0 R 1842 0 R 1845 0 R 1848 0 R 1851 0 R 1871 0 R 1874 0 R 1877 0 R 1893 0 R 1896 0 R 1904 0 R 1914 0 R 1917 0 R 1920 0 R 1936 0 R 1939 0 R 1942 0 R 1950 0 R 1953 0 R 1956 0 R 1964 0 R 1967 0 R 1970 0 R 1978 0 R 1981 0 R 1984 0 R 1999 0 R 2002 0 R 2005 0 R 2008 0 R 2011 0 R 2014 0 R 2021 0 R 2024 0 R 2027 0 R 2050 0 R 2057 0 R 2060 0 R 2063 0 R 2066 0 R 2069 0 R 2072 0 R 2075 0 R 2078 0 R 2081 0 R 2084 0 R 2087 0 R 2090 0 R 2110 0 R 2113 0 R 2116 0 R 2119 0 R 2122 0 R 2142 0 R 2145 0 R 2148 0 R 2151 0 R 2158 0 R 2161 0 R 2164 0 R 2171 0 R 2174 0 R 2186 0 R 2216 0 R 2219 0 R 2222 0 R 2229 0 R ]
  /P 2232 0 R
>>
endobj

304 0 obj
<< /Type /StructElem /S /H1 /K [ 305 0 R ] /P 303 0 R >>
endobj

305 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (class Supply\n)
  /K [ 306 0 R ]
  /P 304 0 R
>>
endobj

306 0 obj
<< /Type /MCR /MCID 0 /Pg 4 0 R >>
endobj

307 0 obj
<< /Type /StructElem /S /Code /K [ 308 0 R ] /P 303 0 R >>
endobj

308 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (    class Supply does Awaitable {}\n)
  /K [ 309 0 R ]
  /P 307 0 R
>>
endobj

309 0 obj
<< /Type /MCR /MCID 2 /Pg 4 0 R >>
endobj

310 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 311 0 R 313 0 R 316 0 R 318 0 R 320 0 R ]
  /P 303 0 R
>>
endobj

311 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (A supply is a thread-safe, asynchronous data stream like a )
  /K [ 312 0 R ]
  /P 310 0 R
>>
endobj

312 0 obj
<< /Type /MCR /MCID 3 /Pg 4 0 R >>
endobj

313 0 obj
<< /Type /StructElem /S /Link /K [ 314 0 R ] /P 310 0 R >>
endobj

314 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Channel)
  /K [ 315 0 R ]
  /P 313 0 R
>>
endobj

315 0 obj
<< /Type /MCR /MCID 4 /Pg 4 0 R >>
endobj

316 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, but it can have multiple subscribers \()
  /K [ 317 0 R ]
  /P 310 0 R
>>
endobj

317 0 obj
<< /Type /MCR /MCID 5 /Pg 4 0 R >>
endobj

318 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (taps)
  /K [ 319 0 R ]
  /P 310 0 R
>>
endobj

319 0 obj
<< /Type /MCR /MCID 6 /Pg 4 0 R >>
endobj

320 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\) that all get the same values flowing through the supply.)
  /K [ 321 0 R ]
  /P 310 0 R
>>
endobj

321 0 obj
<< /Type /MCR /MCID 7 /Pg 4 0 R >>
endobj

322 0 obj
<< /Type /StructElem /S /P /K [ 323 0 R 325 0 R 328 0 R ] /P 303 0 R >>
endobj

323 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (It is a thread-safe implementation of the )
  /K [ 324 0 R ]
  /P 322 0 R
>>
endobj

324 0 obj
<< /Type /MCR /MCID 8 /Pg 4 0 R >>
endobj

325 0 obj
<< /Type /StructElem /S /Link /K [ 326 0 R ] /P 322 0 R >>
endobj

326 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Observer Pattern)
  /K [ 327 0 R ]
  /P 325 0 R
>>
endobj

327 0 obj
<< /Type /MCR /MCID 9 /Pg 4 0 R >>
endobj

328 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, and central to supporting reactive programming in Raku.)
  /K [ 329 0 R ]
  /P 322 0 R
>>
endobj

329 0 obj
<< /Type /MCR /MCID 10 /Pg 4 0 R >>
endobj

330 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 331 0 R 333 0 R 335 0 R 337 0 R 339 0 R 341 0 R 343 0 R 345 0 R 347 0 R ]
  /P 303 0 R
>>
endobj

331 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (There are two types of Supplies: )
  /K [ 332 0 R ]
  /P 330 0 R
>>
endobj

332 0 obj
<< /Type /MCR /MCID 11 /Pg 4 0 R >>
endobj

333 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (live)
  /K [ 334 0 R ]
  /P 330 0 R
>>
endobj

334 0 obj
<< /Type /MCR /MCID 12 /Pg 4 0 R >>
endobj

335 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and )
  /K [ 336 0 R ]
  /P 330 0 R
>>
endobj

336 0 obj
<< /Type /MCR /MCID 13 /Pg 4 0 R >>
endobj

337 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (on demand)
  /K [ 338 0 R ]
  /P 330 0 R
>>
endobj

338 0 obj
<< /Type /MCR /MCID 14 /Pg 4 0 R >>
endobj

339 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. When tapping into a )
  /K [ 340 0 R ]
  /P 330 0 R
>>
endobj

340 0 obj
<< /Type /MCR /MCID 15 /Pg 4 0 R >>
endobj

341 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (live)
  /K [ 342 0 R ]
  /P 330 0 R
>>
endobj

342 0 obj
<< /Type /MCR /MCID 16 /Pg 4 0 R >>
endobj

343 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( supply, the tap will only see values that are flowing through the supply )
  /K [ 344 0 R ]
  /P 330 0 R
>>
endobj

344 0 obj
<< /Type /MCR /MCID 17 /Pg 4 0 R >>
endobj

345 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (after)
  /K [ 346 0 R ]
  /P 330 0 R
>>
endobj

346 0 obj
<< /Type /MCR /MCID 18 /Pg 4 0 R >>
endobj

347 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( the tap has been created. Such supplies are normally infinite in nature, such as mouse movements. Closing such a tap does not stop mouse events from occurring, it just means that the values will go by unseen. All tappers see the same flow of values.)
  /K [ 348 0 R ]
  /P 330 0 R
>>
endobj

348 0 obj
<< /Type /MCR /MCID 19 /Pg 4 0 R >>
endobj

349 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 350 0 R 352 0 R 354 0 R 356 0 R 358 0 R ]
  /P 303 0 R
>>
endobj

350 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (A tap on an )
  /K [ 351 0 R ]
  /P 349 0 R
>>
endobj

351 0 obj
<< /Type /MCR /MCID 20 /Pg 4 0 R >>
endobj

352 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (on demand)
  /K [ 353 0 R ]
  /P 349 0 R
>>
endobj

353 0 obj
<< /Type /MCR /MCID 21 /Pg 4 0 R >>
endobj

354 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( supply will initiate the production of values, and tapping the supply again may result in a new set of values. For example, )
  /K [ 355 0 R ]
  /P 349 0 R
>>
endobj

355 0 obj
<< /Type /MCR /MCID 22 /Pg 4 0 R >>
endobj

356 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply.interval)
  /K [ 357 0 R ]
  /P 349 0 R
>>
endobj

357 0 obj
<< /Type /MCR /MCID 23 /Pg 4 0 R >>
endobj

358 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( produces a fresh timer with the appropriate interval each time it is tapped. If the tap is closed, the timer simply stops emitting values to that tap.)
  /K [ 359 0 R ]
  /P 349 0 R
>>
endobj

359 0 obj
<< /Type /MCR /MCID 24 /Pg 4 0 R >>
endobj

360 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 361 0 R 363 0 R 365 0 R 367 0 R 369 0 R 371 0 R 374 0 R 376 0 R 378 0 R 380 0 R 382 0 R 384 0 R 386 0 R ]
  /P 303 0 R
>>
endobj

361 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (A )
  /K [ 362 0 R ]
  /P 360 0 R
>>
endobj

362 0 obj
<< /Type /MCR /MCID 25 /Pg 4 0 R >>
endobj

363 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (live)
  /K [ 364 0 R ]
  /P 360 0 R
>>
endobj

364 0 obj
<< /Type /MCR /MCID 26 /Pg 4 0 R >>
endobj

365 0 obj
<< /Type /StructElem /S /Span /ActualText ( ) /K [ 366 0 R ] /P 360 0 R >>
endobj

366 0 obj
<< /Type /MCR /MCID 27 /Pg 4 0 R >>
endobj

367 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 368 0 R ]
  /P 360 0 R
>>
endobj

368 0 obj
<< /Type /MCR /MCID 28 /Pg 4 0 R >>
endobj

369 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is obtained from the )
  /K [ 370 0 R ]
  /P 360 0 R
>>
endobj

370 0 obj
<< /Type /MCR /MCID 29 /Pg 4 0 R >>
endobj

371 0 obj
<< /Type /StructElem /S /Link /K [ 372 0 R ] /P 360 0 R >>
endobj

372 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 373 0 R ]
  /P 371 0 R
>>
endobj

373 0 obj
<< /Type /MCR /MCID 30 /Pg 4 0 R >>
endobj

374 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( factory method )
  /K [ 375 0 R ]
  /P 360 0 R
>>
endobj

375 0 obj
<< /Type /MCR /MCID 31 /Pg 4 0 R >>
endobj

376 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 377 0 R ]
  /P 360 0 R
>>
endobj

377 0 obj
<< /Type /MCR /MCID 32 /Pg 4 0 R >>
endobj

378 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. New values are emitted by calling )
  /K [ 379 0 R ]
  /P 360 0 R
>>
endobj

379 0 obj
<< /Type /MCR /MCID 33 /Pg 4 0 R >>
endobj

380 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (emit)
  /K [ 381 0 R ]
  /P 360 0 R
>>
endobj

381 0 obj
<< /Type /MCR /MCID 34 /Pg 4 0 R >>
endobj

382 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( on the )
  /K [ 383 0 R ]
  /P 360 0 R
>>
endobj

383 0 obj
<< /Type /MCR /MCID 35 /Pg 4 0 R >>
endobj

384 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 385 0 R ]
  /P 360 0 R
>>
endobj

385 0 obj
<< /Type /MCR /MCID 36 /Pg 4 0 R >>
endobj

386 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( object.)
  /K [ 387 0 R ]
  /P 360 0 R
>>
endobj

387 0 obj
<< /Type /MCR /MCID 37 /Pg 4 0 R >>
endobj

388 0 obj
<< /Type /StructElem /S /Code /K [ 389 0 R ] /P 303 0 R >>
endobj

389 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $supplier = Supplier.new;\nmy $supply = $supplier.Supply;\n$supply.tap\(-> $v { say "$v" }\);\n$supplier.emit\(42\); # Will cause the tap to output "42"\n)
  /K [ 390 0 R ]
  /P 388 0 R
>>
endobj

390 0 obj
<< /Type /MCR /MCID 38 /Pg 4 0 R >>
endobj

391 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 392 0 R 394 0 R 397 0 R 399 0 R 401 0 R 403 0 R 406 0 R 408 0 R 411 0 R 413 0 R 415 0 R ]
  /P 303 0 R
>>
endobj

392 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 393 0 R ]
  /P 391 0 R
>>
endobj

393 0 obj
<< /Type /MCR /MCID 39 /Pg 4 0 R >>
endobj

394 0 obj
<< /Type /StructElem /S /Link /K [ 395 0 R ] /P 391 0 R >>
endobj

395 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (live method)
  /K [ 396 0 R ]
  /P 394 0 R
>>
endobj

396 0 obj
<< /Type /MCR /MCID 40 /Pg 4 0 R >>
endobj

397 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( returns )
  /K [ 398 0 R ]
  /P 391 0 R
>>
endobj

398 0 obj
<< /Type /MCR /MCID 41 /Pg 4 0 R >>
endobj

399 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (True)
  /K [ 400 0 R ]
  /P 391 0 R
>>
endobj

400 0 obj
<< /Type /MCR /MCID 42 /Pg 4 0 R >>
endobj

401 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( on live supplies. Factory methods such as )
  /K [ 402 0 R ]
  /P 391 0 R
>>
endobj

402 0 obj
<< /Type /MCR /MCID 43 /Pg 4 0 R >>
endobj

403 0 obj
<< /Type /StructElem /S /Link /K [ 404 0 R ] /P 391 0 R >>
endobj

404 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (interval)
  /K [ 405 0 R ]
  /P 403 0 R
>>
endobj

405 0 obj
<< /Type /MCR /MCID 44 /Pg 4 0 R >>
endobj

406 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, )
  /K [ 407 0 R ]
  /P 391 0 R
>>
endobj

407 0 obj
<< /Type /MCR /MCID 45 /Pg 4 0 R >>
endobj

408 0 obj
<< /Type /StructElem /S /Link /K [ 409 0 R ] /P 391 0 R >>
endobj

409 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (from-list)
  /K [ 410 0 R ]
  /P 408 0 R
>>
endobj

410 0 obj
<< /Type /MCR /MCID 46 /Pg 4 0 R >>
endobj

411 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( will return )
  /K [ 412 0 R ]
  /P 391 0 R
>>
endobj

412 0 obj
<< /Type /MCR /MCID 47 /Pg 4 0 R >>
endobj

413 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (on demand)
  /K [ 414 0 R ]
  /P 391 0 R
>>
endobj

414 0 obj
<< /Type /MCR /MCID 48 /Pg 4 0 R >>
endobj

415 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( supplies.)
  /K [ 416 0 R ]
  /P 391 0 R
>>
endobj

416 0 obj
<< /Type /MCR /MCID 49 /Pg 4 0 R >>
endobj

417 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 418 0 R 420 0 R 422 0 R 424 0 R 427 0 R ]
  /P 303 0 R
>>
endobj

418 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (A live )
  /K [ 419 0 R ]
  /P 417 0 R
>>
endobj

419 0 obj
<< /Type /MCR /MCID 50 /Pg 4 0 R >>
endobj

420 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 421 0 R ]
  /P 417 0 R
>>
endobj

421 0 obj
<< /Type /MCR /MCID 51 /Pg 4 0 R >>
endobj

422 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( that keeps values until tapped the first time can be created with )
  /K [ 423 0 R ]
  /P 417 0 R
>>
endobj

423 0 obj
<< /Type /MCR /MCID 52 /Pg 4 0 R >>
endobj

424 0 obj
<< /Type /StructElem /S /Link /K [ 425 0 R ] /P 417 0 R >>
endobj

425 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier::Preserving)
  /K [ 426 0 R ]
  /P 424 0 R
>>
endobj

426 0 obj
<< /Type /MCR /MCID 53 /Pg 4 0 R >>
endobj

427 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 428 0 R ] /P 417 0 R >>
endobj

428 0 obj
<< /Type /MCR /MCID 54 /Pg 4 0 R >>
endobj

429 0 obj
<< /Type /StructElem /S /P /K [ 430 0 R 432 0 R 435 0 R ] /P 303 0 R >>
endobj

430 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Further examples can be found in the )
  /K [ 431 0 R ]
  /P 429 0 R
>>
endobj

431 0 obj
<< /Type /MCR /MCID 55 /Pg 4 0 R >>
endobj

432 0 obj
<< /Type /StructElem /S /Link /K [ 433 0 R ] /P 429 0 R >>
endobj

433 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (concurrency page)
  /K [ 434 0 R ]
  /P 432 0 R
>>
endobj

434 0 obj
<< /Type /MCR /MCID 56 /Pg 4 0 R >>
endobj

435 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 436 0 R ] /P 429 0 R >>
endobj

436 0 obj
<< /Type /MCR /MCID 57 /Pg 4 0 R >>
endobj

437 0 obj
<< /Type /StructElem /S /H1 /K [ 438 0 R ] /P 303 0 R >>
endobj

438 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Methods that return Taps\n)
  /K [ 439 0 R ]
  /P 437 0 R
>>
endobj

439 0 obj
<< /Type /MCR /MCID 0 /Pg 23 0 R >>
endobj

440 0 obj
<< /Type /StructElem /S /H2 /K [ 441 0 R ] /P 303 0 R >>
endobj

441 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method tap\n)
  /K [ 442 0 R ]
  /P 440 0 R
>>
endobj

442 0 obj
<< /Type /MCR /MCID 1 /Pg 23 0 R >>
endobj

443 0 obj
<< /Type /StructElem /S /Code /K [ 444 0 R ] /P 303 0 R >>
endobj

444 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method tap\(Supply:D: &emit = -> $ { },\n        :&done = -> {},\n        :&quit = -> $ex { $ex.throw },\n        :&tap = -> $ {} \)\n)
  /K [ 445 0 R ]
  /P 443 0 R
>>
endobj

445 0 obj
<< /Type /MCR /MCID 2 /Pg 23 0 R >>
endobj

446 0 obj
<< /Type /StructElem /S /P /K [ 447 0 R 449 0 R 451 0 R ] /P 303 0 R >>
endobj

447 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new tap \(a kind of subscription if you will\), in addition to all existing taps. The first positional argument is a piece of code that will be called when a new value becomes available through the )
  /K [ 448 0 R ]
  /P 446 0 R
>>
endobj

448 0 obj
<< /Type /MCR /MCID 3 /Pg 23 0 R >>
endobj

449 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (emit)
  /K [ 450 0 R ]
  /P 446 0 R
>>
endobj

450 0 obj
<< /Type /MCR /MCID 4 /Pg 23 0 R >>
endobj

451 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( call.)
  /K [ 452 0 R ]
  /P 446 0 R
>>
endobj

452 0 obj
<< /Type /MCR /MCID 5 /Pg 23 0 R >>
endobj

453 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 454 0 R 456 0 R 458 0 R 460 0 R 462 0 R 464 0 R 466 0 R 468 0 R 470 0 R 472 0 R 474 0 R 476 0 R 478 0 R 480 0 R 482 0 R ]
  /P 303 0 R
>>
endobj

454 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 455 0 R ]
  /P 453 0 R
>>
endobj

455 0 obj
<< /Type /MCR /MCID 6 /Pg 23 0 R >>
endobj

456 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&done)
  /K [ 457 0 R ]
  /P 453 0 R
>>
endobj

457 0 obj
<< /Type /MCR /MCID 7 /Pg 23 0 R >>
endobj

458 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( callback can be called in a number of cases: if a supply block is being tapped, when a )
  /K [ 459 0 R ]
  /P 453 0 R
>>
endobj

459 0 obj
<< /Type /MCR /MCID 8 /Pg 23 0 R >>
endobj

460 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 461 0 R ]
  /P 453 0 R
>>
endobj

461 0 obj
<< /Type /MCR /MCID 9 /Pg 23 0 R >>
endobj

462 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( routine is reached; if a supply block is being tapped, it will be automatically triggered if the supply block reaches the end; if the )
  /K [ 463 0 R ]
  /P 453 0 R
>>
endobj

463 0 obj
<< /Type /MCR /MCID 10 /Pg 23 0 R >>
endobj

464 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 465 0 R ]
  /P 453 0 R
>>
endobj

465 0 obj
<< /Type /MCR /MCID 11 /Pg 23 0 R >>
endobj

466 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method is called on the parent )
  /K [ 467 0 R ]
  /P 453 0 R
>>
endobj

467 0 obj
<< /Type /MCR /MCID 12 /Pg 23 0 R >>
endobj

468 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 469 0 R ]
  /P 453 0 R
>>
endobj

469 0 obj
<< /Type /MCR /MCID 13 /Pg 23 0 R >>
endobj

470 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(in the case of a supply block, if there are multiple Suppliers referenced by )
  /K [ 471 0 R ]
  /P 453 0 R
>>
endobj

471 0 obj
<< /Type /MCR /MCID 14 /Pg 23 0 R >>
endobj

472 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (whenever)
  /K [ 473 0 R ]
  /P 453 0 R
>>
endobj

473 0 obj
<< /Type /MCR /MCID 15 /Pg 23 0 R >>
endobj

474 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, they must all have their )
  /K [ 475 0 R ]
  /P 453 0 R
>>
endobj

475 0 obj
<< /Type /MCR /MCID 16 /Pg 23 0 R >>
endobj

476 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 477 0 R ]
  /P 453 0 R
>>
endobj

477 0 obj
<< /Type /MCR /MCID 17 /Pg 23 0 R >>
endobj

478 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method invoked for this to trigger the )
  /K [ 479 0 R ]
  /P 453 0 R
>>
endobj

479 0 obj
<< /Type /MCR /MCID 18 /Pg 23 0 R >>
endobj

480 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&done)
  /K [ 481 0 R ]
  /P 453 0 R
>>
endobj

481 0 obj
<< /Type /MCR /MCID 19 /Pg 23 0 R >>
endobj

482 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( callback of the tap as the block will then reach its end\).)
  /K [ 483 0 R ]
  /P 453 0 R
>>
endobj

483 0 obj
<< /Type /MCR /MCID 20 /Pg 23 0 R >>
endobj

484 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 485 0 R 487 0 R 489 0 R 491 0 R 493 0 R 495 0 R 497 0 R 499 0 R 501 0 R 503 0 R 505 0 R ]
  /P 303 0 R
>>
endobj

485 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 486 0 R ]
  /P 484 0 R
>>
endobj

486 0 obj
<< /Type /MCR /MCID 21 /Pg 23 0 R >>
endobj

487 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&quit)
  /K [ 488 0 R ]
  /P 484 0 R
>>
endobj

488 0 obj
<< /Type /MCR /MCID 22 /Pg 23 0 R >>
endobj

489 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( callback is called if the tap is on a supply block which exits with an error. It is also called if the )
  /K [ 490 0 R ]
  /P 484 0 R
>>
endobj

490 0 obj
<< /Type /MCR /MCID 23 /Pg 23 0 R >>
endobj

491 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 492 0 R ]
  /P 484 0 R
>>
endobj

492 0 obj
<< /Type /MCR /MCID 24 /Pg 23 0 R >>
endobj

493 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method is invoked on the parent )
  /K [ 494 0 R ]
  /P 484 0 R
>>
endobj

494 0 obj
<< /Type /MCR /MCID 25 /Pg 23 0 R >>
endobj

495 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 496 0 R ]
  /P 484 0 R
>>
endobj

496 0 obj
<< /Type /MCR /MCID 26 /Pg 23 0 R >>
endobj

497 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(in the case of a supply block any one )
  /K [ 498 0 R ]
  /P 484 0 R
>>
endobj

498 0 obj
<< /Type /MCR /MCID 27 /Pg 23 0 R >>
endobj

499 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 500 0 R ]
  /P 484 0 R
>>
endobj

500 0 obj
<< /Type /MCR /MCID 28 /Pg 23 0 R >>
endobj

501 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( quitting with an uncaught exception will call the )
  /K [ 502 0 R ]
  /P 484 0 R
>>
endobj

502 0 obj
<< /Type /MCR /MCID 29 /Pg 23 0 R >>
endobj

503 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&quit)
  /K [ 504 0 R ]
  /P 484 0 R
>>
endobj

504 0 obj
<< /Type /MCR /MCID 30 /Pg 23 0 R >>
endobj

505 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( callback as the block will exit with an error\). The error is passed as a parameter to the callback.)
  /K [ 506 0 R ]
  /P 484 0 R
>>
endobj

506 0 obj
<< /Type /MCR /MCID 31 /Pg 23 0 R >>
endobj

507 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 508 0 R 510 0 R 512 0 R 514 0 R 517 0 R 519 0 R 521 0 R 523 0 R 525 0 R 527 0 R 529 0 R 531 0 R 533 0 R 535 0 R 537 0 R 539 0 R 541 0 R 543 0 R 545 0 R ]
  /P 303 0 R
>>
endobj

508 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 509 0 R ]
  /P 507 0 R
>>
endobj

509 0 obj
<< /Type /MCR /MCID 32 /Pg 23 0 R >>
endobj

510 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&tap)
  /K [ 511 0 R ]
  /P 507 0 R
>>
endobj

511 0 obj
<< /Type /MCR /MCID 33 /Pg 23 0 R >>
endobj

512 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( callback is called once the )
  /K [ 513 0 R ]
  /P 507 0 R
>>
endobj

513 0 obj
<< /Type /MCR /MCID 34 /Pg 23 0 R >>
endobj

514 0 obj
<< /Type /StructElem /S /Link /K [ 515 0 R ] /P 507 0 R >>
endobj

515 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Tap)
  /K [ 516 0 R ]
  /P 514 0 R
>>
endobj

516 0 obj
<< /Type /MCR /MCID 35 /Pg 23 0 R >>
endobj

517 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( object is created, which is passed as a parameter to the callback. The callback is called ahead of )
  /K [ 518 0 R ]
  /P 507 0 R
>>
endobj

518 0 obj
<< /Type /MCR /MCID 36 /Pg 23 0 R >>
endobj

519 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (emit)
  /K [ 520 0 R ]
  /P 507 0 R
>>
endobj

520 0 obj
<< /Type /MCR /MCID 37 /Pg 23 0 R >>
endobj

521 0 obj
<< /Type /StructElem /S /Span /ActualText (/) /K [ 522 0 R ] /P 507 0 R >>
endobj

522 0 obj
<< /Type /MCR /MCID 38 /Pg 23 0 R >>
endobj

523 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 524 0 R ]
  /P 507 0 R
>>
endobj

524 0 obj
<< /Type /MCR /MCID 39 /Pg 23 0 R >>
endobj

525 0 obj
<< /Type /StructElem /S /Span /ActualText (/) /K [ 526 0 R ] /P 507 0 R >>
endobj

526 0 obj
<< /Type /MCR /MCID 40 /Pg 23 0 R >>
endobj

527 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 528 0 R ]
  /P 507 0 R
>>
endobj

528 0 obj
<< /Type /MCR /MCID 41 /Pg 23 0 R >>
endobj

529 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, providing a reliable way to get the )
  /K [ 530 0 R ]
  /P 507 0 R
>>
endobj

530 0 obj
<< /Type /MCR /MCID 42 /Pg 23 0 R >>
endobj

531 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Tap)
  /K [ 532 0 R ]
  /P 507 0 R
>>
endobj

532 0 obj
<< /Type /MCR /MCID 43 /Pg 23 0 R >>
endobj

533 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( object. One case where this is useful is when the )
  /K [ 534 0 R ]
  /P 507 0 R
>>
endobj

534 0 obj
<< /Type /MCR /MCID 44 /Pg 23 0 R >>
endobj

535 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 536 0 R ]
  /P 507 0 R
>>
endobj

536 0 obj
<< /Type /MCR /MCID 45 /Pg 23 0 R >>
endobj

537 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( begins emitting values synchronously, since the call to )
  /K [ 538 0 R ]
  /P 507 0 R
>>
endobj

538 0 obj
<< /Type /MCR /MCID 46 /Pg 23 0 R >>
endobj

539 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.tap)
  /K [ 540 0 R ]
  /P 507 0 R
>>
endobj

540 0 obj
<< /Type /MCR /MCID 47 /Pg 23 0 R >>
endobj

541 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( won't return the )
  /K [ 542 0 R ]
  /P 507 0 R
>>
endobj

542 0 obj
<< /Type /MCR /MCID 48 /Pg 23 0 R >>
endobj

543 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Tap)
  /K [ 544 0 R ]
  /P 507 0 R
>>
endobj

544 0 obj
<< /Type /MCR /MCID 49 /Pg 23 0 R >>
endobj

545 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( object until it is done emitting, preventing it from being stopped if needed.)
  /K [ 546 0 R ]
  /P 507 0 R
>>
endobj

546 0 obj
<< /Type /MCR /MCID 50 /Pg 23 0 R >>
endobj

547 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 548 0 R 550 0 R 552 0 R 554 0 R 557 0 R 559 0 R 561 0 R ]
  /P 303 0 R
>>
endobj

548 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Method )
  /K [ 549 0 R ]
  /P 547 0 R
>>
endobj

549 0 obj
<< /Type /MCR /MCID 51 /Pg 23 0 R >>
endobj

550 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (tap)
  /K [ 551 0 R ]
  /P 547 0 R
>>
endobj

551 0 obj
<< /Type /MCR /MCID 52 /Pg 23 0 R >>
endobj

552 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( returns an object of type )
  /K [ 553 0 R ]
  /P 547 0 R
>>
endobj

553 0 obj
<< /Type /MCR /MCID 53 /Pg 23 0 R >>
endobj

554 0 obj
<< /Type /StructElem /S /Link /K [ 555 0 R ] /P 547 0 R >>
endobj

555 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Tap)
  /K [ 556 0 R ]
  /P 554 0 R
>>
endobj

556 0 obj
<< /Type /MCR /MCID 54 /Pg 23 0 R >>
endobj

557 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, on which you can call the )
  /K [ 558 0 R ]
  /P 547 0 R
>>
endobj

558 0 obj
<< /Type /MCR /MCID 55 /Pg 23 0 R >>
endobj

559 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (close)
  /K [ 560 0 R ]
  /P 547 0 R
>>
endobj

560 0 obj
<< /Type /MCR /MCID 56 /Pg 23 0 R >>
endobj

561 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method to cancel the subscription.)
  /K [ 562 0 R ]
  /P 547 0 R
>>
endobj

562 0 obj
<< /Type /MCR /MCID 57 /Pg 23 0 R >>
endobj

563 0 obj
<< /Type /StructElem /S /Code /K [ 564 0 R ] /P 303 0 R >>
endobj

564 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $s = Supply.from-list\(0 .. 5\);\nmy $t = $s.tap\(-> $v { say $v }, done => { say "no more ticks" }\);\n)
  /K [ 565 0 R ]
  /P 563 0 R
>>
endobj

565 0 obj
<< /Type /MCR /MCID 58 /Pg 23 0 R >>
endobj

566 0 obj
<< /Type /StructElem /S /P /K [ 567 0 R ] /P 303 0 R >>
endobj

567 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Produces:)
  /K [ 568 0 R ]
  /P 566 0 R
>>
endobj

568 0 obj
<< /Type /MCR /MCID 59 /Pg 23 0 R >>
endobj

569 0 obj
<< /Type /StructElem /S /Code /K [ 570 0 R ] /P 303 0 R >>
endobj

570 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (0\n1\n2\n3\n4\n5\nno more ticks\n)
  /K [ 571 0 R ]
  /P 569 0 R
>>
endobj

571 0 obj
<< /Type /MCR /MCID 60 /Pg 23 0 R >>
endobj

572 0 obj
<< /Type /StructElem /S /H2 /K [ 573 0 R ] /P 303 0 R >>
endobj

573 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method act\n)
  /K [ 574 0 R ]
  /P 572 0 R
>>
endobj

574 0 obj
<< /Type /MCR /MCID 61 /Pg 23 0 R >>
endobj

575 0 obj
<< /Type /StructElem /S /Code /K [ 576 0 R ] /P 303 0 R >>
endobj

576 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method act\(Supply:D: &actor, *%others\)\n)
  /K [ 577 0 R ]
  /P 575 0 R
>>
endobj

577 0 obj
<< /Type /MCR /MCID 62 /Pg 23 0 R >>
endobj

578 0 obj
<< /Type /StructElem /S /P /K [ 579 0 R 581 0 R 583 0 R ] /P 303 0 R >>
endobj

579 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a tap on the given supply with the given code. Differently from )
  /K [ 580 0 R ]
  /P 578 0 R
>>
endobj

580 0 obj
<< /Type /MCR /MCID 63 /Pg 23 0 R >>
endobj

581 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (tap)
  /K [ 582 0 R ]
  /P 578 0 R
>>
endobj

582 0 obj
<< /Type /MCR /MCID 64 /Pg 23 0 R >>
endobj

583 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, the given code is guaranteed to be executed by only one thread at a time.)
  /K [ 584 0 R ]
  /P 578 0 R
>>
endobj

584 0 obj
<< /Type /MCR /MCID 65 /Pg 23 0 R >>
endobj

585 0 obj
<< /Type /StructElem /S /H1 /K [ 586 0 R ] /P 303 0 R >>
endobj

586 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Utility methods\n)
  /K [ 587 0 R ]
  /P 585 0 R
>>
endobj

587 0 obj
<< /Type /MCR /MCID 0 /Pg 41 0 R >>
endobj

588 0 obj
<< /Type /StructElem /S /H2 /K [ 589 0 R ] /P 303 0 R >>
endobj

589 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Capture\n)
  /K [ 590 0 R ]
  /P 588 0 R
>>
endobj

590 0 obj
<< /Type /MCR /MCID 1 /Pg 41 0 R >>
endobj

591 0 obj
<< /Type /StructElem /S /P /K [ 592 0 R ] /P 303 0 R >>
endobj

592 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as:)
  /K [ 593 0 R ]
  /P 591 0 R
>>
endobj

593 0 obj
<< /Type /MCR /MCID 2 /Pg 41 0 R >>
endobj

594 0 obj
<< /Type /StructElem /S /Code /K [ 595 0 R ] /P 303 0 R >>
endobj

595 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Capture\(Supply:D: --> Capture:D\)\n)
  /K [ 596 0 R ]
  /P 594 0 R
>>
endobj

596 0 obj
<< /Type /MCR /MCID 3 /Pg 41 0 R >>
endobj

597 0 obj
<< /Type /StructElem /S /P /K [ 598 0 R 600 0 R 603 0 R ] /P 303 0 R >>
endobj

598 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Equivalent to calling )
  /K [ 599 0 R ]
  /P 597 0 R
>>
endobj

599 0 obj
<< /Type /MCR /MCID 4 /Pg 41 0 R >>
endobj

600 0 obj
<< /Type /StructElem /S /Link /K [ 601 0 R ] /P 597 0 R >>
endobj

601 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.List.Capture)
  /K [ 602 0 R ]
  /P 600 0 R
>>
endobj

602 0 obj
<< /Type /MCR /MCID 5 /Pg 41 0 R >>
endobj

603 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( on the invocant.)
  /K [ 604 0 R ]
  /P 597 0 R
>>
endobj

604 0 obj
<< /Type /MCR /MCID 6 /Pg 41 0 R >>
endobj

605 0 obj
<< /Type /StructElem /S /H2 /K [ 606 0 R ] /P 303 0 R >>
endobj

606 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Channel\n)
  /K [ 607 0 R ]
  /P 605 0 R
>>
endobj

607 0 obj
<< /Type /MCR /MCID 7 /Pg 41 0 R >>
endobj

608 0 obj
<< /Type /StructElem /S /Code /K [ 609 0 R ] /P 303 0 R >>
endobj

609 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Channel\(Supply:D: --> Channel:D\)\n)
  /K [ 610 0 R ]
  /P 608 0 R
>>
endobj

610 0 obj
<< /Type /MCR /MCID 8 /Pg 41 0 R >>
endobj

611 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 612 0 R 614 0 R 617 0 R 619 0 R 621 0 R ]
  /P 303 0 R
>>
endobj

612 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a )
  /K [ 613 0 R ]
  /P 611 0 R
>>
endobj

613 0 obj
<< /Type /MCR /MCID 9 /Pg 41 0 R >>
endobj

614 0 obj
<< /Type /StructElem /S /Link /K [ 615 0 R ] /P 611 0 R >>
endobj

615 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Channel)
  /K [ 616 0 R ]
  /P 614 0 R
>>
endobj

616 0 obj
<< /Type /MCR /MCID 10 /Pg 41 0 R >>
endobj

617 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( object that will receive all future values from the supply, and will be )
  /K [ 618 0 R ]
  /P 611 0 R
>>
endobj

618 0 obj
<< /Type /MCR /MCID 11 /Pg 41 0 R >>
endobj

619 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (close)
  /K [ 620 0 R ]
  /P 611 0 R
>>
endobj

620 0 obj
<< /Type /MCR /MCID 12 /Pg 41 0 R >>
endobj

621 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (d when the Supply is done, and quit \(shut down with error\) when the supply is quit.)
  /K [ 622 0 R ]
  /P 611 0 R
>>
endobj

622 0 obj
<< /Type /MCR /MCID 13 /Pg 41 0 R >>
endobj

623 0 obj
<< /Type /StructElem /S /H2 /K [ 624 0 R ] /P 303 0 R >>
endobj

624 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Promise\n)
  /K [ 625 0 R ]
  /P 623 0 R
>>
endobj

625 0 obj
<< /Type /MCR /MCID 14 /Pg 41 0 R >>
endobj

626 0 obj
<< /Type /StructElem /S /Code /K [ 627 0 R ] /P 303 0 R >>
endobj

627 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Promise\(Supply:D: --> Promise:D\)\n)
  /K [ 628 0 R ]
  /P 626 0 R
>>
endobj

628 0 obj
<< /Type /MCR /MCID 15 /Pg 41 0 R >>
endobj

629 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 630 0 R 632 0 R 635 0 R 637 0 R 639 0 R 641 0 R 643 0 R 645 0 R 647 0 R 649 0 R 651 0 R 653 0 R 655 0 R 657 0 R 659 0 R 661 0 R 663 0 R 665 0 R 667 0 R 669 0 R 671 0 R ]
  /P 303 0 R
>>
endobj

630 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a )
  /K [ 631 0 R ]
  /P 629 0 R
>>
endobj

631 0 obj
<< /Type /MCR /MCID 16 /Pg 41 0 R >>
endobj

632 0 obj
<< /Type /StructElem /S /Link /K [ 633 0 R ] /P 629 0 R >>
endobj

633 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Promise)
  /K [ 634 0 R ]
  /P 632 0 R
>>
endobj

634 0 obj
<< /Type /MCR /MCID 17 /Pg 41 0 R >>
endobj

635 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( that will be kept when the )
  /K [ 636 0 R ]
  /P 629 0 R
>>
endobj

636 0 obj
<< /Type /MCR /MCID 18 /Pg 41 0 R >>
endobj

637 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 638 0 R ]
  /P 629 0 R
>>
endobj

638 0 obj
<< /Type /MCR /MCID 19 /Pg 41 0 R >>
endobj

639 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is )
  /K [ 640 0 R ]
  /P 629 0 R
>>
endobj

640 0 obj
<< /Type /MCR /MCID 20 /Pg 41 0 R >>
endobj

641 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 642 0 R ]
  /P 629 0 R
>>
endobj

642 0 obj
<< /Type /MCR /MCID 21 /Pg 41 0 R >>
endobj

643 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. If the )
  /K [ 644 0 R ]
  /P 629 0 R
>>
endobj

644 0 obj
<< /Type /MCR /MCID 22 /Pg 41 0 R >>
endobj

645 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 646 0 R ]
  /P 629 0 R
>>
endobj

646 0 obj
<< /Type /MCR /MCID 23 /Pg 41 0 R >>
endobj

647 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( also emits any values, then the )
  /K [ 648 0 R ]
  /P 629 0 R
>>
endobj

648 0 obj
<< /Type /MCR /MCID 24 /Pg 41 0 R >>
endobj

649 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Promise)
  /K [ 650 0 R ]
  /P 629 0 R
>>
endobj

650 0 obj
<< /Type /MCR /MCID 25 /Pg 41 0 R >>
endobj

651 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( will be kept with the final value. Otherwise, it will be kept with )
  /K [ 652 0 R ]
  /P 629 0 R
>>
endobj

652 0 obj
<< /Type /MCR /MCID 26 /Pg 41 0 R >>
endobj

653 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Nil)
  /K [ 654 0 R ]
  /P 629 0 R
>>
endobj

654 0 obj
<< /Type /MCR /MCID 27 /Pg 41 0 R >>
endobj

655 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. If the )
  /K [ 656 0 R ]
  /P 629 0 R
>>
endobj

656 0 obj
<< /Type /MCR /MCID 28 /Pg 41 0 R >>
endobj

657 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 658 0 R ]
  /P 629 0 R
>>
endobj

658 0 obj
<< /Type /MCR /MCID 29 /Pg 41 0 R >>
endobj

659 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( ends with a )
  /K [ 660 0 R ]
  /P 629 0 R
>>
endobj

660 0 obj
<< /Type /MCR /MCID 30 /Pg 41 0 R >>
endobj

661 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 662 0 R ]
  /P 629 0 R
>>
endobj

662 0 obj
<< /Type /MCR /MCID 31 /Pg 41 0 R >>
endobj

663 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( instead of a )
  /K [ 664 0 R ]
  /P 629 0 R
>>
endobj

664 0 obj
<< /Type /MCR /MCID 32 /Pg 41 0 R >>
endobj

665 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 666 0 R ]
  /P 629 0 R
>>
endobj

666 0 obj
<< /Type /MCR /MCID 33 /Pg 41 0 R >>
endobj

667 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, then the )
  /K [ 668 0 R ]
  /P 629 0 R
>>
endobj

668 0 obj
<< /Type /MCR /MCID 34 /Pg 41 0 R >>
endobj

669 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Promise)
  /K [ 670 0 R ]
  /P 629 0 R
>>
endobj

670 0 obj
<< /Type /MCR /MCID 35 /Pg 41 0 R >>
endobj

671 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( will be broken with that exception.)
  /K [ 672 0 R ]
  /P 629 0 R
>>
endobj

672 0 obj
<< /Type /MCR /MCID 36 /Pg 41 0 R >>
endobj

673 0 obj
<< /Type /StructElem /S /Code /K [ 674 0 R ] /P 303 0 R >>
endobj

674 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $supplier = Supplier.new;\nmy $s = $supplier.Supply;\nmy $p = $s.Promise;\n$p.then\(-> $v { say "got $v.result\(\)" }\);\n$supplier.emit\('cha'\);         # not output yet\n$supplier.done\(\);              # got cha\n)
  /K [ 675 0 R ]
  /P 673 0 R
>>
endobj

675 0 obj
<< /Type /MCR /MCID 37 /Pg 41 0 R >>
endobj

676 0 obj
<< /Type /StructElem /S /P /K [ 677 0 R 679 0 R 681 0 R ] /P 303 0 R >>
endobj

677 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 678 0 R ]
  /P 676 0 R
>>
endobj

678 0 obj
<< /Type /MCR /MCID 38 /Pg 41 0 R >>
endobj

679 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Promise)
  /K [ 680 0 R ]
  /P 676 0 R
>>
endobj

680 0 obj
<< /Type /MCR /MCID 39 /Pg 41 0 R >>
endobj

681 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method is most useful when dealing with supplies that will tend to produce just one value, when only the final value is of interest, or when only completion \(successful or not\) is relevant.)
  /K [ 682 0 R ]
  /P 676 0 R
>>
endobj

682 0 obj
<< /Type /MCR /MCID 40 /Pg 41 0 R >>
endobj

683 0 obj
<< /Type /StructElem /S /H2 /K [ 684 0 R ] /P 303 0 R >>
endobj

684 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method live\n)
  /K [ 685 0 R ]
  /P 683 0 R
>>
endobj

685 0 obj
<< /Type /MCR /MCID 41 /Pg 41 0 R >>
endobj

686 0 obj
<< /Type /StructElem /S /Code /K [ 687 0 R ] /P 303 0 R >>
endobj

687 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method live\(Supply:D: --> Bool:D\)\n)
  /K [ 688 0 R ]
  /P 686 0 R
>>
endobj

688 0 obj
<< /Type /MCR /MCID 42 /Pg 41 0 R >>
endobj

689 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 690 0 R 692 0 R 694 0 R 696 0 R 698 0 R 700 0 R 702 0 R 704 0 R 706 0 R 708 0 R 710 0 R ]
  /P 303 0 R
>>
endobj

690 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns )
  /K [ 691 0 R ]
  /P 689 0 R
>>
endobj

691 0 obj
<< /Type /MCR /MCID 43 /Pg 41 0 R >>
endobj

692 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (True)
  /K [ 693 0 R ]
  /P 689 0 R
>>
endobj

693 0 obj
<< /Type /MCR /MCID 44 /Pg 41 0 R >>
endobj

694 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( if the supply is "live", that is, values are emitted to taps as soon as they arrive. Always returns )
  /K [ 695 0 R ]
  /P 689 0 R
>>
endobj

695 0 obj
<< /Type /MCR /MCID 45 /Pg 41 0 R >>
endobj

696 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (True)
  /K [ 697 0 R ]
  /P 689 0 R
>>
endobj

697 0 obj
<< /Type /MCR /MCID 46 /Pg 41 0 R >>
endobj

698 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( in the default )
  /K [ 699 0 R ]
  /P 689 0 R
>>
endobj

699 0 obj
<< /Type /MCR /MCID 47 /Pg 41 0 R >>
endobj

700 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 701 0 R ]
  /P 689 0 R
>>
endobj

701 0 obj
<< /Type /MCR /MCID 48 /Pg 41 0 R >>
endobj

702 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(but for example on the supply returned from )
  /K [ 703 0 R ]
  /P 689 0 R
>>
endobj

703 0 obj
<< /Type /MCR /MCID 49 /Pg 41 0 R >>
endobj

704 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply.from-list)
  /K [ 705 0 R ]
  /P 689 0 R
>>
endobj

705 0 obj
<< /Type /MCR /MCID 50 /Pg 41 0 R >>
endobj

706 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it's )
  /K [ 707 0 R ]
  /P 689 0 R
>>
endobj

707 0 obj
<< /Type /MCR /MCID 51 /Pg 41 0 R >>
endobj

708 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (False)
  /K [ 709 0 R ]
  /P 689 0 R
>>
endobj

709 0 obj
<< /Type /MCR /MCID 52 /Pg 41 0 R >>
endobj

710 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\).)
  /K [ 711 0 R ]
  /P 689 0 R
>>
endobj

711 0 obj
<< /Type /MCR /MCID 53 /Pg 41 0 R >>
endobj

712 0 obj
<< /Type /StructElem /S /Code /K [ 713 0 R ] /P 303 0 R >>
endobj

713 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ s a y   S u p p l i e r . n e w . S u p p l y . l i v e ;         #   O U T P U T :   « T r u e$$ » \n)
  /K [ 714 0 R ]
  /P 712 0 R
>>
endobj

714 0 obj
<< /Type /MCR /MCID 54 /Pg 41 0 R >>
endobj

715 0 obj
<< /Type /StructElem /S /H2 /K [ 716 0 R ] /P 303 0 R >>
endobj

716 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method schedule-on\n)
  /K [ 717 0 R ]
  /P 715 0 R
>>
endobj

717 0 obj
<< /Type /MCR /MCID 55 /Pg 41 0 R >>
endobj

718 0 obj
<< /Type /StructElem /S /Code /K [ 719 0 R ] /P 303 0 R >>
endobj

719 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method schedule-on\(Supply:D: Scheduler $scheduler\)\n)
  /K [ 720 0 R ]
  /P 718 0 R
>>
endobj

720 0 obj
<< /Type /MCR /MCID 56 /Pg 41 0 R >>
endobj

721 0 obj
<< /Type /StructElem /S /P /K [ 722 0 R ] /P 303 0 R >>
endobj

722 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Runs the emit, done and quit callbacks on the specified scheduler.)
  /K [ 723 0 R ]
  /P 721 0 R
>>
endobj

723 0 obj
<< /Type /MCR /MCID 0 /Pg 63 0 R >>
endobj

724 0 obj
<< /Type /StructElem /S /P /K [ 725 0 R ] /P 303 0 R >>
endobj

725 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This is useful for GUI toolkits that require certain actions to be run from the GUI thread.)
  /K [ 726 0 R ]
  /P 724 0 R
>>
endobj

726 0 obj
<< /Type /MCR /MCID 1 /Pg 63 0 R >>
endobj

727 0 obj
<< /Type /StructElem /S /H1 /K [ 728 0 R ] /P 303 0 R >>
endobj

728 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Methods that wait until the supply is done\n)
  /K [ 729 0 R ]
  /P 727 0 R
>>
endobj

729 0 obj
<< /Type /MCR /MCID 0 /Pg 65 0 R >>
endobj

730 0 obj
<< /Type /StructElem /S /H2 /K [ 731 0 R ] /P 303 0 R >>
endobj

731 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method wait\n)
  /K [ 732 0 R ]
  /P 730 0 R
>>
endobj

732 0 obj
<< /Type /MCR /MCID 1 /Pg 65 0 R >>
endobj

733 0 obj
<< /Type /StructElem /S /Code /K [ 734 0 R ] /P 303 0 R >>
endobj

734 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method wait\(Supply:D:\)\n)
  /K [ 735 0 R ]
  /P 733 0 R
>>
endobj

735 0 obj
<< /Type /MCR /MCID 2 /Pg 65 0 R >>
endobj

736 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 737 0 R 739 0 R 741 0 R 743 0 R 745 0 R 747 0 R 749 0 R 751 0 R 753 0 R 755 0 R 757 0 R 759 0 R 761 0 R ]
  /P 303 0 R
>>
endobj

737 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 738 0 R ]
  /P 736 0 R
>>
endobj

738 0 obj
<< /Type /MCR /MCID 3 /Pg 65 0 R >>
endobj

739 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 740 0 R ]
  /P 736 0 R
>>
endobj

740 0 obj
<< /Type /MCR /MCID 4 /Pg 65 0 R >>
endobj

741 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on, and blocks execution until the either the supply is )
  /K [ 742 0 R ]
  /P 736 0 R
>>
endobj

742 0 obj
<< /Type /MCR /MCID 5 /Pg 65 0 R >>
endobj

743 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 744 0 R ]
  /P 736 0 R
>>
endobj

744 0 obj
<< /Type /MCR /MCID 6 /Pg 65 0 R >>
endobj

745 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(in which case it evaluates to the final value that was emitted on the )
  /K [ 746 0 R ]
  /P 736 0 R
>>
endobj

746 0 obj
<< /Type /MCR /MCID 7 /Pg 65 0 R >>
endobj

747 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 748 0 R ]
  /P 736 0 R
>>
endobj

748 0 obj
<< /Type /MCR /MCID 8 /Pg 65 0 R >>
endobj

749 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, or )
  /K [ 750 0 R ]
  /P 736 0 R
>>
endobj

750 0 obj
<< /Type /MCR /MCID 9 /Pg 65 0 R >>
endobj

751 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Nil)
  /K [ 752 0 R ]
  /P 736 0 R
>>
endobj

752 0 obj
<< /Type /MCR /MCID 10 /Pg 65 0 R >>
endobj

753 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( if not value was emitted\) or )
  /K [ 754 0 R ]
  /P 736 0 R
>>
endobj

754 0 obj
<< /Type /MCR /MCID 11 /Pg 65 0 R >>
endobj

755 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 756 0 R ]
  /P 736 0 R
>>
endobj

756 0 obj
<< /Type /MCR /MCID 12 /Pg 65 0 R >>
endobj

757 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(in which case it will throw the exception that was passed to )
  /K [ 758 0 R ]
  /P 736 0 R
>>
endobj

758 0 obj
<< /Type /MCR /MCID 13 /Pg 65 0 R >>
endobj

759 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 760 0 R ]
  /P 736 0 R
>>
endobj

760 0 obj
<< /Type /MCR /MCID 14 /Pg 65 0 R >>
endobj

761 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\).)
  /K [ 762 0 R ]
  /P 736 0 R
>>
endobj

762 0 obj
<< /Type /MCR /MCID 15 /Pg 65 0 R >>
endobj

763 0 obj
<< /Type /StructElem /S /Code /K [ 764 0 R ] /P 303 0 R >>
endobj

764 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $s = Supplier.new;\nstart {\n  sleep 1;\n  say "One second: running.";\n  sleep 1;\n  $s.emit\(42\);\n  $s.done;\n}\n$s.Supply.wait;\nsay "Two seconds: done";\n)
  /K [ 765 0 R ]
  /P 763 0 R
>>
endobj

765 0 obj
<< /Type /MCR /MCID 16 /Pg 65 0 R >>
endobj

766 0 obj
<< /Type /StructElem /S /H2 /K [ 767 0 R ] /P 303 0 R >>
endobj

767 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method list\n)
  /K [ 768 0 R ]
  /P 766 0 R
>>
endobj

768 0 obj
<< /Type /MCR /MCID 17 /Pg 65 0 R >>
endobj

769 0 obj
<< /Type /StructElem /S /Code /K [ 770 0 R ] /P 303 0 R >>
endobj

770 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method list\(Supply:D:\)\n)
  /K [ 771 0 R ]
  /P 769 0 R
>>
endobj

771 0 obj
<< /Type /MCR /MCID 18 /Pg 65 0 R >>
endobj

772 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 773 0 R 775 0 R 777 0 R 779 0 R 781 0 R 783 0 R 785 0 R 787 0 R 789 0 R 791 0 R 793 0 R 795 0 R 797 0 R ]
  /P 303 0 R
>>
endobj

773 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 774 0 R ]
  /P 772 0 R
>>
endobj

774 0 obj
<< /Type /MCR /MCID 19 /Pg 65 0 R >>
endobj

775 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 776 0 R ]
  /P 772 0 R
>>
endobj

776 0 obj
<< /Type /MCR /MCID 20 /Pg 65 0 R >>
endobj

777 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on, and returns a lazy list that will be reified as the )
  /K [ 778 0 R ]
  /P 772 0 R
>>
endobj

778 0 obj
<< /Type /MCR /MCID 21 /Pg 65 0 R >>
endobj

779 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 780 0 R ]
  /P 772 0 R
>>
endobj

780 0 obj
<< /Type /MCR /MCID 22 /Pg 65 0 R >>
endobj

781 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( emits values. The list will be terminated once the )
  /K [ 782 0 R ]
  /P 772 0 R
>>
endobj

782 0 obj
<< /Type /MCR /MCID 23 /Pg 65 0 R >>
endobj

783 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 784 0 R ]
  /P 772 0 R
>>
endobj

784 0 obj
<< /Type /MCR /MCID 24 /Pg 65 0 R >>
endobj

785 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is )
  /K [ 786 0 R ]
  /P 772 0 R
>>
endobj

786 0 obj
<< /Type /MCR /MCID 25 /Pg 65 0 R >>
endobj

787 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 788 0 R ]
  /P 772 0 R
>>
endobj

788 0 obj
<< /Type /MCR /MCID 26 /Pg 65 0 R >>
endobj

789 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. If the )
  /K [ 790 0 R ]
  /P 772 0 R
>>
endobj

790 0 obj
<< /Type /MCR /MCID 27 /Pg 65 0 R >>
endobj

791 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 792 0 R ]
  /P 772 0 R
>>
endobj

792 0 obj
<< /Type /MCR /MCID 28 /Pg 65 0 R >>
endobj

793 0 obj
<< /Type /StructElem /S /Span /ActualText ( ) /K [ 794 0 R ] /P 772 0 R >>
endobj

794 0 obj
<< /Type /MCR /MCID 29 /Pg 65 0 R >>
endobj

795 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 796 0 R ]
  /P 772 0 R
>>
endobj

796 0 obj
<< /Type /MCR /MCID 30 /Pg 65 0 R >>
endobj

797 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (s, then an exception will be thrown once that point in the lazy list is reached.)
  /K [ 798 0 R ]
  /P 772 0 R
>>
endobj

798 0 obj
<< /Type /MCR /MCID 31 /Pg 65 0 R >>
endobj

799 0 obj
<< /Type /StructElem /S /H2 /K [ 800 0 R ] /P 303 0 R >>
endobj

800 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Seq\n)
  /K [ 801 0 R ]
  /P 799 0 R
>>
endobj

801 0 obj
<< /Type /MCR /MCID 32 /Pg 65 0 R >>
endobj

802 0 obj
<< /Type /StructElem /S /Code /K [ 803 0 R ] /P 303 0 R >>
endobj

803 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Seq\(Supply:D:\)\n)
  /K [ 804 0 R ]
  /P 802 0 R
>>
endobj

804 0 obj
<< /Type /MCR /MCID 33 /Pg 65 0 R >>
endobj

805 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 806 0 R 808 0 R 810 0 R 812 0 R 814 0 R ]
  /P 303 0 R
>>
endobj

806 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a )
  /K [ 807 0 R ]
  /P 805 0 R
>>
endobj

807 0 obj
<< /Type /MCR /MCID 34 /Pg 65 0 R >>
endobj

808 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Seq)
  /K [ 809 0 R ]
  /P 805 0 R
>>
endobj

809 0 obj
<< /Type /MCR /MCID 35 /Pg 65 0 R >>
endobj

810 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( with an iterator containing the values that the )
  /K [ 811 0 R ]
  /P 805 0 R
>>
endobj

811 0 obj
<< /Type /MCR /MCID 36 /Pg 65 0 R >>
endobj

812 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 813 0 R ]
  /P 805 0 R
>>
endobj

813 0 obj
<< /Type /MCR /MCID 37 /Pg 65 0 R >>
endobj

814 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( contains.)
  /K [ 815 0 R ]
  /P 805 0 R
>>
endobj

815 0 obj
<< /Type /MCR /MCID 38 /Pg 65 0 R >>
endobj

816 0 obj
<< /Type /StructElem /S /H2 /K [ 817 0 R ] /P 303 0 R >>
endobj

817 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method grab\n)
  /K [ 818 0 R ]
  /P 816 0 R
>>
endobj

818 0 obj
<< /Type /MCR /MCID 39 /Pg 65 0 R >>
endobj

819 0 obj
<< /Type /StructElem /S /Code /K [ 820 0 R ] /P 303 0 R >>
endobj

820 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method grab\(Supply:D: &when-done --> Supply:D\)\n)
  /K [ 821 0 R ]
  /P 819 0 R
>>
endobj

821 0 obj
<< /Type /MCR /MCID 40 /Pg 65 0 R >>
endobj

822 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 823 0 R 825 0 R 827 0 R 829 0 R 831 0 R 833 0 R 835 0 R 837 0 R 839 0 R 841 0 R 843 0 R 845 0 R 847 0 R 849 0 R 851 0 R ]
  /P 303 0 R
>>
endobj

823 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 824 0 R ]
  /P 822 0 R
>>
endobj

824 0 obj
<< /Type /MCR /MCID 41 /Pg 65 0 R >>
endobj

825 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 826 0 R ]
  /P 822 0 R
>>
endobj

826 0 obj
<< /Type /MCR /MCID 42 /Pg 65 0 R >>
endobj

827 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on. When it is )
  /K [ 828 0 R ]
  /P 822 0 R
>>
endobj

828 0 obj
<< /Type /MCR /MCID 43 /Pg 65 0 R >>
endobj

829 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 830 0 R ]
  /P 822 0 R
>>
endobj

830 0 obj
<< /Type /MCR /MCID 44 /Pg 65 0 R >>
endobj

831 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, calls )
  /K [ 832 0 R ]
  /P 822 0 R
>>
endobj

832 0 obj
<< /Type /MCR /MCID 45 /Pg 65 0 R >>
endobj

833 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&when-done)
  /K [ 834 0 R ]
  /P 822 0 R
>>
endobj

834 0 obj
<< /Type /MCR /MCID 46 /Pg 65 0 R >>
endobj

835 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and then emits the list of values that it returns on the result )
  /K [ 836 0 R ]
  /P 822 0 R
>>
endobj

836 0 obj
<< /Type /MCR /MCID 47 /Pg 65 0 R >>
endobj

837 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 838 0 R ]
  /P 822 0 R
>>
endobj

838 0 obj
<< /Type /MCR /MCID 48 /Pg 65 0 R >>
endobj

839 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. If the original )
  /K [ 840 0 R ]
  /P 822 0 R
>>
endobj

840 0 obj
<< /Type /MCR /MCID 49 /Pg 65 0 R >>
endobj

841 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 842 0 R ]
  /P 822 0 R
>>
endobj

842 0 obj
<< /Type /MCR /MCID 50 /Pg 65 0 R >>
endobj

843 0 obj
<< /Type /StructElem /S /Span /ActualText ( ) /K [ 844 0 R ] /P 822 0 R >>
endobj

844 0 obj
<< /Type /MCR /MCID 51 /Pg 65 0 R >>
endobj

845 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 846 0 R ]
  /P 822 0 R
>>
endobj

846 0 obj
<< /Type /MCR /MCID 52 /Pg 65 0 R >>
endobj

847 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (s, then the exception is immediately conveyed on the return )
  /K [ 848 0 R ]
  /P 822 0 R
>>
endobj

848 0 obj
<< /Type /MCR /MCID 53 /Pg 65 0 R >>
endobj

849 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 850 0 R ]
  /P 822 0 R
>>
endobj

850 0 obj
<< /Type /MCR /MCID 54 /Pg 65 0 R >>
endobj

851 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 852 0 R ] /P 822 0 R >>
endobj

852 0 obj
<< /Type /MCR /MCID 55 /Pg 65 0 R >>
endobj

853 0 obj
<< /Type /StructElem /S /Code /K [ 854 0 R ] /P 303 0 R >>
endobj

854 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 \) ; \n m y   $ t   =   $ s . g r a b \( & s u m \) ; \n $ t . t a p \( & s a y \) ;                       #   O U T P U T :   « 1 9$$ » \n)
  /K [ 855 0 R ]
  /P 853 0 R
>>
endobj

855 0 obj
<< /Type /MCR /MCID 56 /Pg 65 0 R >>
endobj

856 0 obj
<< /Type /StructElem /S /H2 /K [ 857 0 R ] /P 303 0 R >>
endobj

857 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method reverse\n)
  /K [ 858 0 R ]
  /P 856 0 R
>>
endobj

858 0 obj
<< /Type /MCR /MCID 57 /Pg 65 0 R >>
endobj

859 0 obj
<< /Type /StructElem /S /Code /K [ 860 0 R ] /P 303 0 R >>
endobj

860 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method reverse\(Supply:D: --> Supply:D\)\n)
  /K [ 861 0 R ]
  /P 859 0 R
>>
endobj

861 0 obj
<< /Type /MCR /MCID 58 /Pg 65 0 R >>
endobj

862 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 863 0 R 865 0 R 867 0 R 869 0 R 871 0 R 873 0 R 875 0 R 877 0 R 879 0 R 881 0 R 883 0 R 885 0 R 887 0 R 889 0 R 891 0 R ]
  /P 303 0 R
>>
endobj

863 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 864 0 R ]
  /P 862 0 R
>>
endobj

864 0 obj
<< /Type /MCR /MCID 0 /Pg 81 0 R >>
endobj

865 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 866 0 R ]
  /P 862 0 R
>>
endobj

866 0 obj
<< /Type /MCR /MCID 1 /Pg 81 0 R >>
endobj

867 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on. Once that )
  /K [ 868 0 R ]
  /P 862 0 R
>>
endobj

868 0 obj
<< /Type /MCR /MCID 2 /Pg 81 0 R >>
endobj

869 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 870 0 R ]
  /P 862 0 R
>>
endobj

870 0 obj
<< /Type /MCR /MCID 3 /Pg 81 0 R >>
endobj

871 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( emits )
  /K [ 872 0 R ]
  /P 862 0 R
>>
endobj

872 0 obj
<< /Type /MCR /MCID 4 /Pg 81 0 R >>
endobj

873 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 874 0 R ]
  /P 862 0 R
>>
endobj

874 0 obj
<< /Type /MCR /MCID 5 /Pg 81 0 R >>
endobj

875 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, all of the values it emitted will be emitted on the returned )
  /K [ 876 0 R ]
  /P 862 0 R
>>
endobj

876 0 obj
<< /Type /MCR /MCID 6 /Pg 81 0 R >>
endobj

877 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 878 0 R ]
  /P 862 0 R
>>
endobj

878 0 obj
<< /Type /MCR /MCID 7 /Pg 81 0 R >>
endobj

879 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( in reverse order. If the original )
  /K [ 880 0 R ]
  /P 862 0 R
>>
endobj

880 0 obj
<< /Type /MCR /MCID 8 /Pg 81 0 R >>
endobj

881 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 882 0 R ]
  /P 862 0 R
>>
endobj

882 0 obj
<< /Type /MCR /MCID 9 /Pg 81 0 R >>
endobj

883 0 obj
<< /Type /StructElem /S /Span /ActualText ( ) /K [ 884 0 R ] /P 862 0 R >>
endobj

884 0 obj
<< /Type /MCR /MCID 10 /Pg 81 0 R >>
endobj

885 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 886 0 R ]
  /P 862 0 R
>>
endobj

886 0 obj
<< /Type /MCR /MCID 11 /Pg 81 0 R >>
endobj

887 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (s, then the exception is immediately conveyed on the return )
  /K [ 888 0 R ]
  /P 862 0 R
>>
endobj

888 0 obj
<< /Type /MCR /MCID 12 /Pg 81 0 R >>
endobj

889 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 890 0 R ]
  /P 862 0 R
>>
endobj

890 0 obj
<< /Type /MCR /MCID 13 /Pg 81 0 R >>
endobj

891 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 892 0 R ] /P 862 0 R >>
endobj

892 0 obj
<< /Type /MCR /MCID 14 /Pg 81 0 R >>
endobj

893 0 obj
<< /Type /StructElem /S /Code /K [ 894 0 R ] /P 303 0 R >>
endobj

894 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 1 ,   2 ,   3 \) ; \n m y   $ t   =   $ s . r e v e r s e ; \n $ t . t a p \( & s a y \) ;                       #   O U T P U T :   « 3$$ 2$$ 1$$ » \n)
  /K [ 895 0 R ]
  /P 893 0 R
>>
endobj

895 0 obj
<< /Type /MCR /MCID 15 /Pg 81 0 R >>
endobj

896 0 obj
<< /Type /StructElem /S /H2 /K [ 897 0 R ] /P 303 0 R >>
endobj

897 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method sort\n)
  /K [ 898 0 R ]
  /P 896 0 R
>>
endobj

898 0 obj
<< /Type /MCR /MCID 16 /Pg 81 0 R >>
endobj

899 0 obj
<< /Type /StructElem /S /Code /K [ 900 0 R ] /P 303 0 R >>
endobj

900 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method sort\(Supply:D: &custom-routine-to-use? --> Supply:D\)\n)
  /K [ 901 0 R ]
  /P 899 0 R
>>
endobj

901 0 obj
<< /Type /MCR /MCID 17 /Pg 81 0 R >>
endobj

902 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 903 0 R 905 0 R 907 0 R 909 0 R 911 0 R 913 0 R 915 0 R 917 0 R 919 0 R 921 0 R 924 0 R 926 0 R 928 0 R 930 0 R 932 0 R 934 0 R 936 0 R ]
  /P 303 0 R
>>
endobj

903 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 904 0 R ]
  /P 902 0 R
>>
endobj

904 0 obj
<< /Type /MCR /MCID 18 /Pg 81 0 R >>
endobj

905 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 906 0 R ]
  /P 902 0 R
>>
endobj

906 0 obj
<< /Type /MCR /MCID 19 /Pg 81 0 R >>
endobj

907 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on. Once that )
  /K [ 908 0 R ]
  /P 902 0 R
>>
endobj

908 0 obj
<< /Type /MCR /MCID 20 /Pg 81 0 R >>
endobj

909 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 910 0 R ]
  /P 902 0 R
>>
endobj

910 0 obj
<< /Type /MCR /MCID 21 /Pg 81 0 R >>
endobj

911 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( emits )
  /K [ 912 0 R ]
  /P 902 0 R
>>
endobj

912 0 obj
<< /Type /MCR /MCID 22 /Pg 81 0 R >>
endobj

913 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 914 0 R ]
  /P 902 0 R
>>
endobj

914 0 obj
<< /Type /MCR /MCID 23 /Pg 81 0 R >>
endobj

915 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, all of the values that it emitted will be sorted, and the results emitted on the returned )
  /K [ 916 0 R ]
  /P 902 0 R
>>
endobj

916 0 obj
<< /Type /MCR /MCID 24 /Pg 81 0 R >>
endobj

917 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 918 0 R ]
  /P 902 0 R
>>
endobj

918 0 obj
<< /Type /MCR /MCID 25 /Pg 81 0 R >>
endobj

919 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( in the sorted order. Optionally accepts a comparator )
  /K [ 920 0 R ]
  /P 902 0 R
>>
endobj

920 0 obj
<< /Type /MCR /MCID 26 /Pg 81 0 R >>
endobj

921 0 obj
<< /Type /StructElem /S /Link /K [ 922 0 R ] /P 902 0 R >>
endobj

922 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Block)
  /K [ 923 0 R ]
  /P 921 0 R
>>
endobj

923 0 obj
<< /Type /MCR /MCID 27 /Pg 81 0 R >>
endobj

924 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. If the original )
  /K [ 925 0 R ]
  /P 902 0 R
>>
endobj

925 0 obj
<< /Type /MCR /MCID 28 /Pg 81 0 R >>
endobj

926 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 927 0 R ]
  /P 902 0 R
>>
endobj

927 0 obj
<< /Type /MCR /MCID 29 /Pg 81 0 R >>
endobj

928 0 obj
<< /Type /StructElem /S /Span /ActualText ( ) /K [ 929 0 R ] /P 902 0 R >>
endobj

929 0 obj
<< /Type /MCR /MCID 30 /Pg 81 0 R >>
endobj

930 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 931 0 R ]
  /P 902 0 R
>>
endobj

931 0 obj
<< /Type /MCR /MCID 31 /Pg 81 0 R >>
endobj

932 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (s, then the exception is immediately conveyed on the return )
  /K [ 933 0 R ]
  /P 902 0 R
>>
endobj

933 0 obj
<< /Type /MCR /MCID 32 /Pg 81 0 R >>
endobj

934 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 935 0 R ]
  /P 902 0 R
>>
endobj

935 0 obj
<< /Type /MCR /MCID 33 /Pg 81 0 R >>
endobj

936 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 937 0 R ] /P 902 0 R >>
endobj

937 0 obj
<< /Type /MCR /MCID 34 /Pg 81 0 R >>
endobj

938 0 obj
<< /Type /StructElem /S /Code /K [ 939 0 R ] /P 303 0 R >>
endobj

939 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 \) ; \n m y   $ t   =   $ s . s o r t \( \) ; \n $ t . t a p \( & s a y \) ;                       #   O U T P U T :   « 2$$ 3$$ 4$$ 1 0$$ » \n)
  /K [ 940 0 R ]
  /P 938 0 R
>>
endobj

940 0 obj
<< /Type /MCR /MCID 35 /Pg 81 0 R >>
endobj

941 0 obj
<< /Type /StructElem /S /H2 /K [ 942 0 R ] /P 303 0 R >>
endobj

942 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method collate\n)
  /K [ 943 0 R ]
  /P 941 0 R
>>
endobj

943 0 obj
<< /Type /MCR /MCID 36 /Pg 81 0 R >>
endobj

944 0 obj
<< /Type /StructElem /S /Code /K [ 945 0 R ] /P 303 0 R >>
endobj

945 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method collate\(Supply:D:\)\n)
  /K [ 946 0 R ]
  /P 944 0 R
>>
endobj

946 0 obj
<< /Type /MCR /MCID 37 /Pg 81 0 R >>
endobj

947 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 948 0 R 950 0 R 952 0 R 954 0 R 956 0 R 958 0 R 960 0 R 962 0 R 964 0 R 966 0 R 969 0 R ]
  /P 303 0 R
>>
endobj

948 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 949 0 R ]
  /P 947 0 R
>>
endobj

949 0 obj
<< /Type /MCR /MCID 38 /Pg 81 0 R >>
endobj

950 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 951 0 R ]
  /P 947 0 R
>>
endobj

951 0 obj
<< /Type /MCR /MCID 39 /Pg 81 0 R >>
endobj

952 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on. Once that )
  /K [ 953 0 R ]
  /P 947 0 R
>>
endobj

953 0 obj
<< /Type /MCR /MCID 40 /Pg 81 0 R >>
endobj

954 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 955 0 R ]
  /P 947 0 R
>>
endobj

955 0 obj
<< /Type /MCR /MCID 41 /Pg 81 0 R >>
endobj

956 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( emits )
  /K [ 957 0 R ]
  /P 947 0 R
>>
endobj

957 0 obj
<< /Type /MCR /MCID 42 /Pg 81 0 R >>
endobj

958 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 959 0 R ]
  /P 947 0 R
>>
endobj

959 0 obj
<< /Type /MCR /MCID 43 /Pg 81 0 R >>
endobj

960 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, all of the values that it emitted will be sorted taking into account Unicode grapheme characteristics. A new )
  /K [ 961 0 R ]
  /P 947 0 R
>>
endobj

961 0 obj
<< /Type /MCR /MCID 44 /Pg 81 0 R >>
endobj

962 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 963 0 R ]
  /P 947 0 R
>>
endobj

963 0 obj
<< /Type /MCR /MCID 45 /Pg 81 0 R >>
endobj

964 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is returned with the sorted values emitted. See )
  /K [ 965 0 R ]
  /P 947 0 R
>>
endobj

965 0 obj
<< /Type /MCR /MCID 46 /Pg 81 0 R >>
endobj

966 0 obj
<< /Type /StructElem /S /Link /K [ 967 0 R ] /P 947 0 R >>
endobj

967 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Any.collate)
  /K [ 968 0 R ]
  /P 966 0 R
>>
endobj

968 0 obj
<< /Type /MCR /MCID 47 /Pg 81 0 R >>
endobj

969 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( for more details on the collated sort.)
  /K [ 970 0 R ]
  /P 947 0 R
>>
endobj

970 0 obj
<< /Type /MCR /MCID 48 /Pg 81 0 R >>
endobj

971 0 obj
<< /Type /StructElem /S /Code /K [ 972 0 R ] /P 303 0 R >>
endobj

972 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( < ä   a   o   ö > \) ; \n m y   $ t   =   $ s . c o l l a t e \( \) ; \n $ t . t a p \( & s a y \) ;                       #   O U T P U T :   « a$$ ä$$ o$$ ö$$ » \n)
  /K [ 973 0 R ]
  /P 971 0 R
>>
endobj

973 0 obj
<< /Type /MCR /MCID 49 /Pg 81 0 R >>
endobj

974 0 obj
<< /Type /StructElem /S /H2 /K [ 975 0 R ] /P 303 0 R >>
endobj

975 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method reduce\n)
  /K [ 976 0 R ]
  /P 974 0 R
>>
endobj

976 0 obj
<< /Type /MCR /MCID 50 /Pg 81 0 R >>
endobj

977 0 obj
<< /Type /StructElem /S /P /K [ 978 0 R ] /P 303 0 R >>
endobj

978 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as:)
  /K [ 979 0 R ]
  /P 977 0 R
>>
endobj

979 0 obj
<< /Type /MCR /MCID 51 /Pg 81 0 R >>
endobj

980 0 obj
<< /Type /StructElem /S /Code /K [ 981 0 R ] /P 303 0 R >>
endobj

981 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method reduce\(Supply:D: &with --> Supply:D\)\n)
  /K [ 982 0 R ]
  /P 980 0 R
>>
endobj

982 0 obj
<< /Type /MCR /MCID 52 /Pg 81 0 R >>
endobj

983 0 obj
<< /Type /StructElem /S /P /K [ 984 0 R 986 0 R 989 0 R ] /P 303 0 R >>
endobj

984 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a "reducing" supply, which will emit a single value with the same semantics as )
  /K [ 985 0 R ]
  /P 983 0 R
>>
endobj

985 0 obj
<< /Type /MCR /MCID 53 /Pg 81 0 R >>
endobj

986 0 obj
<< /Type /StructElem /S /Link /K [ 987 0 R ] /P 983 0 R >>
endobj

987 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.reduce)
  /K [ 988 0 R ]
  /P 986 0 R
>>
endobj

988 0 obj
<< /Type /MCR /MCID 54 /Pg 81 0 R >>
endobj

989 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 990 0 R ] /P 983 0 R >>
endobj

990 0 obj
<< /Type /MCR /MCID 55 /Pg 81 0 R >>
endobj

991 0 obj
<< /Type /StructElem /S /Code /K [ 992 0 R ] /P 303 0 R >>
endobj

992 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l y   =   S u p p l y . f r o m - l i s t \( 1 . . 5 \) . r e d u c e \( { $ ^ a   +   $ ^ b } \) ; \n $ s u p p l y . t a p \( - >   $ v   {   s a y   " $ v "   } \) ;   #   O U T P U T :   « 1 5$$ » \n)
  /K [ 993 0 R ]
  /P 991 0 R
>>
endobj

993 0 obj
<< /Type /MCR /MCID 56 /Pg 81 0 R >>
endobj

994 0 obj
<< /Type /StructElem /S /H1 /K [ 995 0 R ] /P 303 0 R >>
endobj

995 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Methods that return another Supply\n)
  /K [ 996 0 R ]
  /P 994 0 R
>>
endobj

996 0 obj
<< /Type /MCR /MCID 0 /Pg 103 0 R >>
endobj

997 0 obj
<< /Type /StructElem /S /H2 /K [ 998 0 R ] /P 303 0 R >>
endobj

998 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method from-list\n)
  /K [ 999 0 R ]
  /P 997 0 R
>>
endobj

999 0 obj
<< /Type /MCR /MCID 1 /Pg 103 0 R >>
endobj

1000 0 obj
<< /Type /StructElem /S /Code /K [ 1001 0 R ] /P 303 0 R >>
endobj

1001 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method from-list\(Supply:U: +@values --> Supply:D\)\n)
  /K [ 1002 0 R ]
  /P 1000 0 R
>>
endobj

1002 0 obj
<< /Type /MCR /MCID 2 /Pg 103 0 R >>
endobj

1003 0 obj
<< /Type /StructElem /S /P /K [ 1004 0 R ] /P 303 0 R >>
endobj

1004 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates an on-demand supply from the values passed to this method.)
  /K [ 1005 0 R ]
  /P 1003 0 R
>>
endobj

1005 0 obj
<< /Type /MCR /MCID 3 /Pg 103 0 R >>
endobj

1006 0 obj
<< /Type /StructElem /S /Code /K [ 1007 0 R ] /P 303 0 R >>
endobj

1007 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 1 ,   2 ,   3 \) ; \n $ s . t a p \( & s a y \) ;                       #   O U T P U T :   « 1$$ 2$$ 3$$ » \n)
  /K [ 1008 0 R ]
  /P 1006 0 R
>>
endobj

1008 0 obj
<< /Type /MCR /MCID 4 /Pg 103 0 R >>
endobj

1009 0 obj
<< /Type /StructElem /S /H2 /K [ 1010 0 R ] /P 303 0 R >>
endobj

1010 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method share\n)
  /K [ 1011 0 R ]
  /P 1009 0 R
>>
endobj

1011 0 obj
<< /Type /MCR /MCID 5 /Pg 103 0 R >>
endobj

1012 0 obj
<< /Type /StructElem /S /Code /K [ 1013 0 R ] /P 303 0 R >>
endobj

1013 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method share\(Supply:D: --> Supply:D\)\n)
  /K [ 1014 0 R ]
  /P 1012 0 R
>>
endobj

1014 0 obj
<< /Type /MCR /MCID 6 /Pg 103 0 R >>
endobj

1015 0 obj
<< /Type /StructElem /S /P /K [ 1016 0 R ] /P 303 0 R >>
endobj

1016 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a live supply from an on-demand supply, thus making it possible to share the values of the on-demand supply on multiple taps, instead of each tap seeing its own copy of all values from the on-demand supply.)
  /K [ 1017 0 R ]
  /P 1015 0 R
>>
endobj

1017 0 obj
<< /Type /MCR /MCID 7 /Pg 103 0 R >>
endobj

1018 0 obj
<< /Type /StructElem /S /Code /K [ 1019 0 R ] /P 303 0 R >>
endobj

1019 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (# this says in turn: "first 1" "first 2" "second 2" "first 3" "second 3"\nmy $s = Supply.interval\(1\).share;\n$s.tap: { "first $_".say };\nsleep 1.1;\n$s.tap: { "second $_".say };\nsleep 2\n)
  /K [ 1020 0 R ]
  /P 1018 0 R
>>
endobj

1020 0 obj
<< /Type /MCR /MCID 8 /Pg 103 0 R >>
endobj

1021 0 obj
<< /Type /StructElem /S /H2 /K [ 1022 0 R ] /P 303 0 R >>
endobj

1022 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method flat\n)
  /K [ 1023 0 R ]
  /P 1021 0 R
>>
endobj

1023 0 obj
<< /Type /MCR /MCID 9 /Pg 103 0 R >>
endobj

1024 0 obj
<< /Type /StructElem /S /Code /K [ 1025 0 R ] /P 303 0 R >>
endobj

1025 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method flat\(Supply:D: --> Supply:D\)\n)
  /K [ 1026 0 R ]
  /P 1024 0 R
>>
endobj

1026 0 obj
<< /Type /MCR /MCID 10 /Pg 103 0 R >>
endobj

1027 0 obj
<< /Type /StructElem /S /P /K [ 1028 0 R ] /P 303 0 R >>
endobj

1028 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply on which all of the values seen in the given supply are flattened before being emitted again.)
  /K [ 1029 0 R ]
  /P 1027 0 R
>>
endobj

1029 0 obj
<< /Type /MCR /MCID 11 /Pg 103 0 R >>
endobj

1030 0 obj
<< /Type /StructElem /S /H2 /K [ 1031 0 R ] /P 303 0 R >>
endobj

1031 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method do\n)
  /K [ 1032 0 R ]
  /P 1030 0 R
>>
endobj

1032 0 obj
<< /Type /MCR /MCID 12 /Pg 103 0 R >>
endobj

1033 0 obj
<< /Type /StructElem /S /Code /K [ 1034 0 R ] /P 303 0 R >>
endobj

1034 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method do\(Supply:D: &do --> Supply:D\)\n)
  /K [ 1035 0 R ]
  /P 1033 0 R
>>
endobj

1035 0 obj
<< /Type /MCR /MCID 13 /Pg 103 0 R >>
endobj

1036 0 obj
<< /Type /StructElem /S /P /K [ 1037 0 R ] /P 303 0 R >>
endobj

1037 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply to which all values seen in the given supply, are emitted again. The given code, executed for its side-effects only, is guaranteed to be only executed by one thread at a time.)
  /K [ 1038 0 R ]
  /P 1036 0 R
>>
endobj

1038 0 obj
<< /Type /MCR /MCID 14 /Pg 103 0 R >>
endobj

1039 0 obj
<< /Type /StructElem /S /H2 /K [ 1040 0 R ] /P 303 0 R >>
endobj

1040 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method on-close\n)
  /K [ 1041 0 R ]
  /P 1039 0 R
>>
endobj

1041 0 obj
<< /Type /MCR /MCID 15 /Pg 103 0 R >>
endobj

1042 0 obj
<< /Type /StructElem /S /Code /K [ 1043 0 R ] /P 303 0 R >>
endobj

1043 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method on-close\(Supply:D: &on-close --> Supply:D\)\n)
  /K [ 1044 0 R ]
  /P 1042 0 R
>>
endobj

1044 0 obj
<< /Type /MCR /MCID 16 /Pg 103 0 R >>
endobj

1045 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1046 0 R 1048 0 R 1050 0 R 1052 0 R 1054 0 R 1056 0 R 1059 0 R 1061 0 R 1063 0 R 1065 0 R 1067 0 R 1069 0 R 1071 0 R 1073 0 R 1075 0 R 1077 0 R 1079 0 R 1081 0 R 1084 0 R ]
  /P 303 0 R
>>
endobj

1046 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a new )
  /K [ 1047 0 R ]
  /P 1045 0 R
>>
endobj

1047 0 obj
<< /Type /MCR /MCID 17 /Pg 103 0 R >>
endobj

1048 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1049 0 R ]
  /P 1045 0 R
>>
endobj

1049 0 obj
<< /Type /MCR /MCID 18 /Pg 103 0 R >>
endobj

1050 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( which will run )
  /K [ 1051 0 R ]
  /P 1045 0 R
>>
endobj

1051 0 obj
<< /Type /MCR /MCID 19 /Pg 103 0 R >>
endobj

1052 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&on-close)
  /K [ 1053 0 R ]
  /P 1045 0 R
>>
endobj

1053 0 obj
<< /Type /MCR /MCID 20 /Pg 103 0 R >>
endobj

1054 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( whenever a )
  /K [ 1055 0 R ]
  /P 1045 0 R
>>
endobj

1055 0 obj
<< /Type /MCR /MCID 21 /Pg 103 0 R >>
endobj

1056 0 obj
<< /Type /StructElem /S /Link /K [ 1057 0 R ] /P 1045 0 R >>
endobj

1057 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Tap)
  /K [ 1058 0 R ]
  /P 1056 0 R
>>
endobj

1058 0 obj
<< /Type /MCR /MCID 22 /Pg 103 0 R >>
endobj

1059 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( of that )
  /K [ 1060 0 R ]
  /P 1045 0 R
>>
endobj

1060 0 obj
<< /Type /MCR /MCID 23 /Pg 103 0 R >>
endobj

1061 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1062 0 R ]
  /P 1045 0 R
>>
endobj

1062 0 obj
<< /Type /MCR /MCID 24 /Pg 103 0 R >>
endobj

1063 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is closed. This includes if further operations are chained on to the )
  /K [ 1064 0 R ]
  /P 1045 0 R
>>
endobj

1064 0 obj
<< /Type /MCR /MCID 25 /Pg 103 0 R >>
endobj

1065 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1066 0 R ]
  /P 1045 0 R
>>
endobj

1066 0 obj
<< /Type /MCR /MCID 26 /Pg 103 0 R >>
endobj

1067 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. \(for example, )
  /K [ 1068 0 R ]
  /P 1045 0 R
>>
endobj

1068 0 obj
<< /Type /MCR /MCID 27 /Pg 103 0 R >>
endobj

1069 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($supply.on-close\(&on-close\).map\(*.uc\))
  /K [ 1070 0 R ]
  /P 1045 0 R
>>
endobj

1070 0 obj
<< /Type /MCR /MCID 28 /Pg 103 0 R >>
endobj

1071 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\). When using a )
  /K [ 1072 0 R ]
  /P 1045 0 R
>>
endobj

1072 0 obj
<< /Type /MCR /MCID 29 /Pg 103 0 R >>
endobj

1073 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (react)
  /K [ 1074 0 R ]
  /P 1045 0 R
>>
endobj

1074 0 obj
<< /Type /MCR /MCID 30 /Pg 103 0 R >>
endobj

1075 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( or )
  /K [ 1076 0 R ]
  /P 1045 0 R
>>
endobj

1076 0 obj
<< /Type /MCR /MCID 31 /Pg 103 0 R >>
endobj

1077 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (supply)
  /K [ 1078 0 R ]
  /P 1045 0 R
>>
endobj

1078 0 obj
<< /Type /MCR /MCID 32 /Pg 103 0 R >>
endobj

1079 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( block, using the )
  /K [ 1080 0 R ]
  /P 1045 0 R
>>
endobj

1080 0 obj
<< /Type /MCR /MCID 33 /Pg 103 0 R >>
endobj

1081 0 obj
<< /Type /StructElem /S /Link /K [ 1082 0 R ] /P 1045 0 R >>
endobj

1082 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (CLOSE)
  /K [ 1083 0 R ]
  /P 1081 0 R
>>
endobj

1083 0 obj
<< /Type /MCR /MCID 34 /Pg 103 0 R >>
endobj

1084 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( phaser is usually a better choice.)
  /K [ 1085 0 R ]
  /P 1045 0 R
>>
endobj

1085 0 obj
<< /Type /MCR /MCID 35 /Pg 103 0 R >>
endobj

1086 0 obj
<< /Type /StructElem /S /Code /K [ 1087 0 R ] /P 303 0 R >>
endobj

1087 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l i e r . n e w ; \n m y   $ t a p   =   $ s . S u p p l y . o n - c l o s e \( {   s a y   " T a p   c l o s e d "   } \) . t a p \( \n         - >   $ v   {   s a y   " t h e   v a l u e   i s   $ v "   } , \n         d o n e         = >   {   s a y   " S u p p l y   i s   d o n e "   } , \n         q u i t         = >   - >   $ e x   {   s a y   " S u p p l y   f i n i s h e d   w i t h   e r r o r   $ e x "   } , \n \) ; \n \n $ s . e m i t \( ' R a k u ' \) ; \n $ t a p . c l o s e ;                 #   O U T P U T :   « T a p   c l o s e d$$ » \n)
  /K [ 1088 0 R ]
  /P 1086 0 R
>>
endobj

1088 0 obj
<< /Type /MCR /MCID 0 /Pg 125 0 R >>
endobj

1089 0 obj
<< /Type /StructElem /S /H2 /K [ 1090 0 R ] /P 303 0 R >>
endobj

1090 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method interval\n)
  /K [ 1091 0 R ]
  /P 1089 0 R
>>
endobj

1091 0 obj
<< /Type /MCR /MCID 1 /Pg 125 0 R >>
endobj

1092 0 obj
<< /Type /StructElem /S /Code /K [ 1093 0 R ] /P 303 0 R >>
endobj

1093 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method interval\(Supply:U: $interval, $delay = 0, :$scheduler = $*SCHEDULER --> Supply:D\)\n)
  /K [ 1094 0 R ]
  /P 1092 0 R
>>
endobj

1094 0 obj
<< /Type /MCR /MCID 2 /Pg 125 0 R >>
endobj

1095 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1096 0 R 1098 0 R 1100 0 R 1102 0 R 1104 0 R ]
  /P 303 0 R
>>
endobj

1096 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that emits a value every )
  /K [ 1097 0 R ]
  /P 1095 0 R
>>
endobj

1097 0 obj
<< /Type /MCR /MCID 3 /Pg 125 0 R >>
endobj

1098 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($interval)
  /K [ 1099 0 R ]
  /P 1095 0 R
>>
endobj

1099 0 obj
<< /Type /MCR /MCID 4 /Pg 125 0 R >>
endobj

1100 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( seconds, starting )
  /K [ 1101 0 R ]
  /P 1095 0 R
>>
endobj

1101 0 obj
<< /Type /MCR /MCID 5 /Pg 125 0 R >>
endobj

1102 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($delay)
  /K [ 1103 0 R ]
  /P 1095 0 R
>>
endobj

1103 0 obj
<< /Type /MCR /MCID 6 /Pg 125 0 R >>
endobj

1104 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( seconds from the call. The emitted value is an integer, starting from 0, and is incremented by one for each value emitted.)
  /K [ 1105 0 R ]
  /P 1095 0 R
>>
endobj

1105 0 obj
<< /Type /MCR /MCID 7 /Pg 125 0 R >>
endobj

1106 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1107 0 R 1109 0 R 1111 0 R 1113 0 R 1115 0 R 1117 0 R 1119 0 R ]
  /P 303 0 R
>>
endobj

1107 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Implementations may treat too-small and negative values as lowest resolution they support, possibly warning in such situations; e.g. treating )
  /K [ 1108 0 R ]
  /P 1106 0 R
>>
endobj

1108 0 obj
<< /Type /MCR /MCID 8 /Pg 125 0 R >>
endobj

1109 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (0.0001)
  /K [ 1110 0 R ]
  /P 1106 0 R
>>
endobj

1110 0 obj
<< /Type /MCR /MCID 9 /Pg 125 0 R >>
endobj

1111 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( as )
  /K [ 1112 0 R ]
  /P 1106 0 R
>>
endobj

1112 0 obj
<< /Type /MCR /MCID 10 /Pg 125 0 R >>
endobj

1113 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (0.001)
  /K [ 1114 0 R ]
  /P 1106 0 R
>>
endobj

1114 0 obj
<< /Type /MCR /MCID 11 /Pg 125 0 R >>
endobj

1115 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. For 6.d language version, the minimal value specified is )
  /K [ 1116 0 R ]
  /P 1106 0 R
>>
endobj

1116 0 obj
<< /Type /MCR /MCID 12 /Pg 125 0 R >>
endobj

1117 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (0.001)
  /K [ 1118 0 R ]
  /P 1106 0 R
>>
endobj

1118 0 obj
<< /Type /MCR /MCID 13 /Pg 125 0 R >>
endobj

1119 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1120 0 R ]
  /P 1106 0 R
>>
endobj

1120 0 obj
<< /Type /MCR /MCID 14 /Pg 125 0 R >>
endobj

1121 0 obj
<< /Type /StructElem /S /H2 /K [ 1122 0 R ] /P 303 0 R >>
endobj

1122 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method grep\n)
  /K [ 1123 0 R ]
  /P 1121 0 R
>>
endobj

1123 0 obj
<< /Type /MCR /MCID 15 /Pg 125 0 R >>
endobj

1124 0 obj
<< /Type /StructElem /S /Code /K [ 1125 0 R ] /P 303 0 R >>
endobj

1125 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method grep\(Supply:D: Mu $test --> Supply:D\)\n)
  /K [ 1126 0 R ]
  /P 1124 0 R
>>
endobj

1126 0 obj
<< /Type /MCR /MCID 16 /Pg 125 0 R >>
endobj

1127 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1128 0 R 1130 0 R 1132 0 R ]
  /P 303 0 R
>>
endobj

1128 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new supply that only emits those values from the original supply that smartmatch against )
  /K [ 1129 0 R ]
  /P 1127 0 R
>>
endobj

1129 0 obj
<< /Type /MCR /MCID 17 /Pg 125 0 R >>
endobj

1130 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($test)
  /K [ 1131 0 R ]
  /P 1127 0 R
>>
endobj

1131 0 obj
<< /Type /MCR /MCID 18 /Pg 125 0 R >>
endobj

1132 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1133 0 R ]
  /P 1127 0 R
>>
endobj

1133 0 obj
<< /Type /MCR /MCID 19 /Pg 125 0 R >>
endobj

1134 0 obj
<< /Type /StructElem /S /Code /K [ 1135 0 R ] /P 303 0 R >>
endobj

1135 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $supplier = Supplier.new;\nmy $all      = $supplier.Supply;\nmy $ints     = $all.grep\(Int\);\n$ints.tap\(&say\);\n$supplier.emit\($_\) for 1, 'a string', 3.14159;   # prints only 1\n)
  /K [ 1136 0 R ]
  /P 1134 0 R
>>
endobj

1136 0 obj
<< /Type /MCR /MCID 20 /Pg 125 0 R >>
endobj

1137 0 obj
<< /Type /StructElem /S /H2 /K [ 1138 0 R ] /P 303 0 R >>
endobj

1138 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method map\n)
  /K [ 1139 0 R ]
  /P 1137 0 R
>>
endobj

1139 0 obj
<< /Type /MCR /MCID 21 /Pg 125 0 R >>
endobj

1140 0 obj
<< /Type /StructElem /S /Code /K [ 1141 0 R ] /P 303 0 R >>
endobj

1141 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method map\(Supply:D: &mapper --> Supply:D\)\n)
  /K [ 1142 0 R ]
  /P 1140 0 R
>>
endobj

1142 0 obj
<< /Type /MCR /MCID 22 /Pg 125 0 R >>
endobj

1143 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1144 0 R 1146 0 R 1148 0 R ]
  /P 303 0 R
>>
endobj

1144 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a new supply that maps each value of the given supply through )
  /K [ 1145 0 R ]
  /P 1143 0 R
>>
endobj

1145 0 obj
<< /Type /MCR /MCID 23 /Pg 125 0 R >>
endobj

1146 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&mapper)
  /K [ 1147 0 R ]
  /P 1143 0 R
>>
endobj

1147 0 obj
<< /Type /MCR /MCID 24 /Pg 125 0 R >>
endobj

1148 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and emits it to the new supply.)
  /K [ 1149 0 R ]
  /P 1143 0 R
>>
endobj

1149 0 obj
<< /Type /MCR /MCID 25 /Pg 125 0 R >>
endobj

1150 0 obj
<< /Type /StructElem /S /Code /K [ 1151 0 R ] /P 303 0 R >>
endobj

1151 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $supplier = Supplier.new;\nmy $all      = $supplier.Supply;\nmy $double   = $all.map\(-> $value { $value * 2 }\);\n$double.tap\(&say\);\n$supplier.emit\(4\);           # OUTPUT: «8»\n)
  /K [ 1152 0 R ]
  /P 1150 0 R
>>
endobj

1152 0 obj
<< /Type /MCR /MCID 26 /Pg 125 0 R >>
endobj

1153 0 obj
<< /Type /StructElem /S /H2 /K [ 1154 0 R ] /P 303 0 R >>
endobj

1154 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method batch\n)
  /K [ 1155 0 R ]
  /P 1153 0 R
>>
endobj

1155 0 obj
<< /Type /MCR /MCID 27 /Pg 125 0 R >>
endobj

1156 0 obj
<< /Type /StructElem /S /Code /K [ 1157 0 R ] /P 303 0 R >>
endobj

1157 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method batch\(Supply:D: :$elems, :$seconds --> Supply:D\)\n)
  /K [ 1158 0 R ]
  /P 1156 0 R
>>
endobj

1158 0 obj
<< /Type /MCR /MCID 28 /Pg 125 0 R >>
endobj

1159 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1160 0 R 1162 0 R 1164 0 R 1166 0 R 1168 0 R ]
  /P 303 0 R
>>
endobj

1160 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new supply that batches the values of the given supply by either the number of elements in the batch \(using )
  /K [ 1161 0 R ]
  /P 1159 0 R
>>
endobj

1161 0 obj
<< /Type /MCR /MCID 29 /Pg 125 0 R >>
endobj

1162 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:elems)
  /K [ 1163 0 R ]
  /P 1159 0 R
>>
endobj

1163 0 obj
<< /Type /MCR /MCID 30 /Pg 125 0 R >>
endobj

1164 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\) or a duration \(using )
  /K [ 1165 0 R ]
  /P 1159 0 R
>>
endobj

1165 0 obj
<< /Type /MCR /MCID 31 /Pg 125 0 R >>
endobj

1166 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:seconds)
  /K [ 1167 0 R ]
  /P 1159 0 R
>>
endobj

1167 0 obj
<< /Type /MCR /MCID 32 /Pg 125 0 R >>
endobj

1168 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\) or both. Any remaining values are emitted in a final batch when the supply is done.)
  /K [ 1169 0 R ]
  /P 1159 0 R
>>
endobj

1169 0 obj
<< /Type /MCR /MCID 33 /Pg 125 0 R >>
endobj

1170 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1171 0 R 1173 0 R 1175 0 R 1177 0 R 1179 0 R 1181 0 R 1183 0 R 1185 0 R ]
  /P 303 0 R
>>
endobj

1171 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Note)
  /K [ 1172 0 R ]
  /P 1170 0 R
>>
endobj

1172 0 obj
<< /Type /MCR /MCID 34 /Pg 125 0 R >>
endobj

1173 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (: Since Rakudo version 2020.12, the )
  /K [ 1174 0 R ]
  /P 1170 0 R
>>
endobj

1174 0 obj
<< /Type /MCR /MCID 35 /Pg 125 0 R >>
endobj

1175 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:seconds)
  /K [ 1176 0 R ]
  /P 1170 0 R
>>
endobj

1176 0 obj
<< /Type /MCR /MCID 36 /Pg 125 0 R >>
endobj

1177 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter has a millisecond granularity: for example a 1 millisecond duration could be specified as )
  /K [ 1178 0 R ]
  /P 1170 0 R
>>
endobj

1178 0 obj
<< /Type /MCR /MCID 37 /Pg 125 0 R >>
endobj

1179 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:seconds\(0.001\))
  /K [ 1180 0 R ]
  /P 1170 0 R
>>
endobj

1180 0 obj
<< /Type /MCR /MCID 38 /Pg 125 0 R >>
endobj

1181 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. Before Rakudo version 2020.12, the )
  /K [ 1182 0 R ]
  /P 1170 0 R
>>
endobj

1182 0 obj
<< /Type /MCR /MCID 39 /Pg 125 0 R >>
endobj

1183 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:seconds)
  /K [ 1184 0 R ]
  /P 1170 0 R
>>
endobj

1184 0 obj
<< /Type /MCR /MCID 40 /Pg 125 0 R >>
endobj

1185 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter had a second granularity.)
  /K [ 1186 0 R ]
  /P 1170 0 R
>>
endobj

1186 0 obj
<< /Type /MCR /MCID 41 /Pg 125 0 R >>
endobj

1187 0 obj
<< /Type /StructElem /S /H2 /K [ 1188 0 R ] /P 303 0 R >>
endobj

1188 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method elems\n)
  /K [ 1189 0 R ]
  /P 1187 0 R
>>
endobj

1189 0 obj
<< /Type /MCR /MCID 0 /Pg 139 0 R >>
endobj

1190 0 obj
<< /Type /StructElem /S /Code /K [ 1191 0 R ] /P 303 0 R >>
endobj

1191 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method elems\(Supply:D: $seconds? --> Supply:D\)\n)
  /K [ 1192 0 R ]
  /P 1190 0 R
>>
endobj

1192 0 obj
<< /Type /MCR /MCID 1 /Pg 139 0 R >>
endobj

1193 0 obj
<< /Type /StructElem /S /P /K [ 1194 0 R ] /P 303 0 R >>
endobj

1194 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new supply in which changes to the number of values seen are emitted. It optionally also takes an interval \(in seconds\) if you only want to be updated every so many seconds.)
  /K [ 1195 0 R ]
  /P 1193 0 R
>>
endobj

1195 0 obj
<< /Type /MCR /MCID 2 /Pg 139 0 R >>
endobj

1196 0 obj
<< /Type /StructElem /S /H2 /K [ 1197 0 R ] /P 303 0 R >>
endobj

1197 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method head\n)
  /K [ 1198 0 R ]
  /P 1196 0 R
>>
endobj

1198 0 obj
<< /Type /MCR /MCID 3 /Pg 139 0 R >>
endobj

1199 0 obj
<< /Type /StructElem /S /P /K [ 1200 0 R ] /P 303 0 R >>
endobj

1200 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as:)
  /K [ 1201 0 R ]
  /P 1199 0 R
>>
endobj

1201 0 obj
<< /Type /MCR /MCID 4 /Pg 139 0 R >>
endobj

1202 0 obj
<< /Type /StructElem /S /Code /K [ 1203 0 R ] /P 303 0 R >>
endobj

1203 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method head\(Supply:D:\)\nmulti method head\(Supply:D: Callable:D $limit\)\nmulti method head\(Supply:D: \\limit\)\n)
  /K [ 1204 0 R ]
  /P 1202 0 R
>>
endobj

1204 0 obj
<< /Type /MCR /MCID 5 /Pg 139 0 R >>
endobj

1205 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1206 0 R 1208 0 R 1211 0 R ]
  /P 303 0 R
>>
endobj

1206 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a "head" supply with the same semantics as )
  /K [ 1207 0 R ]
  /P 1205 0 R
>>
endobj

1207 0 obj
<< /Type /MCR /MCID 6 /Pg 139 0 R >>
endobj

1208 0 obj
<< /Type /StructElem /S /Link /K [ 1209 0 R ] /P 1205 0 R >>
endobj

1209 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.head)
  /K [ 1210 0 R ]
  /P 1208 0 R
>>
endobj

1210 0 obj
<< /Type /MCR /MCID 7 /Pg 139 0 R >>
endobj

1211 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1212 0 R ]
  /P 1205 0 R
>>
endobj

1212 0 obj
<< /Type /MCR /MCID 8 /Pg 139 0 R >>
endobj

1213 0 obj
<< /Type /StructElem /S /Code /K [ 1214 0 R ] /P 303 0 R >>
endobj

1214 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 \) ; \n m y   $ h s   =   $ s . h e a d \( 2 \) ; \n $ h s . t a p \( & s a y \) ;                       #   O U T P U T :   « 4$$ 1 0$$ » \n)
  /K [ 1215 0 R ]
  /P 1213 0 R
>>
endobj

1215 0 obj
<< /Type /MCR /MCID 9 /Pg 139 0 R >>
endobj

1216 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1217 0 R 1219 0 R 1221 0 R 1223 0 R ]
  /P 303 0 R
>>
endobj

1217 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Since release 2020.07, A )
  /K [ 1218 0 R ]
  /P 1216 0 R
>>
endobj

1218 0 obj
<< /Type /MCR /MCID 10 /Pg 139 0 R >>
endobj

1219 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (WhateverCode)
  /K [ 1220 0 R ]
  /P 1216 0 R
>>
endobj

1220 0 obj
<< /Type /MCR /MCID 11 /Pg 139 0 R >>
endobj

1221 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( can be used also, again with the same semantics as )
  /K [ 1222 0 R ]
  /P 1216 0 R
>>
endobj

1222 0 obj
<< /Type /MCR /MCID 12 /Pg 139 0 R >>
endobj

1223 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.head)
  /K [ 1224 0 R ]
  /P 1216 0 R
>>
endobj

1224 0 obj
<< /Type /MCR /MCID 13 /Pg 139 0 R >>
endobj

1225 0 obj
<< /Type /StructElem /S /Code /K [ 1226 0 R ] /P 303 0 R >>
endobj

1226 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 ,   1 \) ; \n m y   $ h s   =   $ s . h e a d \(   *   -   2 \) ; \n $ h s . t a p \( & s a y \) ;                       #   O U T P U T :   « 4$$ 1 0$$ 3$$ » \n)
  /K [ 1227 0 R ]
  /P 1225 0 R
>>
endobj

1227 0 obj
<< /Type /MCR /MCID 14 /Pg 139 0 R >>
endobj

1228 0 obj
<< /Type /StructElem /S /H2 /K [ 1229 0 R ] /P 303 0 R >>
endobj

1229 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method tail\n)
  /K [ 1230 0 R ]
  /P 1228 0 R
>>
endobj

1230 0 obj
<< /Type /MCR /MCID 15 /Pg 139 0 R >>
endobj

1231 0 obj
<< /Type /StructElem /S /Code /K [ 1232 0 R ] /P 303 0 R >>
endobj

1232 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method tail\(Supply:D:\)\nmulti method tail\(Supply:D: Callable:D $limit\)\nmulti method tail\(Supply:D: \\limit\)\n)
  /K [ 1233 0 R ]
  /P 1231 0 R
>>
endobj

1233 0 obj
<< /Type /MCR /MCID 16 /Pg 139 0 R >>
endobj

1234 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1235 0 R 1237 0 R 1240 0 R ]
  /P 303 0 R
>>
endobj

1235 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a "tail" supply with the same semantics as )
  /K [ 1236 0 R ]
  /P 1234 0 R
>>
endobj

1236 0 obj
<< /Type /MCR /MCID 17 /Pg 139 0 R >>
endobj

1237 0 obj
<< /Type /StructElem /S /Link /K [ 1238 0 R ] /P 1234 0 R >>
endobj

1238 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.tail)
  /K [ 1239 0 R ]
  /P 1237 0 R
>>
endobj

1239 0 obj
<< /Type /MCR /MCID 18 /Pg 139 0 R >>
endobj

1240 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1241 0 R ]
  /P 1234 0 R
>>
endobj

1241 0 obj
<< /Type /MCR /MCID 19 /Pg 139 0 R >>
endobj

1242 0 obj
<< /Type /StructElem /S /Code /K [ 1243 0 R ] /P 303 0 R >>
endobj

1243 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 \) ; \n m y   $ t s   =   $ s . t a i l \( 2 \) ; \n $ t s . t a p \( & s a y \) ;                       #   O U T P U T :   « 3$$ 2$$ » \n)
  /K [ 1244 0 R ]
  /P 1242 0 R
>>
endobj

1244 0 obj
<< /Type /MCR /MCID 20 /Pg 139 0 R >>
endobj

1245 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1246 0 R 1248 0 R 1250 0 R 1252 0 R 1254 0 R 1256 0 R 1258 0 R 1260 0 R 1262 0 R ]
  /P 303 0 R
>>
endobj

1246 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (You can call )
  /K [ 1247 0 R ]
  /P 1245 0 R
>>
endobj

1247 0 obj
<< /Type /MCR /MCID 21 /Pg 139 0 R >>
endobj

1248 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.tail)
  /K [ 1249 0 R ]
  /P 1245 0 R
>>
endobj

1249 0 obj
<< /Type /MCR /MCID 22 /Pg 139 0 R >>
endobj

1250 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( with )
  /K [ 1251 0 R ]
  /P 1245 0 R
>>
endobj

1251 0 obj
<< /Type /MCR /MCID 23 /Pg 139 0 R >>
endobj

1252 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Whatever)
  /K [ 1253 0 R ]
  /P 1245 0 R
>>
endobj

1253 0 obj
<< /Type /MCR /MCID 24 /Pg 139 0 R >>
endobj

1254 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( or )
  /K [ 1255 0 R ]
  /P 1245 0 R
>>
endobj

1255 0 obj
<< /Type /MCR /MCID 25 /Pg 139 0 R >>
endobj

1256 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Inf)
  /K [ 1257 0 R ]
  /P 1245 0 R
>>
endobj

1257 0 obj
<< /Type /MCR /MCID 26 /Pg 139 0 R >>
endobj

1258 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (; which will return a new supply equivalent to the initial one. Calling it with a )
  /K [ 1259 0 R ]
  /P 1245 0 R
>>
endobj

1259 0 obj
<< /Type /MCR /MCID 27 /Pg 139 0 R >>
endobj

1260 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (WhateverCode)
  /K [ 1261 0 R ]
  /P 1245 0 R
>>
endobj

1261 0 obj
<< /Type /MCR /MCID 28 /Pg 139 0 R >>
endobj

1262 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( will be equivalent to skipping until that number.)
  /K [ 1263 0 R ]
  /P 1245 0 R
>>
endobj

1263 0 obj
<< /Type /MCR /MCID 29 /Pg 139 0 R >>
endobj

1264 0 obj
<< /Type /StructElem /S /Code /K [ 1265 0 R ] /P 303 0 R >>
endobj

1265 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 \) ; \n m y   $ t s   =   $ s . t a i l \(   *   -   2   \) ; \n $ t s . t a p \( & s a y \) ;                       #   O U T P U T :   « 3$$ 2$$ » \n)
  /K [ 1266 0 R ]
  /P 1264 0 R
>>
endobj

1266 0 obj
<< /Type /MCR /MCID 30 /Pg 139 0 R >>
endobj

1267 0 obj
<< /Type /StructElem /S /P /K [ 1268 0 R ] /P 303 0 R >>
endobj

1268 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This feature is only available from the 2020.07 release of Raku.)
  /K [ 1269 0 R ]
  /P 1267 0 R
>>
endobj

1269 0 obj
<< /Type /MCR /MCID 31 /Pg 139 0 R >>
endobj

1270 0 obj
<< /Type /StructElem /S /H2 /K [ 1271 0 R ] /P 303 0 R >>
endobj

1271 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method first\n)
  /K [ 1272 0 R ]
  /P 1270 0 R
>>
endobj

1272 0 obj
<< /Type /MCR /MCID 32 /Pg 139 0 R >>
endobj

1273 0 obj
<< /Type /StructElem /S /Code /K [ 1274 0 R ] /P 303 0 R >>
endobj

1274 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method first\(Supply:D: :$end, |c\)\n)
  /K [ 1275 0 R ]
  /P 1273 0 R
>>
endobj

1275 0 obj
<< /Type /MCR /MCID 33 /Pg 139 0 R >>
endobj

1276 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1277 0 R 1279 0 R 1281 0 R 1283 0 R 1285 0 R 1287 0 R 1289 0 R 1291 0 R 1293 0 R 1295 0 R 1297 0 R ]
  /P 303 0 R
>>
endobj

1277 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This method creates a supply of the first element, or the last element if the optional named parameter )
  /K [ 1278 0 R ]
  /P 1276 0 R
>>
endobj

1278 0 obj
<< /Type /MCR /MCID 34 /Pg 139 0 R >>
endobj

1279 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:end)
  /K [ 1280 0 R ]
  /P 1276 0 R
>>
endobj

1280 0 obj
<< /Type /MCR /MCID 35 /Pg 139 0 R >>
endobj

1281 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is truthy, from a supply created by calling the )
  /K [ 1282 0 R ]
  /P 1276 0 R
>>
endobj

1282 0 obj
<< /Type /MCR /MCID 36 /Pg 139 0 R >>
endobj

1283 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (grep)
  /K [ 1284 0 R ]
  /P 1276 0 R
>>
endobj

1284 0 obj
<< /Type /MCR /MCID 0 /Pg 161 0 R >>
endobj

1285 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method on the invocant, with any remaining arguments as parameters. If there is no remaining argument, this method is equivalent to calling on the invocant, without parameter, the )
  /K [ 1286 0 R ]
  /P 1276 0 R
>>
endobj

1286 0 obj
<< /Type /MCR /MCID 1 /Pg 161 0 R >>
endobj

1287 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (head)
  /K [ 1288 0 R ]
  /P 1276 0 R
>>
endobj

1288 0 obj
<< /Type /MCR /MCID 2 /Pg 161 0 R >>
endobj

1289 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( or the )
  /K [ 1290 0 R ]
  /P 1276 0 R
>>
endobj

1290 0 obj
<< /Type /MCR /MCID 3 /Pg 161 0 R >>
endobj

1291 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (tail)
  /K [ 1292 0 R ]
  /P 1276 0 R
>>
endobj

1292 0 obj
<< /Type /MCR /MCID 4 /Pg 161 0 R >>
endobj

1293 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method, according to named parameter )
  /K [ 1294 0 R ]
  /P 1276 0 R
>>
endobj

1294 0 obj
<< /Type /MCR /MCID 5 /Pg 161 0 R >>
endobj

1295 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:end)
  /K [ 1296 0 R ]
  /P 1276 0 R
>>
endobj

1296 0 obj
<< /Type /MCR /MCID 6 /Pg 161 0 R >>
endobj

1297 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1298 0 R ]
  /P 1276 0 R
>>
endobj

1298 0 obj
<< /Type /MCR /MCID 7 /Pg 161 0 R >>
endobj

1299 0 obj
<< /Type /StructElem /S /Code /K [ 1300 0 R ] /P 303 0 R >>
endobj

1300 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ r a n d   =   s u p p l y   {   e m i t   \( r a n d   ×   1 0 0 \) . f l o o r   f o r   ^"   } ; \n m y   $ f i r s t - p r i m e   =   $ r a n d . f i r s t :   & i s - p r i m e ; \n #   o u t p u t   t h e   f i r s t   p r i m e   f r o m   t h e   e n d l e s s   r a n d o m   n u m b e r   s u p p l y   $ r a n d , \n #   t h e n   t h e   $ f i r s t - p r i m e   s u p p l y   r e a c h e s   i t s   e n d \n $ f i r s t - p r i m e . t a p :   & s a y ; \n)
  /K [ 1301 0 R ]
  /P 1299 0 R
>>
endobj

1301 0 obj
<< /Type /MCR /MCID 8 /Pg 161 0 R >>
endobj

1302 0 obj
<< /Type /StructElem /S /H2 /K [ 1303 0 R ] /P 303 0 R >>
endobj

1303 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method split\n)
  /K [ 1304 0 R ]
  /P 1302 0 R
>>
endobj

1304 0 obj
<< /Type /MCR /MCID 9 /Pg 161 0 R >>
endobj

1305 0 obj
<< /Type /StructElem /S /Code /K [ 1306 0 R ] /P 303 0 R >>
endobj

1306 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method split\(Supply:D: \\delimiter\)\nmulti method split\(Supply:D: \\delimiter, \\limit\)\n)
  /K [ 1307 0 R ]
  /P 1305 0 R
>>
endobj

1307 0 obj
<< /Type /MCR /MCID 10 /Pg 161 0 R >>
endobj

1308 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1309 0 R 1311 0 R 1313 0 R 1315 0 R 1318 0 R 1320 0 R 1322 0 R 1324 0 R 1326 0 R 1328 0 R 1331 0 R ]
  /P 303 0 R
>>
endobj

1309 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This method creates a supply of the values returned by the )
  /K [ 1310 0 R ]
  /P 1308 0 R
>>
endobj

1310 0 obj
<< /Type /MCR /MCID 11 /Pg 161 0 R >>
endobj

1311 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Str.split)
  /K [ 1312 0 R ]
  /P 1308 0 R
>>
endobj

1312 0 obj
<< /Type /MCR /MCID 12 /Pg 161 0 R >>
endobj

1313 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method called on the string collected from the invocant. See )
  /K [ 1314 0 R ]
  /P 1308 0 R
>>
endobj

1314 0 obj
<< /Type /MCR /MCID 13 /Pg 161 0 R >>
endobj

1315 0 obj
<< /Type /StructElem /S /Link /K [ 1316 0 R ] /P 1308 0 R >>
endobj

1316 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Str.split)
  /K [ 1317 0 R ]
  /P 1315 0 R
>>
endobj

1317 0 obj
<< /Type /MCR /MCID 14 /Pg 161 0 R >>
endobj

1318 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( for details on the )
  /K [ 1319 0 R ]
  /P 1308 0 R
>>
endobj

1319 0 obj
<< /Type /MCR /MCID 15 /Pg 161 0 R >>
endobj

1320 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\\delimiter)
  /K [ 1321 0 R ]
  /P 1308 0 R
>>
endobj

1321 0 obj
<< /Type /MCR /MCID 16 /Pg 161 0 R >>
endobj

1322 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( argument as well as available extra named parameters. The created supply can be limited with the )
  /K [ 1323 0 R ]
  /P 1308 0 R
>>
endobj

1323 0 obj
<< /Type /MCR /MCID 17 /Pg 161 0 R >>
endobj

1324 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\\limit)
  /K [ 1325 0 R ]
  /P 1308 0 R
>>
endobj

1325 0 obj
<< /Type /MCR /MCID 18 /Pg 161 0 R >>
endobj

1326 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( argument, see )
  /K [ 1327 0 R ]
  /P 1308 0 R
>>
endobj

1327 0 obj
<< /Type /MCR /MCID 19 /Pg 161 0 R >>
endobj

1328 0 obj
<< /Type /StructElem /S /Link /K [ 1329 0 R ] /P 1308 0 R >>
endobj

1329 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.head)
  /K [ 1330 0 R ]
  /P 1328 0 R
>>
endobj

1330 0 obj
<< /Type /MCR /MCID 20 /Pg 161 0 R >>
endobj

1331 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1332 0 R ]
  /P 1308 0 R
>>
endobj

1332 0 obj
<< /Type /MCR /MCID 21 /Pg 161 0 R >>
endobj

1333 0 obj
<< /Type /StructElem /S /Code /K [ 1334 0 R ] /P 303 0 R >>
endobj

1334 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ w o r d s   =   S u p p l y . f r o m - l i s t \( < H e l l o   W o r l d   F r o m   R a k u ! > \) ; \n m y   $ s   =   $ w o r d s . s p l i t \( /   < ? u p p e r >   / ,   2 ,   : s k i p - e m p t y \) ; \n $ s . t a p \( & s a y \) ;   #   O U T P U T :   « H e l l o$$ W o r l d$$ » \n)
  /K [ 1335 0 R ]
  /P 1333 0 R
>>
endobj

1335 0 obj
<< /Type /MCR /MCID 22 /Pg 161 0 R >>
endobj

1336 0 obj
<< /Type /StructElem /S /H2 /K [ 1337 0 R ] /P 303 0 R >>
endobj

1337 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method rotate\n)
  /K [ 1338 0 R ]
  /P 1336 0 R
>>
endobj

1338 0 obj
<< /Type /MCR /MCID 23 /Pg 161 0 R >>
endobj

1339 0 obj
<< /Type /StructElem /S /Code /K [ 1340 0 R ] /P 303 0 R >>
endobj

1340 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method rotate\(Supply:D: $rotate = 1\)\n)
  /K [ 1341 0 R ]
  /P 1339 0 R
>>
endobj

1341 0 obj
<< /Type /MCR /MCID 24 /Pg 161 0 R >>
endobj

1342 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1343 0 R 1345 0 R 1347 0 R ]
  /P 303 0 R
>>
endobj

1343 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply with elements rotated to the left when )
  /K [ 1344 0 R ]
  /P 1342 0 R
>>
endobj

1344 0 obj
<< /Type /MCR /MCID 25 /Pg 161 0 R >>
endobj

1345 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($rotate)
  /K [ 1346 0 R ]
  /P 1342 0 R
>>
endobj

1346 0 obj
<< /Type /MCR /MCID 26 /Pg 161 0 R >>
endobj

1347 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is positive or to the right otherwise, in which case the invocant is tapped on before a new supply is returned.)
  /K [ 1348 0 R ]
  /P 1342 0 R
>>
endobj

1348 0 obj
<< /Type /MCR /MCID 27 /Pg 161 0 R >>
endobj

1349 0 obj
<< /Type /StructElem /S /Code /K [ 1350 0 R ] /P 303 0 R >>
endobj

1350 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l y   =   S u p p l y . f r o m - l i s t \( < a   b   c   d   e > \) . r o t a t e \( 2 \) ; \n $ s u p p l y . t a p \( & s a y \) ;   #   O U T P U T :   « c$$ d$$ e$$ a$$ b$$ » \n)
  /K [ 1351 0 R ]
  /P 1349 0 R
>>
endobj

1351 0 obj
<< /Type /MCR /MCID 28 /Pg 161 0 R >>
endobj

1352 0 obj
<< /Type /StructElem /S /P /K [ 1353 0 R 1355 0 R ] /P 303 0 R >>
endobj

1353 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Note)
  /K [ 1354 0 R ]
  /P 1352 0 R
>>
endobj

1354 0 obj
<< /Type /MCR /MCID 29 /Pg 161 0 R >>
endobj

1355 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (: Available since Rakudo 2020.06.)
  /K [ 1356 0 R ]
  /P 1352 0 R
>>
endobj

1356 0 obj
<< /Type /MCR /MCID 30 /Pg 161 0 R >>
endobj

1357 0 obj
<< /Type /StructElem /S /H2 /K [ 1358 0 R ] /P 303 0 R >>
endobj

1358 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method rotor\n)
  /K [ 1359 0 R ]
  /P 1357 0 R
>>
endobj

1359 0 obj
<< /Type /MCR /MCID 31 /Pg 161 0 R >>
endobj

1360 0 obj
<< /Type /StructElem /S /Code /K [ 1361 0 R ] /P 303 0 R >>
endobj

1361 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method rotor\(Supply:D: @cycle --> Supply:D\)\n)
  /K [ 1362 0 R ]
  /P 1360 0 R
>>
endobj

1362 0 obj
<< /Type /MCR /MCID 32 /Pg 161 0 R >>
endobj

1363 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1364 0 R 1366 0 R 1369 0 R ]
  /P 303 0 R
>>
endobj

1364 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a "rotoring" supply with the same semantics as )
  /K [ 1365 0 R ]
  /P 1363 0 R
>>
endobj

1365 0 obj
<< /Type /MCR /MCID 33 /Pg 161 0 R >>
endobj

1366 0 obj
<< /Type /StructElem /S /Link /K [ 1367 0 R ] /P 1363 0 R >>
endobj

1367 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.rotor)
  /K [ 1368 0 R ]
  /P 1366 0 R
>>
endobj

1368 0 obj
<< /Type /MCR /MCID 34 /Pg 161 0 R >>
endobj

1369 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1370 0 R ]
  /P 1363 0 R
>>
endobj

1370 0 obj
<< /Type /MCR /MCID 35 /Pg 161 0 R >>
endobj

1371 0 obj
<< /Type /StructElem /S /H2 /K [ 1372 0 R ] /P 303 0 R >>
endobj

1372 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method delayed\n)
  /K [ 1373 0 R ]
  /P 1371 0 R
>>
endobj

1373 0 obj
<< /Type /MCR /MCID 36 /Pg 161 0 R >>
endobj

1374 0 obj
<< /Type /StructElem /S /Code /K [ 1375 0 R ] /P 303 0 R >>
endobj

1375 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method delayed\(Supply:D: $seconds, :$scheduler = $*SCHEDULER --> Supply:D\)\n)
  /K [ 1376 0 R ]
  /P 1374 0 R
>>
endobj

1376 0 obj
<< /Type /MCR /MCID 37 /Pg 161 0 R >>
endobj

1377 0 obj
<< /Type /StructElem /S /P /K [ 1378 0 R ] /P 303 0 R >>
endobj

1378 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new supply in which all values flowing through the given supply are emitted, but with the given delay in seconds.)
  /K [ 1379 0 R ]
  /P 1377 0 R
>>
endobj

1379 0 obj
<< /Type /MCR /MCID 38 /Pg 161 0 R >>
endobj

1380 0 obj
<< /Type /StructElem /S /H2 /K [ 1381 0 R ] /P 303 0 R >>
endobj

1381 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method throttle\n)
  /K [ 1382 0 R ]
  /P 1380 0 R
>>
endobj

1382 0 obj
<< /Type /MCR /MCID 39 /Pg 161 0 R >>
endobj

1383 0 obj
<< /Type /StructElem /S /P /K [ 1384 0 R ] /P 303 0 R >>
endobj

1384 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as)
  /K [ 1385 0 R ]
  /P 1383 0 R
>>
endobj

1385 0 obj
<< /Type /MCR /MCID 40 /Pg 161 0 R >>
endobj

1386 0 obj
<< /Type /StructElem /S /Code /K [ 1387 0 R ] /P 303 0 R >>
endobj

1387 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method throttle\(Supply:D:\n      Int\(\)  $elems,\n      Real\(\) $seconds,\n      Real\(\) $delay  = 0,\n      :$scheduler    = $*SCHEDULER,\n      :$control,\n      :$status,\n      :$bleed,\n      :$vent-at,\n    \)\n)
  /K [ 1388 0 R ]
  /P 1386 0 R
>>
endobj

1388 0 obj
<< /Type /MCR /MCID 0 /Pg 184 0 R >>
endobj

1389 0 obj
<< /Type /StructElem /S /Code /K [ 1390 0 R ] /P 303 0 R >>
endobj

1390 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method throttle\(Supply:D:\n      Int\(\)  $elems,\n      Callable:D $process,\n      Real\(\) $delay = 0,\n      :$scheduler   = $*SCHEDULER,\n      :$control,\n      :$status,\n      :$bleed,\n      :$vent-at,\n    \)\n)
  /K [ 1391 0 R ]
  /P 1389 0 R
>>
endobj

1391 0 obj
<< /Type /MCR /MCID 1 /Pg 184 0 R >>
endobj

1392 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1393 0 R 1395 0 R 1397 0 R ]
  /P 303 0 R
>>
endobj

1393 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Arguments to )
  /K [ 1394 0 R ]
  /P 1392 0 R
>>
endobj

1394 0 obj
<< /Type /MCR /MCID 2 /Pg 184 0 R >>
endobj

1395 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.throttle)
  /K [ 1396 0 R ]
  /P 1392 0 R
>>
endobj

1396 0 obj
<< /Type /MCR /MCID 3 /Pg 184 0 R >>
endobj

1397 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( are defined as follows:)
  /K [ 1398 0 R ]
  /P 1392 0 R
>>
endobj

1398 0 obj
<< /Type /MCR /MCID 4 /Pg 184 0 R >>
endobj

1399 0 obj
<< /Type /StructElem /S /Table /K [ 1400 0 R 1408 0 R ] /P 303 0 R >>
endobj

1400 0 obj
<< /Type /StructElem /S /THead /K [ 1401 0 R ] /P 1399 0 R >>
endobj

1401 0 obj
<< /Type /StructElem /S /TR /K [ 1402 0 R 1405 0 R ] /P 1400 0 R >>
endobj

1402 0 obj
<< /Type /StructElem /S /TH /K [ 1403 0 R ] /P 1401 0 R >>
endobj

1403 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Argument)
  /K [ 1404 0 R ]
  /P 1402 0 R
>>
endobj

1404 0 obj
<< /Type /MCR /MCID 5 /Pg 184 0 R >>
endobj

1405 0 obj
<< /Type /StructElem /S /TH /K [ 1406 0 R ] /P 1401 0 R >>
endobj

1406 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Meaning)
  /K [ 1407 0 R ]
  /P 1405 0 R
>>
endobj

1407 0 obj
<< /Type /MCR /MCID 6 /Pg 184 0 R >>
endobj

1408 0 obj
<<
  /Type /StructElem
  /S /TBody
  /K [ 1409 0 R 1416 0 R 1423 0 R 1430 0 R 1437 0 R 1444 0 R 1451 0 R 1458 0 R ]
  /P 1399 0 R
>>
endobj

1409 0 obj
<< /Type /StructElem /S /TR /K [ 1410 0 R 1413 0 R ] /P 1408 0 R >>
endobj

1410 0 obj
<< /Type /StructElem /S /TD /K [ 1411 0 R ] /P 1409 0 R >>
endobj

1411 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($limit,)
  /K [ 1412 0 R ]
  /P 1410 0 R
>>
endobj

1412 0 obj
<< /Type /MCR /MCID 7 /Pg 184 0 R >>
endobj

1413 0 obj
<< /Type /StructElem /S /TD /K [ 1414 0 R ] /P 1409 0 R >>
endobj

1414 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (values / time or simultaneous processing)
  /K [ 1415 0 R ]
  /P 1413 0 R
>>
endobj

1415 0 obj
<< /Type /MCR /MCID 8 /Pg 184 0 R >>
endobj

1416 0 obj
<< /Type /StructElem /S /TR /K [ 1417 0 R 1420 0 R ] /P 1408 0 R >>
endobj

1417 0 obj
<< /Type /StructElem /S /TD /K [ 1418 0 R ] /P 1416 0 R >>
endobj

1418 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($seconds or $process)
  /K [ 1419 0 R ]
  /P 1417 0 R
>>
endobj

1419 0 obj
<< /Type /MCR /MCID 9 /Pg 184 0 R >>
endobj

1420 0 obj
<< /Type /StructElem /S /TD /K [ 1421 0 R ] /P 1416 0 R >>
endobj

1421 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (time-unit / code to process simultaneously)
  /K [ 1422 0 R ]
  /P 1420 0 R
>>
endobj

1422 0 obj
<< /Type /MCR /MCID 10 /Pg 184 0 R >>
endobj

1423 0 obj
<< /Type /StructElem /S /TR /K [ 1424 0 R 1427 0 R ] /P 1408 0 R >>
endobj

1424 0 obj
<< /Type /StructElem /S /TD /K [ 1425 0 R ] /P 1423 0 R >>
endobj

1425 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($delay = 0,)
  /K [ 1426 0 R ]
  /P 1424 0 R
>>
endobj

1426 0 obj
<< /Type /MCR /MCID 11 /Pg 184 0 R >>
endobj

1427 0 obj
<< /Type /StructElem /S /TD /K [ 1428 0 R ] /P 1423 0 R >>
endobj

1428 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (initial delay before starting, in seconds)
  /K [ 1429 0 R ]
  /P 1427 0 R
>>
endobj

1429 0 obj
<< /Type /MCR /MCID 12 /Pg 184 0 R >>
endobj

1430 0 obj
<< /Type /StructElem /S /TR /K [ 1431 0 R 1434 0 R ] /P 1408 0 R >>
endobj

1431 0 obj
<< /Type /StructElem /S /TD /K [ 1432 0 R ] /P 1430 0 R >>
endobj

1432 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:$control,)
  /K [ 1433 0 R ]
  /P 1431 0 R
>>
endobj

1433 0 obj
<< /Type /MCR /MCID 13 /Pg 184 0 R >>
endobj

1434 0 obj
<< /Type /StructElem /S /TD /K [ 1435 0 R ] /P 1430 0 R >>
endobj

1435 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (supply to emit control messages on \(optional\))
  /K [ 1436 0 R ]
  /P 1434 0 R
>>
endobj

1436 0 obj
<< /Type /MCR /MCID 14 /Pg 184 0 R >>
endobj

1437 0 obj
<< /Type /StructElem /S /TR /K [ 1438 0 R 1441 0 R ] /P 1408 0 R >>
endobj

1438 0 obj
<< /Type /StructElem /S /TD /K [ 1439 0 R ] /P 1437 0 R >>
endobj

1439 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:$status,)
  /K [ 1440 0 R ]
  /P 1438 0 R
>>
endobj

1440 0 obj
<< /Type /MCR /MCID 15 /Pg 184 0 R >>
endobj

1441 0 obj
<< /Type /StructElem /S /TD /K [ 1442 0 R ] /P 1437 0 R >>
endobj

1442 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (supply to tap status messages from \(optional\))
  /K [ 1443 0 R ]
  /P 1441 0 R
>>
endobj

1443 0 obj
<< /Type /MCR /MCID 16 /Pg 184 0 R >>
endobj

1444 0 obj
<< /Type /StructElem /S /TR /K [ 1445 0 R 1448 0 R ] /P 1408 0 R >>
endobj

1445 0 obj
<< /Type /StructElem /S /TD /K [ 1446 0 R ] /P 1444 0 R >>
endobj

1446 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:$bleed,)
  /K [ 1447 0 R ]
  /P 1445 0 R
>>
endobj

1447 0 obj
<< /Type /MCR /MCID 17 /Pg 184 0 R >>
endobj

1448 0 obj
<< /Type /StructElem /S /TD /K [ 1449 0 R ] /P 1444 0 R >>
endobj

1449 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (supply to bleed messages to \(optional\))
  /K [ 1450 0 R ]
  /P 1448 0 R
>>
endobj

1450 0 obj
<< /Type /MCR /MCID 18 /Pg 184 0 R >>
endobj

1451 0 obj
<< /Type /StructElem /S /TR /K [ 1452 0 R 1455 0 R ] /P 1408 0 R >>
endobj

1452 0 obj
<< /Type /StructElem /S /TD /K [ 1453 0 R ] /P 1451 0 R >>
endobj

1453 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:$vent-at,)
  /K [ 1454 0 R ]
  /P 1452 0 R
>>
endobj

1454 0 obj
<< /Type /MCR /MCID 19 /Pg 184 0 R >>
endobj

1455 0 obj
<< /Type /StructElem /S /TD /K [ 1456 0 R ] /P 1451 0 R >>
endobj

1456 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (bleed when so many buffered \(optional\))
  /K [ 1457 0 R ]
  /P 1455 0 R
>>
endobj

1457 0 obj
<< /Type /MCR /MCID 20 /Pg 184 0 R >>
endobj

1458 0 obj
<< /Type /StructElem /S /TR /K [ 1459 0 R 1462 0 R ] /P 1408 0 R >>
endobj

1459 0 obj
<< /Type /StructElem /S /TD /K [ 1460 0 R ] /P 1458 0 R >>
endobj

1460 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:$scheduler,)
  /K [ 1461 0 R ]
  /P 1459 0 R
>>
endobj

1461 0 obj
<< /Type /MCR /MCID 21 /Pg 184 0 R >>
endobj

1462 0 obj
<< /Type /StructElem /S /TD /K [ 1463 0 R ] /P 1458 0 R >>
endobj

1463 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (scheduler to use, default $*SCHEDULER)
  /K [ 1464 0 R ]
  /P 1462 0 R
>>
endobj

1464 0 obj
<< /Type /MCR /MCID 22 /Pg 184 0 R >>
endobj

1465 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1466 0 R 1468 0 R 1470 0 R ]
  /P 303 0 R
>>
endobj

1466 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This method produces a )
  /K [ 1467 0 R ]
  /P 1465 0 R
>>
endobj

1467 0 obj
<< /Type /MCR /MCID 23 /Pg 184 0 R >>
endobj

1468 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1469 0 R ]
  /P 1465 0 R
>>
endobj

1469 0 obj
<< /Type /MCR /MCID 24 /Pg 184 0 R >>
endobj

1470 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( from a given one, but makes sure the number of messages passed through is limited.)
  /K [ 1471 0 R ]
  /P 1465 0 R
>>
endobj

1471 0 obj
<< /Type /MCR /MCID 25 /Pg 184 0 R >>
endobj

1472 0 obj
<< /Type /StructElem /S /P /K [ 1473 0 R ] /P 303 0 R >>
endobj

1473 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (It has two modes of operation: per time-unit or by maximum number of executions of a block of code: this is determined by the type of the second positional parameter.)
  /K [ 1474 0 R ]
  /P 1472 0 R
>>
endobj

1474 0 obj
<< /Type /MCR /MCID 26 /Pg 184 0 R >>
endobj

1475 0 obj
<< /Type /StructElem /S /P /K [ 1476 0 R ] /P 303 0 R >>
endobj

1476 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The first positional parameter specifies the limit that should be applied.)
  /K [ 1477 0 R ]
  /P 1475 0 R
>>
endobj

1477 0 obj
<< /Type /MCR /MCID 27 /Pg 184 0 R >>
endobj

1478 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1479 0 R 1481 0 R 1483 0 R 1485 0 R 1487 0 R 1489 0 R 1491 0 R ]
  /P 303 0 R
>>
endobj

1479 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (If the second positional parameter is a )
  /K [ 1480 0 R ]
  /P 1478 0 R
>>
endobj

1480 0 obj
<< /Type /MCR /MCID 28 /Pg 184 0 R >>
endobj

1481 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Callable)
  /K [ 1482 0 R ]
  /P 1478 0 R
>>
endobj

1482 0 obj
<< /Type /MCR /MCID 29 /Pg 184 0 R >>
endobj

1483 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, then the limit indicates the maximum number of parallel processes executing the Callable, which is given the value that was received. The emitted values in this case will be the )
  /K [ 1484 0 R ]
  /P 1478 0 R
>>
endobj

1484 0 obj
<< /Type /MCR /MCID 30 /Pg 184 0 R >>
endobj

1485 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Promise)
  /K [ 1486 0 R ]
  /P 1478 0 R
>>
endobj

1486 0 obj
<< /Type /MCR /MCID 31 /Pg 184 0 R >>
endobj

1487 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (s that were obtained from )
  /K [ 1488 0 R ]
  /P 1478 0 R
>>
endobj

1488 0 obj
<< /Type /MCR /MCID 32 /Pg 184 0 R >>
endobj

1489 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (start)
  /K [ 1490 0 R ]
  /P 1478 0 R
>>
endobj

1490 0 obj
<< /Type /MCR /MCID 33 /Pg 184 0 R >>
endobj

1491 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (ing the Callable.)
  /K [ 1492 0 R ]
  /P 1478 0 R
>>
endobj

1492 0 obj
<< /Type /MCR /MCID 34 /Pg 184 0 R >>
endobj

1493 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1494 0 R 1496 0 R 1498 0 R ]
  /P 303 0 R
>>
endobj

1494 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (If the second positional parameter is a real number, it is interpreted as the time-unit \(in seconds\). If you specify )
  /K [ 1495 0 R ]
  /P 1493 0 R
>>
endobj

1495 0 obj
<< /Type /MCR /MCID 35 /Pg 184 0 R >>
endobj

1496 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.1)
  /K [ 1497 0 R ]
  /P 1493 0 R
>>
endobj

1497 0 obj
<< /Type /MCR /MCID 36 /Pg 184 0 R >>
endobj

1498 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( as the value, then it makes sure you don't exceed the limit for every tenth of a second.)
  /K [ 1499 0 R ]
  /P 1493 0 R
>>
endobj

1499 0 obj
<< /Type /MCR /MCID 37 /Pg 184 0 R >>
endobj

1500 0 obj
<< /Type /StructElem /S /P /K [ 1501 0 R ] /P 303 0 R >>
endobj

1501 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (If the limit is exceeded, then incoming messages are buffered until there is room to pass on / execute the Callable again.)
  /K [ 1502 0 R ]
  /P 1500 0 R
>>
endobj

1502 0 obj
<< /Type /MCR /MCID 38 /Pg 184 0 R >>
endobj

1503 0 obj
<< /Type /StructElem /S /P /K [ 1504 0 R ] /P 303 0 R >>
endobj

1504 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The third positional parameter is optional: it indicates the number of seconds the throttle will wait before passing on any values.)
  /K [ 1505 0 R ]
  /P 1503 0 R
>>
endobj

1505 0 obj
<< /Type /MCR /MCID 39 /Pg 184 0 R >>
endobj

1506 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1507 0 R 1509 0 R 1511 0 R ]
  /P 303 0 R
>>
endobj

1507 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 1508 0 R ]
  /P 1506 0 R
>>
endobj

1508 0 obj
<< /Type /MCR /MCID 40 /Pg 184 0 R >>
endobj

1509 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:control)
  /K [ 1510 0 R ]
  /P 1506 0 R
>>
endobj

1510 0 obj
<< /Type /MCR /MCID 41 /Pg 184 0 R >>
endobj

1511 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( named parameter optionally specifies a Supply that you can use to control the throttle while it is in operation. Messages that can be sent, are strings in the form of "key:value". Please see below for the types of messages that you can send to control the throttle.)
  /K [ 1512 0 R ]
  /P 1506 0 R
>>
endobj

1512 0 obj
<< /Type /MCR /MCID 42 /Pg 184 0 R >>
endobj

1513 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1514 0 R 1516 0 R 1518 0 R 1520 0 R 1523 0 R ]
  /P 303 0 R
>>
endobj

1514 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 1515 0 R ]
  /P 1513 0 R
>>
endobj

1515 0 obj
<< /Type /MCR /MCID 43 /Pg 184 0 R >>
endobj

1516 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:status)
  /K [ 1517 0 R ]
  /P 1513 0 R
>>
endobj

1517 0 obj
<< /Type /MCR /MCID 44 /Pg 184 0 R >>
endobj

1518 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( named parameter optionally specifies a Supply that will receive any status messages. If specified, it will at least send one status message after the original Supply is exhausted. See )
  /K [ 1519 0 R ]
  /P 1513 0 R
>>
endobj

1519 0 obj
<< /Type /MCR /MCID 45 /Pg 184 0 R >>
endobj

1520 0 obj
<< /Type /StructElem /S /Link /K [ 1521 0 R ] /P 1513 0 R >>
endobj

1521 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (status message)
  /K [ 1522 0 R ]
  /P 1520 0 R
>>
endobj

1522 0 obj
<< /Type /MCR /MCID 46 /Pg 184 0 R >>
endobj

1523 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( below.)
  /K [ 1524 0 R ]
  /P 1513 0 R
>>
endobj

1524 0 obj
<< /Type /MCR /MCID 47 /Pg 184 0 R >>
endobj

1525 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1526 0 R 1528 0 R 1530 0 R 1532 0 R 1534 0 R 1536 0 R 1538 0 R ]
  /P 303 0 R
>>
endobj

1526 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 1527 0 R ]
  /P 1525 0 R
>>
endobj

1527 0 obj
<< /Type /MCR /MCID 48 /Pg 184 0 R >>
endobj

1528 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1529 0 R ]
  /P 1525 0 R
>>
endobj

1529 0 obj
<< /Type /MCR /MCID 49 /Pg 184 0 R >>
endobj

1530 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( named parameter optionally specifies a Supply that will receive any values that were either explicitly bled \(with the )
  /K [ 1531 0 R ]
  /P 1525 0 R
>>
endobj

1531 0 obj
<< /Type /MCR /MCID 50 /Pg 184 0 R >>
endobj

1532 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (bleed)
  /K [ 1533 0 R ]
  /P 1525 0 R
>>
endobj

1533 0 obj
<< /Type /MCR /MCID 51 /Pg 184 0 R >>
endobj

1534 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( control message\), or automatically bled \(if there's a )
  /K [ 1535 0 R ]
  /P 1525 0 R
>>
endobj

1535 0 obj
<< /Type /MCR /MCID 52 /Pg 184 0 R >>
endobj

1536 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (vent-at)
  /K [ 1537 0 R ]
  /P 1525 0 R
>>
endobj

1537 0 obj
<< /Type /MCR /MCID 53 /Pg 184 0 R >>
endobj

1538 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( active\).)
  /K [ 1539 0 R ]
  /P 1525 0 R
>>
endobj

1539 0 obj
<< /Type /MCR /MCID 54 /Pg 184 0 R >>
endobj

1540 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1541 0 R 1543 0 R 1545 0 R 1547 0 R 1549 0 R 1551 0 R 1553 0 R ]
  /P 303 0 R
>>
endobj

1541 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 1542 0 R ]
  /P 1540 0 R
>>
endobj

1542 0 obj
<< /Type /MCR /MCID 55 /Pg 184 0 R >>
endobj

1543 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:vent-at)
  /K [ 1544 0 R ]
  /P 1540 0 R
>>
endobj

1544 0 obj
<< /Type /MCR /MCID 56 /Pg 184 0 R >>
endobj

1545 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( named parameter indicates the number of values that may be buffered before any additional value will be routed to the )
  /K [ 1546 0 R ]
  /P 1540 0 R
>>
endobj

1546 0 obj
<< /Type /MCR /MCID 57 /Pg 184 0 R >>
endobj

1547 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1548 0 R ]
  /P 1540 0 R
>>
endobj

1548 0 obj
<< /Type /MCR /MCID 58 /Pg 184 0 R >>
endobj

1549 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply. Defaults to 0 if not specified \(causing no automatic bleeding to happen\). Only makes sense if a )
  /K [ 1550 0 R ]
  /P 1540 0 R
>>
endobj

1550 0 obj
<< /Type /MCR /MCID 59 /Pg 184 0 R >>
endobj

1551 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1552 0 R ]
  /P 1540 0 R
>>
endobj

1552 0 obj
<< /Type /MCR /MCID 60 /Pg 184 0 R >>
endobj

1553 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply has also been specified.)
  /K [ 1554 0 R ]
  /P 1540 0 R
>>
endobj

1554 0 obj
<< /Type /MCR /MCID 61 /Pg 184 0 R >>
endobj

1555 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1556 0 R 1558 0 R 1560 0 R 1562 0 R 1564 0 R ]
  /P 303 0 R
>>
endobj

1556 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 1557 0 R ]
  /P 1555 0 R
>>
endobj

1557 0 obj
<< /Type /MCR /MCID 62 /Pg 184 0 R >>
endobj

1558 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:scheduler)
  /K [ 1559 0 R ]
  /P 1555 0 R
>>
endobj

1559 0 obj
<< /Type /MCR /MCID 63 /Pg 184 0 R >>
endobj

1560 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( named parameter indicates the scheduler to be used. Defaults to )
  /K [ 1561 0 R ]
  /P 1555 0 R
>>
endobj

1561 0 obj
<< /Type /MCR /MCID 64 /Pg 184 0 R >>
endobj

1562 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($*SCHEDULER)
  /K [ 1563 0 R ]
  /P 1555 0 R
>>
endobj

1563 0 obj
<< /Type /MCR /MCID 65 /Pg 184 0 R >>
endobj

1564 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1565 0 R ]
  /P 1555 0 R
>>
endobj

1565 0 obj
<< /Type /MCR /MCID 66 /Pg 184 0 R >>
endobj

1566 0 obj
<< /Type /StructElem /S /H3 /K [ 1567 0 R ] /P 303 0 R >>
endobj

1567 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (control messages\n)
  /K [ 1568 0 R ]
  /P 1566 0 R
>>
endobj

1568 0 obj
<< /Type /MCR /MCID 0 /Pg 192 0 R >>
endobj

1569 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1570 0 R 1572 0 R 1574 0 R ]
  /P 303 0 R
>>
endobj

1570 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (These messages can be sent to the )
  /K [ 1571 0 R ]
  /P 1569 0 R
>>
endobj

1571 0 obj
<< /Type /MCR /MCID 1 /Pg 192 0 R >>
endobj

1572 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:control)
  /K [ 1573 0 R ]
  /P 1569 0 R
>>
endobj

1573 0 obj
<< /Type /MCR /MCID 2 /Pg 192 0 R >>
endobj

1574 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply. A control message consists of a string of the form "key: value", e.g. "limit: 4".)
  /K [ 1575 0 R ]
  /P 1569 0 R
>>
endobj

1575 0 obj
<< /Type /MCR /MCID 3 /Pg 192 0 R >>
endobj

1576 0 obj
<< /Type /StructElem /S /LI /K [ 1577 0 R 1580 0 R ] /P 303 0 R >>
endobj

1577 0 obj
<< /Type /StructElem /S /Lbl /K [ 1578 0 R ] /P 1576 0 R >>
endobj

1578 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1579 0 R ]
  /P 1577 0 R
>>
endobj

1579 0 obj
<< /Type /MCR /MCID 4 /Pg 192 0 R >>
endobj

1580 0 obj
<< /Type /StructElem /S /LBody /K [ 1581 0 R ] /P 1576 0 R >>
endobj

1581 0 obj
<< /Type /StructElem /S /P /K [ 1582 0 R ] /P 1580 0 R >>
endobj

1582 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (limit)
  /K [ 1583 0 R ]
  /P 1581 0 R
>>
endobj

1583 0 obj
<< /Type /MCR /MCID 5 /Pg 192 0 R >>
endobj

1584 0 obj
<< /Type /StructElem /S /P /K [ 1585 0 R ] /P 303 0 R >>
endobj

1585 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Change the number of messages \(as initially given in the first positional\) to the value given.)
  /K [ 1586 0 R ]
  /P 1584 0 R
>>
endobj

1586 0 obj
<< /Type /MCR /MCID 6 /Pg 192 0 R >>
endobj

1587 0 obj
<< /Type /StructElem /S /LI /K [ 1588 0 R 1591 0 R ] /P 303 0 R >>
endobj

1588 0 obj
<< /Type /StructElem /S /Lbl /K [ 1589 0 R ] /P 1587 0 R >>
endobj

1589 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1590 0 R ]
  /P 1588 0 R
>>
endobj

1590 0 obj
<< /Type /MCR /MCID 7 /Pg 192 0 R >>
endobj

1591 0 obj
<< /Type /StructElem /S /LBody /K [ 1592 0 R ] /P 1587 0 R >>
endobj

1592 0 obj
<< /Type /StructElem /S /P /K [ 1593 0 R ] /P 1591 0 R >>
endobj

1593 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (bleed)
  /K [ 1594 0 R ]
  /P 1592 0 R
>>
endobj

1594 0 obj
<< /Type /MCR /MCID 8 /Pg 192 0 R >>
endobj

1595 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1596 0 R 1598 0 R 1600 0 R ]
  /P 303 0 R
>>
endobj

1596 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Route the given number of buffered messages to the )
  /K [ 1597 0 R ]
  /P 1595 0 R
>>
endobj

1597 0 obj
<< /Type /MCR /MCID 9 /Pg 192 0 R >>
endobj

1598 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1599 0 R ]
  /P 1595 0 R
>>
endobj

1599 0 obj
<< /Type /MCR /MCID 10 /Pg 192 0 R >>
endobj

1600 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply.)
  /K [ 1601 0 R ]
  /P 1595 0 R
>>
endobj

1601 0 obj
<< /Type /MCR /MCID 11 /Pg 192 0 R >>
endobj

1602 0 obj
<< /Type /StructElem /S /LI /K [ 1603 0 R 1606 0 R ] /P 303 0 R >>
endobj

1603 0 obj
<< /Type /StructElem /S /Lbl /K [ 1604 0 R ] /P 1602 0 R >>
endobj

1604 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1605 0 R ]
  /P 1603 0 R
>>
endobj

1605 0 obj
<< /Type /MCR /MCID 12 /Pg 192 0 R >>
endobj

1606 0 obj
<< /Type /StructElem /S /LBody /K [ 1607 0 R ] /P 1602 0 R >>
endobj

1607 0 obj
<< /Type /StructElem /S /P /K [ 1608 0 R ] /P 1606 0 R >>
endobj

1608 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (vent-at)
  /K [ 1609 0 R ]
  /P 1607 0 R
>>
endobj

1609 0 obj
<< /Type /MCR /MCID 13 /Pg 192 0 R >>
endobj

1610 0 obj
<< /Type /StructElem /S /P /K [ 1611 0 R ] /P 303 0 R >>
endobj

1611 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Change the maximum number of buffered values before automatic bleeding takes place. If the value is lower than before, will cause immediate rerouting of buffered values to match the new maximum.)
  /K [ 1612 0 R ]
  /P 1610 0 R
>>
endobj

1612 0 obj
<< /Type /MCR /MCID 14 /Pg 192 0 R >>
endobj

1613 0 obj
<< /Type /StructElem /S /LI /K [ 1614 0 R 1617 0 R ] /P 303 0 R >>
endobj

1614 0 obj
<< /Type /StructElem /S /Lbl /K [ 1615 0 R ] /P 1613 0 R >>
endobj

1615 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1616 0 R ]
  /P 1614 0 R
>>
endobj

1616 0 obj
<< /Type /MCR /MCID 15 /Pg 192 0 R >>
endobj

1617 0 obj
<< /Type /StructElem /S /LBody /K [ 1618 0 R ] /P 1613 0 R >>
endobj

1618 0 obj
<< /Type /StructElem /S /P /K [ 1619 0 R ] /P 1617 0 R >>
endobj

1619 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (status)
  /K [ 1620 0 R ]
  /P 1618 0 R
>>
endobj

1620 0 obj
<< /Type /MCR /MCID 16 /Pg 192 0 R >>
endobj

1621 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1622 0 R 1624 0 R 1626 0 R ]
  /P 303 0 R
>>
endobj

1622 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Send a status message to the )
  /K [ 1623 0 R ]
  /P 1621 0 R
>>
endobj

1623 0 obj
<< /Type /MCR /MCID 17 /Pg 192 0 R >>
endobj

1624 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:status)
  /K [ 1625 0 R ]
  /P 1621 0 R
>>
endobj

1625 0 obj
<< /Type /MCR /MCID 18 /Pg 192 0 R >>
endobj

1626 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply with the given id.)
  /K [ 1627 0 R ]
  /P 1621 0 R
>>
endobj

1627 0 obj
<< /Type /MCR /MCID 19 /Pg 192 0 R >>
endobj

1628 0 obj
<< /Type /StructElem /S /H3 /K [ 1629 0 R ] /P 303 0 R >>
endobj

1629 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (status message\n)
  /K [ 1630 0 R ]
  /P 1628 0 R
>>
endobj

1630 0 obj
<< /Type /MCR /MCID 20 /Pg 192 0 R >>
endobj

1631 0 obj
<< /Type /StructElem /S /P /K [ 1632 0 R ] /P 303 0 R >>
endobj

1632 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The status return message is a hash with the following keys:)
  /K [ 1633 0 R ]
  /P 1631 0 R
>>
endobj

1633 0 obj
<< /Type /MCR /MCID 21 /Pg 192 0 R >>
endobj

1634 0 obj
<< /Type /StructElem /S /LI /K [ 1635 0 R 1638 0 R ] /P 303 0 R >>
endobj

1635 0 obj
<< /Type /StructElem /S /Lbl /K [ 1636 0 R ] /P 1634 0 R >>
endobj

1636 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1637 0 R ]
  /P 1635 0 R
>>
endobj

1637 0 obj
<< /Type /MCR /MCID 22 /Pg 192 0 R >>
endobj

1638 0 obj
<< /Type /StructElem /S /LBody /K [ 1639 0 R ] /P 1634 0 R >>
endobj

1639 0 obj
<< /Type /StructElem /S /P /K [ 1640 0 R ] /P 1638 0 R >>
endobj

1640 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (allowed)
  /K [ 1641 0 R ]
  /P 1639 0 R
>>
endobj

1641 0 obj
<< /Type /MCR /MCID 23 /Pg 192 0 R >>
endobj

1642 0 obj
<< /Type /StructElem /S /P /K [ 1643 0 R ] /P 303 0 R >>
endobj

1643 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The current number of messages / callables that is still allowed to be passed / executed.)
  /K [ 1644 0 R ]
  /P 1642 0 R
>>
endobj

1644 0 obj
<< /Type /MCR /MCID 24 /Pg 192 0 R >>
endobj

1645 0 obj
<< /Type /StructElem /S /LI /K [ 1646 0 R 1649 0 R ] /P 303 0 R >>
endobj

1646 0 obj
<< /Type /StructElem /S /Lbl /K [ 1647 0 R ] /P 1645 0 R >>
endobj

1647 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1648 0 R ]
  /P 1646 0 R
>>
endobj

1648 0 obj
<< /Type /MCR /MCID 25 /Pg 192 0 R >>
endobj

1649 0 obj
<< /Type /StructElem /S /LBody /K [ 1650 0 R ] /P 1645 0 R >>
endobj

1650 0 obj
<< /Type /StructElem /S /P /K [ 1651 0 R ] /P 1649 0 R >>
endobj

1651 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (bled)
  /K [ 1652 0 R ]
  /P 1650 0 R
>>
endobj

1652 0 obj
<< /Type /MCR /MCID 26 /Pg 192 0 R >>
endobj

1653 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1654 0 R 1656 0 R 1658 0 R ]
  /P 303 0 R
>>
endobj

1654 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The number of messages routed to the )
  /K [ 1655 0 R ]
  /P 1653 0 R
>>
endobj

1655 0 obj
<< /Type /MCR /MCID 27 /Pg 192 0 R >>
endobj

1656 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1657 0 R ]
  /P 1653 0 R
>>
endobj

1657 0 obj
<< /Type /MCR /MCID 28 /Pg 192 0 R >>
endobj

1658 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply.)
  /K [ 1659 0 R ]
  /P 1653 0 R
>>
endobj

1659 0 obj
<< /Type /MCR /MCID 29 /Pg 192 0 R >>
endobj

1660 0 obj
<< /Type /StructElem /S /LI /K [ 1661 0 R 1664 0 R ] /P 303 0 R >>
endobj

1661 0 obj
<< /Type /StructElem /S /Lbl /K [ 1662 0 R ] /P 1660 0 R >>
endobj

1662 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1663 0 R ]
  /P 1661 0 R
>>
endobj

1663 0 obj
<< /Type /MCR /MCID 30 /Pg 192 0 R >>
endobj

1664 0 obj
<< /Type /StructElem /S /LBody /K [ 1665 0 R ] /P 1660 0 R >>
endobj

1665 0 obj
<< /Type /StructElem /S /P /K [ 1666 0 R ] /P 1664 0 R >>
endobj

1666 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (buffered)
  /K [ 1667 0 R ]
  /P 1665 0 R
>>
endobj

1667 0 obj
<< /Type /MCR /MCID 31 /Pg 192 0 R >>
endobj

1668 0 obj
<< /Type /StructElem /S /P /K [ 1669 0 R ] /P 303 0 R >>
endobj

1669 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The number of messages currently buffered because of overflow.)
  /K [ 1670 0 R ]
  /P 1668 0 R
>>
endobj

1670 0 obj
<< /Type /MCR /MCID 32 /Pg 192 0 R >>
endobj

1671 0 obj
<< /Type /StructElem /S /LI /K [ 1672 0 R 1675 0 R ] /P 303 0 R >>
endobj

1672 0 obj
<< /Type /StructElem /S /Lbl /K [ 1673 0 R ] /P 1671 0 R >>
endobj

1673 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1674 0 R ]
  /P 1672 0 R
>>
endobj

1674 0 obj
<< /Type /MCR /MCID 33 /Pg 192 0 R >>
endobj

1675 0 obj
<< /Type /StructElem /S /LBody /K [ 1676 0 R ] /P 1671 0 R >>
endobj

1676 0 obj
<< /Type /StructElem /S /P /K [ 1677 0 R ] /P 1675 0 R >>
endobj

1677 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (emitted)
  /K [ 1678 0 R ]
  /P 1676 0 R
>>
endobj

1678 0 obj
<< /Type /MCR /MCID 34 /Pg 192 0 R >>
endobj

1679 0 obj
<< /Type /StructElem /S /P /K [ 1680 0 R ] /P 303 0 R >>
endobj

1680 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The number of messages emitted \(passed through\).)
  /K [ 1681 0 R ]
  /P 1679 0 R
>>
endobj

1681 0 obj
<< /Type /MCR /MCID 35 /Pg 192 0 R >>
endobj

1682 0 obj
<< /Type /StructElem /S /LI /K [ 1683 0 R 1686 0 R ] /P 303 0 R >>
endobj

1683 0 obj
<< /Type /StructElem /S /Lbl /K [ 1684 0 R ] /P 1682 0 R >>
endobj

1684 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1685 0 R ]
  /P 1683 0 R
>>
endobj

1685 0 obj
<< /Type /MCR /MCID 36 /Pg 192 0 R >>
endobj

1686 0 obj
<< /Type /StructElem /S /LBody /K [ 1687 0 R ] /P 1682 0 R >>
endobj

1687 0 obj
<< /Type /StructElem /S /P /K [ 1688 0 R ] /P 1686 0 R >>
endobj

1688 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (id)
  /K [ 1689 0 R ]
  /P 1687 0 R
>>
endobj

1689 0 obj
<< /Type /MCR /MCID 37 /Pg 192 0 R >>
endobj

1690 0 obj
<< /Type /StructElem /S /P /K [ 1691 0 R ] /P 303 0 R >>
endobj

1691 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The id of this status message \(a monotonically increasing number\). Handy if you want to log status messages.)
  /K [ 1692 0 R ]
  /P 1690 0 R
>>
endobj

1692 0 obj
<< /Type /MCR /MCID 38 /Pg 192 0 R >>
endobj

1693 0 obj
<< /Type /StructElem /S /LI /K [ 1694 0 R 1697 0 R ] /P 303 0 R >>
endobj

1694 0 obj
<< /Type /StructElem /S /Lbl /K [ 1695 0 R ] /P 1693 0 R >>
endobj

1695 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1696 0 R ]
  /P 1694 0 R
>>
endobj

1696 0 obj
<< /Type /MCR /MCID 39 /Pg 192 0 R >>
endobj

1697 0 obj
<< /Type /StructElem /S /LBody /K [ 1698 0 R ] /P 1693 0 R >>
endobj

1698 0 obj
<< /Type /StructElem /S /P /K [ 1699 0 R ] /P 1697 0 R >>
endobj

1699 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (limit)
  /K [ 1700 0 R ]
  /P 1698 0 R
>>
endobj

1700 0 obj
<< /Type /MCR /MCID 40 /Pg 192 0 R >>
endobj

1701 0 obj
<< /Type /StructElem /S /P /K [ 1702 0 R ] /P 303 0 R >>
endobj

1702 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The current limit that is being applied.)
  /K [ 1703 0 R ]
  /P 1701 0 R
>>
endobj

1703 0 obj
<< /Type /MCR /MCID 41 /Pg 192 0 R >>
endobj

1704 0 obj
<< /Type /StructElem /S /LI /K [ 1705 0 R 1708 0 R ] /P 303 0 R >>
endobj

1705 0 obj
<< /Type /StructElem /S /Lbl /K [ 1706 0 R ] /P 1704 0 R >>
endobj

1706 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1707 0 R ]
  /P 1705 0 R
>>
endobj

1707 0 obj
<< /Type /MCR /MCID 42 /Pg 192 0 R >>
endobj

1708 0 obj
<< /Type /StructElem /S /LBody /K [ 1709 0 R ] /P 1704 0 R >>
endobj

1709 0 obj
<< /Type /StructElem /S /P /K [ 1710 0 R ] /P 1708 0 R >>
endobj

1710 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (vent-at)
  /K [ 1711 0 R ]
  /P 1709 0 R
>>
endobj

1711 0 obj
<< /Type /MCR /MCID 43 /Pg 192 0 R >>
endobj

1712 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1713 0 R 1715 0 R 1717 0 R ]
  /P 303 0 R
>>
endobj

1713 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The maximum number of messages that may be buffered before they're automatically re-routed to the )
  /K [ 1714 0 R ]
  /P 1712 0 R
>>
endobj

1714 0 obj
<< /Type /MCR /MCID 44 /Pg 192 0 R >>
endobj

1715 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1716 0 R ]
  /P 1712 0 R
>>
endobj

1716 0 obj
<< /Type /MCR /MCID 45 /Pg 192 0 R >>
endobj

1717 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply.)
  /K [ 1718 0 R ]
  /P 1712 0 R
>>
endobj

1718 0 obj
<< /Type /MCR /MCID 46 /Pg 192 0 R >>
endobj

1719 0 obj
<< /Type /StructElem /S /H3 /K [ 1720 0 R ] /P 303 0 R >>
endobj

1720 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Examples\n)
  /K [ 1721 0 R ]
  /P 1719 0 R
>>
endobj

1721 0 obj
<< /Type /MCR /MCID 47 /Pg 192 0 R >>
endobj

1722 0 obj
<< /Type /StructElem /S /P /K [ 1723 0 R ] /P 303 0 R >>
endobj

1723 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Have a simple piece of code announce when it starts running asynchronously, wait a random amount of time, then announce when it is done. Do this 6 times, but don't let more than 3 of them run simultaneously.)
  /K [ 1724 0 R ]
  /P 1722 0 R
>>
endobj

1724 0 obj
<< /Type /MCR /MCID 48 /Pg 192 0 R >>
endobj

1725 0 obj
<< /Type /StructElem /S /Code /K [ 1726 0 R ] /P 303 0 R >>
endobj

1726 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $s = Supply.from-list\(^6\);  # set up supply\nmy $t = $s.throttle: 3,        # only allow 3 at a time\n{                              # code block to run\n    say "running $_";          # announce we've started\n    sleep rand;                # wait some random time\n    say "done $_"              # announce we're done\n}                              # don't need ; because } at end of line\n$t.wait;                       # wait for the supply to be done\n)
  /K [ 1727 0 R ]
  /P 1725 0 R
>>
endobj

1727 0 obj
<< /Type /MCR /MCID 0 /Pg 196 0 R >>
endobj

1728 0 obj
<< /Type /StructElem /S /P /K [ 1729 0 R ] /P 303 0 R >>
endobj

1729 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (and the result of one run will be:)
  /K [ 1730 0 R ]
  /P 1728 0 R
>>
endobj

1730 0 obj
<< /Type /MCR /MCID 1 /Pg 196 0 R >>
endobj

1731 0 obj
<< /Type /StructElem /S /Code /K [ 1732 0 R ] /P 303 0 R >>
endobj

1732 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (running 0\nrunning 1\nrunning 2\ndone 2\nrunning 3\ndone 1\nrunning 4\ndone 4\nrunning 5\ndone 0\ndone 3\ndone 5\n)
  /K [ 1733 0 R ]
  /P 1731 0 R
>>
endobj

1733 0 obj
<< /Type /MCR /MCID 2 /Pg 196 0 R >>
endobj

1734 0 obj
<< /Type /StructElem /S /H2 /K [ 1735 0 R ] /P 303 0 R >>
endobj

1735 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method stable\n)
  /K [ 1736 0 R ]
  /P 1734 0 R
>>
endobj

1736 0 obj
<< /Type /MCR /MCID 3 /Pg 196 0 R >>
endobj

1737 0 obj
<< /Type /StructElem /S /Code /K [ 1738 0 R ] /P 303 0 R >>
endobj

1738 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method stable\(Supply:D: $time, :$scheduler = $*SCHEDULER --> Supply:D\)\n)
  /K [ 1739 0 R ]
  /P 1737 0 R
>>
endobj

1739 0 obj
<< /Type /MCR /MCID 4 /Pg 196 0 R >>
endobj

1740 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1741 0 R 1743 0 R 1745 0 R 1747 0 R 1749 0 R ]
  /P 303 0 R
>>
endobj

1741 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new supply that only passes on a value flowing through the given supply if it wasn't superseded by another value in the given )
  /K [ 1742 0 R ]
  /P 1740 0 R
>>
endobj

1742 0 obj
<< /Type /MCR /MCID 5 /Pg 196 0 R >>
endobj

1743 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($time)
  /K [ 1744 0 R ]
  /P 1740 0 R
>>
endobj

1744 0 obj
<< /Type /MCR /MCID 6 /Pg 196 0 R >>
endobj

1745 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(in seconds\). Optionally uses another scheduler than the default scheduler, using the )
  /K [ 1746 0 R ]
  /P 1740 0 R
>>
endobj

1746 0 obj
<< /Type /MCR /MCID 7 /Pg 196 0 R >>
endobj

1747 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:scheduler)
  /K [ 1748 0 R ]
  /P 1740 0 R
>>
endobj

1748 0 obj
<< /Type /MCR /MCID 8 /Pg 196 0 R >>
endobj

1749 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter.)
  /K [ 1750 0 R ]
  /P 1740 0 R
>>
endobj

1750 0 obj
<< /Type /MCR /MCID 9 /Pg 196 0 R >>
endobj

1751 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1752 0 R 1754 0 R 1756 0 R 1758 0 R 1760 0 R 1762 0 R 1764 0 R 1766 0 R 1768 0 R ]
  /P 303 0 R
>>
endobj

1752 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (To clarify the above, if, during the timeout )
  /K [ 1753 0 R ]
  /P 1751 0 R
>>
endobj

1753 0 obj
<< /Type /MCR /MCID 10 /Pg 196 0 R >>
endobj

1754 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($time)
  /K [ 1755 0 R ]
  /P 1751 0 R
>>
endobj

1755 0 obj
<< /Type /MCR /MCID 11 /Pg 196 0 R >>
endobj

1756 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, additional values are emitted to the )
  /K [ 1757 0 R ]
  /P 1751 0 R
>>
endobj

1757 0 obj
<< /Type /MCR /MCID 12 /Pg 196 0 R >>
endobj

1758 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 1759 0 R ]
  /P 1751 0 R
>>
endobj

1759 0 obj
<< /Type /MCR /MCID 13 /Pg 196 0 R >>
endobj

1760 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( all but the last one will be thrown away. Each time an additional value is emitted to the )
  /K [ 1761 0 R ]
  /P 1751 0 R
>>
endobj

1761 0 obj
<< /Type /MCR /MCID 14 /Pg 196 0 R >>
endobj

1762 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 1763 0 R ]
  /P 1751 0 R
>>
endobj

1763 0 obj
<< /Type /MCR /MCID 15 /Pg 196 0 R >>
endobj

1764 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, during the timeout, )
  /K [ 1765 0 R ]
  /P 1751 0 R
>>
endobj

1765 0 obj
<< /Type /MCR /MCID 16 /Pg 196 0 R >>
endobj

1766 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($time)
  /K [ 1767 0 R ]
  /P 1751 0 R
>>
endobj

1767 0 obj
<< /Type /MCR /MCID 17 /Pg 196 0 R >>
endobj

1768 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is reset.)
  /K [ 1769 0 R ]
  /P 1751 0 R
>>
endobj

1769 0 obj
<< /Type /MCR /MCID 18 /Pg 196 0 R >>
endobj

1770 0 obj
<< /Type /StructElem /S /P /K [ 1771 0 R ] /P 303 0 R >>
endobj

1771 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This method can be quite useful when handling UI input, where it is not desired to perform an operation until the user has stopped typing for a while rather than on every keystroke.)
  /K [ 1772 0 R ]
  /P 1770 0 R
>>
endobj

1772 0 obj
<< /Type /MCR /MCID 19 /Pg 196 0 R >>
endobj

1773 0 obj
<< /Type /StructElem /S /Code /K [ 1774 0 R ] /P 303 0 R >>
endobj

1774 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l i e r   =   S u p p l i e r . n e w ; \n m y   $ s u p p l y 1   =   $ s u p p l i e r . S u p p l y ; \n $ s u p p l y 1 . t a p \( - >   $ v   {   s a y   " S u p p l y 1   g o t :   $ v "   } \) ; \n $ s u p p l i e r . e m i t \( 4 2 \) ; \n \n m y   S u p p l y   $ s u p p l y 2   =   $ s u p p l y 1 . s t a b l e \( 5 \) ; \n $ s u p p l y 2 . t a p \( - >   $ v   {   s a y   " S u p p l y 2   g o t :   $ v "   } \) ; \n s l e e p \( 3 \) ; \n $ s u p p l i e r . e m i t \( 4 3 \) ;     #   w i l l   n o t   b e   s e e n   b y   $ s u p p l y 2   b u t   w i l l   r e s e t   $ t i m e \n $ s u p p l i e r . e m i t \( 4 4 \) ; \n s l e e p \( 1 0 \) ; \n #   O U T P U T :   « S u p p l y 1   g o t :   4 2$$ S u p p l y 1   g o t :   4 3$$ S u p p l y 1   g o t :   4 4$$ S u p p l y 2   g o t :   4 4$$ » \n)
  /K [ 1775 0 R ]
  /P 1773 0 R
>>
endobj

1775 0 obj
<< /Type /MCR /MCID 20 /Pg 196 0 R >>
endobj

1776 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1777 0 R 1779 0 R 1781 0 R 1783 0 R 1785 0 R 1787 0 R 1789 0 R 1791 0 R 1793 0 R 1795 0 R 1797 0 R ]
  /P 303 0 R
>>
endobj

1777 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (As can be seen above, )
  /K [ 1778 0 R ]
  /P 1776 0 R
>>
endobj

1778 0 obj
<< /Type /MCR /MCID 21 /Pg 196 0 R >>
endobj

1779 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($supply1)
  /K [ 1780 0 R ]
  /P 1776 0 R
>>
endobj

1780 0 obj
<< /Type /MCR /MCID 22 /Pg 196 0 R >>
endobj

1781 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( received all values emitted to the )
  /K [ 1782 0 R ]
  /P 1776 0 R
>>
endobj

1782 0 obj
<< /Type /MCR /MCID 23 /Pg 196 0 R >>
endobj

1783 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 1784 0 R ]
  /P 1776 0 R
>>
endobj

1784 0 obj
<< /Type /MCR /MCID 24 /Pg 196 0 R >>
endobj

1785 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( while )
  /K [ 1786 0 R ]
  /P 1776 0 R
>>
endobj

1786 0 obj
<< /Type /MCR /MCID 25 /Pg 196 0 R >>
endobj

1787 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($supply2)
  /K [ 1788 0 R ]
  /P 1776 0 R
>>
endobj

1788 0 obj
<< /Type /MCR /MCID 26 /Pg 196 0 R >>
endobj

1789 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( only received one value. The 43 was thrown away because it was followed by another 'last' value 44 which was retained and sent to )
  /K [ 1790 0 R ]
  /P 1776 0 R
>>
endobj

1790 0 obj
<< /Type /MCR /MCID 27 /Pg 196 0 R >>
endobj

1791 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($supply2)
  /K [ 1792 0 R ]
  /P 1776 0 R
>>
endobj

1792 0 obj
<< /Type /MCR /MCID 28 /Pg 196 0 R >>
endobj

1793 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( after approximately eight seconds, this due to the fact that the timeout )
  /K [ 1794 0 R ]
  /P 1776 0 R
>>
endobj

1794 0 obj
<< /Type /MCR /MCID 29 /Pg 196 0 R >>
endobj

1795 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($time)
  /K [ 1796 0 R ]
  /P 1776 0 R
>>
endobj

1796 0 obj
<< /Type /MCR /MCID 30 /Pg 196 0 R >>
endobj

1797 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( was reset after three seconds.)
  /K [ 1798 0 R ]
  /P 1776 0 R
>>
endobj

1798 0 obj
<< /Type /MCR /MCID 31 /Pg 196 0 R >>
endobj

1799 0 obj
<< /Type /StructElem /S /H2 /K [ 1800 0 R ] /P 303 0 R >>
endobj

1800 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method produce\n)
  /K [ 1801 0 R ]
  /P 1799 0 R
>>
endobj

1801 0 obj
<< /Type /MCR /MCID 32 /Pg 196 0 R >>
endobj

1802 0 obj
<< /Type /StructElem /S /Code /K [ 1803 0 R ] /P 303 0 R >>
endobj

1803 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method produce\(Supply:D: &with --> Supply:D\)\n)
  /K [ 1804 0 R ]
  /P 1802 0 R
>>
endobj

1804 0 obj
<< /Type /MCR /MCID 33 /Pg 196 0 R >>
endobj

1805 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1806 0 R 1808 0 R 1811 0 R ]
  /P 303 0 R
>>
endobj

1806 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a "producing" supply with the same semantics as )
  /K [ 1807 0 R ]
  /P 1805 0 R
>>
endobj

1807 0 obj
<< /Type /MCR /MCID 34 /Pg 196 0 R >>
endobj

1808 0 obj
<< /Type /StructElem /S /Link /K [ 1809 0 R ] /P 1805 0 R >>
endobj

1809 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.produce)
  /K [ 1810 0 R ]
  /P 1808 0 R
>>
endobj

1810 0 obj
<< /Type /MCR /MCID 35 /Pg 196 0 R >>
endobj

1811 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1812 0 R ]
  /P 1805 0 R
>>
endobj

1812 0 obj
<< /Type /MCR /MCID 36 /Pg 196 0 R >>
endobj

1813 0 obj
<< /Type /StructElem /S /Code /K [ 1814 0 R ] /P 303 0 R >>
endobj

1814 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l y   =   S u p p l y . f r o m - l i s t \( 1 . . 5 \) . p r o d u c e \( { $ ^ a   +   $ ^ b } \) ; \n $ s u p p l y . t a p \( - >   $ v   {   s a y   " $ v "   } \) ;   #   O U T P U T :   « 1$$ 3$$ 6$$ 1 0$$ 1 5$$ » \n)
  /K [ 1815 0 R ]
  /P 1813 0 R
>>
endobj

1815 0 obj
<< /Type /MCR /MCID 37 /Pg 196 0 R >>
endobj

1816 0 obj
<< /Type /StructElem /S /H2 /K [ 1817 0 R ] /P 303 0 R >>
endobj

1817 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method lines\n)
  /K [ 1818 0 R ]
  /P 1816 0 R
>>
endobj

1818 0 obj
<< /Type /MCR /MCID 0 /Pg 210 0 R >>
endobj

1819 0 obj
<< /Type /StructElem /S /Code /K [ 1820 0 R ] /P 303 0 R >>
endobj

1820 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method lines\(Supply:D: :$chomp = True --> Supply:D\)\n)
  /K [ 1821 0 R ]
  /P 1819 0 R
>>
endobj

1821 0 obj
<< /Type /MCR /MCID 1 /Pg 210 0 R >>
endobj

1822 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1823 0 R 1825 0 R 1827 0 R 1829 0 R 1831 0 R ]
  /P 303 0 R
>>
endobj

1823 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that will emit the characters coming in line by line from a supply that's usually created by some asynchronous I/O operation. The optional )
  /K [ 1824 0 R ]
  /P 1822 0 R
>>
endobj

1824 0 obj
<< /Type /MCR /MCID 2 /Pg 210 0 R >>
endobj

1825 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:chomp)
  /K [ 1826 0 R ]
  /P 1822 0 R
>>
endobj

1826 0 obj
<< /Type /MCR /MCID 3 /Pg 210 0 R >>
endobj

1827 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter indicates whether to remove line separators: the default is )
  /K [ 1828 0 R ]
  /P 1822 0 R
>>
endobj

1828 0 obj
<< /Type /MCR /MCID 4 /Pg 210 0 R >>
endobj

1829 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (True)
  /K [ 1830 0 R ]
  /P 1822 0 R
>>
endobj

1830 0 obj
<< /Type /MCR /MCID 5 /Pg 210 0 R >>
endobj

1831 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1832 0 R ]
  /P 1822 0 R
>>
endobj

1832 0 obj
<< /Type /MCR /MCID 6 /Pg 210 0 R >>
endobj

1833 0 obj
<< /Type /StructElem /S /H2 /K [ 1834 0 R ] /P 303 0 R >>
endobj

1834 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method words\n)
  /K [ 1835 0 R ]
  /P 1833 0 R
>>
endobj

1835 0 obj
<< /Type /MCR /MCID 7 /Pg 210 0 R >>
endobj

1836 0 obj
<< /Type /StructElem /S /Code /K [ 1837 0 R ] /P 303 0 R >>
endobj

1837 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method words\(Supply:D: --> Supply:D\)\n)
  /K [ 1838 0 R ]
  /P 1836 0 R
>>
endobj

1838 0 obj
<< /Type /MCR /MCID 8 /Pg 210 0 R >>
endobj

1839 0 obj
<< /Type /StructElem /S /P /K [ 1840 0 R ] /P 303 0 R >>
endobj

1840 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that will emit the characters coming in word for word from a supply that's usually created by some asynchronous I/O operation.)
  /K [ 1841 0 R ]
  /P 1839 0 R
>>
endobj

1841 0 obj
<< /Type /MCR /MCID 9 /Pg 210 0 R >>
endobj

1842 0 obj
<< /Type /StructElem /S /Code /K [ 1843 0 R ] /P 303 0 R >>
endobj

1843 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( " H e l l o   W o r d ! " . c o m b \) ; \n m y   $ w s   =   $ s . w o r d s ; \n $ w s . t a p \( & s a y \) ;                       #   O U T P U T :   « H e l l o$$ W o r d !$$ » \n)
  /K [ 1844 0 R ]
  /P 1842 0 R
>>
endobj

1844 0 obj
<< /Type /MCR /MCID 10 /Pg 210 0 R >>
endobj

1845 0 obj
<< /Type /StructElem /S /H2 /K [ 1846 0 R ] /P 303 0 R >>
endobj

1846 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method unique\n)
  /K [ 1847 0 R ]
  /P 1845 0 R
>>
endobj

1847 0 obj
<< /Type /MCR /MCID 11 /Pg 210 0 R >>
endobj

1848 0 obj
<< /Type /StructElem /S /Code /K [ 1849 0 R ] /P 303 0 R >>
endobj

1849 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method unique\(Supply:D: :$as, :$with, :$expires --> Supply:D\)\n)
  /K [ 1850 0 R ]
  /P 1848 0 R
>>
endobj

1850 0 obj
<< /Type /MCR /MCID 12 /Pg 210 0 R >>
endobj

1851 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1852 0 R 1854 0 R 1856 0 R 1858 0 R 1860 0 R 1862 0 R 1865 0 R 1867 0 R 1869 0 R ]
  /P 303 0 R
>>
endobj

1852 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that only provides unique values, as defined by the optional )
  /K [ 1853 0 R ]
  /P 1851 0 R
>>
endobj

1853 0 obj
<< /Type /MCR /MCID 13 /Pg 210 0 R >>
endobj

1854 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:as)
  /K [ 1855 0 R ]
  /P 1851 0 R
>>
endobj

1855 0 obj
<< /Type /MCR /MCID 14 /Pg 210 0 R >>
endobj

1856 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and )
  /K [ 1857 0 R ]
  /P 1851 0 R
>>
endobj

1857 0 obj
<< /Type /MCR /MCID 15 /Pg 210 0 R >>
endobj

1858 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:with)
  /K [ 1859 0 R ]
  /P 1851 0 R
>>
endobj

1859 0 obj
<< /Type /MCR /MCID 16 /Pg 210 0 R >>
endobj

1860 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameters \(same as with )
  /K [ 1861 0 R ]
  /P 1851 0 R
>>
endobj

1861 0 obj
<< /Type /MCR /MCID 17 /Pg 210 0 R >>
endobj

1862 0 obj
<< /Type /StructElem /S /Link /K [ 1863 0 R ] /P 1851 0 R >>
endobj

1863 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (unique)
  /K [ 1864 0 R ]
  /P 1862 0 R
>>
endobj

1864 0 obj
<< /Type /MCR /MCID 18 /Pg 210 0 R >>
endobj

1865 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\). The optional )
  /K [ 1866 0 R ]
  /P 1851 0 R
>>
endobj

1866 0 obj
<< /Type /MCR /MCID 19 /Pg 210 0 R >>
endobj

1867 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:expires)
  /K [ 1868 0 R ]
  /P 1851 0 R
>>
endobj

1868 0 obj
<< /Type /MCR /MCID 20 /Pg 210 0 R >>
endobj

1869 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter how long to wait \(in seconds\) before "resetting" and not considering a value to have been seen, even if it's the same as an old value.)
  /K [ 1870 0 R ]
  /P 1851 0 R
>>
endobj

1870 0 obj
<< /Type /MCR /MCID 21 /Pg 210 0 R >>
endobj

1871 0 obj
<< /Type /StructElem /S /H2 /K [ 1872 0 R ] /P 303 0 R >>
endobj

1872 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method repeated\n)
  /K [ 1873 0 R ]
  /P 1871 0 R
>>
endobj

1873 0 obj
<< /Type /MCR /MCID 22 /Pg 210 0 R >>
endobj

1874 0 obj
<< /Type /StructElem /S /Code /K [ 1875 0 R ] /P 303 0 R >>
endobj

1875 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method repeated\(Supply:D: :&as, :&with\)\n)
  /K [ 1876 0 R ]
  /P 1874 0 R
>>
endobj

1876 0 obj
<< /Type /MCR /MCID 23 /Pg 210 0 R >>
endobj

1877 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1878 0 R 1880 0 R 1882 0 R 1884 0 R 1886 0 R 1888 0 R 1891 0 R ]
  /P 303 0 R
>>
endobj

1878 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that only provides repeated values, as defined by the optional )
  /K [ 1879 0 R ]
  /P 1877 0 R
>>
endobj

1879 0 obj
<< /Type /MCR /MCID 24 /Pg 210 0 R >>
endobj

1880 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:as)
  /K [ 1881 0 R ]
  /P 1877 0 R
>>
endobj

1881 0 obj
<< /Type /MCR /MCID 25 /Pg 210 0 R >>
endobj

1882 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and )
  /K [ 1883 0 R ]
  /P 1877 0 R
>>
endobj

1883 0 obj
<< /Type /MCR /MCID 26 /Pg 210 0 R >>
endobj

1884 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:with)
  /K [ 1885 0 R ]
  /P 1877 0 R
>>
endobj

1885 0 obj
<< /Type /MCR /MCID 27 /Pg 210 0 R >>
endobj

1886 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameters \(same as with )
  /K [ 1887 0 R ]
  /P 1877 0 R
>>
endobj

1887 0 obj
<< /Type /MCR /MCID 28 /Pg 210 0 R >>
endobj

1888 0 obj
<< /Type /StructElem /S /Link /K [ 1889 0 R ] /P 1877 0 R >>
endobj

1889 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (unique)
  /K [ 1890 0 R ]
  /P 1888 0 R
>>
endobj

1890 0 obj
<< /Type /MCR /MCID 29 /Pg 210 0 R >>
endobj

1891 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\).)
  /K [ 1892 0 R ]
  /P 1877 0 R
>>
endobj

1892 0 obj
<< /Type /MCR /MCID 30 /Pg 210 0 R >>
endobj

1893 0 obj
<< /Type /StructElem /S /Code /K [ 1894 0 R ] /P 303 0 R >>
endobj

1894 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l y   =   S u p p l y . f r o m - l i s t \( < a   A   B   b   c   b   C > \) . r e p e a t e d \( : a s \( & l c \) \) ; \n $ s u p p l y . t a p \( & s a y \) ;                       #   O U T P U T :   « A$$ b$$ b$$ C$$ » \n)
  /K [ 1895 0 R ]
  /P 1893 0 R
>>
endobj

1895 0 obj
<< /Type /MCR /MCID 31 /Pg 210 0 R >>
endobj

1896 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1897 0 R 1899 0 R 1902 0 R ]
  /P 303 0 R
>>
endobj

1897 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (See )
  /K [ 1898 0 R ]
  /P 1896 0 R
>>
endobj

1898 0 obj
<< /Type /MCR /MCID 32 /Pg 210 0 R >>
endobj

1899 0 obj
<< /Type /StructElem /S /Link /K [ 1900 0 R ] /P 1896 0 R >>
endobj

1900 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (repeated)
  /K [ 1901 0 R ]
  /P 1899 0 R
>>
endobj

1901 0 obj
<< /Type /MCR /MCID 33 /Pg 210 0 R >>
endobj

1902 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( for more examples that use its sub form.)
  /K [ 1903 0 R ]
  /P 1896 0 R
>>
endobj

1903 0 obj
<< /Type /MCR /MCID 34 /Pg 210 0 R >>
endobj

1904 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1905 0 R 1907 0 R 1909 0 R 1912 0 R ]
  /P 303 0 R
>>
endobj

1905 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Note)
  /K [ 1906 0 R ]
  /P 1904 0 R
>>
endobj

1906 0 obj
<< /Type /MCR /MCID 35 /Pg 210 0 R >>
endobj

1907 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (: Available since version 6.e \()
  /K [ 1908 0 R ]
  /P 1904 0 R
>>
endobj

1908 0 obj
<< /Type /MCR /MCID 36 /Pg 210 0 R >>
endobj

1909 0 obj
<< /Type /StructElem /S /Link /K [ 1910 0 R ] /P 1904 0 R >>
endobj

1910 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Rakudo)
  /K [ 1911 0 R ]
  /P 1909 0 R
>>
endobj

1911 0 obj
<< /Type /MCR /MCID 37 /Pg 210 0 R >>
endobj

1912 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( 2020.01 and later\).)
  /K [ 1913 0 R ]
  /P 1904 0 R
>>
endobj

1913 0 obj
<< /Type /MCR /MCID 38 /Pg 210 0 R >>
endobj

1914 0 obj
<< /Type /StructElem /S /H2 /K [ 1915 0 R ] /P 303 0 R >>
endobj

1915 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method squish\n)
  /K [ 1916 0 R ]
  /P 1914 0 R
>>
endobj

1916 0 obj
<< /Type /MCR /MCID 39 /Pg 210 0 R >>
endobj

1917 0 obj
<< /Type /StructElem /S /Code /K [ 1918 0 R ] /P 303 0 R >>
endobj

1918 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method squish\(Supply:D: :$as, :$with --> Supply:D\)\n)
  /K [ 1919 0 R ]
  /P 1917 0 R
>>
endobj

1919 0 obj
<< /Type /MCR /MCID 40 /Pg 210 0 R >>
endobj

1920 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1921 0 R 1923 0 R 1925 0 R 1927 0 R 1929 0 R 1931 0 R 1934 0 R ]
  /P 303 0 R
>>
endobj

1921 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that only provides unique values, as defined by the optional )
  /K [ 1922 0 R ]
  /P 1920 0 R
>>
endobj

1922 0 obj
<< /Type /MCR /MCID 41 /Pg 210 0 R >>
endobj

1923 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:as)
  /K [ 1924 0 R ]
  /P 1920 0 R
>>
endobj

1924 0 obj
<< /Type /MCR /MCID 42 /Pg 210 0 R >>
endobj

1925 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and )
  /K [ 1926 0 R ]
  /P 1920 0 R
>>
endobj

1926 0 obj
<< /Type /MCR /MCID 43 /Pg 210 0 R >>
endobj

1927 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:with)
  /K [ 1928 0 R ]
  /P 1920 0 R
>>
endobj

1928 0 obj
<< /Type /MCR /MCID 44 /Pg 210 0 R >>
endobj

1929 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameters \(same as with )
  /K [ 1930 0 R ]
  /P 1920 0 R
>>
endobj

1930 0 obj
<< /Type /MCR /MCID 45 /Pg 210 0 R >>
endobj

1931 0 obj
<< /Type /StructElem /S /Link /K [ 1932 0 R ] /P 1920 0 R >>
endobj

1932 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (squish)
  /K [ 1933 0 R ]
  /P 1931 0 R
>>
endobj

1933 0 obj
<< /Type /MCR /MCID 46 /Pg 210 0 R >>
endobj

1934 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\).)
  /K [ 1935 0 R ]
  /P 1920 0 R
>>
endobj

1935 0 obj
<< /Type /MCR /MCID 47 /Pg 210 0 R >>
endobj

1936 0 obj
<< /Type /StructElem /S /H2 /K [ 1937 0 R ] /P 303 0 R >>
endobj

1937 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method max\n)
  /K [ 1938 0 R ]
  /P 1936 0 R
>>
endobj

1938 0 obj
<< /Type /MCR /MCID 0 /Pg 236 0 R >>
endobj

1939 0 obj
<< /Type /StructElem /S /Code /K [ 1940 0 R ] /P 303 0 R >>
endobj

1940 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method max\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)\n)
  /K [ 1941 0 R ]
  /P 1939 0 R
>>
endobj

1941 0 obj
<< /Type /MCR /MCID 1 /Pg 236 0 R >>
endobj

1942 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1943 0 R 1945 0 R 1948 0 R ]
  /P 303 0 R
>>
endobj

1943 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that only emits values from the given supply if they are larger than any value seen before. In other words, from a continuously ascending supply it will emit all the values. From a continuously descending supply it will only emit the first value. The optional parameter specifies the comparator, just as with )
  /K [ 1944 0 R ]
  /P 1942 0 R
>>
endobj

1944 0 obj
<< /Type /MCR /MCID 2 /Pg 236 0 R >>
endobj

1945 0 obj
<< /Type /StructElem /S /Link /K [ 1946 0 R ] /P 1942 0 R >>
endobj

1946 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Any.max)
  /K [ 1947 0 R ]
  /P 1945 0 R
>>
endobj

1947 0 obj
<< /Type /MCR /MCID 3 /Pg 236 0 R >>
endobj

1948 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1949 0 R ]
  /P 1942 0 R
>>
endobj

1949 0 obj
<< /Type /MCR /MCID 4 /Pg 236 0 R >>
endobj

1950 0 obj
<< /Type /StructElem /S /H2 /K [ 1951 0 R ] /P 303 0 R >>
endobj

1951 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method min\n)
  /K [ 1952 0 R ]
  /P 1950 0 R
>>
endobj

1952 0 obj
<< /Type /MCR /MCID 5 /Pg 236 0 R >>
endobj

1953 0 obj
<< /Type /StructElem /S /Code /K [ 1954 0 R ] /P 303 0 R >>
endobj

1954 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method min\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)\n)
  /K [ 1955 0 R ]
  /P 1953 0 R
>>
endobj

1955 0 obj
<< /Type /MCR /MCID 6 /Pg 236 0 R >>
endobj

1956 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1957 0 R 1959 0 R 1962 0 R ]
  /P 303 0 R
>>
endobj

1957 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that only emits values from the given supply if they are smaller than any value seen before. In other words, from a continuously descending supply it will emit all the values. From a continuously ascending supply it will only emit the first value. The optional parameter specifies the comparator, just as with )
  /K [ 1958 0 R ]
  /P 1956 0 R
>>
endobj

1958 0 obj
<< /Type /MCR /MCID 7 /Pg 236 0 R >>
endobj

1959 0 obj
<< /Type /StructElem /S /Link /K [ 1960 0 R ] /P 1956 0 R >>
endobj

1960 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Any.min)
  /K [ 1961 0 R ]
  /P 1959 0 R
>>
endobj

1961 0 obj
<< /Type /MCR /MCID 8 /Pg 236 0 R >>
endobj

1962 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1963 0 R ]
  /P 1956 0 R
>>
endobj

1963 0 obj
<< /Type /MCR /MCID 9 /Pg 236 0 R >>
endobj

1964 0 obj
<< /Type /StructElem /S /H2 /K [ 1965 0 R ] /P 303 0 R >>
endobj

1965 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method minmax\n)
  /K [ 1966 0 R ]
  /P 1964 0 R
>>
endobj

1966 0 obj
<< /Type /MCR /MCID 10 /Pg 236 0 R >>
endobj

1967 0 obj
<< /Type /StructElem /S /Code /K [ 1968 0 R ] /P 303 0 R >>
endobj

1968 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method minmax\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)\n)
  /K [ 1969 0 R ]
  /P 1967 0 R
>>
endobj

1969 0 obj
<< /Type /MCR /MCID 11 /Pg 236 0 R >>
endobj

1970 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1971 0 R 1973 0 R 1976 0 R ]
  /P 303 0 R
>>
endobj

1971 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that emits a Range every time a new minimum or maximum values is seen from the given supply. The optional parameter specifies the comparator, just as with )
  /K [ 1972 0 R ]
  /P 1970 0 R
>>
endobj

1972 0 obj
<< /Type /MCR /MCID 12 /Pg 236 0 R >>
endobj

1973 0 obj
<< /Type /StructElem /S /Link /K [ 1974 0 R ] /P 1970 0 R >>
endobj

1974 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Any.minmax)
  /K [ 1975 0 R ]
  /P 1973 0 R
>>
endobj

1975 0 obj
<< /Type /MCR /MCID 13 /Pg 236 0 R >>
endobj

1976 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1977 0 R ]
  /P 1970 0 R
>>
endobj

1977 0 obj
<< /Type /MCR /MCID 14 /Pg 236 0 R >>
endobj

1978 0 obj
<< /Type /StructElem /S /H2 /K [ 1979 0 R ] /P 303 0 R >>
endobj

1979 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method skip\n)
  /K [ 1980 0 R ]
  /P 1978 0 R
>>
endobj

1980 0 obj
<< /Type /MCR /MCID 15 /Pg 236 0 R >>
endobj

1981 0 obj
<< /Type /StructElem /S /Code /K [ 1982 0 R ] /P 303 0 R >>
endobj

1982 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method skip\(Supply:D: Int\(Cool\) $number = 1 --> Supply:D\)\n)
  /K [ 1983 0 R ]
  /P 1981 0 R
>>
endobj

1983 0 obj
<< /Type /MCR /MCID 16 /Pg 236 0 R >>
endobj

1984 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1985 0 R 1987 0 R 1989 0 R 1991 0 R 1993 0 R 1995 0 R 1997 0 R ]
  /P 303 0 R
>>
endobj

1985 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a new )
  /K [ 1986 0 R ]
  /P 1984 0 R
>>
endobj

1986 0 obj
<< /Type /MCR /MCID 17 /Pg 236 0 R >>
endobj

1987 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1988 0 R ]
  /P 1984 0 R
>>
endobj

1988 0 obj
<< /Type /MCR /MCID 18 /Pg 236 0 R >>
endobj

1989 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( which will emit all values from the given )
  /K [ 1990 0 R ]
  /P 1984 0 R
>>
endobj

1990 0 obj
<< /Type /MCR /MCID 19 /Pg 236 0 R >>
endobj

1991 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1992 0 R ]
  /P 1984 0 R
>>
endobj

1992 0 obj
<< /Type /MCR /MCID 20 /Pg 236 0 R >>
endobj

1993 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( except for the first )
  /K [ 1994 0 R ]
  /P 1984 0 R
>>
endobj

1994 0 obj
<< /Type /MCR /MCID 21 /Pg 236 0 R >>
endobj

1995 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($number)
  /K [ 1996 0 R ]
  /P 1984 0 R
>>
endobj

1996 0 obj
<< /Type /MCR /MCID 22 /Pg 236 0 R >>
endobj

1997 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( values, which will be thrown away.)
  /K [ 1998 0 R ]
  /P 1984 0 R
>>
endobj

1998 0 obj
<< /Type /MCR /MCID 23 /Pg 236 0 R >>
endobj

1999 0 obj
<< /Type /StructElem /S /Code /K [ 2000 0 R ] /P 303 0 R >>
endobj

2000 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l i e r   =   S u p p l i e r . n e w ; \n m y   $ s u p p l y   =   $ s u p p l i e r . S u p p l y ; \n $ s u p p l y   =   $ s u p p l y . s k i p \( 3 \) ; \n $ s u p p l y . t a p \( {   s a y   $ _   } \) ; \n $ s u p p l i e r . e m i t \( $ _ \)   f o r   1 . . 1 0 ;   #   O U T P U T :   « 4$$ 5$$ 6$$ 7$$ 8$$ 9$$ 1 0$$ » \n)
  /K [ 2001 0 R ]
  /P 1999 0 R
>>
endobj

2001 0 obj
<< /Type /MCR /MCID 24 /Pg 236 0 R >>
endobj

2002 0 obj
<< /Type /StructElem /S /H2 /K [ 2003 0 R ] /P 303 0 R >>
endobj

2003 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method start\n)
  /K [ 2004 0 R ]
  /P 2002 0 R
>>
endobj

2004 0 obj
<< /Type /MCR /MCID 25 /Pg 236 0 R >>
endobj

2005 0 obj
<< /Type /StructElem /S /Code /K [ 2006 0 R ] /P 303 0 R >>
endobj

2006 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method start\(Supply:D: &startee --> Supply:D\)\n)
  /K [ 2007 0 R ]
  /P 2005 0 R
>>
endobj

2007 0 obj
<< /Type /MCR /MCID 26 /Pg 236 0 R >>
endobj

2008 0 obj
<< /Type /StructElem /S /P /K [ 2009 0 R ] /P 303 0 R >>
endobj

2009 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply of supplies. For each value in the original supply, the code object is scheduled on another thread, and returns a supply either of a single value \(if the code succeeds\), or one that quits without a value \(if the code fails\).)
  /K [ 2010 0 R ]
  /P 2008 0 R
>>
endobj

2010 0 obj
<< /Type /MCR /MCID 27 /Pg 236 0 R >>
endobj

2011 0 obj
<< /Type /StructElem /S /P /K [ 2012 0 R ] /P 303 0 R >>
endobj

2012 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This is useful for asynchronously starting work that you don't block on.)
  /K [ 2013 0 R ]
  /P 2011 0 R
>>
endobj

2013 0 obj
<< /Type /MCR /MCID 28 /Pg 236 0 R >>
endobj

2014 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2015 0 R 2017 0 R 2019 0 R ]
  /P 303 0 R
>>
endobj

2015 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Use )
  /K [ 2016 0 R ]
  /P 2014 0 R
>>
endobj

2016 0 obj
<< /Type /MCR /MCID 29 /Pg 236 0 R >>
endobj

2017 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (migrate)
  /K [ 2018 0 R ]
  /P 2014 0 R
>>
endobj

2018 0 obj
<< /Type /MCR /MCID 30 /Pg 236 0 R >>
endobj

2019 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( to join the values into a single supply again.)
  /K [ 2020 0 R ]
  /P 2014 0 R
>>
endobj

2020 0 obj
<< /Type /MCR /MCID 31 /Pg 236 0 R >>
endobj

2021 0 obj
<< /Type /StructElem /S /H2 /K [ 2022 0 R ] /P 303 0 R >>
endobj

2022 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method migrate\n)
  /K [ 2023 0 R ]
  /P 2021 0 R
>>
endobj

2023 0 obj
<< /Type /MCR /MCID 0 /Pg 256 0 R >>
endobj

2024 0 obj
<< /Type /StructElem /S /Code /K [ 2025 0 R ] /P 303 0 R >>
endobj

2025 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method migrate\(Supply:D: --> Supply:D\)\n)
  /K [ 2026 0 R ]
  /P 2024 0 R
>>
endobj

2026 0 obj
<< /Type /MCR /MCID 1 /Pg 256 0 R >>
endobj

2027 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2028 0 R 2030 0 R 2032 0 R 2034 0 R 2036 0 R 2038 0 R 2040 0 R 2042 0 R 2044 0 R 2046 0 R 2048 0 R ]
  /P 303 0 R
>>
endobj

2028 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Takes a )
  /K [ 2029 0 R ]
  /P 2027 0 R
>>
endobj

2029 0 obj
<< /Type /MCR /MCID 2 /Pg 256 0 R >>
endobj

2030 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 2031 0 R ]
  /P 2027 0 R
>>
endobj

2031 0 obj
<< /Type /MCR /MCID 3 /Pg 256 0 R >>
endobj

2032 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( which itself has values that are of type )
  /K [ 2033 0 R ]
  /P 2027 0 R
>>
endobj

2033 0 obj
<< /Type /MCR /MCID 4 /Pg 256 0 R >>
endobj

2034 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 2035 0 R ]
  /P 2027 0 R
>>
endobj

2035 0 obj
<< /Type /MCR /MCID 5 /Pg 256 0 R >>
endobj

2036 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( as input. Each time the outer )
  /K [ 2037 0 R ]
  /P 2027 0 R
>>
endobj

2037 0 obj
<< /Type /MCR /MCID 6 /Pg 256 0 R >>
endobj

2038 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 2039 0 R ]
  /P 2027 0 R
>>
endobj

2039 0 obj
<< /Type /MCR /MCID 7 /Pg 256 0 R >>
endobj

2040 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( emits a new )
  /K [ 2041 0 R ]
  /P 2027 0 R
>>
endobj

2041 0 obj
<< /Type /MCR /MCID 8 /Pg 256 0 R >>
endobj

2042 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 2043 0 R ]
  /P 2027 0 R
>>
endobj

2043 0 obj
<< /Type /MCR /MCID 9 /Pg 256 0 R >>
endobj

2044 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, this will be tapped and its values emitted. Any previously tapped )
  /K [ 2045 0 R ]
  /P 2027 0 R
>>
endobj

2045 0 obj
<< /Type /MCR /MCID 10 /Pg 256 0 R >>
endobj

2046 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 2047 0 R ]
  /P 2027 0 R
>>
endobj

2047 0 obj
<< /Type /MCR /MCID 11 /Pg 256 0 R >>
endobj

2048 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( will be closed. This is useful for migrating between different data sources, and only paying attention to the latest one.)
  /K [ 2049 0 R ]
  /P 2027 0 R
>>
endobj

2049 0 obj
<< /Type /MCR /MCID 12 /Pg 256 0 R >>
endobj

2050 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2051 0 R 2053 0 R 2055 0 R ]
  /P 303 0 R
>>
endobj

2051 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (For example, imagine an application where the user can switch between different stocks. When they switch to a new one, a connection is established to a web socket to get the latest values, and any previous connection should be closed. Each stream of values coming over the web socket would be represented as a Supply, which themselves are emitted into a Supply of latest data sources to watch. The )
  /K [ 2052 0 R ]
  /P 2050 0 R
>>
endobj

2052 0 obj
<< /Type /MCR /MCID 13 /Pg 256 0 R >>
endobj

2053 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (migrate)
  /K [ 2054 0 R ]
  /P 2050 0 R
>>
endobj

2054 0 obj
<< /Type /MCR /MCID 14 /Pg 256 0 R >>
endobj

2055 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method could be used to flatten this supply of supplies into a single Supply of the current values that the user cares about.)
  /K [ 2056 0 R ]
  /P 2050 0 R
>>
endobj

2056 0 obj
<< /Type /MCR /MCID 15 /Pg 256 0 R >>
endobj

2057 0 obj
<< /Type /StructElem /S /P /K [ 2058 0 R ] /P 303 0 R >>
endobj

2058 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Here is a simple simulation of such a program:)
  /K [ 2059 0 R ]
  /P 2057 0 R
>>
endobj

2059 0 obj
<< /Type /MCR /MCID 16 /Pg 256 0 R >>
endobj

2060 0 obj
<< /Type /StructElem /S /Code /K [ 2061 0 R ] /P 303 0 R >>
endobj

2061 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my Supplier $stock-sources .= new;\n\nsub watch-stock\($symbol\) {\n    $stock-sources.emit: supply {\n        say "Starting to watch $symbol";\n        whenever Supply.interval\(1\) {\n            emit "$symbol: 111." ~ 99.rand.Int;\n        }\n        CLOSE say "Lost interest in $symbol";\n    }\n}\n\n$stock-sources.Supply.migrate.tap: *.say;\n\nwatch-stock\('GOOG'\);\nsleep 3;\nwatch-stock\('AAPL'\);\nsleep 3;\n)
  /K [ 2062 0 R ]
  /P 2060 0 R
>>
endobj

2062 0 obj
<< /Type /MCR /MCID 17 /Pg 256 0 R >>
endobj

2063 0 obj
<< /Type /StructElem /S /P /K [ 2064 0 R ] /P 303 0 R >>
endobj

2064 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Which produces output like:)
  /K [ 2065 0 R ]
  /P 2063 0 R
>>
endobj

2065 0 obj
<< /Type /MCR /MCID 18 /Pg 256 0 R >>
endobj

2066 0 obj
<< /Type /StructElem /S /Code /K [ 2067 0 R ] /P 303 0 R >>
endobj

2067 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Starting to watch GOOG\nGOOG: 111.67\nGOOG: 111.20\nGOOG: 111.37\nLost interest in GOOG\nStarting to watch AAPL\nAAPL: 111.55\nAAPL: 111.6\nAAPL: 111.6\n)
  /K [ 2068 0 R ]
  /P 2066 0 R
>>
endobj

2068 0 obj
<< /Type /MCR /MCID 19 /Pg 256 0 R >>
endobj

2069 0 obj
<< /Type /StructElem /S /H1 /K [ 2070 0 R ] /P 303 0 R >>
endobj

2070 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Methods that combine supplies\n)
  /K [ 2071 0 R ]
  /P 2069 0 R
>>
endobj

2071 0 obj
<< /Type /MCR /MCID 0 /Pg 264 0 R >>
endobj

2072 0 obj
<< /Type /StructElem /S /H2 /K [ 2073 0 R ] /P 303 0 R >>
endobj

2073 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method merge\n)
  /K [ 2074 0 R ]
  /P 2072 0 R
>>
endobj

2074 0 obj
<< /Type /MCR /MCID 1 /Pg 264 0 R >>
endobj

2075 0 obj
<< /Type /StructElem /S /Code /K [ 2076 0 R ] /P 303 0 R >>
endobj

2076 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method merge\(Supply @*supplies --> Supply:D\)\n)
  /K [ 2077 0 R ]
  /P 2075 0 R
>>
endobj

2077 0 obj
<< /Type /MCR /MCID 2 /Pg 264 0 R >>
endobj

2078 0 obj
<< /Type /StructElem /S /P /K [ 2079 0 R ] /P 303 0 R >>
endobj

2079 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply to which any value seen from the given supplies, is emitted. The resulting supply is done only when all given supplies are done. Can also be called as a class method.)
  /K [ 2080 0 R ]
  /P 2078 0 R
>>
endobj

2080 0 obj
<< /Type /MCR /MCID 3 /Pg 264 0 R >>
endobj

2081 0 obj
<< /Type /StructElem /S /H2 /K [ 2082 0 R ] /P 303 0 R >>
endobj

2082 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method zip\n)
  /K [ 2083 0 R ]
  /P 2081 0 R
>>
endobj

2083 0 obj
<< /Type /MCR /MCID 4 /Pg 264 0 R >>
endobj

2084 0 obj
<< /Type /StructElem /S /P /K [ 2085 0 R ] /P 303 0 R >>
endobj

2085 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as:)
  /K [ 2086 0 R ]
  /P 2084 0 R
>>
endobj

2086 0 obj
<< /Type /MCR /MCID 5 /Pg 264 0 R >>
endobj

2087 0 obj
<< /Type /StructElem /S /Code /K [ 2088 0 R ] /P 303 0 R >>
endobj

2088 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method zip\(**@s, :&with\)\n)
  /K [ 2089 0 R ]
  /P 2087 0 R
>>
endobj

2089 0 obj
<< /Type /MCR /MCID 6 /Pg 264 0 R >>
endobj

2090 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2091 0 R 2093 0 R 2095 0 R 2097 0 R 2100 0 R 2102 0 R 2104 0 R 2106 0 R 2108 0 R ]
  /P 303 0 R
>>
endobj

2091 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that emits combined values as soon as there is a new value seen on )
  /K [ 2092 0 R ]
  /P 2090 0 R
>>
endobj

2092 0 obj
<< /Type /MCR /MCID 7 /Pg 264 0 R >>
endobj

2093 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (all)
  /K [ 2094 0 R ]
  /P 2090 0 R
>>
endobj

2094 0 obj
<< /Type /MCR /MCID 8 /Pg 264 0 R >>
endobj

2095 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( of the supplies. By default, )
  /K [ 2096 0 R ]
  /P 2090 0 R
>>
endobj

2096 0 obj
<< /Type /MCR /MCID 9 /Pg 264 0 R >>
endobj

2097 0 obj
<< /Type /StructElem /S /Link /K [ 2098 0 R ] /P 2090 0 R >>
endobj

2098 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Lists)
  /K [ 2099 0 R ]
  /P 2097 0 R
>>
endobj

2099 0 obj
<< /Type /MCR /MCID 10 /Pg 264 0 R >>
endobj

2100 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( are created, but this can be changed by specifying your own combiner with the )
  /K [ 2101 0 R ]
  /P 2090 0 R
>>
endobj

2101 0 obj
<< /Type /MCR /MCID 11 /Pg 264 0 R >>
endobj

2102 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:with)
  /K [ 2103 0 R ]
  /P 2090 0 R
>>
endobj

2103 0 obj
<< /Type /MCR /MCID 12 /Pg 264 0 R >>
endobj

2104 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter. The resulting supply is done as soon as )
  /K [ 2105 0 R ]
  /P 2090 0 R
>>
endobj

2105 0 obj
<< /Type /MCR /MCID 13 /Pg 264 0 R >>
endobj

2106 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (any)
  /K [ 2107 0 R ]
  /P 2090 0 R
>>
endobj

2107 0 obj
<< /Type /MCR /MCID 14 /Pg 264 0 R >>
endobj

2108 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( of the given supplies are done. Can also be called as a class method.)
  /K [ 2109 0 R ]
  /P 2090 0 R
>>
endobj

2109 0 obj
<< /Type /MCR /MCID 15 /Pg 264 0 R >>
endobj

2110 0 obj
<< /Type /StructElem /S /P /K [ 2111 0 R ] /P 303 0 R >>
endobj

2111 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This can also be used as a class method; in case it's used as an object method the corresponding supply will be one of the supplies combined \(with no special treatment\).)
  /K [ 2112 0 R ]
  /P 2110 0 R
>>
endobj

2112 0 obj
<< /Type /MCR /MCID 16 /Pg 264 0 R >>
endobj

2113 0 obj
<< /Type /StructElem /S /H2 /K [ 2114 0 R ] /P 303 0 R >>
endobj

2114 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method zip-latest\n)
  /K [ 2115 0 R ]
  /P 2113 0 R
>>
endobj

2115 0 obj
<< /Type /MCR /MCID 17 /Pg 264 0 R >>
endobj

2116 0 obj
<< /Type /StructElem /S /P /K [ 2117 0 R ] /P 303 0 R >>
endobj

2117 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as:)
  /K [ 2118 0 R ]
  /P 2116 0 R
>>
endobj

2118 0 obj
<< /Type /MCR /MCID 18 /Pg 264 0 R >>
endobj

2119 0 obj
<< /Type /StructElem /S /Code /K [ 2120 0 R ] /P 303 0 R >>
endobj

2120 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method zip-latest\(**@s, :&with, :$initial \)\n)
  /K [ 2121 0 R ]
  /P 2119 0 R
>>
endobj

2121 0 obj
<< /Type /MCR /MCID 19 /Pg 264 0 R >>
endobj

2122 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2123 0 R 2125 0 R 2127 0 R 2129 0 R 2132 0 R 2134 0 R 2136 0 R 2138 0 R 2140 0 R ]
  /P 303 0 R
>>
endobj

2123 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that emits combined values as soon as there is a new value seen on )
  /K [ 2124 0 R ]
  /P 2122 0 R
>>
endobj

2124 0 obj
<< /Type /MCR /MCID 20 /Pg 264 0 R >>
endobj

2125 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (any)
  /K [ 2126 0 R ]
  /P 2122 0 R
>>
endobj

2126 0 obj
<< /Type /MCR /MCID 21 /Pg 264 0 R >>
endobj

2127 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( of the supplies. By default, )
  /K [ 2128 0 R ]
  /P 2122 0 R
>>
endobj

2128 0 obj
<< /Type /MCR /MCID 22 /Pg 264 0 R >>
endobj

2129 0 obj
<< /Type /StructElem /S /Link /K [ 2130 0 R ] /P 2122 0 R >>
endobj

2130 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Lists)
  /K [ 2131 0 R ]
  /P 2129 0 R
>>
endobj

2131 0 obj
<< /Type /MCR /MCID 23 /Pg 264 0 R >>
endobj

2132 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( are created, but this can be changed by specifying your own combiner with the )
  /K [ 2133 0 R ]
  /P 2122 0 R
>>
endobj

2133 0 obj
<< /Type /MCR /MCID 24 /Pg 264 0 R >>
endobj

2134 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:with)
  /K [ 2135 0 R ]
  /P 2122 0 R
>>
endobj

2135 0 obj
<< /Type /MCR /MCID 25 /Pg 264 0 R >>
endobj

2136 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter. The optional :initial parameter can be used to indicate the initial state of the combined values. By default, all supplies have to have at least one value emitted on them before the first combined values is emitted on the resulting supply. The resulting supply is done as soon as )
  /K [ 2137 0 R ]
  /P 2122 0 R
>>
endobj

2137 0 obj
<< /Type /MCR /MCID 26 /Pg 264 0 R >>
endobj

2138 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (any)
  /K [ 2139 0 R ]
  /P 2122 0 R
>>
endobj

2139 0 obj
<< /Type /MCR /MCID 27 /Pg 264 0 R >>
endobj

2140 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( of the given supplies are done. Can also be called as a class method.)
  /K [ 2141 0 R ]
  /P 2122 0 R
>>
endobj

2141 0 obj
<< /Type /MCR /MCID 28 /Pg 264 0 R >>
endobj

2142 0 obj
<< /Type /StructElem /S /H1 /K [ 2143 0 R ] /P 303 0 R >>
endobj

2143 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (I/O features exposed as supplies\n)
  /K [ 2144 0 R ]
  /P 2142 0 R
>>
endobj

2144 0 obj
<< /Type /MCR /MCID 0 /Pg 276 0 R >>
endobj

2145 0 obj
<< /Type /StructElem /S /H2 /K [ 2146 0 R ] /P 303 0 R >>
endobj

2146 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (sub signal\n)
  /K [ 2147 0 R ]
  /P 2145 0 R
>>
endobj

2147 0 obj
<< /Type /MCR /MCID 1 /Pg 276 0 R >>
endobj

2148 0 obj
<< /Type /StructElem /S /Code /K [ 2149 0 R ] /P 303 0 R >>
endobj

2149 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (sub signal\(*@signals, :$scheduler = $*SCHEDULER\)\n)
  /K [ 2150 0 R ]
  /P 2148 0 R
>>
endobj

2150 0 obj
<< /Type /MCR /MCID 2 /Pg 276 0 R >>
endobj

2151 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2152 0 R 2154 0 R 2156 0 R ]
  /P 303 0 R
>>
endobj

2152 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply for the Signal enums \(such as SIGINT\) specified, and an optional )
  /K [ 2153 0 R ]
  /P 2151 0 R
>>
endobj

2153 0 obj
<< /Type /MCR /MCID 3 /Pg 276 0 R >>
endobj

2154 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:scheduler)
  /K [ 2155 0 R ]
  /P 2151 0 R
>>
endobj

2155 0 obj
<< /Type /MCR /MCID 4 /Pg 276 0 R >>
endobj

2156 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter. Any signals received, will be emitted on the supply. For example:)
  /K [ 2157 0 R ]
  /P 2151 0 R
>>
endobj

2157 0 obj
<< /Type /MCR /MCID 5 /Pg 276 0 R >>
endobj

2158 0 obj
<< /Type /StructElem /S /Code /K [ 2159 0 R ] /P 303 0 R >>
endobj

2159 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (signal\(SIGINT\).tap\( { say "Thank you for your attention"; exit 0 } \);\n)
  /K [ 2160 0 R ]
  /P 2158 0 R
>>
endobj

2160 0 obj
<< /Type /MCR /MCID 6 /Pg 276 0 R >>
endobj

2161 0 obj
<< /Type /StructElem /S /P /K [ 2162 0 R ] /P 303 0 R >>
endobj

2162 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (would catch Control-C, thank you, and then exit.)
  /K [ 2163 0 R ]
  /P 2161 0 R
>>
endobj

2163 0 obj
<< /Type /MCR /MCID 7 /Pg 276 0 R >>
endobj

2164 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2165 0 R 2167 0 R 2169 0 R ]
  /P 303 0 R
>>
endobj

2165 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (To go from a signal number to a )
  /K [ 2166 0 R ]
  /P 2164 0 R
>>
endobj

2166 0 obj
<< /Type /MCR /MCID 8 /Pg 276 0 R >>
endobj

2167 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Signal)
  /K [ 2168 0 R ]
  /P 2164 0 R
>>
endobj

2168 0 obj
<< /Type /MCR /MCID 9 /Pg 276 0 R >>
endobj

2169 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, you can do something like this:)
  /K [ 2170 0 R ]
  /P 2164 0 R
>>
endobj

2170 0 obj
<< /Type /MCR /MCID 10 /Pg 276 0 R >>
endobj

2171 0 obj
<< /Type /StructElem /S /Code /K [ 2172 0 R ] /P 303 0 R >>
endobj

2172 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (signal\(Signal\(2\)\).tap\( -> $sig { say "Received signal: $sig" } \);\n)
  /K [ 2173 0 R ]
  /P 2171 0 R
>>
endobj

2173 0 obj
<< /Type /MCR /MCID 11 /Pg 276 0 R >>
endobj

2174 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2175 0 R 2177 0 R 2179 0 R 2181 0 R 2184 0 R ]
  /P 303 0 R
>>
endobj

2175 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The list of supported signals can be found by checking )
  /K [ 2176 0 R ]
  /P 2174 0 R
>>
endobj

2176 0 obj
<< /Type /MCR /MCID 12 /Pg 276 0 R >>
endobj

2177 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Signal::.keys)
  /K [ 2178 0 R ]
  /P 2174 0 R
>>
endobj

2178 0 obj
<< /Type /MCR /MCID 13 /Pg 276 0 R >>
endobj

2179 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(as you would any enum\). For more details on how enums work see )
  /K [ 2180 0 R ]
  /P 2174 0 R
>>
endobj

2180 0 obj
<< /Type /MCR /MCID 14 /Pg 276 0 R >>
endobj

2181 0 obj
<< /Type /StructElem /S /Link /K [ 2182 0 R ] /P 2174 0 R >>
endobj

2182 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (enum)
  /K [ 2183 0 R ]
  /P 2181 0 R
>>
endobj

2183 0 obj
<< /Type /MCR /MCID 15 /Pg 276 0 R >>
endobj

2184 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 2185 0 R ]
  /P 2174 0 R
>>
endobj

2185 0 obj
<< /Type /MCR /MCID 16 /Pg 276 0 R >>
endobj

2186 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2187 0 R 2189 0 R 2191 0 R 2194 0 R 2196 0 R 2198 0 R 2200 0 R 2202 0 R 2204 0 R 2206 0 R 2208 0 R 2210 0 R 2212 0 R 2214 0 R ]
  /P 303 0 R
>>
endobj

2187 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Note:)
  /K [ 2188 0 R ]
  /P 2186 0 R
>>
endobj

2188 0 obj
<< /Type /MCR /MCID 17 /Pg 276 0 R >>
endobj

2189 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( )
  /K [ 2190 0 R ]
  /P 2186 0 R
>>
endobj

2190 0 obj
<< /Type /MCR /MCID 18 /Pg 276 0 R >>
endobj

2191 0 obj
<< /Type /StructElem /S /Link /K [ 2192 0 R ] /P 2186 0 R >>
endobj

2192 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Rakudo)
  /K [ 2193 0 R ]
  /P 2191 0 R
>>
endobj

2193 0 obj
<< /Type /MCR /MCID 19 /Pg 276 0 R >>
endobj

2194 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( versions up to 2018.05 had a bug due to which numeric values of signals were incorrect on some systems. For example, )
  /K [ 2195 0 R ]
  /P 2186 0 R
>>
endobj

2195 0 obj
<< /Type /MCR /MCID 20 /Pg 276 0 R >>
endobj

2196 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Signal\(10\))
  /K [ 2197 0 R ]
  /P 2186 0 R
>>
endobj

2197 0 obj
<< /Type /MCR /MCID 21 /Pg 276 0 R >>
endobj

2198 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( was returning )
  /K [ 2199 0 R ]
  /P 2186 0 R
>>
endobj

2199 0 obj
<< /Type /MCR /MCID 22 /Pg 276 0 R >>
endobj

2200 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (SIGBUS)
  /K [ 2201 0 R ]
  /P 2186 0 R
>>
endobj

2201 0 obj
<< /Type /MCR /MCID 23 /Pg 276 0 R >>
endobj

2202 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( even if it was actually )
  /K [ 2203 0 R ]
  /P 2186 0 R
>>
endobj

2203 0 obj
<< /Type /MCR /MCID 24 /Pg 276 0 R >>
endobj

2204 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (SIGUSR1)
  /K [ 2205 0 R ]
  /P 2186 0 R
>>
endobj

2205 0 obj
<< /Type /MCR /MCID 25 /Pg 276 0 R >>
endobj

2206 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( on a particular system. That being said, using )
  /K [ 2207 0 R ]
  /P 2186 0 R
>>
endobj

2207 0 obj
<< /Type /MCR /MCID 26 /Pg 276 0 R >>
endobj

2208 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (signal\(SIGUSR1\))
  /K [ 2209 0 R ]
  /P 2186 0 R
>>
endobj

2209 0 obj
<< /Type /MCR /MCID 27 /Pg 276 0 R >>
endobj

2210 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( was working as expected on all Rakudo versions except 2018.04, 2018.04.1 and 2018.05, where the intended behavior can be achieved by using )
  /K [ 2211 0 R ]
  /P 2186 0 R
>>
endobj

2211 0 obj
<< /Type /MCR /MCID 28 /Pg 276 0 R >>
endobj

2212 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (signal\(SIGBUS\))
  /K [ 2213 0 R ]
  /P 2186 0 R
>>
endobj

2213 0 obj
<< /Type /MCR /MCID 29 /Pg 276 0 R >>
endobj

2214 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( instead. These issues are resolved in Rakudo releases after 2018.05.)
  /K [ 2215 0 R ]
  /P 2186 0 R
>>
endobj

2215 0 obj
<< /Type /MCR /MCID 30 /Pg 276 0 R >>
endobj

2216 0 obj
<< /Type /StructElem /S /H2 /K [ 2217 0 R ] /P 303 0 R >>
endobj

2217 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method IO::Notification.watch-path\n)
  /K [ 2218 0 R ]
  /P 2216 0 R
>>
endobj

2218 0 obj
<< /Type /MCR /MCID 31 /Pg 276 0 R >>
endobj

2219 0 obj
<< /Type /StructElem /S /Code /K [ 2220 0 R ] /P 303 0 R >>
endobj

2220 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method watch-path\($path --> Supply:D\)\n)
  /K [ 2221 0 R ]
  /P 2219 0 R
>>
endobj

2221 0 obj
<< /Type /MCR /MCID 32 /Pg 276 0 R >>
endobj

2222 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2223 0 R 2225 0 R 2227 0 R ]
  /P 303 0 R
>>
endobj

2223 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply to which the OS will emit values to indicate changes on the filesystem for the given path. Also has a shortcut with the )
  /K [ 2224 0 R ]
  /P 2222 0 R
>>
endobj

2224 0 obj
<< /Type /MCR /MCID 33 /Pg 276 0 R >>
endobj

2225 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (watch)
  /K [ 2226 0 R ]
  /P 2222 0 R
>>
endobj

2226 0 obj
<< /Type /MCR /MCID 34 /Pg 276 0 R >>
endobj

2227 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method on an IO object, like this:)
  /K [ 2228 0 R ]
  /P 2222 0 R
>>
endobj

2228 0 obj
<< /Type /MCR /MCID 35 /Pg 276 0 R >>
endobj

2229 0 obj
<< /Type /StructElem /S /Code /K [ 2230 0 R ] /P 303 0 R >>
endobj

2230 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (IO::Notification.watch-path\("."\).act\( { say "$^file changed" } \);\n".".IO.watch.act\(                     { say "$^file changed" } \);   # same\n)
  /K [ 2231 0 R ]
  /P 2229 0 R
>>
endobj

2231 0 obj
<< /Type /MCR /MCID 36 /Pg 276 0 R >>
endobj

2232 0 obj
<<
  /Type /StructTreeRoot
  /K [ 303 0 R ]
  /ParentTree <<
    /Nums [ 0 [ 305 0 R 301 0 R 308 0 R 311 0 R 314 0 R 316 0 R 318 0 R 320 0 R 323 0 R 326 0 R 328 0 R 331 0 R 333 0 R 335 0 R 337 0 R 339 0 R 341 0 R 343 0 R 345 0 R 347 0 R 350 0 R 352 0 R 354 0 R 356 0 R 358 0 R 361 0 R 363 0 R 365 0 R 367 0 R 369 0 R 372 0 R 374 0 R 376 0 R 378 0 R 380 0 R 382 0 R 384 0 R 386 0 R 389 0 R 392 0 R 395 0 R 397 0 R 399 0 R 401 0 R 404 0 R 406 0 R 409 0 R 411 0 R 413 0 R 415 0 R 418 0 R 420 0 R 422 0 R 425 0 R 427 0 R 430 0 R 433 0 R 435 0 R ] 1 [ 438 0 R 441 0 R 444 0 R 447 0 R 449 0 R 451 0 R 454 0 R 456 0 R 458 0 R 460 0 R 462 0 R 464 0 R 466 0 R 468 0 R 470 0 R 472 0 R 474 0 R 476 0 R 478 0 R 480 0 R 482 0 R 485 0 R 487 0 R 489 0 R 491 0 R 493 0 R 495 0 R 497 0 R 499 0 R 501 0 R 503 0 R 505 0 R 508 0 R 510 0 R 512 0 R 515 0 R 517 0 R 519 0 R 521 0 R 523 0 R 525 0 R 527 0 R 529 0 R 531 0 R 533 0 R 535 0 R 537 0 R 539 0 R 541 0 R 543 0 R 545 0 R 548 0 R 550 0 R 552 0 R 555 0 R 557 0 R 559 0 R 561 0 R 564 0 R 567 0 R 570 0 R 573 0 R 576 0 R 579 0 R 581 0 R 583 0 R ] 2 [ 586 0 R 589 0 R 592 0 R 595 0 R 598 0 R 601 0 R 603 0 R 606 0 R 609 0 R 612 0 R 615 0 R 617 0 R 619 0 R 621 0 R 624 0 R 627 0 R 630 0 R 633 0 R 635 0 R 637 0 R 639 0 R 641 0 R 643 0 R 645 0 R 647 0 R 649 0 R 651 0 R 653 0 R 655 0 R 657 0 R 659 0 R 661 0 R 663 0 R 665 0 R 667 0 R 669 0 R 671 0 R 674 0 R 677 0 R 679 0 R 681 0 R 684 0 R 687 0 R 690 0 R 692 0 R 694 0 R 696 0 R 698 0 R 700 0 R 702 0 R 704 0 R 706 0 R 708 0 R 710 0 R 713 0 R 716 0 R 719 0 R ] 3 [ 722 0 R 725 0 R ] 4 [ 728 0 R 731 0 R 734 0 R 737 0 R 739 0 R 741 0 R 743 0 R 745 0 R 747 0 R 749 0 R 751 0 R 753 0 R 755 0 R 757 0 R 759 0 R 761 0 R 764 0 R 767 0 R 770 0 R 773 0 R 775 0 R 777 0 R 779 0 R 781 0 R 783 0 R 785 0 R 787 0 R 789 0 R 791 0 R 793 0 R 795 0 R 797 0 R 800 0 R 803 0 R 806 0 R 808 0 R 810 0 R 812 0 R 814 0 R 817 0 R 820 0 R 823 0 R 825 0 R 827 0 R 829 0 R 831 0 R 833 0 R 835 0 R 837 0 R 839 0 R 841 0 R 843 0 R 845 0 R 847 0 R 849 0 R 851 0 R 854 0 R 857 0 R 860 0 R ] 5 [ 863 0 R 865 0 R 867 0 R 869 0 R 871 0 R 873 0 R 875 0 R 877 0 R 879 0 R 881 0 R 883 0 R 885 0 R 887 0 R 889 0 R 891 0 R 894 0 R 897 0 R 900 0 R 903 0 R 905 0 R 907 0 R 909 0 R 911 0 R 913 0 R 915 0 R 917 0 R 919 0 R 922 0 R 924 0 R 926 0 R 928 0 R 930 0 R 932 0 R 934 0 R 936 0 R 939 0 R 942 0 R 945 0 R 948 0 R 950 0 R 952 0 R 954 0 R 956 0 R 958 0 R 960 0 R 962 0 R 964 0 R 967 0 R 969 0 R 972 0 R 975 0 R 978 0 R 981 0 R 984 0 R 987 0 R 989 0 R 992 0 R ] 6 [ 995 0 R 998 0 R 1001 0 R 1004 0 R 1007 0 R 1010 0 R 1013 0 R 1016 0 R 1019 0 R 1022 0 R 1025 0 R 1028 0 R 1031 0 R 1034 0 R 1037 0 R 1040 0 R 1043 0 R 1046 0 R 1048 0 R 1050 0 R 1052 0 R 1054 0 R 1057 0 R 1059 0 R 1061 0 R 1063 0 R 1065 0 R 1067 0 R 1069 0 R 1071 0 R 1073 0 R 1075 0 R 1077 0 R 1079 0 R 1082 0 R 1084 0 R ] 7 [ 1087 0 R 1090 0 R 1093 0 R 1096 0 R 1098 0 R 1100 0 R 1102 0 R 1104 0 R 1107 0 R 1109 0 R 1111 0 R 1113 0 R 1115 0 R 1117 0 R 1119 0 R 1122 0 R 1125 0 R 1128 0 R 1130 0 R 1132 0 R 1135 0 R 1138 0 R 1141 0 R 1144 0 R 1146 0 R 1148 0 R 1151 0 R 1154 0 R 1157 0 R 1160 0 R 1162 0 R 1164 0 R 1166 0 R 1168 0 R 1171 0 R 1173 0 R 1175 0 R 1177 0 R 1179 0 R 1181 0 R 1183 0 R 1185 0 R ] 8 [ 1188 0 R 1191 0 R 1194 0 R 1197 0 R 1200 0 R 1203 0 R 1206 0 R 1209 0 R 1211 0 R 1214 0 R 1217 0 R 1219 0 R 1221 0 R 1223 0 R 1226 0 R 1229 0 R 1232 0 R 1235 0 R 1238 0 R 1240 0 R 1243 0 R 1246 0 R 1248 0 R 1250 0 R 1252 0 R 1254 0 R 1256 0 R 1258 0 R 1260 0 R 1262 0 R 1265 0 R 1268 0 R 1271 0 R 1274 0 R 1277 0 R 1279 0 R 1281 0 R ] 9 [ 1283 0 R 1285 0 R 1287 0 R 1289 0 R 1291 0 R 1293 0 R 1295 0 R 1297 0 R 1300 0 R 1303 0 R 1306 0 R 1309 0 R 1311 0 R 1313 0 R 1316 0 R 1318 0 R 1320 0 R 1322 0 R 1324 0 R 1326 0 R 1329 0 R 1331 0 R 1334 0 R 1337 0 R 1340 0 R 1343 0 R 1345 0 R 1347 0 R 1350 0 R 1353 0 R 1355 0 R 1358 0 R 1361 0 R 1364 0 R 1367 0 R 1369 0 R 1372 0 R 1375 0 R 1378 0 R 1381 0 R 1384 0 R ] 10 [ 1387 0 R 1390 0 R 1393 0 R 1395 0 R 1397 0 R 1403 0 R 1406 0 R 1411 0 R 1414 0 R 1418 0 R 1421 0 R 1425 0 R 1428 0 R 1432 0 R 1435 0 R 1439 0 R 1442 0 R 1446 0 R 1449 0 R 1453 0 R 1456 0 R 1460 0 R 1463 0 R 1466 0 R 1468 0 R 1470 0 R 1473 0 R 1476 0 R 1479 0 R 1481 0 R 1483 0 R 1485 0 R 1487 0 R 1489 0 R 1491 0 R 1494 0 R 1496 0 R 1498 0 R 1501 0 R 1504 0 R 1507 0 R 1509 0 R 1511 0 R 1514 0 R 1516 0 R 1518 0 R 1521 0 R 1523 0 R 1526 0 R 1528 0 R 1530 0 R 1532 0 R 1534 0 R 1536 0 R 1538 0 R 1541 0 R 1543 0 R 1545 0 R 1547 0 R 1549 0 R 1551 0 R 1553 0 R 1556 0 R 1558 0 R 1560 0 R 1562 0 R 1564 0 R ] 11 [ 1567 0 R 1570 0 R 1572 0 R 1574 0 R 1578 0 R 1582 0 R 1585 0 R 1589 0 R 1593 0 R 1596 0 R 1598 0 R 1600 0 R 1604 0 R 1608 0 R 1611 0 R 1615 0 R 1619 0 R 1622 0 R 1624 0 R 1626 0 R 1629 0 R 1632 0 R 1636 0 R 1640 0 R 1643 0 R 1647 0 R 1651 0 R 1654 0 R 1656 0 R 1658 0 R 1662 0 R 1666 0 R 1669 0 R 1673 0 R 1677 0 R 1680 0 R 1684 0 R 1688 0 R 1691 0 R 1695 0 R 1699 0 R 1702 0 R 1706 0 R 1710 0 R 1713 0 R 1715 0 R 1717 0 R 1720 0 R 1723 0 R ] 12 [ 1726 0 R 1729 0 R 1732 0 R 1735 0 R 1738 0 R 1741 0 R 1743 0 R 1745 0 R 1747 0 R 1749 0 R 1752 0 R 1754 0 R 1756 0 R 1758 0 R 1760 0 R 1762 0 R 1764 0 R 1766 0 R 1768 0 R 1771 0 R 1774 0 R 1777 0 R 1779 0 R 1781 0 R 1783 0 R 1785 0 R 1787 0 R 1789 0 R 1791 0 R 1793 0 R 1795 0 R 1797 0 R 1800 0 R 1803 0 R 1806 0 R 1809 0 R 1811 0 R 1814 0 R ] 13 [ 1817 0 R 1820 0 R 1823 0 R 1825 0 R 1827 0 R 1829 0 R 1831 0 R 1834 0 R 1837 0 R 1840 0 R 1843 0 R 1846 0 R 1849 0 R 1852 0 R 1854 0 R 1856 0 R 1858 0 R 1860 0 R 1863 0 R 1865 0 R 1867 0 R 1869 0 R 1872 0 R 1875 0 R 1878 0 R 1880 0 R 1882 0 R 1884 0 R 1886 0 R 1889 0 R 1891 0 R 1894 0 R 1897 0 R 1900 0 R 1902 0 R 1905 0 R 1907 0 R 1910 0 R 1912 0 R 1915 0 R 1918 0 R 1921 0 R 1923 0 R 1925 0 R 1927 0 R 1929 0 R 1932 0 R 1934 0 R ] 14 [ 1937 0 R 1940 0 R 1943 0 R 1946 0 R 1948 0 R 1951 0 R 1954 0 R 1957 0 R 1960 0 R 1962 0 R 1965 0 R 1968 0 R 1971 0 R 1974 0 R 1976 0 R 1979 0 R 1982 0 R 1985 0 R 1987 0 R 1989 0 R 1991 0 R 1993 0 R 1995 0 R 1997 0 R 2000 0 R 2003 0 R 2006 0 R 2009 0 R 2012 0 R 2015 0 R 2017 0 R 2019 0 R ] 15 [ 2022 0 R 2025 0 R 2028 0 R 2030 0 R 2032 0 R 2034 0 R 2036 0 R 2038 0 R 2040 0 R 2042 0 R 2044 0 R 2046 0 R 2048 0 R 2051 0 R 2053 0 R 2055 0 R 2058 0 R 2061 0 R 2064 0 R 2067 0 R ] 16 [ 2070 0 R 2073 0 R 2076 0 R 2079 0 R 2082 0 R 2085 0 R 2088 0 R 2091 0 R 2093 0 R 2095 0 R 2098 0 R 2100 0 R 2102 0 R 2104 0 R 2106 0 R 2108 0 R 2111 0 R 2114 0 R 2117 0 R 2120 0 R 2123 0 R 2125 0 R 2127 0 R 2130 0 R 2132 0 R 2134 0 R 2136 0 R 2138 0 R 2140 0 R ] 17 [ 2143 0 R 2146 0 R 2149 0 R 2152 0 R 2154 0 R 2156 0 R 2159 0 R 2162 0 R 2165 0 R 2167 0 R 2169 0 R 2172 0 R 2175 0 R 2177 0 R 2179 0 R 2182 0 R 2184 0 R 2187 0 R 2189 0 R 2192 0 R 2194 0 R 2196 0 R 2198 0 R 2200 0 R 2202 0 R 2204 0 R 2206 0 R 2208 0 R 2210 0 R 2212 0 R 2214 0 R 2217 0 R 2220 0 R 2223 0 R 2225 0 R 2227 0 R 2230 0 R ] ]
  >>
>>
endobj

2233 0 obj
<<
  /Count 3
  /Dest /Methods_that_return_Taps
  /First 2234 0 R
  /Last 2235 0 R
  /Next 2236 0 R
  /Prev 298 0 R
  /SE 437 0 R
  /Title (Methods that return Taps)
>>
endobj

2234 0 obj
<<
  /Count 1
  /Dest /method_tap
  /Next 2235 0 R
  /SE 440 0 R
  /Title (method tap)
>>
endobj

2235 0 obj
<<
  /Count 1
  /Dest /method_act
  /Prev 2234 0 R
  /SE 572 0 R
  /Title (method act)
>>
endobj

2236 0 obj
<<
  /Count 6
  /Dest /Utility_methods
  /First 2237 0 R
  /Last 2241 0 R
  /Next 2242 0 R
  /Prev 2233 0 R
  /SE 585 0 R
  /Title (Utility methods)
>>
endobj

2237 0 obj
<<
  /Count 1
  /Dest /method_Capture
  /Next 2238 0 R
  /SE 588 0 R
  /Title (method Capture)
>>
endobj

2238 0 obj
<<
  /Count 1
  /Dest /method_Channel
  /Next 2239 0 R
  /Prev 2237 0 R
  /SE 605 0 R
  /Title (method Channel)
>>
endobj

2239 0 obj
<<
  /Count 1
  /Dest /method_Promise
  /Next 2240 0 R
  /Prev 2238 0 R
  /SE 623 0 R
  /Title (method Promise)
>>
endobj

2240 0 obj
<<
  /Count 1
  /Dest /method_live
  /Next 2241 0 R
  /Prev 2239 0 R
  /SE 683 0 R
  /Title (method live)
>>
endobj

2241 0 obj
<<
  /Count 1
  /Dest /method_schedule-on
  /Prev 2240 0 R
  /SE 715 0 R
  /Title (method schedule-on)
>>
endobj

2242 0 obj
<<
  /Count 9
  /Dest /Methods_that_wait_until_the_supply_is_done
  /First 2243 0 R
  /Last 2250 0 R
  /Next 2251 0 R
  /Prev 2236 0 R
  /SE 727 0 R
  /Title (Methods that wait until the supply is done)
>>
endobj

2243 0 obj
<<
  /Count 1
  /Dest /method_wait
  /Next 2244 0 R
  /SE 730 0 R
  /Title (method wait)
>>
endobj

2244 0 obj
<<
  /Count 1
  /Dest /method_list
  /Next 2245 0 R
  /Prev 2243 0 R
  /SE 766 0 R
  /Title (method list)
>>
endobj

2245 0 obj
<<
  /Count 1
  /Dest /method_Seq
  /Next 2246 0 R
  /Prev 2244 0 R
  /SE 799 0 R
  /Title (method Seq)
>>
endobj

2246 0 obj
<<
  /Count 1
  /Dest /method_grab
  /Next 2247 0 R
  /Prev 2245 0 R
  /SE 816 0 R
  /Title (method grab)
>>
endobj

2247 0 obj
<<
  /Count 1
  /Dest /method_reverse
  /Next 2248 0 R
  /Prev 2246 0 R
  /SE 856 0 R
  /Title (method reverse)
>>
endobj

2248 0 obj
<<
  /Count 1
  /Dest /method_sort
  /Next 2249 0 R
  /Prev 2247 0 R
  /SE 896 0 R
  /Title (method sort)
>>
endobj

2249 0 obj
<<
  /Count 1
  /Dest /method_collate
  /Next 2250 0 R
  /Prev 2248 0 R
  /SE 941 0 R
  /Title (method collate)
>>
endobj

2250 0 obj
<<
  /Count 1
  /Dest /method_reduce
  /Prev 2249 0 R
  /SE 974 0 R
  /Title (method reduce)
>>
endobj

2251 0 obj
<<
  /Count 35
  /Dest /Methods_that_return_another_Supply
  /First 2252 0 R
  /Last 2285 0 R
  /Next 2286 0 R
  /Prev 2242 0 R
  /SE 994 0 R
  /Title (Methods that return another Supply)
>>
endobj

2252 0 obj
<<
  /Count 1
  /Dest /method_from-list
  /Next 2253 0 R
  /SE 997 0 R
  /Title (method from-list)
>>
endobj

2253 0 obj
<<
  /Count 1
  /Dest /method_share
  /Next 2254 0 R
  /Prev 2252 0 R
  /SE 1009 0 R
  /Title (method share)
>>
endobj

2254 0 obj
<<
  /Count 1
  /Dest /method_flat
  /Next 2255 0 R
  /Prev 2253 0 R
  /SE 1021 0 R
  /Title (method flat)
>>
endobj

2255 0 obj
<<
  /Count 1
  /Dest /method_do
  /Next 2256 0 R
  /Prev 2254 0 R
  /SE 1030 0 R
  /Title (method do)
>>
endobj

2256 0 obj
<<
  /Count 1
  /Dest /method_on-close
  /Next 2257 0 R
  /Prev 2255 0 R
  /SE 1039 0 R
  /Title (method on-close)
>>
endobj

2257 0 obj
<<
  /Count 1
  /Dest /method_interval
  /Next 2258 0 R
  /Prev 2256 0 R
  /SE 1089 0 R
  /Title (method interval)
>>
endobj

2258 0 obj
<<
  /Count 1
  /Dest /method_grep
  /Next 2259 0 R
  /Prev 2257 0 R
  /SE 1121 0 R
  /Title (method grep)
>>
endobj

2259 0 obj
<<
  /Count 1
  /Dest /method_map
  /Next 2260 0 R
  /Prev 2258 0 R
  /SE 1137 0 R
  /Title (method map)
>>
endobj

2260 0 obj
<<
  /Count 1
  /Dest /method_batch
  /Next 2261 0 R
  /Prev 2259 0 R
  /SE 1153 0 R
  /Title (method batch)
>>
endobj

2261 0 obj
<<
  /Count 1
  /Dest /method_elems
  /Next 2262 0 R
  /Prev 2260 0 R
  /SE 1187 0 R
  /Title (method elems)
>>
endobj

2262 0 obj
<<
  /Count 1
  /Dest /method_head
  /Next 2263 0 R
  /Prev 2261 0 R
  /SE 1196 0 R
  /Title (method head)
>>
endobj

2263 0 obj
<<
  /Count 1
  /Dest /method_tail
  /Next 2264 0 R
  /Prev 2262 0 R
  /SE 1228 0 R
  /Title (method tail)
>>
endobj

2264 0 obj
<<
  /Count 1
  /Dest /method_first
  /Next 2265 0 R
  /Prev 2263 0 R
  /SE 1270 0 R
  /Title (method first)
>>
endobj

2265 0 obj
<<
  /Count 1
  /Dest /method_split
  /Next 2266 0 R
  /Prev 2264 0 R
  /SE 1302 0 R
  /Title (method split)
>>
endobj

2266 0 obj
<<
  /Count 1
  /Dest /method_rotate
  /Next 2267 0 R
  /Prev 2265 0 R
  /SE 1336 0 R
  /Title (method rotate)
>>
endobj

2267 0 obj
<<
  /Count 1
  /Dest /method_rotor
  /Next 2268 0 R
  /Prev 2266 0 R
  /SE 1357 0 R
  /Title (method rotor)
>>
endobj

2268 0 obj
<<
  /Count 1
  /Dest /method_delayed
  /Next 2269 0 R
  /Prev 2267 0 R
  /SE 1371 0 R
  /Title (method delayed)
>>
endobj

2269 0 obj
<<
  /Count 4
  /Dest /method_throttle
  /First 2270 0 R
  /Last 2272 0 R
  /Next 2273 0 R
  /Prev 2268 0 R
  /SE 1380 0 R
  /Title (method throttle)
>>
endobj

2270 0 obj
<<
  /Count 1
  /Dest /control_messages
  /Next 2271 0 R
  /SE 1566 0 R
  /Title (control messages)
>>
endobj

2271 0 obj
<<
  /Count 1
  /Dest /status_message
  /Next 2272 0 R
  /Prev 2270 0 R
  /SE 1628 0 R
  /Title (status message)
>>
endobj

2272 0 obj
<<
  /Count 1
  /Dest /Examples
  /Prev 2271 0 R
  /SE 1719 0 R
  /Title (Examples)
>>
endobj

2273 0 obj
<<
  /Count 1
  /Dest /method_stable
  /Next 2274 0 R
  /Prev 2269 0 R
  /SE 1734 0 R
  /Title (method stable)
>>
endobj

2274 0 obj
<<
  /Count 1
  /Dest /method_produce
  /Next 2275 0 R
  /Prev 2273 0 R
  /SE 1799 0 R
  /Title (method produce)
>>
endobj

2275 0 obj
<<
  /Count 1
  /Dest /method_lines
  /Next 2276 0 R
  /Prev 2274 0 R
  /SE 1816 0 R
  /Title (method lines)
>>
endobj

2276 0 obj
<<
  /Count 1
  /Dest /method_words
  /Next 2277 0 R
  /Prev 2275 0 R
  /SE 1833 0 R
  /Title (method words)
>>
endobj

2277 0 obj
<<
  /Count 1
  /Dest /method_unique
  /Next 2278 0 R
  /Prev 2276 0 R
  /SE 1845 0 R
  /Title (method unique)
>>
endobj

2278 0 obj
<<
  /Count 1
  /Dest /method_repeated
  /Next 2279 0 R
  /Prev 2277 0 R
  /SE 1871 0 R
  /Title (method repeated)
>>
endobj

2279 0 obj
<<
  /Count 1
  /Dest /method_squish
  /Next 2280 0 R
  /Prev 2278 0 R
  /SE 1914 0 R
  /Title (method squish)
>>
endobj

2280 0 obj
<<
  /Count 1
  /Dest /method_max
  /Next 2281 0 R
  /Prev 2279 0 R
  /SE 1936 0 R
  /Title (method max)
>>
endobj

2281 0 obj
<<
  /Count 1
  /Dest /method_min
  /Next 2282 0 R
  /Prev 2280 0 R
  /SE 1950 0 R
  /Title (method min)
>>
endobj

2282 0 obj
<<
  /Count 1
  /Dest /method_minmax
  /Next 2283 0 R
  /Prev 2281 0 R
  /SE 1964 0 R
  /Title (method minmax)
>>
endobj

2283 0 obj
<<
  /Count 1
  /Dest /method_skip
  /Next 2284 0 R
  /Prev 2282 0 R
  /SE 1978 0 R
  /Title (method skip)
>>
endobj

2284 0 obj
<<
  /Count 1
  /Dest /method_start
  /Next 2285 0 R
  /Prev 2283 0 R
  /SE 2002 0 R
  /Title (method start)
>>
endobj

2285 0 obj
<<
  /Count 1
  /Dest /method_migrate
  /Prev 2284 0 R
  /SE 2021 0 R
  /Title (method migrate)
>>
endobj

2286 0 obj
<<
  /Count 4
  /Dest /Methods_that_combine_supplies
  /First 2287 0 R
  /Last 2289 0 R
  /Next 2290 0 R
  /Prev 2251 0 R
  /SE 2069 0 R
  /Title (Methods that combine supplies)
>>
endobj

2287 0 obj
<<
  /Count 1
  /Dest /method_merge
  /Next 2288 0 R
  /SE 2072 0 R
  /Title (method merge)
>>
endobj

2288 0 obj
<<
  /Count 1
  /Dest /method_zip
  /Next 2289 0 R
  /Prev 2287 0 R
  /SE 2081 0 R
  /Title (method zip)
>>
endobj

2289 0 obj
<<
  /Count 1
  /Dest /method_zip-latest
  /Prev 2288 0 R
  /SE 2113 0 R
  /Title (method zip-latest)
>>
endobj

2290 0 obj
<<
  /Count 3
  /Dest /I#2fO_features_exposed_as_supplies
  /First 2291 0 R
  /Last 2292 0 R
  /Prev 2286 0 R
  /SE 2142 0 R
  /Title (I/O features exposed as supplies)
>>
endobj

2291 0 obj
<<
  /Count 1
  /Dest /sub_signal
  /Next 2292 0 R
  /SE 2145 0 R
  /Title (sub signal)
>>
endobj

2292 0 obj
<<
  /Count 1
  /Dest /method_IO::Notification.watch-path
  /Prev 2291 0 R
  /SE 2216 0 R
  /Title (method IO::Notification.watch-path)
>>
endobj

xref
0 2293
0000000000 65535 f 
0000000015 00000 n 
0000000245 00000 n 
0000000393 00000 n 
0000003089 00000 n 
0000003430 00000 n 
0000003585 00000 n 
0000003650 00000 n 
0000003815 00000 n 
0000003919 00000 n 
0000004077 00000 n 
0000004144 00000 n 
0000004300 00000 n 
0000004362 00000 n 
0000004516 00000 n 
0000004582 00000 n 
0000004738 00000 n 
0000004805 00000 n 
0000004972 00000 n 
0000005051 00000 n 
0000005214 00000 n 
0000005297 00000 n 
0000013316 00000 n 
0000013515 00000 n 
0000013902 00000 n 
0000014057 00000 n 
0000014119 00000 n 
0000014274 00000 n 
0000014336 00000 n 
0000023460 00000 n 
0000023508 00000 n 
0000023557 00000 n 
0000023605 00000 n 
0000023654 00000 n 
0000023702 00000 n 
0000023751 00000 n 
0000023799 00000 n 
0000023848 00000 n 
0000023956 00000 n 
0000024043 00000 n 
0000024160 00000 n 
0000024269 00000 n 
0000024776 00000 n 
0000024941 00000 n 
0000025019 00000 n 
0000025176 00000 n 
0000025242 00000 n 
0000025399 00000 n 
0000025465 00000 n 
0000033406 00000 n 
0000033454 00000 n 
0000033503 00000 n 
0000033551 00000 n 
0000033600 00000 n 
0000033648 00000 n 
0000033697 00000 n 
0000033746 00000 n 
0000033794 00000 n 
0000033843 00000 n 
0000033891 00000 n 
0000033940 00000 n 
0000033988 00000 n 
0000034037 00000 n 
0000034085 00000 n 
0000034247 00000 n 
0000034604 00000 n 
0000035076 00000 n 
0000042881 00000 n 
0000042929 00000 n 
0000042978 00000 n 
0000043026 00000 n 
0000043075 00000 n 
0000043123 00000 n 
0000043172 00000 n 
0000043221 00000 n 
0000043269 00000 n 
0000043318 00000 n 
0000043366 00000 n 
0000043415 00000 n 
0000043463 00000 n 
0000043512 00000 n 
0000043560 00000 n 
0000044070 00000 n 
0000044227 00000 n 
0000044291 00000 n 
0000044454 00000 n 
0000044531 00000 n 
0000044694 00000 n 
0000044772 00000 n 
0000052669 00000 n 
0000052717 00000 n 
0000052766 00000 n 
0000052814 00000 n 
0000052863 00000 n 
0000052911 00000 n 
0000052960 00000 n 
0000053009 00000 n 
0000053057 00000 n 
0000053106 00000 n 
0000053154 00000 n 
0000053203 00000 n 
0000053252 00000 n 
0000053302 00000 n 
0000053351 00000 n 
0000053909 00000 n 
0000054065 00000 n 
0000054128 00000 n 
0000054285 00000 n 
0000054362 00000 n 
0000060221 00000 n 
0000060270 00000 n 
0000060320 00000 n 
0000060369 00000 n 
0000060419 00000 n 
0000060468 00000 n 
0000060518 00000 n 
0000060567 00000 n 
0000060617 00000 n 
0000060667 00000 n 
0000060716 00000 n 
0000060766 00000 n 
0000060815 00000 n 
0000060865 00000 n 
0000060914 00000 n 
0000060964 00000 n 
0000061013 00000 n 
0000061461 00000 n 
0000068250 00000 n 
0000068299 00000 n 
0000068349 00000 n 
0000068398 00000 n 
0000068448 00000 n 
0000068498 00000 n 
0000068547 00000 n 
0000068597 00000 n 
0000068646 00000 n 
0000068696 00000 n 
0000068745 00000 n 
0000068795 00000 n 
0000068844 00000 n 
0000069402 00000 n 
0000069565 00000 n 
0000069641 00000 n 
0000069804 00000 n 
0000069880 00000 n 
0000075980 00000 n 
0000076029 00000 n 
0000076079 00000 n 
0000076128 00000 n 
0000076178 00000 n 
0000076227 00000 n 
0000076277 00000 n 
0000076326 00000 n 
0000076376 00000 n 
0000076426 00000 n 
0000076475 00000 n 
0000076525 00000 n 
0000076574 00000 n 
0000076624 00000 n 
0000076673 00000 n 
0000076723 00000 n 
0000076772 00000 n 
0000077306 00000 n 
0000077470 00000 n 
0000077547 00000 n 
0000077705 00000 n 
0000077865 00000 n 
0000077928 00000 n 
0000078091 00000 n 
0000078168 00000 n 
0000084869 00000 n 
0000084918 00000 n 
0000084968 00000 n 
0000085017 00000 n 
0000085067 00000 n 
0000085116 00000 n 
0000085166 00000 n 
0000085216 00000 n 
0000085265 00000 n 
0000085315 00000 n 
0000085364 00000 n 
0000085414 00000 n 
0000085463 00000 n 
0000085513 00000 n 
0000085562 00000 n 
0000085850 00000 n 
0000086019 00000 n 
0000086085 00000 n 
0000095636 00000 n 
0000095685 00000 n 
0000095735 00000 n 
0000095784 00000 n 
0000095834 00000 n 
0000096074 00000 n 
0000101506 00000 n 
0000101555 00000 n 
0000101605 00000 n 
0000102036 00000 n 
0000102201 00000 n 
0000102281 00000 n 
0000109177 00000 n 
0000109226 00000 n 
0000109276 00000 n 
0000109326 00000 n 
0000109375 00000 n 
0000109425 00000 n 
0000109474 00000 n 
0000109524 00000 n 
0000109573 00000 n 
0000109623 00000 n 
0000109672 00000 n 
0000110215 00000 n 
0000110376 00000 n 
0000110481 00000 n 
0000110642 00000 n 
0000110747 00000 n 
0000110904 00000 n 
0000111011 00000 n 
0000111168 00000 n 
0000111247 00000 n 
0000111406 00000 n 
0000111511 00000 n 
0000118708 00000 n 
0000118757 00000 n 
0000118807 00000 n 
0000118856 00000 n 
0000118906 00000 n 
0000118955 00000 n 
0000119005 00000 n 
0000119055 00000 n 
0000119104 00000 n 
0000119154 00000 n 
0000119203 00000 n 
0000119253 00000 n 
0000119302 00000 n 
0000119352 00000 n 
0000119401 00000 n 
0000119888 00000 n 
0000120046 00000 n 
0000120121 00000 n 
0000120283 00000 n 
0000120358 00000 n 
0000120523 00000 n 
0000120601 00000 n 
0000126444 00000 n 
0000126493 00000 n 
0000126543 00000 n 
0000126592 00000 n 
0000126642 00000 n 
0000126692 00000 n 
0000126741 00000 n 
0000126791 00000 n 
0000126840 00000 n 
0000126890 00000 n 
0000126939 00000 n 
0000126989 00000 n 
0000127038 00000 n 
0000127370 00000 n 
0000131425 00000 n 
0000131474 00000 n 
0000131524 00000 n 
0000131573 00000 n 
0000131623 00000 n 
0000131672 00000 n 
0000131722 00000 n 
0000132084 00000 n 
0000132244 00000 n 
0000132308 00000 n 
0000132468 00000 n 
0000132532 00000 n 
0000137344 00000 n 
0000137393 00000 n 
0000137443 00000 n 
0000137492 00000 n 
0000137542 00000 n 
0000137591 00000 n 
0000137641 00000 n 
0000138080 00000 n 
0000138233 00000 n 
0000138312 00000 n 
0000138467 00000 n 
0000138546 00000 n 
0000144219 00000 n 
0000144268 00000 n 
0000144318 00000 n 
0000144368 00000 n 
0000144417 00000 n 
0000144467 00000 n 
0000144516 00000 n 
0000144566 00000 n 
0000144615 00000 n 
0000144665 00000 n 
0000144714 00000 n 
0000144763 00000 n 
0000144813 00000 n 
0000144862 00000 n 
0000144912 00000 n 
0000145023 00000 n 
0000145087 00000 n 
0000145232 00000 n 
0000145403 00000 n 
0000145478 00000 n 
0000145632 00000 n 
0000145685 00000 n 
0000148224 00000 n 
0000148299 00000 n 
0000148415 00000 n 
0000148468 00000 n 
0000148545 00000 n 
0000148683 00000 n 
0000148736 00000 n 
0000148850 00000 n 
0000149011 00000 n 
0000149064 00000 n 
0000149141 00000 n 
0000149250 00000 n 
0000149303 00000 n 
0000149446 00000 n 
0000149499 00000 n 
0000149605 00000 n 
0000149658 00000 n 
0000149819 00000 n 
0000149872 00000 n 
0000149962 00000 n 
0000150106 00000 n 
0000150159 00000 n 
0000150236 00000 n 
0000150354 00000 n 
0000150407 00000 n 
0000150566 00000 n 
0000150620 00000 n 
0000150766 00000 n 
0000150901 00000 n 
0000150955 00000 n 
0000151061 00000 n 
0000151115 00000 n 
0000151222 00000 n 
0000151276 00000 n 
0000151387 00000 n 
0000151441 00000 n 
0000151565 00000 n 
0000151619 00000 n 
0000151725 00000 n 
0000151779 00000 n 
0000151955 00000 n 
0000152009 00000 n 
0000152116 00000 n 
0000152170 00000 n 
0000152522 00000 n 
0000152576 00000 n 
0000152690 00000 n 
0000152804 00000 n 
0000152858 00000 n 
0000152969 00000 n 
0000153023 00000 n 
0000153250 00000 n 
0000153304 00000 n 
0000153421 00000 n 
0000153475 00000 n 
0000153728 00000 n 
0000153782 00000 n 
0000153960 00000 n 
0000154064 00000 n 
0000154118 00000 n 
0000154224 00000 n 
0000154278 00000 n 
0000154371 00000 n 
0000154425 00000 n 
0000154533 00000 n 
0000154587 00000 n 
0000154711 00000 n 
0000154765 00000 n 
0000154842 00000 n 
0000154952 00000 n 
0000155006 00000 n 
0000155124 00000 n 
0000155178 00000 n 
0000155286 00000 n 
0000155340 00000 n 
0000155478 00000 n 
0000155532 00000 n 
0000155638 00000 n 
0000155692 00000 n 
0000155802 00000 n 
0000155856 00000 n 
0000155966 00000 n 
0000156020 00000 n 
0000156130 00000 n 
0000156184 00000 n 
0000156261 00000 n 
0000156520 00000 n 
0000156574 00000 n 
0000156736 00000 n 
0000156842 00000 n 
0000156896 00000 n 
0000156973 00000 n 
0000157086 00000 n 
0000157140 00000 n 
0000157251 00000 n 
0000157305 00000 n 
0000157411 00000 n 
0000157465 00000 n 
0000157610 00000 n 
0000157664 00000 n 
0000157741 00000 n 
0000157851 00000 n 
0000157905 00000 n 
0000158009 00000 n 
0000158063 00000 n 
0000158140 00000 n 
0000158251 00000 n 
0000158305 00000 n 
0000158420 00000 n 
0000158474 00000 n 
0000158585 00000 n 
0000158639 00000 n 
0000158751 00000 n 
0000158805 00000 n 
0000158919 00000 n 
0000159028 00000 n 
0000159082 00000 n 
0000159190 00000 n 
0000159244 00000 n 
0000159413 00000 n 
0000159467 00000 n 
0000159544 00000 n 
0000159666 00000 n 
0000159720 00000 n 
0000159813 00000 n 
0000159867 00000 n 
0000159957 00000 n 
0000160096 00000 n 
0000160150 00000 n 
0000160227 00000 n 
0000160345 00000 n 
0000160399 00000 n 
0000160492 00000 n 
0000160546 00000 n 
0000160621 00000 n 
0000160749 00000 n 
0000160803 00000 n 
0000160878 00000 n 
0000160992 00000 n 
0000161046 00000 n 
0000161123 00000 n 
0000161359 00000 n 
0000161413 00000 n 
0000161503 00000 n 
0000161813 00000 n 
0000161867 00000 n 
0000161973 00000 n 
0000162027 00000 n 
0000162135 00000 n 
0000162189 00000 n 
0000162383 00000 n 
0000162489 00000 n 
0000162543 00000 n 
0000162650 00000 n 
0000162704 00000 n 
0000162894 00000 n 
0000162948 00000 n 
0000163054 00000 n 
0000163108 00000 n 
0000163345 00000 n 
0000163400 00000 n 
0000163506 00000 n 
0000163561 00000 n 
0000163695 00000 n 
0000163750 00000 n 
0000163860 00000 n 
0000163915 00000 n 
0000164097 00000 n 
0000164152 00000 n 
0000164262 00000 n 
0000164317 00000 n 
0000164446 00000 n 
0000164501 00000 n 
0000164607 00000 n 
0000164662 00000 n 
0000164804 00000 n 
0000164859 00000 n 
0000164966 00000 n 
0000165021 00000 n 
0000165183 00000 n 
0000165238 00000 n 
0000165400 00000 n 
0000165506 00000 n 
0000165561 00000 n 
0000165668 00000 n 
0000165723 00000 n 
0000165929 00000 n 
0000165984 00000 n 
0000166090 00000 n 
0000166145 00000 n 
0000166280 00000 n 
0000166335 00000 n 
0000166445 00000 n 
0000166500 00000 n 
0000166643 00000 n 
0000166698 00000 n 
0000166808 00000 n 
0000166863 00000 n 
0000167016 00000 n 
0000167071 00000 n 
0000167178 00000 n 
0000167233 00000 n 
0000167436 00000 n 
0000167491 00000 n 
0000167717 00000 n 
0000167823 00000 n 
0000167878 00000 n 
0000167984 00000 n 
0000168039 00000 n 
0000168170 00000 n 
0000168225 00000 n 
0000168302 00000 n 
0000168407 00000 n 
0000168462 00000 n 
0000168664 00000 n 
0000168719 00000 n 
0000168825 00000 n 
0000168880 00000 n 
0000168973 00000 n 
0000169028 00000 n 
0000169134 00000 n 
0000169189 00000 n 
0000169282 00000 n 
0000169337 00000 n 
0000169443 00000 n 
0000169498 00000 n 
0000169638 00000 n 
0000169693 00000 n 
0000169798 00000 n 
0000169853 00000 n 
0000170006 00000 n 
0000170061 00000 n 
0000170169 00000 n 
0000170224 00000 n 
0000170383 00000 n 
0000170438 00000 n 
0000170544 00000 n 
0000170599 00000 n 
0000170719 00000 n 
0000170774 00000 n 
0000170879 00000 n 
0000170934 00000 n 
0000171114 00000 n 
0000171169 00000 n 
0000171299 00000 n 
0000171408 00000 n 
0000171463 00000 n 
0000171568 00000 n 
0000171623 00000 n 
0000171752 00000 n 
0000171807 00000 n 
0000171884 00000 n 
0000171989 00000 n 
0000172044 00000 n 
0000172174 00000 n 
0000172229 00000 n 
0000172336 00000 n 
0000172391 00000 n 
0000172528 00000 n 
0000172583 00000 n 
0000172660 00000 n 
0000172869 00000 n 
0000172924 00000 n 
0000172998 00000 n 
0000173109 00000 n 
0000173164 00000 n 
0000173241 00000 n 
0000173376 00000 n 
0000173431 00000 n 
0000173506 00000 n 
0000173620 00000 n 
0000173675 00000 n 
0000173752 00000 n 
0000173896 00000 n 
0000173951 00000 n 
0000174041 00000 n 
0000174215 00000 n 
0000174270 00000 n 
0000174375 00000 n 
0000174430 00000 n 
0000174607 00000 n 
0000174662 00000 n 
0000174737 00000 n 
0000174856 00000 n 
0000174910 00000 n 
0000174985 00000 n 
0000175103 00000 n 
0000175157 00000 n 
0000175231 00000 n 
0000175344 00000 n 
0000175398 00000 n 
0000175475 00000 n 
0000175620 00000 n 
0000175674 00000 n 
0000175764 00000 n 
0000175888 00000 n 
0000175942 00000 n 
0000176019 00000 n 
0000176134 00000 n 
0000176188 00000 n 
0000176307 00000 n 
0000176361 00000 n 
0000176436 00000 n 
0000176554 00000 n 
0000176608 00000 n 
0000176685 00000 n 
0000176830 00000 n 
0000176884 00000 n 
0000176998 00000 n 
0000177110 00000 n 
0000177164 00000 n 
0000177241 00000 n 
0000177350 00000 n 
0000177405 00000 n 
0000177580 00000 n 
0000177635 00000 n 
0000177742 00000 n 
0000177797 00000 n 
0000177984 00000 n 
0000178039 00000 n 
0000178114 00000 n 
0000178232 00000 n 
0000178287 00000 n 
0000178364 00000 n 
0000178509 00000 n 
0000178564 00000 n 
0000178806 00000 n 
0000178918 00000 n 
0000178973 00000 n 
0000179050 00000 n 
0000179159 00000 n 
0000179214 00000 n 
0000179344 00000 n 
0000179399 00000 n 
0000179507 00000 n 
0000179562 00000 n 
0000179668 00000 n 
0000179723 00000 n 
0000179829 00000 n 
0000179884 00000 n 
0000179995 00000 n 
0000180050 00000 n 
0000180158 00000 n 
0000180213 00000 n 
0000180348 00000 n 
0000180403 00000 n 
0000180512 00000 n 
0000180567 00000 n 
0000180737 00000 n 
0000180792 00000 n 
0000180897 00000 n 
0000180952 00000 n 
0000181063 00000 n 
0000181118 00000 n 
0000181226 00000 n 
0000181281 00000 n 
0000181396 00000 n 
0000181451 00000 n 
0000181557 00000 n 
0000181612 00000 n 
0000181728 00000 n 
0000181783 00000 n 
0000181889 00000 n 
0000181944 00000 n 
0000182057 00000 n 
0000182112 00000 n 
0000182221 00000 n 
0000182276 00000 n 
0000182414 00000 n 
0000182469 00000 n 
0000182546 00000 n 
0000182868 00000 n 
0000182923 00000 n 
0000183013 00000 n 
0000183119 00000 n 
0000183174 00000 n 
0000183283 00000 n 
0000183338 00000 n 
0000183632 00000 n 
0000183687 00000 n 
0000183762 00000 n 
0000183877 00000 n 
0000183932 00000 n 
0000184009 00000 n 
0000184148 00000 n 
0000184203 00000 n 
0000184365 00000 n 
0000184475 00000 n 
0000184530 00000 n 
0000184636 00000 n 
0000184691 00000 n 
0000184894 00000 n 
0000184949 00000 n 
0000185055 00000 n 
0000185110 00000 n 
0000185228 00000 n 
0000185283 00000 n 
0000185391 00000 n 
0000185446 00000 n 
0000185595 00000 n 
0000185650 00000 n 
0000185768 00000 n 
0000185823 00000 n 
0000185931 00000 n 
0000185986 00000 n 
0000186093 00000 n 
0000186148 00000 n 
0000186253 00000 n 
0000186308 00000 n 
0000186385 00000 n 
0000186592 00000 n 
0000186647 00000 n 
0000186722 00000 n 
0000186844 00000 n 
0000186899 00000 n 
0000186976 00000 n 
0000187132 00000 n 
0000187187 00000 n 
0000187261 00000 n 
0000187429 00000 n 
0000187483 00000 n 
0000187557 00000 n 
0000187750 00000 n 
0000187804 00000 n 
0000187879 00000 n 
0000188025 00000 n 
0000188079 00000 n 
0000188154 00000 n 
0000188269 00000 n 
0000188323 00000 n 
0000188400 00000 n 
0000188528 00000 n 
0000188582 00000 n 
0000188760 00000 n 
0000188871 00000 n 
0000188925 00000 n 
0000189033 00000 n 
0000189087 00000 n 
0000189259 00000 n 
0000189313 00000 n 
0000189419 00000 n 
0000189473 00000 n 
0000189648 00000 n 
0000189702 00000 n 
0000189810 00000 n 
0000189864 00000 n 
0000189971 00000 n 
0000190025 00000 n 
0000190130 00000 n 
0000190185 00000 n 
0000190318 00000 n 
0000190373 00000 n 
0000190479 00000 n 
0000190534 00000 n 
0000190700 00000 n 
0000190755 00000 n 
0000190861 00000 n 
0000190916 00000 n 
0000191021 00000 n 
0000191076 00000 n 
0000191153 00000 n 
0000191418 00000 n 
0000191473 00000 n 
0000191548 00000 n 
0000191663 00000 n 
0000191718 00000 n 
0000191795 00000 n 
0000191929 00000 n 
0000191984 00000 n 
0000192162 00000 n 
0000192273 00000 n 
0000192328 00000 n 
0000192436 00000 n 
0000192491 00000 n 
0000192663 00000 n 
0000192718 00000 n 
0000192826 00000 n 
0000192881 00000 n 
0000193035 00000 n 
0000193090 00000 n 
0000193198 00000 n 
0000193253 00000 n 
0000193359 00000 n 
0000193414 00000 n 
0000193520 00000 n 
0000193575 00000 n 
0000193686 00000 n 
0000193741 00000 n 
0000193849 00000 n 
0000193904 00000 n 
0000193997 00000 n 
0000194052 00000 n 
0000194158 00000 n 
0000194213 00000 n 
0000194395 00000 n 
0000194450 00000 n 
0000194525 00000 n 
0000194639 00000 n 
0000194694 00000 n 
0000194771 00000 n 
0000194898 00000 n 
0000194953 00000 n 
0000195067 00000 n 
0000195179 00000 n 
0000195234 00000 n 
0000195339 00000 n 
0000195394 00000 n 
0000195545 00000 n 
0000195600 00000 n 
0000195708 00000 n 
0000195763 00000 n 
0000195875 00000 n 
0000195930 00000 n 
0000196005 00000 n 
0000196120 00000 n 
0000196175 00000 n 
0000196252 00000 n 
0000196404 00000 n 
0000196459 00000 n 
0000196653 00000 n 
0000196764 00000 n 
0000196819 00000 n 
0000196927 00000 n 
0000196982 00000 n 
0000197113 00000 n 
0000197168 00000 n 
0000197274 00000 n 
0000197329 00000 n 
0000197439 00000 n 
0000197494 00000 n 
0000197606 00000 n 
0000197661 00000 n 
0000197828 00000 n 
0000197883 00000 n 
0000197991 00000 n 
0000198046 00000 n 
0000198166 00000 n 
0000198221 00000 n 
0000198329 00000 n 
0000198384 00000 n 
0000198477 00000 n 
0000198532 00000 n 
0000198638 00000 n 
0000198693 00000 n 
0000198855 00000 n 
0000198910 00000 n 
0000199018 00000 n 
0000199073 00000 n 
0000199166 00000 n 
0000199221 00000 n 
0000199298 00000 n 
0000199615 00000 n 
0000199670 00000 n 
0000199745 00000 n 
0000199863 00000 n 
0000199918 00000 n 
0000199995 00000 n 
0000200139 00000 n 
0000200194 00000 n 
0000200388 00000 n 
0000200499 00000 n 
0000200553 00000 n 
0000200661 00000 n 
0000200715 00000 n 
0000200845 00000 n 
0000200899 00000 n 
0000201007 00000 n 
0000201061 00000 n 
0000201170 00000 n 
0000201224 00000 n 
0000201330 00000 n 
0000201384 00000 n 
0000201549 00000 n 
0000201603 00000 n 
0000201711 00000 n 
0000201765 00000 n 
0000201902 00000 n 
0000201956 00000 n 
0000202064 00000 n 
0000202118 00000 n 
0000202211 00000 n 
0000202266 00000 n 
0000202372 00000 n 
0000202427 00000 n 
0000202589 00000 n 
0000202644 00000 n 
0000202752 00000 n 
0000202807 00000 n 
0000202900 00000 n 
0000202955 00000 n 
0000203032 00000 n 
0000203339 00000 n 
0000203394 00000 n 
0000203469 00000 n 
0000203584 00000 n 
0000203639 00000 n 
0000203716 00000 n 
0000203881 00000 n 
0000203936 00000 n 
0000204146 00000 n 
0000204257 00000 n 
0000204312 00000 n 
0000204420 00000 n 
0000204475 00000 n 
0000204605 00000 n 
0000204660 00000 n 
0000204768 00000 n 
0000204823 00000 n 
0000204932 00000 n 
0000204987 00000 n 
0000205093 00000 n 
0000205148 00000 n 
0000205342 00000 n 
0000205397 00000 n 
0000205505 00000 n 
0000205560 00000 n 
0000205716 00000 n 
0000205771 00000 n 
0000205848 00000 n 
0000205955 00000 n 
0000206010 00000 n 
0000206130 00000 n 
0000206185 00000 n 
0000206293 00000 n 
0000206348 00000 n 
0000206441 00000 n 
0000206496 00000 n 
0000206602 00000 n 
0000206657 00000 n 
0000206819 00000 n 
0000206874 00000 n 
0000206982 00000 n 
0000207037 00000 n 
0000207130 00000 n 
0000207185 00000 n 
0000207262 00000 n 
0000207583 00000 n 
0000207638 00000 n 
0000207713 00000 n 
0000207831 00000 n 
0000207886 00000 n 
0000207963 00000 n 
0000208094 00000 n 
0000208149 00000 n 
0000208311 00000 n 
0000208422 00000 n 
0000208477 00000 n 
0000208585 00000 n 
0000208640 00000 n 
0000208770 00000 n 
0000208825 00000 n 
0000208933 00000 n 
0000208988 00000 n 
0000209097 00000 n 
0000209152 00000 n 
0000209258 00000 n 
0000209313 00000 n 
0000209526 00000 n 
0000209581 00000 n 
0000209689 00000 n 
0000209744 00000 n 
0000209895 00000 n 
0000209950 00000 n 
0000210027 00000 n 
0000210140 00000 n 
0000210195 00000 n 
0000210336 00000 n 
0000210391 00000 n 
0000210468 00000 n 
0000210789 00000 n 
0000210844 00000 n 
0000210919 00000 n 
0000211036 00000 n 
0000211091 00000 n 
0000211165 00000 n 
0000211278 00000 n 
0000211333 00000 n 
0000211410 00000 n 
0000211559 00000 n 
0000211614 00000 n 
0000211704 00000 n 
0000211893 00000 n 
0000211948 00000 n 
0000212025 00000 n 
0000212138 00000 n 
0000212193 00000 n 
0000212286 00000 n 
0000212341 00000 n 
0000212418 00000 n 
0000212742 00000 n 
0000212797 00000 n 
0000212872 00000 n 
0000213010 00000 n 
0000213065 00000 n 
0000213140 00000 n 
0000213260 00000 n 
0000213315 00000 n 
0000213394 00000 n 
0000213552 00000 n 
0000213608 00000 n 
0000213684 00000 n 
0000213855 00000 n 
0000213911 00000 n 
0000213990 00000 n 
0000214259 00000 n 
0000214315 00000 n 
0000214392 00000 n 
0000214511 00000 n 
0000214567 00000 n 
0000214646 00000 n 
0000214791 00000 n 
0000214847 00000 n 
0000214923 00000 n 
0000215242 00000 n 
0000215298 00000 n 
0000215377 00000 n 
0000215673 00000 n 
0000215729 00000 n 
0000215806 00000 n 
0000215924 00000 n 
0000215980 00000 n 
0000216059 00000 n 
0000216203 00000 n 
0000216260 00000 n 
0000216336 00000 n 
0000216551 00000 n 
0000216608 00000 n 
0000216685 00000 n 
0000216801 00000 n 
0000216858 00000 n 
0000216937 00000 n 
0000217083 00000 n 
0000217140 00000 n 
0000217216 00000 n 
0000217513 00000 n 
0000217570 00000 n 
0000217647 00000 n 
0000217769 00000 n 
0000217826 00000 n 
0000217905 00000 n 
0000218063 00000 n 
0000218120 00000 n 
0000218366 00000 n 
0000218485 00000 n 
0000218542 00000 n 
0000218653 00000 n 
0000218710 00000 n 
0000218831 00000 n 
0000218888 00000 n 
0000219002 00000 n 
0000219059 00000 n 
0000219176 00000 n 
0000219233 00000 n 
0000219313 00000 n 
0000219421 00000 n 
0000219478 00000 n 
0000219592 00000 n 
0000219649 00000 n 
0000219760 00000 n 
0000219817 00000 n 
0000219992 00000 n 
0000220049 00000 n 
0000220160 00000 n 
0000220217 00000 n 
0000220339 00000 n 
0000220396 00000 n 
0000220542 00000 n 
0000220599 00000 n 
0000220721 00000 n 
0000220778 00000 n 
0000220888 00000 n 
0000220945 00000 n 
0000221054 00000 n 
0000221111 00000 n 
0000221222 00000 n 
0000221279 00000 n 
0000221402 00000 n 
0000221459 00000 n 
0000221539 00000 n 
0000221649 00000 n 
0000221706 00000 n 
0000221846 00000 n 
0000221903 00000 n 
0000221982 00000 n 
0000222672 00000 n 
0000222728 00000 n 
0000222805 00000 n 
0000222927 00000 n 
0000222983 00000 n 
0000223062 00000 n 
0000223259 00000 n 
0000223315 00000 n 
0000223435 00000 n 
0000223582 00000 n 
0000223638 00000 n 
0000223752 00000 n 
0000223808 00000 n 
0000223932 00000 n 
0000223988 00000 n 
0000224099 00000 n 
0000224155 00000 n 
0000224383 00000 n 
0000224439 00000 n 
0000224577 00000 n 
0000224824 00000 n 
0000224880 00000 n 
0000224991 00000 n 
0000225047 00000 n 
0000225156 00000 n 
0000225213 00000 n 
0000225323 00000 n 
0000225380 00000 n 
0000225544 00000 n 
0000225601 00000 n 
0000225711 00000 n 
0000225768 00000 n 
0000225874 00000 n 
0000225931 00000 n 
0000226008 00000 n 
0000226126 00000 n 
0000226183 00000 n 
0000226262 00000 n 
0000226415 00000 n 
0000226472 00000 n 
0000226574 00000 n 
0000226778 00000 n 
0000226835 00000 n 
0000226945 00000 n 
0000227002 00000 n 
0000227108 00000 n 
0000227165 00000 n 
0000227244 00000 n 
0000227535 00000 n 
0000227592 00000 n 
0000227669 00000 n 
0000227786 00000 n 
0000227843 00000 n 
0000227922 00000 n 
0000228073 00000 n 
0000228130 00000 n 
0000228232 00000 n 
0000228407 00000 n 
0000228464 00000 n 
0000228576 00000 n 
0000228633 00000 n 
0000228770 00000 n 
0000228827 00000 n 
0000228906 00000 n 
0000229197 00000 n 
0000229254 00000 n 
0000229331 00000 n 
0000229450 00000 n 
0000229507 00000 n 
0000229586 00000 n 
0000229750 00000 n 
0000229807 00000 n 
0000229927 00000 n 
0000230151 00000 n 
0000230208 00000 n 
0000230319 00000 n 
0000230376 00000 n 
0000230506 00000 n 
0000230563 00000 n 
0000230676 00000 n 
0000230733 00000 n 
0000230924 00000 n 
0000230981 00000 n 
0000231128 00000 n 
0000231237 00000 n 
0000231294 00000 n 
0000231435 00000 n 
0000231492 00000 n 
0000231605 00000 n 
0000231662 00000 n 
0000231868 00000 n 
0000231925 00000 n 
0000232047 00000 n 
0000232104 00000 n 
0000232246 00000 n 
0000232303 00000 n 
0000232416 00000 n 
0000232473 00000 n 
0000232614 00000 n 
0000232671 00000 n 
0000232748 00000 n 
0000232867 00000 n 
0000232923 00000 n 
0000233002 00000 n 
0000233157 00000 n 
0000233213 00000 n 
0000233289 00000 n 
0000233579 00000 n 
0000233635 00000 n 
0000233712 00000 n 
0000233830 00000 n 
0000233886 00000 n 
0000233962 00000 n 
0000234078 00000 n 
0000234134 00000 n 
0000234213 00000 n 
0000234440 00000 n 
0000234496 00000 n 
0000234598 00000 n 
0000234754 00000 n 
0000234810 00000 n 
0000234890 00000 n 
0000235004 00000 n 
0000235060 00000 n 
0000235166 00000 n 
0000235222 00000 n 
0000235301 00000 n 
0000235623 00000 n 
0000235679 00000 n 
0000235790 00000 n 
0000235920 00000 n 
0000235977 00000 n 
0000236094 00000 n 
0000236151 00000 n 
0000236308 00000 n 
0000236365 00000 n 
0000236479 00000 n 
0000236536 00000 n 
0000236615 00000 n 
0000236957 00000 n 
0000237014 00000 n 
0000237091 00000 n 
0000237209 00000 n 
0000237266 00000 n 
0000237345 00000 n 
0000237572 00000 n 
0000237629 00000 n 
0000237731 00000 n 
0000237887 00000 n 
0000237944 00000 n 
0000238024 00000 n 
0000238138 00000 n 
0000238195 00000 n 
0000238301 00000 n 
0000238358 00000 n 
0000238437 00000 n 
0000238757 00000 n 
0000238814 00000 n 
0000238970 00000 n 
0000239088 00000 n 
0000239145 00000 n 
0000239255 00000 n 
0000239312 00000 n 
0000239423 00000 n 
0000239480 00000 n 
0000239593 00000 n 
0000239650 00000 n 
0000239759 00000 n 
0000239816 00000 n 
0000239924 00000 n 
0000239981 00000 n 
0000240168 00000 n 
0000240225 00000 n 
0000240342 00000 n 
0000240399 00000 n 
0000240554 00000 n 
0000240611 00000 n 
0000240690 00000 n 
0000241022 00000 n 
0000241079 00000 n 
0000241155 00000 n 
0000241324 00000 n 
0000241381 00000 n 
0000241458 00000 n 
0000241577 00000 n 
0000241634 00000 n 
0000241713 00000 n 
0000241855 00000 n 
0000241912 00000 n 
0000242086 00000 n 
0000242294 00000 n 
0000242351 00000 n 
0000242460 00000 n 
0000242517 00000 n 
0000242671 00000 n 
0000242728 00000 n 
0000242837 00000 n 
0000242893 00000 n 
0000243179 00000 n 
0000243235 00000 n 
0000243344 00000 n 
0000243400 00000 n 
0000243513 00000 n 
0000243569 00000 n 
0000243678 00000 n 
0000243734 00000 n 
0000243877 00000 n 
0000243933 00000 n 
0000244042 00000 n 
0000244098 00000 n 
0000244204 00000 n 
0000244260 00000 n 
0000244339 00000 n 
0000244927 00000 n 
0000244983 00000 n 
0000245060 00000 n 
0000245179 00000 n 
0000245235 00000 n 
0000245314 00000 n 
0000245518 00000 n 
0000245575 00000 n 
0000245749 00000 n 
0000245913 00000 n 
0000245970 00000 n 
0000246084 00000 n 
0000246141 00000 n 
0000246308 00000 n 
0000246365 00000 n 
0000246445 00000 n 
0000246559 00000 n 
0000246616 00000 n 
0000246741 00000 n 
0000246798 00000 n 
0000246914 00000 n 
0000246971 00000 n 
0000247174 00000 n 
0000247231 00000 n 
0000247343 00000 n 
0000247400 00000 n 
0000247520 00000 n 
0000247577 00000 n 
0000247657 00000 n 
0000247767 00000 n 
0000247824 00000 n 
0000247930 00000 n 
0000247987 00000 n 
0000248066 00000 n 
0000248476 00000 n 
0000248533 00000 n 
0000248610 00000 n 
0000248730 00000 n 
0000248787 00000 n 
0000248866 00000 n 
0000249011 00000 n 
0000249068 00000 n 
0000249170 00000 n 
0000249331 00000 n 
0000249388 00000 n 
0000249500 00000 n 
0000249557 00000 n 
0000249774 00000 n 
0000249831 00000 n 
0000249910 00000 n 
0000250217 00000 n 
0000250274 00000 n 
0000250359 00000 n 
0000250468 00000 n 
0000250525 00000 n 
0000250663 00000 n 
0000250720 00000 n 
0000250797 00000 n 
0000250916 00000 n 
0000250973 00000 n 
0000251052 00000 n 
0000251204 00000 n 
0000251261 00000 n 
0000251363 00000 n 
0000251523 00000 n 
0000251580 00000 n 
0000251660 00000 n 
0000251775 00000 n 
0000251832 00000 n 
0000251938 00000 n 
0000251995 00000 n 
0000252072 00000 n 
0000252193 00000 n 
0000252250 00000 n 
0000252329 00000 n 
0000252512 00000 n 
0000252569 00000 n 
0000252645 00000 n 
0000252873 00000 n 
0000252930 00000 n 
0000253007 00000 n 
0000253129 00000 n 
0000253186 00000 n 
0000253262 00000 n 
0000253377 00000 n 
0000253434 00000 n 
0000253513 00000 n 
0000253845 00000 n 
0000253901 00000 n 
0000253980 00000 n 
0000254312 00000 n 
0000254368 00000 n 
0000254470 00000 n 
0000254588 00000 n 
0000254644 00000 n 
0000254758 00000 n 
0000254814 00000 n 
0000254943 00000 n 
0000254999 00000 n 
0000255088 00000 n 
0000255169 00000 n 
0000255256 00000 n 
0000255334 00000 n 
0000255447 00000 n 
0000255503 00000 n 
0000255581 00000 n 
0000255693 00000 n 
0000255749 00000 n 
0000255901 00000 n 
0000255988 00000 n 
0000256066 00000 n 
0000256178 00000 n 
0000256234 00000 n 
0000256312 00000 n 
0000256457 00000 n 
0000256513 00000 n 
0000256600 00000 n 
0000256678 00000 n 
0000256803 00000 n 
0000256859 00000 n 
0000256937 00000 n 
0000257084 00000 n 
0000257141 00000 n 
0000257228 00000 n 
0000257306 00000 n 
0000257422 00000 n 
0000257479 00000 n 
0000257557 00000 n 
0000257703 00000 n 
0000257760 00000 n 
0000257847 00000 n 
0000257925 00000 n 
0000258040 00000 n 
0000258097 00000 n 
0000258175 00000 n 
0000258327 00000 n 
0000258384 00000 n 
0000258471 00000 n 
0000258549 00000 n 
0000258663 00000 n 
0000258720 00000 n 
0000258798 00000 n 
0000258950 00000 n 
0000259007 00000 n 
0000259094 00000 n 
0000259172 00000 n 
0000259285 00000 n 
0000259342 00000 n 
0000259420 00000 n 
0000259565 00000 n 
0000259622 00000 n 
0000259709 00000 n 
0000259787 00000 n 
0000259902 00000 n 
0000259959 00000 n 
0000260037 00000 n 
0000260182 00000 n 
0000260239 00000 n 
0000260326 00000 n 
0000260404 00000 n 
0000260521 00000 n 
0000260578 00000 n 
0000260656 00000 n 
0000260798 00000 n 
0000260855 00000 n 
0000260957 00000 n 
0000261085 00000 n 
0000261142 00000 n 
0000261253 00000 n 
0000261310 00000 n 
0000261498 00000 n 
0000261555 00000 n 
0000261631 00000 n 
0000261902 00000 n 
0000261959 00000 n 
0000262035 00000 n 
0000262214 00000 n 
0000262271 00000 n 
0000262409 00000 n 
0000262554 00000 n 
0000262611 00000 n 
0000262724 00000 n 
0000262781 00000 n 
0000263066 00000 n 
0000263123 00000 n 
0000263235 00000 n 
0000263292 00000 n 
0000263423 00000 n 
0000263480 00000 n 
0000263590 00000 n 
0000263647 00000 n 
0000263769 00000 n 
0000263826 00000 n 
0000263928 00000 n 
0000264152 00000 n 
0000264209 00000 n 
0000264316 00000 n 
0000264373 00000 n 
0000264567 00000 n 
0000264624 00000 n 
0000264700 00000 n 
0000264927 00000 n 
0000264984 00000 n 
0000265060 00000 n 
0000265296 00000 n 
0000265353 00000 n 
0000265455 00000 n 
0000265564 00000 n 
0000265621 00000 n 
0000265734 00000 n 
0000265791 00000 n 
0000266162 00000 n 
0000266219 00000 n 
0000266339 00000 n 
0000266448 00000 n 
0000266505 00000 n 
0000266617 00000 n 
0000266674 00000 n 
0000266964 00000 n 
0000267021 00000 n 
0000267101 00000 n 
0000267220 00000 n 
0000267277 00000 n 
0000267389 00000 n 
0000267446 00000 n 
0000267584 00000 n 
0000267693 00000 n 
0000267750 00000 n 
0000267861 00000 n 
0000267918 00000 n 
0000268143 00000 n 
0000268200 00000 n 
0000268310 00000 n 
0000268367 00000 n 
0000268529 00000 n 
0000268586 00000 n 
0000268698 00000 n 
0000268755 00000 n 
0000268870 00000 n 
0000268927 00000 n 
0000269065 00000 n 
0000269174 00000 n 
0000269231 00000 n 
0000269344 00000 n 
0000269401 00000 n 
0000269625 00000 n 
0000269682 00000 n 
0000269793 00000 n 
0000269850 00000 n 
0000270062 00000 n 
0000270119 00000 n 
0000270230 00000 n 
0000270287 00000 n 
0000270424 00000 n 
0000270481 00000 n 
0000270601 00000 n 
0000270710 00000 n 
0000270767 00000 n 
0000270882 00000 n 
0000270939 00000 n 
0000271109 00000 n 
0000271166 00000 n 
0000271282 00000 n 
0000271339 00000 n 
0000271445 00000 n 
0000271502 00000 n 
0000271579 00000 n 
0000271702 00000 n 
0000271758 00000 n 
0000271860 00000 n 
0000271999 00000 n 
0000272055 00000 n 
0000272168 00000 n 
0000272224 00000 n 
0000272419 00000 n 
0000272475 00000 n 
0000272561 00000 n 
0000272640 00000 n 
0000272746 00000 n 
0000272802 00000 n 
0000272883 00000 n 
0000272960 00000 n 
0000273070 00000 n 
0000273126 00000 n 
0000273202 00000 n 
0000273403 00000 n 
0000273459 00000 n 
0000273545 00000 n 
0000273624 00000 n 
0000273730 00000 n 
0000273786 00000 n 
0000273867 00000 n 
0000273944 00000 n 
0000274054 00000 n 
0000274110 00000 n 
0000274212 00000 n 
0000274368 00000 n 
0000274424 00000 n 
0000274535 00000 n 
0000274592 00000 n 
0000274705 00000 n 
0000274762 00000 n 
0000274848 00000 n 
0000274927 00000 n 
0000275033 00000 n 
0000275090 00000 n 
0000275171 00000 n 
0000275248 00000 n 
0000275360 00000 n 
0000275417 00000 n 
0000275493 00000 n 
0000275792 00000 n 
0000275849 00000 n 
0000275935 00000 n 
0000276014 00000 n 
0000276120 00000 n 
0000276177 00000 n 
0000276258 00000 n 
0000276335 00000 n 
0000276446 00000 n 
0000276503 00000 n 
0000276605 00000 n 
0000276739 00000 n 
0000276796 00000 n 
0000276908 00000 n 
0000276965 00000 n 
0000277096 00000 n 
0000277153 00000 n 
0000277230 00000 n 
0000277351 00000 n 
0000277408 00000 n 
0000277484 00000 n 
0000277649 00000 n 
0000277706 00000 n 
0000277792 00000 n 
0000277871 00000 n 
0000277977 00000 n 
0000278034 00000 n 
0000278115 00000 n 
0000278192 00000 n 
0000278304 00000 n 
0000278361 00000 n 
0000278437 00000 n 
0000278631 00000 n 
0000278688 00000 n 
0000278774 00000 n 
0000278853 00000 n 
0000278959 00000 n 
0000279016 00000 n 
0000279097 00000 n 
0000279174 00000 n 
0000279283 00000 n 
0000279340 00000 n 
0000279442 00000 n 
0000279584 00000 n 
0000279641 00000 n 
0000279752 00000 n 
0000279809 00000 n 
0000279922 00000 n 
0000279979 00000 n 
0000280065 00000 n 
0000280144 00000 n 
0000280250 00000 n 
0000280307 00000 n 
0000280388 00000 n 
0000280465 00000 n 
0000280578 00000 n 
0000280635 00000 n 
0000280711 00000 n 
0000280878 00000 n 
0000280935 00000 n 
0000281021 00000 n 
0000281100 00000 n 
0000281206 00000 n 
0000281263 00000 n 
0000281344 00000 n 
0000281421 00000 n 
0000281533 00000 n 
0000281590 00000 n 
0000281666 00000 n 
0000281821 00000 n 
0000281878 00000 n 
0000281964 00000 n 
0000282043 00000 n 
0000282149 00000 n 
0000282206 00000 n 
0000282287 00000 n 
0000282364 00000 n 
0000282471 00000 n 
0000282528 00000 n 
0000282604 00000 n 
0000282819 00000 n 
0000282876 00000 n 
0000282962 00000 n 
0000283041 00000 n 
0000283147 00000 n 
0000283204 00000 n 
0000283285 00000 n 
0000283362 00000 n 
0000283472 00000 n 
0000283529 00000 n 
0000283605 00000 n 
0000283750 00000 n 
0000283807 00000 n 
0000283893 00000 n 
0000283972 00000 n 
0000284078 00000 n 
0000284135 00000 n 
0000284216 00000 n 
0000284293 00000 n 
0000284405 00000 n 
0000284462 00000 n 
0000284564 00000 n 
0000284767 00000 n 
0000284824 00000 n 
0000284935 00000 n 
0000284992 00000 n 
0000285105 00000 n 
0000285162 00000 n 
0000285239 00000 n 
0000285354 00000 n 
0000285411 00000 n 
0000285487 00000 n 
0000285799 00000 n 
0000285856 00000 n 
0000285935 00000 n 
0000286503 00000 n 
0000286559 00000 n 
0000286635 00000 n 
0000286774 00000 n 
0000286830 00000 n 
0000286909 00000 n 
0000287128 00000 n 
0000287184 00000 n 
0000287261 00000 n 
0000287381 00000 n 
0000287437 00000 n 
0000287516 00000 n 
0000287695 00000 n 
0000287751 00000 n 
0000287871 00000 n 
0000288112 00000 n 
0000288168 00000 n 
0000288278 00000 n 
0000288334 00000 n 
0000288528 00000 n 
0000288584 00000 n 
0000288699 00000 n 
0000288755 00000 n 
0000288871 00000 n 
0000288927 00000 n 
0000289083 00000 n 
0000289233 00000 n 
0000289290 00000 n 
0000289400 00000 n 
0000289457 00000 n 
0000289601 00000 n 
0000289658 00000 n 
0000289771 00000 n 
0000289828 00000 n 
0000290024 00000 n 
0000290081 00000 n 
0000290194 00000 n 
0000290251 00000 n 
0000290378 00000 n 
0000290435 00000 n 
0000290545 00000 n 
0000290602 00000 n 
0000290717 00000 n 
0000290774 00000 n 
0000290850 00000 n 
0000291136 00000 n 
0000291193 00000 n 
0000291272 00000 n 
0000292223 00000 n 
0000292280 00000 n 
0000292454 00000 n 
0000292581 00000 n 
0000292638 00000 n 
0000292751 00000 n 
0000292808 00000 n 
0000292949 00000 n 
0000293006 00000 n 
0000293119 00000 n 
0000293176 00000 n 
0000293288 00000 n 
0000293345 00000 n 
0000293458 00000 n 
0000293515 00000 n 
0000293751 00000 n 
0000293808 00000 n 
0000293921 00000 n 
0000293978 00000 n 
0000294157 00000 n 
0000294214 00000 n 
0000294324 00000 n 
0000294381 00000 n 
0000294517 00000 n 
0000294574 00000 n 
0000294651 00000 n 
0000294772 00000 n 
0000294829 00000 n 
0000294908 00000 n 
0000295061 00000 n 
0000295118 00000 n 
0000295220 00000 n 
0000295381 00000 n 
0000295438 00000 n 
0000295518 00000 n 
0000295635 00000 n 
0000295692 00000 n 
0000295798 00000 n 
0000295855 00000 n 
0000295934 00000 n 
0000296281 00000 n 
0000296338 00000 n 
0000296415 00000 n 
0000296534 00000 n 
0000296590 00000 n 
0000296669 00000 n 
0000296829 00000 n 
0000296885 00000 n 
0000297005 00000 n 
0000297266 00000 n 
0000297322 00000 n 
0000297433 00000 n 
0000297489 00000 n 
0000297665 00000 n 
0000297721 00000 n 
0000297830 00000 n 
0000297886 00000 n 
0000297992 00000 n 
0000298048 00000 n 
0000298125 00000 n 
0000298244 00000 n 
0000298300 00000 n 
0000298379 00000 n 
0000298524 00000 n 
0000298580 00000 n 
0000298656 00000 n 
0000298904 00000 n 
0000298960 00000 n 
0000299039 00000 n 
0000299383 00000 n 
0000299440 00000 n 
0000299517 00000 n 
0000299637 00000 n 
0000299694 00000 n 
0000299773 00000 n 
0000299943 00000 n 
0000300000 00000 n 
0000300156 00000 n 
0000300339 00000 n 
0000300396 00000 n 
0000300504 00000 n 
0000300561 00000 n 
0000300671 00000 n 
0000300728 00000 n 
0000300838 00000 n 
0000300895 00000 n 
0000301027 00000 n 
0000301084 00000 n 
0000301164 00000 n 
0000301275 00000 n 
0000301332 00000 n 
0000301454 00000 n 
0000301511 00000 n 
0000301624 00000 n 
0000301681 00000 n 
0000301933 00000 n 
0000301990 00000 n 
0000302067 00000 n 
0000302189 00000 n 
0000302246 00000 n 
0000302325 00000 n 
0000302473 00000 n 
0000302530 00000 n 
0000302668 00000 n 
0000302853 00000 n 
0000302910 00000 n 
0000303018 00000 n 
0000303075 00000 n 
0000303185 00000 n 
0000303242 00000 n 
0000303352 00000 n 
0000303409 00000 n 
0000303541 00000 n 
0000303598 00000 n 
0000303678 00000 n 
0000303789 00000 n 
0000303846 00000 n 
0000303954 00000 n 
0000304011 00000 n 
0000304090 00000 n 
0000304441 00000 n 
0000304498 00000 n 
0000304600 00000 n 
0000304709 00000 n 
0000304766 00000 n 
0000304846 00000 n 
0000304959 00000 n 
0000305016 00000 n 
0000305162 00000 n 
0000305219 00000 n 
0000305330 00000 n 
0000305439 00000 n 
0000305496 00000 n 
0000305633 00000 n 
0000305690 00000 n 
0000305770 00000 n 
0000305881 00000 n 
0000305938 00000 n 
0000306064 00000 n 
0000306121 00000 n 
0000306198 00000 n 
0000306318 00000 n 
0000306375 00000 n 
0000306454 00000 n 
0000306613 00000 n 
0000306670 00000 n 
0000306808 00000 n 
0000306991 00000 n 
0000307048 00000 n 
0000307156 00000 n 
0000307213 00000 n 
0000307323 00000 n 
0000307380 00000 n 
0000307490 00000 n 
0000307547 00000 n 
0000307679 00000 n 
0000307736 00000 n 
0000307816 00000 n 
0000307927 00000 n 
0000307984 00000 n 
0000308092 00000 n 
0000308149 00000 n 
0000308226 00000 n 
0000308343 00000 n 
0000308399 00000 n 
0000308478 00000 n 
0000308659 00000 n 
0000308715 00000 n 
0000308817 00000 n 
0000309248 00000 n 
0000309304 00000 n 
0000309384 00000 n 
0000309496 00000 n 
0000309552 00000 n 
0000309658 00000 n 
0000309714 00000 n 
0000309791 00000 n 
0000309908 00000 n 
0000309964 00000 n 
0000310043 00000 n 
0000310224 00000 n 
0000310280 00000 n 
0000310382 00000 n 
0000310814 00000 n 
0000310870 00000 n 
0000310950 00000 n 
0000311062 00000 n 
0000311118 00000 n 
0000311224 00000 n 
0000311280 00000 n 
0000311357 00000 n 
0000311477 00000 n 
0000311534 00000 n 
0000311613 00000 n 
0000311797 00000 n 
0000311854 00000 n 
0000311956 00000 n 
0000312233 00000 n 
0000312290 00000 n 
0000312370 00000 n 
0000312485 00000 n 
0000312542 00000 n 
0000312648 00000 n 
0000312705 00000 n 
0000312782 00000 n 
0000312900 00000 n 
0000312957 00000 n 
0000313036 00000 n 
0000313204 00000 n 
0000313261 00000 n 
0000313399 00000 n 
0000313518 00000 n 
0000313575 00000 n 
0000313686 00000 n 
0000313743 00000 n 
0000313891 00000 n 
0000313948 00000 n 
0000314059 00000 n 
0000314116 00000 n 
0000314243 00000 n 
0000314300 00000 n 
0000314412 00000 n 
0000314469 00000 n 
0000314609 00000 n 
0000314666 00000 n 
0000314745 00000 n 
0000315203 00000 n 
0000315260 00000 n 
0000315337 00000 n 
0000315456 00000 n 
0000315513 00000 n 
0000315592 00000 n 
0000315746 00000 n 
0000315803 00000 n 
0000315879 00000 n 
0000316229 00000 n 
0000316286 00000 n 
0000316362 00000 n 
0000316539 00000 n 
0000316596 00000 n 
0000316698 00000 n 
0000316807 00000 n 
0000316864 00000 n 
0000316976 00000 n 
0000317033 00000 n 
0000317185 00000 n 
0000317242 00000 n 
0000317319 00000 n 
0000317440 00000 n 
0000317496 00000 n 
0000317575 00000 n 
0000317722 00000 n 
0000317778 00000 n 
0000317952 00000 n 
0000318065 00000 n 
0000318121 00000 n 
0000318232 00000 n 
0000318288 00000 n 
0000318435 00000 n 
0000318491 00000 n 
0000318602 00000 n 
0000318658 00000 n 
0000318794 00000 n 
0000318850 00000 n 
0000318961 00000 n 
0000319017 00000 n 
0000319135 00000 n 
0000319191 00000 n 
0000319302 00000 n 
0000319358 00000 n 
0000319531 00000 n 
0000319588 00000 n 
0000319699 00000 n 
0000319756 00000 n 
0000319983 00000 n 
0000320040 00000 n 
0000320142 00000 n 
0000320645 00000 n 
0000320702 00000 n 
0000320814 00000 n 
0000320871 00000 n 
0000321102 00000 n 
0000321159 00000 n 
0000321235 00000 n 
0000321386 00000 n 
0000321443 00000 n 
0000321522 00000 n 
0000322045 00000 n 
0000322102 00000 n 
0000322178 00000 n 
0000322310 00000 n 
0000322367 00000 n 
0000322446 00000 n 
0000322704 00000 n 
0000322761 00000 n 
0000322838 00000 n 
0000322974 00000 n 
0000323030 00000 n 
0000323107 00000 n 
0000323226 00000 n 
0000323282 00000 n 
0000323361 00000 n 
0000323514 00000 n 
0000323570 00000 n 
0000323646 00000 n 
0000323934 00000 n 
0000323990 00000 n 
0000324067 00000 n 
0000324184 00000 n 
0000324240 00000 n 
0000324316 00000 n 
0000324432 00000 n 
0000324488 00000 n 
0000324567 00000 n 
0000324700 00000 n 
0000324756 00000 n 
0000324912 00000 n 
0000325101 00000 n 
0000325157 00000 n 
0000325265 00000 n 
0000325321 00000 n 
0000325456 00000 n 
0000325512 00000 n 
0000325592 00000 n 
0000325702 00000 n 
0000325759 00000 n 
0000325943 00000 n 
0000326000 00000 n 
0000326110 00000 n 
0000326167 00000 n 
0000326324 00000 n 
0000326381 00000 n 
0000326489 00000 n 
0000326546 00000 n 
0000326721 00000 n 
0000326778 00000 n 
0000326854 00000 n 
0000327130 00000 n 
0000327187 00000 n 
0000327264 00000 n 
0000327388 00000 n 
0000327445 00000 n 
0000327521 00000 n 
0000327637 00000 n 
0000327694 00000 n 
0000327773 00000 n 
0000327925 00000 n 
0000327982 00000 n 
0000328138 00000 n 
0000328327 00000 n 
0000328384 00000 n 
0000328492 00000 n 
0000328549 00000 n 
0000328684 00000 n 
0000328741 00000 n 
0000328821 00000 n 
0000328931 00000 n 
0000328988 00000 n 
0000329172 00000 n 
0000329229 00000 n 
0000329339 00000 n 
0000329396 00000 n 
0000329793 00000 n 
0000329850 00000 n 
0000329958 00000 n 
0000330015 00000 n 
0000330190 00000 n 
0000330247 00000 n 
0000330324 00000 n 
0000330463 00000 n 
0000330519 00000 n 
0000330596 00000 n 
0000330713 00000 n 
0000330769 00000 n 
0000330848 00000 n 
0000331005 00000 n 
0000331061 00000 n 
0000331163 00000 n 
0000331352 00000 n 
0000331408 00000 n 
0000331523 00000 n 
0000331579 00000 n 
0000331761 00000 n 
0000331817 00000 n 
0000331896 00000 n 
0000332076 00000 n 
0000332132 00000 n 
0000332208 00000 n 
0000332361 00000 n 
0000332417 00000 n 
0000332519 00000 n 
0000332656 00000 n 
0000332712 00000 n 
0000332823 00000 n 
0000332879 00000 n 
0000333017 00000 n 
0000333074 00000 n 
0000333153 00000 n 
0000333331 00000 n 
0000333388 00000 n 
0000333508 00000 n 
0000333668 00000 n 
0000333725 00000 n 
0000333843 00000 n 
0000333900 00000 n 
0000334072 00000 n 
0000334129 00000 n 
0000334209 00000 n 
0000334318 00000 n 
0000334375 00000 n 
0000334481 00000 n 
0000334538 00000 n 
0000334739 00000 n 
0000334849 00000 n 
0000334906 00000 n 
0000335012 00000 n 
0000335069 00000 n 
0000335149 00000 n 
0000335260 00000 n 
0000335317 00000 n 
0000335540 00000 n 
0000335597 00000 n 
0000335714 00000 n 
0000335771 00000 n 
0000335891 00000 n 
0000335948 00000 n 
0000336059 00000 n 
0000336116 00000 n 
0000336246 00000 n 
0000336303 00000 n 
0000336415 00000 n 
0000336472 00000 n 
0000336625 00000 n 
0000336682 00000 n 
0000336804 00000 n 
0000336861 00000 n 
0000337106 00000 n 
0000337163 00000 n 
0000337284 00000 n 
0000337341 00000 n 
0000337515 00000 n 
0000337572 00000 n 
0000337649 00000 n 
0000337790 00000 n 
0000337847 00000 n 
0000337926 00000 n 
0000338072 00000 n 
0000338129 00000 n 
0000338231 00000 n 
0000338473 00000 n 
0000338530 00000 n 
0000338640 00000 n 
0000338697 00000 n 
0000338837 00000 n 
0000338894 00000 n 
0000338973 00000 n 
0000339227 00000 n 
0000339284 00000 n 
0000346176 00000 n 
0000346364 00000 n 
0000346473 00000 n 
0000346582 00000 n 
0000346753 00000 n 
0000346870 00000 n 
0000347004 00000 n 
0000347138 00000 n 
0000347266 00000 n 
0000347391 00000 n 
0000347616 00000 n 
0000347727 00000 n 
0000347855 00000 n 
0000347981 00000 n 
0000348109 00000 n 
0000348243 00000 n 
0000348371 00000 n 
0000348505 00000 n 
0000348620 00000 n 
0000348830 00000 n 
0000348951 00000 n 
0000349082 00000 n 
0000349211 00000 n 
0000349336 00000 n 
0000349473 00000 n 
0000349610 00000 n 
0000349739 00000 n 
0000349866 00000 n 
0000349997 00000 n 
0000350128 00000 n 
0000350257 00000 n 
0000350386 00000 n 
0000350517 00000 n 
0000350648 00000 n 
0000350781 00000 n 
0000350912 00000 n 
0000351047 00000 n 
0000351219 00000 n 
0000351341 00000 n 
0000351476 00000 n 
0000351582 00000 n 
0000351715 00000 n 
0000351850 00000 n 
0000351981 00000 n 
0000352112 00000 n 
0000352245 00000 n 
0000352382 00000 n 
0000352515 00000 n 
0000352642 00000 n 
0000352769 00000 n 
0000352902 00000 n 
0000353031 00000 n 
0000353162 00000 n 
0000353280 00000 n 
0000353480 00000 n 
0000353594 00000 n 
0000353721 00000 n 
0000353845 00000 n 
0000354036 00000 n 
0000354146 00000 n 
trailer
<<
  /ID [ <4f142ff8a5e8fac5a5b468f556fa3f3b> <4f142ff8a5e8fac5a5b468f556fa3f3b> ]
  /Info 1 0 R
  /Root 2 0 R
  /Size 2293
>>
startxref
354304
%%EOF