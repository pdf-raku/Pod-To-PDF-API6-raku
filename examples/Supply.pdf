%PDF-1.3
%¥±ë¼
1 0 obj
<<
  /CreationDate (D:20220107070405+13'00')
  /Creator (PDF::Class-0.4.18; PDF::Content-0.5.16; PDF-0.4.18; Raku-6.d; PDF::Tags-0.0.13; Pod::To::PDF::API6-0.0.1)
  /Producer (PDF::API6-0.2.4)
  /Title (class Supply)
>>
endobj

2 0 obj
<<
  /Type /Catalog
  /Dests 3 0 R
  /Lang (en)
  /MarkInfo << /Marked true >>
  /Outlines 154 0 R
  /Pages 22 0 R
  /StructTreeRoot 779 0 R
>>
endobj

3 0 obj
<<
  /Asynchronous_data_stream_with_multiple_subscribers [ 4 0 R /FitBH 730 ]
  /Examples [ 96 0 R /FitBH 302.1 ]
  /I#2fO_features_exposed_as_supplies [ 142 0 R /FitBH 796 ]
  /Methods_that_combine_supplies [ 134 0 R /FitBH 796 ]
  /Methods_that_return_Taps [ 23 0 R /FitBH 796 ]
  /Methods_that_return_another_Supply [ 59 0 R /FitBH 796 ]
  /Methods_that_wait_until_the_supply_is_done [ 45 0 R /FitBH 796 ]
  /Utility_methods [ 35 0 R /FitBH 796 ]
  /class_Supply [ 4 0 R /FitBH 796 ]
  /control_messages [ 90 0 R /FitBH 229.2 ]
  /method_Capture [ 35 0 R /FitBH 730 ]
  /method_Channel [ 35 0 R /FitBH 615.6 ]
  /method_IO::Notification.watch-path [ 142 0 R /FitBH 463.8 ]
  /method_Promise [ 35 0 R /FitBH 512.2 ]
  /method_Seq [ 45 0 R /FitBH 428.6 ]
  /method_act [ 23 0 R /FitBH 307.6 ]
  /method_batch [ 68 0 R /FitBH 362.6 ]
  /method_collate [ 49 0 R /FitBH 637.6 ]
  /method_delayed [ 80 0 R /FitBH 384.6 ]
  /method_do [ 59 0 R /FitBH 353.8 ]
  /method_elems [ 68 0 R /FitBH 226.2 ]
  /method_first [ 72 0 R /FitBH 327.4 ]
  /method_flat [ 59 0 R /FitBH 446.2 ]
  /method_from-list [ 59 0 R /FitBH 730 ]
  /method_grab [ 45 0 R /FitBH 336.2 ]
  /method_grep [ 68 0 R /FitBH 653 ]
  /method_head [ 72 0 R /FitBH 787.2 ]
  /method_interval [ 68 0 R /FitBH 787.2 ]
  /method_lines [ 100 0 R /FitBH 291.32 ]
  /method_list [ 45 0 R /FitBH 529.8 ]
  /method_live [ 35 0 R /FitBH 303.2 ]
  /method_map [ 68 0 R /FitBH 507.8 ]
  /method_max [ 106 0 R /FitBH 364.8 ]
  /method_merge [ 134 0 R /FitBH 730 ]
  /method_migrate [ 124 0 R /FitBH 391.2 ]
  /method_min [ 106 0 R /FitBH 250.4 ]
  /method_minmax [ 124 0 R /FitBH 787.2 ]
  /method_on-close [ 59 0 R /FitBH 250.4 ]
  /method_produce [ 100 0 R /FitBH 410.12 ]
  /method_reduce [ 49 0 R /FitBH 499 ]
  /method_repeated [ 106 0 R /FitBH 620 ]
  /method_reverse [ 45 0 R /FitBH 197.6 ]
  /method_rotate [ 80 0 R /FitBH 628.8 ]
  /method_rotor [ 80 0 R /FitBH 477 ]
  /method_schedule-on [ 35 0 R /FitBH 182.2 ]
  /method_share [ 59 0 R /FitBH 611.2 ]
  /method_skip [ 124 0 R /FitBH 683.8 ]
  /method_sort [ 49 0 R /FitBH 787.2 ]
  /method_split [ 80 0 R /FitBH 787.2 ]
  /method_squish [ 106 0 R /FitBH 457.2 ]
  /method_stable [ 100 0 R /FitBH 737.92 ]
  /method_start [ 124 0 R /FitBH 538.6 ]
  /method_tail [ 72 0 R /FitBH 562.8 ]
  /method_tap [ 23 0 R /FitBH 730 ]
  /method_throttle [ 80 0 R /FitBH 292.2 ]
  /method_unique [ 106 0 R /FitBH 734.4 ]
  /method_wait [ 45 0 R /FitBH 730 ]
  /method_words [ 100 0 R /FitBH 187.92 ]
  /method_zip [ 134 0 R /FitBH 626.6 ]
  /method_zip-latest [ 134 0 R /FitBH 457.2 ]
  /status_message [ 96 0 R /FitBH 675 ]
  /sub_signal [ 142 0 R /FitBH 730 ]
>>
endobj

4 0 obj
<<
  /Type /Page
  /Annots [ 5 0 R 7 0 R 9 0 R 11 0 R 13 0 R 15 0 R 17 0 R 19 0 R ]
  /Contents 21 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 151 0 R /GS2 152 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R /F4 153 0 R >>
  >>
  /StructParents 0
>>
endobj

5 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 6 0 R
  /Border [ 0 0 0 ]
  /Contents (Channel)
  /P 4 0 R
  /Rect [ 255.17 634.6 292.5 649.6 ]
  /StructParent 1
>>
endobj

6 0 obj
<< /Type /Action /S /URI /URI (/type/Channel) >>
endobj

7 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 8 0 R
  /Border [ 0 0 0 ]
  /Contents (Observer Pattern)
  /P 4 0 R
  /Rect [ 182.97 601.6 254.45 616.6 ]
  /StructParent 2
>>
endobj

8 0 obj
<<
  /Type /Action
  /S /URI
  /URI (https://en.wikipedia.org/wiki/Observer_pattern)
>>
endobj

9 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 10 0 R
  /Border [ 0 0 0 ]
  /Contents (Supplier)
  /P 4 0 R
  /Rect [ 180.59 491.6 218.48 506.6 ]
  /StructParent 3
>>
endobj

10 0 obj
<< /Type /Action /S /URI /URI (/type/Supplier) >>
endobj

11 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 12 0 R
  /Border [ 0 0 0 ]
  /Contents (live method)
  /P 4 0 R
  /Rect [ 38.55 414.6 90.05 429.6 ]
  /StructParent 4
>>
endobj

12 0 obj
<< /Type /Action /S /GoTo /D /method_live >>
endobj

13 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 14 0 R
  /Border [ 0 0 0 ]
  /Contents (interval)
  /P 4 0 R
  /Rect [ 321.7 414.6 356.25 429.6 ]
  /StructParent 5
>>
endobj

14 0 obj
<< /Type /Action /S /GoTo /D /method_interval >>
endobj

15 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 16 0 R
  /Border [ 0 0 0 ]
  /Contents (from-list)
  /P 4 0 R
  /Rect [ 362.25 414.6 401.25 429.6 ]
  /StructParent 6
>>
endobj

16 0 obj
<< /Type /Action /S /GoTo /D /method_from-list >>
endobj

17 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 18 0 R
  /Border [ 0 0 0 ]
  /Contents (Supplier::Preserving)
  /P 4 0 R
  /Rect [ 340.72 392.6 426.94 407.6 ]
  /StructParent 7
>>
endobj

18 0 obj
<< /Type /Action /S /URI /URI (/type/Supplier::Preserving) >>
endobj

19 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 20 0 R
  /Border [ 0 0 0 ]
  /Contents (concurrency page)
  /P 4 0 R
  /Rect [ 171.86 370.6 246.66 385.6 ]
  /StructParent 8
>>
endobj

20 0 obj
<< /Type /Action /S /URI /URI (/language/concurrency#Supplies) >>
endobj

21 0 obj
<< /Length 8126 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (class Supply) Tj
  ET
  q
    1 w
    20 750 m
    125.04 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (Asynchronous data stream with multiple subscribers) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (    class Supply does Awaitable {}) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 654.6 572 18.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (A supply is a thread-safe, asynchronous data stream like a ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 4 >> BDC
    BT
      1 0 0 1 20 637.6 Tm
      [ -23717 (Channel) ] TJ
    ET
  EMC
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    [ -27300 (, but it can have multiple subscribers \() ] TJ
  ET
EMC
/Span << /MCID 6 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F4 10 Tf
    [ -42826 (taps) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -44743 (\) that all get the same values) ] TJ
    11 TL
    T*
    (flowing through the supply.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 604.6 Tm
    (It is a thread-safe implementation of the ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 9 >> BDC
    BT
      1 0 0 1 20 604.6 Tm
      [ -16497 (Observer Pattern) ] TJ
    ET
  EMC
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 604.6 Tm
    [ -23495 (, and central to supporting reactive programming in Raku.) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    (There are two types of Supplies: ) Tj
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F2 8 Tf
    [ -16837 (live) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  153.7 581.6 21.2 10.8 re
  B
Q
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F3 10 Tf
    [ -15870 ( and ) ] TJ
  ET
EMC
/Code << /MCID 14 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F2 8 Tf
    [ -22580 (on demand) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  199.64 581.6 45.2 10.8 re
  B
Q
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F3 10 Tf
    [ -22864 (. When tapping into a ) ] TJ
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F2 8 Tf
    [ -40002 (live) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  339.02 581.6 21.2 10.8 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F3 10 Tf
    [ -34402 ( supply, the tap will only see values that are flowing) ] TJ
    T*
    (through the supply ) Tj
  ET
EMC
/Span << /MCID 18 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F1 10 Tf
    [ -8000 (after) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F3 10 Tf
    [ -10304 ( the tap has been created. Such supplies are normally infinite in nature, such as mouse movements. Closing such a) ] TJ
    T*
    (tap does not stop mouse events from occurring, it just means that the values will go by unseen. All tappers see the same flow of values.) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    (A tap on an ) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    /F2 8 Tf
    [ -6422 (on demand) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  70.38 537.6 45.2 10.8 re
  B
Q
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    /F3 10 Tf
    [ -9938 ( supply will initiate the production of values, and tapping the supply again may result in a new set of values. For) ] TJ
    T*
    (example, ) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F2 8 Tf
    [ -5172 (Supply.interval) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  60.38 526.6 74 10.8 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    [ -11818 ( produces a fresh timer with the appropriate interval each time it is tapped. If the tap is closed, the timer simply) ] TJ
    T*
    (stops emitting values to that tap.) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    (A ) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F2 8 Tf
    [ -1527 (live) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  31.22 493.6 21.2 10.8 re
  B
Q
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -3622 ( ) ] TJ
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F2 8 Tf
    [ -5152 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  60.22 493.6 30.8 10.8 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -7482 ( is obtained from the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 30 >> BDC
    BT
      1 0 0 1 20 494.6 Tm
      [ -16259 (Supplier) ] TJ
    ET
  EMC
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    [ -19898 ( factory method ) ] TJ
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F2 8 Tf
    [ -33412 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  286.3 493.6 30.8 10.8 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -30090 (. New values are emitted by calling ) ] TJ
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F2 8 Tf
    [ -55907 (emit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  466.26 493.6 21.2 10.8 re
  B
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -47126 ( on the ) ] TJ
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F2 8 Tf
    [ -62935 (Supplier) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  522.48 493.6 40.4 10.8 re
  B
Q
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -54668 ] TJ
    T*
    (object.) Tj
  ET
EMC
/Code << /MCID 38 >> BDC
  BT
    1 0 0 1 30 466 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply = $supplier.Supply;) Tj
    T*
    ($supply.tap\(-> $v { say "$v" }\);) Tj
    T*
    ($supplier.emit\(42\);  Will cause the tap to output "42") Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 434.6 572 45.2 re
  B
Q
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    (The ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 40 >> BDC
    BT
      1 0 0 1 20 417.6 Tm
      [ -2055 (live method) ] TJ
    ET
  EMC
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    [ -7055 ( returns ) ] TJ
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F2 8 Tf
    [ -13227 (True) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  124.82 416.6 21.2 10.8 re
  B
Q
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    [ -12982 ( on live supplies. Factory methods such as ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 44 >> BDC
    BT
      1 0 0 1 20 417.6 Tm
      [ -30370 (interval) ] TJ
    ET
  EMC
Q
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    [ -33675 (, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 46 >> BDC
    BT
      1 0 0 1 20 417.6 Tm
      [ -34425 (from-list) ] TJ
    ET
  EMC
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    [ -38175 ( will return ) ] TJ
  ET
EMC
/Span << /MCID 48 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F4 10 Tf
    [ -43119 (on demand) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    [ -47785 ( supplies.) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    (A live ) Tj
  ET
EMC
/Code << /MCID 51 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 8 Tf
    [ -3715 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  48.72 394.6 30.8 10.8 re
  B
Q
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 10 Tf
    [ -6332 ( that keeps values until tapped the first time can be created with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 53 >> BDC
    BT
      1 0 0 1 20 395.6 Tm
      [ -32272 (Supplier::Preserving) ] TJ
    ET
  EMC
Q
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    [ -40744 (.) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 373.6 Tm
    (Further examples can be found in the ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 56 >> BDC
    BT
      1 0 0 1 20 373.6 Tm
      [ -15386 (concurrency page) ] TJ
    ET
  EMC
Q
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 373.6 Tm
    [ -22716 (.) ] TJ
  ET
EMC
endstream
endobj

22 0 obj
<<
  /Type /Pages
  /Count 17
  /Kids [ 4 0 R 23 0 R 35 0 R 45 0 R 49 0 R 59 0 R 68 0 R 72 0 R 80 0 R 90 0 R 96 0 R 100 0 R 106 0 R 124 0 R 130 0 R 134 0 R 142 0 R ]
>>
endobj

23 0 obj
<<
  /Type /Page
  /Annots [ 24 0 R 26 0 R ]
  /Contents 28 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 29 0 R /GS2 30 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 9
>>
endobj

24 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 25 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 23 0 R
  /Rect [ 175.02 476.2 194.57 491.2 ]
  /StructParent 10
>>
endobj

25 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

26 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 27 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 23 0 R
  /Rect [ 178.01 423.4 197.56 438.4 ]
  /StructParent 11
>>
endobj

27 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

28 0 obj
<< /Length 10488 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that return Taps) Tj
  ET
  q
    1 w
    20 750 m
    241.66 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method tap) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method tap\(Supply:D: &emit = -> $ { },) Tj
    8.8 TL
    T*
    (        :&done = -> {},) Tj
    T*
    (        :&quit = -> $ex { $ex.throw },) Tj
    T*
    (        :&tap = -> $ {} \)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 628.2 572 45.2 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 611.2 Tm
    /F3 10 Tf
    (Creates a new tap \(a kind of subscription if you will\), in addition to all existing taps. The first positional argument is a piece of code that will) Tj
    11 TL
    T*
    (be called when a new value becomes available through the ) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 20 600.2 Tm
    /F2 8 Tf
    [ -29957 (emit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  258.66 599.2 21.2 10.8 re
  B
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 600.2 Tm
    /F3 10 Tf
    [ -26366 ( call.) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 7 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F2 8 Tf
    [ -2569 (&done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  39.55 577.2 26 10.8 re
  B
Q
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F3 10 Tf
    [ -4935 ( callback can be called in a number of cases: if a supply block is being tapped, when a ) ] TJ
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F2 8 Tf
    [ -49805 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  417.44 577.2 21.2 10.8 re
  B
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 578.2 Tm
    /F3 10 Tf
    [ -42244 ( routine is reached; if a supply block) ] TJ
    T*
    (is being tapped, it will be automatically triggered if the supply block reaches the end; if the ) Tj
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    /F2 8 Tf
    [ -46140 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  388.12 566.2 21.2 10.8 re
  B
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    /F3 10 Tf
    [ -39312 ( method is called on the parent ) ] TJ
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    /F2 8 Tf
    [ -65110 (Supplier) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  539.88 566.2 40.4 10.8 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 567.2 Tm
    /F3 10 Tf
    [ -56408 ] TJ
    T*
    (\(in the case of a supply block, if there are multiple Suppliers referenced by ) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F2 8 Tf
    [ -37977 (whenever) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  322.82 555.2 40.4 10.8 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F3 10 Tf
    [ -34702 (, they must all have their ) ] TJ
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F2 8 Tf
    [ -56362 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  469.9 555.2 21.2 10.8 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 556.2 Tm
    /F3 10 Tf
    [ -47490 ( method invoked for) ] TJ
    T*
    (this to trigger the ) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F2 8 Tf
    [ -9201 (&done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  92.61 544.2 26 10.8 re
  B
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F3 10 Tf
    [ -10241 ( callback of the tap as the block will then reach its end\).) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F2 8 Tf
    [ -2569 (&quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  39.55 522.2 26 10.8 re
  B
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F3 10 Tf
    [ -4935 ( callback is called if the tap is on a supply block which exits with an error. It is also called if the ) ] TJ
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F2 8 Tf
    [ -54669 (quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  456.35 522.2 21.2 10.8 re
  B
Q
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F3 10 Tf
    [ -46135 ( method is invoked on the) ] TJ
    T*
    (parent ) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F2 8 Tf
    [ -3749 (Supplier) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  48.99 511.2 40.4 10.8 re
  B
Q
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F3 10 Tf
    [ -7319 ( \(in the case of a supply block any one ) ] TJ
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F2 8 Tf
    [ -28971 (Supplier) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  250.77 511.2 40.4 10.8 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F3 10 Tf
    [ -27497 ( quitting with an uncaught exception will call the ) ] TJ
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F2 8 Tf
    [ -59509 (&quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  495.07 511.2 26 10.8 re
  B
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F3 10 Tf
    [ -50487 ( callback as the) ] TJ
    T*
    (block will exit with an error\). The error is passed as a parameter to the callback.) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    /F2 8 Tf
    [ -2569 (&tap) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  39.55 478.2 21.2 10.8 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    /F3 10 Tf
    [ -4455 ( callback is called once the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 35 >> BDC
    BT
      1 0 0 1 20 479.2 Tm
      [ -15702 (Tap) ] TJ
    ET
  EMC
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    [ -17507 ( object is created, which is passed as a parameter to the callback. The callback is called ahead of ) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    /F2 8 Tf
    [ -70620 ] TJ
    8.8 TL
    T*
    (emit) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  19 469.4 21.2 19.6 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -2400 (/) ] TJ
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 8 Tf
    [ -3660 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  48.28 469.4 21.2 10.8 re
  B
Q
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -5328 (/) ] TJ
  ET
EMC
/Code << /MCID 41 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 8 Tf
    [ -7320 (quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77.56 469.4 21.2 10.8 re
  B
Q
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -8256 (, providing a reliable way to get the ) ] TJ
  ET
EMC
/Code << /MCID 43 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 8 Tf
    [ -28720 (Tap) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  248.76 469.4 16.4 10.8 re
  B
Q
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -24896 ( object. One case where this is useful is when the ) ] TJ
  ET
EMC
/Code << /MCID 45 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 8 Tf
    [ -56289 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  469.31 469.4 30.8 10.8 re
  B
Q
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -48391 ( begins emitting) ] TJ
    11 TL
    T*
    (values synchronously, since the call to ) Tj
  ET
EMC
/Code << /MCID 47 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 8 Tf
    [ -19859 (.tap) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  177.87 458.4 21.2 10.8 re
  B
Q
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -18287 ( won't return the ) ] TJ
  ET
EMC
/Code << /MCID 49 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 8 Tf
    [ -31659 (Tap) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  272.27 458.4 16.4 10.8 re
  B
Q
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -27247 ( object until it is done emitting, preventing it from being stopped if) ] TJ
    T*
    (needed.) Tj
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    (Method ) Tj
  ET
EMC
/Code << /MCID 52 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F2 8 Tf
    [ -4514 (tap) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  55.11 425.4 16.4 10.8 re
  B
Q
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F3 10 Tf
    [ -5531 ( returns an object of type ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 54 >> BDC
    BT
      1 0 0 1 20 426.4 Tm
      [ -16001 (Tap) ] TJ
    ET
  EMC
Q
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    [ -17806 (, on which you can call the ) ] TJ
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F2 8 Tf
    [ -36317 (close) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  309.54 425.4 26 10.8 re
  B
Q
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F3 10 Tf
    [ -31934 ( method to cancel the subscription.) ] TJ
  ET
EMC
/Code << /MCID 58 >> BDC
  BT
    1 0 0 1 30 408.8 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(0 .. 5\);) Tj
    8.8 TL
    T*
    (my $t = $s.tap\(-> $v { say $v }, done => { say "no more ticks" }\);) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 395 572 27.6 re
  B
Q
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 378 Tm
    /F3 10 Tf
    (Produces:) Tj
  ET
EMC
/Code << /MCID 60 >> BDC
  BT
    1 0 0 1 30 360.4 Tm
    /F2 8 Tf
    (0) Tj
    T*
    (1) Tj
    T*
    (2) Tj
    T*
    (3) Tj
    T*
    (4) Tj
    T*
    (5) Tj
    T*
    (no more ticks) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 302.6 572 71.6 re
  B
Q
/H2 << /MCID 61 >> BDC
  BT
    1 0 0 1 20 272.4 Tm
    /F1 16 Tf
    (method act) Tj
  ET
EMC
/Code << /MCID 62 >> BDC
  BT
    1 0 0 1 30 237.2 Tm
    /F2 8 Tf
    (method act\(Supply:D: &actor, *%others\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 232.2 572 18.8 re
  B
Q
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 215.2 Tm
    /F3 10 Tf
    (Creates a tap on the given supply with the given code. Differently from ) Tj
  ET
EMC
/Code << /MCID 64 >> BDC
  BT
    1 0 0 1 20 215.2 Tm
    /F2 8 Tf
    [ -36279 (tap) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  309.23 214.2 16.4 10.8 re
  B
Q
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 215.2 Tm
    /F3 10 Tf
    [ -30943 (, the given code is guaranteed to be executed by only one thread) ] TJ
    11 TL
    T*
    (at a time.) Tj
  ET
EMC
endstream
endobj

29 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

30 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

31 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Bold
  /Encoding /WinAnsiEncoding
>>
endobj

32 0 obj
<< /Type /Font /Subtype /Type1 /BaseFont /Courier /Encoding 33 0 R >>
endobj

33 0 obj
<<
  /Type /Encoding
  /BaseEncoding /WinAnsiEncoding
  /Differences [ 1 /numbersign /infinity ]
>>
endobj

34 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Roman
  /Encoding /WinAnsiEncoding
>>
endobj

35 0 obj
<<
  /Type /Page
  /Annots [ 36 0 R 38 0 R 40 0 R ]
  /Contents 42 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 43 0 R /GS2 44 0 R >>
    /Font << /F1 31 0 R /F2 34 0 R /F3 32 0 R >>
  >>
  /StructParents 12
>>
endobj

36 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 37 0 R
  /Border [ 0 0 0 ]
  /Contents (.List.Capture)
  /P 35 0 R
  /Rect [ 106.33 612.6 162.55 627.6 ]
  /StructParent 13
>>
endobj

37 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_Capture) >>
endobj

38 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 39 0 R
  /Border [ 0 0 0 ]
  /Contents (Channel)
  /P 35 0 R
  /Rect [ 61.05 520.2 98.38 535.2 ]
  /StructParent 14
>>
endobj

39 0 obj
<< /Type /Action /S /URI /URI (/type/Channel) >>
endobj

40 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 41 0 R
  /Border [ 0 0 0 ]
  /Contents (Promise)
  /P 35 0 R
  /Rect [ 61.05 416.8 97.83 431.8 ]
  /StructParent 15
>>
endobj

41 0 obj
<< /Type /Action /S /URI /URI (/type/Promise) >>
endobj

42 0 obj
<< /Length 8813 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Utility methods) Tj
  ET
  q
    1 w
    20 750 m
    151.66 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method Capture) Tj
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 655.2 Tm
    /F2 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 30 637.6 Tm
    /F3 8 Tf
    (method Capture\(Supply:D: --> Capture:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 632.6 572 18.8 re
  B
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 615.6 Tm
    /F2 10 Tf
    (Equivalent to calling ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 5 >> BDC
    BT
      1 0 0 1 20 615.6 Tm
      [ -8833 (.List.Capture) ] TJ
    ET
  EMC
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 615.6 Tm
    [ -14305 ( on the invocant.) ] TJ
  ET
EMC
/H2 << /MCID 7 >> BDC
  BT
    1 0 0 1 20 580.4 Tm
    /F1 16 Tf
    (method Channel) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 545.2 Tm
    /F3 8 Tf
    (method Channel\(Supply:D: --> Channel:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 540.2 572 18.8 re
  B
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F2 10 Tf
    (Returns a ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 523.2 Tm
      [ -4305 (Channel) ] TJ
    ET
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    [ -7888 ( object that will receive all future values from the supply, and will be ) ] TJ
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F3 8 Tf
    [ -44994 (close) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  378.95 522.2 26 10.8 re
  B
Q
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 523.2 Tm
    /F2 10 Tf
    [ -38875 (d when the Supply is done, and quit \(shut) ] TJ
    11 TL
    T*
    (down with error\) when the supply is quit.) Tj
  ET
EMC
/H2 << /MCID 14 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F1 16 Tf
    (method Promise) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 30 441.8 Tm
    /F3 8 Tf
    (method Promise\(Supply:D: --> Promise:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 436.8 572 18.8 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F2 10 Tf
    (Returns a ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 17 >> BDC
    BT
      1 0 0 1 20 419.8 Tm
      [ -4305 (Promise) ] TJ
    ET
  EMC
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    [ -7833 ( that will be kept when the ) ] TJ
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F3 8 Tf
    [ -23679 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  208.43 418.8 30.8 10.8 re
  B
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F2 10 Tf
    [ -22303 ( is ) ] TJ
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F3 8 Tf
    [ -29650 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  256.2 418.8 21.2 10.8 re
  B
Q
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F2 10 Tf
    [ -26120 (. If the ) ] TJ
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F3 8 Tf
    [ -36572 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  311.58 418.8 30.8 10.8 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F2 10 Tf
    [ -32618 ( also emits any values, then the ) ] TJ
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F3 8 Tf
    [ -56986 (Promise) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  474.89 418.8 35.6 10.8 re
  B
Q
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 419.8 Tm
    /F2 10 Tf
    [ -49429 ( will be kept with) ] TJ
    T*
    (the final value. Otherwise, it will be kept with ) Tj
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F3 8 Tf
    [ -23609 (Nil) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  207.87 407.8 16.4 10.8 re
  B
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F2 10 Tf
    [ -20807 (. If the ) ] TJ
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F3 8 Tf
    [ -29931 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  258.45 407.8 30.8 10.8 re
  B
Q
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F2 10 Tf
    [ -27305 ( ends with a ) ] TJ
  ET
EMC
/Code << /MCID 31 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F3 8 Tf
    [ -40762 (quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  345.1 407.8 21.2 10.8 re
  B
Q
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F2 10 Tf
    [ -35010 ( instead of a ) ] TJ
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F3 8 Tf
    [ -50462 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  422.7 407.8 21.2 10.8 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F2 10 Tf
    [ -42770 (, then the ) ] TJ
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F3 8 Tf
    [ -58705 (Promise) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  488.64 407.8 35.6 10.8 re
  B
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 408.8 Tm
    /F2 10 Tf
    [ -50804 ( will be broken) ] TJ
    T*
    (with that exception.) Tj
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 380.2 Tm
    /F3 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $s = $supplier.Supply;) Tj
    T*
    (my $p = $s.Promise;) Tj
    T*
    ($p.then\(-> $v { say "got $v.result\(\)" }\);) Tj
    T*
    ($supplier.emit\('cha'\);          not output yet) Tj
    T*
    ($supplier.done\(\);               got cha) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 331.2 572 62.8 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F2 10 Tf
    (The ) Tj
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F3 8 Tf
    [ -2569 (Promise) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  39.55 313.2 35.6 10.8 re
  B
Q
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 314.2 Tm
    /F2 10 Tf
    [ -5895 ( method is most useful when dealing with supplies that will tend to produce just one value, when only the final value is of) ] TJ
    11 TL
    T*
    (interest, or when only completion \(successful or not\) is relevant.) Tj
  ET
EMC
/H2 << /MCID 41 >> BDC
  BT
    1 0 0 1 20 268 Tm
    /F1 16 Tf
    (method live) Tj
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 30 232.8 Tm
    /F3 8 Tf
    (method live\(Supply:D: --> Bool:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 227.8 572 18.8 re
  B
Q
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F2 10 Tf
    (Returns ) Tj
  ET
EMC
/Code << /MCID 44 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F3 8 Tf
    [ -4514 (True) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  55.11 209.8 21.2 10.8 re
  B
Q
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F2 10 Tf
    [ -6011 ( if the supply is "live", that is, values are emitted to taps as soon as they arrive. Always returns ) ] TJ
  ET
EMC
/Code << /MCID 46 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F3 8 Tf
    [ -55334 (True) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  461.67 209.8 21.2 10.8 re
  B
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F2 10 Tf
    [ -46667 ( in the default ) ] TJ
  ET
EMC
/Code << /MCID 48 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F3 8 Tf
    [ -65867 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  545.94 209.8 30.8 10.8 re
  B
Q
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 210.8 Tm
    /F2 10 Tf
    [ -56054 ] TJ
    T*
    (\(but for example on the supply returned from ) Tj
  ET
EMC
/Code << /MCID 50 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    /F3 8 Tf
    [ -23225 (Supply.from-list) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  204.8 198.8 78.8 10.8 re
  B
Q
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    /F2 10 Tf
    [ -26740 ( it's ) ] TJ
  ET
EMC
/Code << /MCID 52 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    /F3 8 Tf
    [ -35769 (False) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  305.15 198.8 26 10.8 re
  B
Q
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    /F2 10 Tf
    [ -31495 (\).) ] TJ
  ET
EMC
/Code << /MCID 54 >> BDC
  BT
    1 0 0 1 30 182.2 Tm
    /F3 8 Tf
    (say Supplier.new.Supply.live;     OUTPUT: «True») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 177.2 572 18.8 re
  B
Q
/H2 << /MCID 55 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F1 16 Tf
    (method schedule-on) Tj
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 30 111.8 Tm
    /F3 8 Tf
    (method schedule-on\(Supply:D: Scheduler $scheduler\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 106.8 572 18.8 re
  B
Q
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 89.8 Tm
    /F2 10 Tf
    (Runs the emit, done and quit callbacks on the specified scheduler.) Tj
  ET
EMC
/P << /MCID 58 >> BDC
  BT
    1 0 0 1 20 67.8 Tm
    (This is useful for GUI toolkits that require certain actions to be run from the GUI thread.) Tj
  ET
EMC
endstream
endobj

43 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

44 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

45 0 obj
<<
  /Type /Page
  /Contents 46 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 47 0 R /GS2 48 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 16
>>
endobj

46 0 obj
<< /Length 11437 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that wait until the supply is done) Tj
  ET
  q
    1 w
    20 750 m
    378.38 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method wait) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method wait\(Supply:D:\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 654.6 572 18.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 8 Tf
    [ -4895 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  58.16 636.6 30.8 10.8 re
  B
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -7276 ( it is called on, and blocks execution until the either the supply is ) ] TJ
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 8 Tf
    [ -42149 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  356.19 636.6 21.2 10.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -36119 ( \(in which case it evaluates to the final value that) ] TJ
    11 TL
    T*
    (was emitted on the ) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F2 8 Tf
    [ -10034 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  99.27 625.6 30.8 10.8 re
  B
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F3 10 Tf
    [ -11387 (, or ) ] TJ
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F2 8 Tf
    [ -16525 (Nil) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  151.2 625.6 16.4 10.8 re
  B
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F3 10 Tf
    [ -15140 ( if not value was emitted\) or ) ] TJ
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F2 8 Tf
    [ -33645 (quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  288.16 625.6 21.2 10.8 re
  B
Q
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F3 10 Tf
    [ -29316 ( \(in which case it will throw the exception that was passed to ) ] TJ
  ET
EMC
/Code << /MCID 14 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F2 8 Tf
    [ -67682 (quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  560.46 625.6 21.2 10.8 re
  B
Q
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 626.6 Tm
    /F3 10 Tf
    [ -56546 (\).) ] TJ
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 609 Tm
    /F2 8 Tf
    (my $s = Supplier.new;) Tj
    8.8 TL
    T*
    (start {) Tj
    T*
    (  sleep 1;) Tj
    T*
    (  say "One second: running.";) Tj
    T*
    (  sleep 1;) Tj
    T*
    (  $s.emit\(42\);) Tj
    T*
    (  $s.done;) Tj
    T*
    (}) Tj
    T*
    ($s.Supply.wait;) Tj
    T*
    (say "Two seconds: done";) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 524.8 572 98 re
  B
Q
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F1 16 Tf
    (method list) Tj
  ET
EMC
/Code << /MCID 18 >> BDC
  BT
    1 0 0 1 30 459.4 Tm
    /F2 8 Tf
    (multi method list\(Supply:D:\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 454.4 572 18.8 re
  B
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 437.4 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 20 437.4 Tm
    /F2 8 Tf
    [ -4895 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  58.16 436.4 30.8 10.8 re
  B
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 437.4 Tm
    /F3 10 Tf
    [ -7276 ( it is called on, and returns a lazy list that will be reified as the ) ] TJ
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 20 437.4 Tm
    /F2 8 Tf
    [ -40757 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  345.06 436.4 30.8 10.8 re
  B
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 437.4 Tm
    /F3 10 Tf
    [ -35966 ( emits values. The list will be terminated once the ) ] TJ
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 20 437.4 Tm
    /F2 8 Tf
    [ -70441 ] TJ
    T*
    (Supply) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  19 427.6 30.8 19.6 re
  B
Q
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F3 10 Tf
    [ -3360 ( is ) ] TJ
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F2 8 Tf
    [ -5971 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  66.77 427.6 21.2 10.8 re
  B
Q
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F3 10 Tf
    [ -7177 (. If the ) ] TJ
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F2 8 Tf
    [ -12894 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  122.15 427.6 30.8 10.8 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F3 10 Tf
    [ -13675 ( ) ] TJ
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F2 8 Tf
    [ -17719 (quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  160.75 427.6 21.2 10.8 re
  B
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F3 10 Tf
    [ -16575 (s, then an exception will be thrown once that point in the lazy list is reached.) ] TJ
  ET
EMC
/H2 << /MCID 32 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F1 16 Tf
    (method Seq) Tj
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 358.2 Tm
    /F2 8 Tf
    (method Seq\(Supply:D:\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 353.2 572 18.8 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 336.2 Tm
    /F3 10 Tf
    (Returns a ) Tj
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 20 336.2 Tm
    /F2 8 Tf
    [ -5381 (Seq) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  62.05 335.2 16.4 10.8 re
  B
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 336.2 Tm
    /F3 10 Tf
    [ -6225 ( with an iterator containing the values that the ) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 20 336.2 Tm
    /F2 8 Tf
    [ -31320 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  269.56 335.2 30.8 10.8 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 336.2 Tm
    /F3 10 Tf
    [ -28416 ( contains.) ] TJ
  ET
EMC
/H2 << /MCID 39 >> BDC
  BT
    1 0 0 1 20 301 Tm
    /F1 16 Tf
    (method grab) Tj
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 30 265.8 Tm
    /F2 8 Tf
    (method grab\(Supply:D: &when-done --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 260.8 572 18.8 re
  B
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F2 8 Tf
    [ -4895 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  58.16 242.8 30.8 10.8 re
  B
Q
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F3 10 Tf
    [ -7276 ( it is called on. When it is ) ] TJ
  ET
EMC
/Code << /MCID 44 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F2 8 Tf
    [ -22497 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  198.98 242.8 21.2 10.8 re
  B
Q
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F3 10 Tf
    [ -20398 (, calls ) ] TJ
  ET
EMC
/Code << /MCID 46 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F2 8 Tf
    [ -29039 (&when-done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  251.31 242.8 50 10.8 re
  B
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F3 10 Tf
    [ -28511 ( and then emits the list of values that it returns on the result ) ] TJ
  ET
EMC
/Code << /MCID 48 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F2 8 Tf
    [ -65880 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  546.04 242.8 30.8 10.8 re
  B
Q
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F3 10 Tf
    [ -56064 (.) ] TJ
    11 TL
    T*
    (If the original ) Tj
  ET
EMC
/Code << /MCID 50 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F2 8 Tf
    [ -7499 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  78.99 231.8 30.8 10.8 re
  B
Q
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F3 10 Tf
    [ -9359 ( ) ] TJ
  ET
EMC
/Code << /MCID 52 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F2 8 Tf
    [ -12324 (quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  117.59 231.8 21.2 10.8 re
  B
Q
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F3 10 Tf
    [ -12259 (s, then the exception is immediately conveyed on the return ) ] TJ
  ET
EMC
/Code << /MCID 54 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F2 8 Tf
    [ -45736 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  384.89 231.8 30.8 10.8 re
  B
Q
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F3 10 Tf
    [ -39949 (.) ] TJ
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 30 215.2 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $t = $s.grab\(&sum\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «19») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 192.6 572 36.4 re
  B
Q
/H2 << /MCID 57 >> BDC
  BT
    1 0 0 1 20 162.4 Tm
    /F1 16 Tf
    (method reverse) Tj
  ET
EMC
/Code << /MCID 58 >> BDC
  BT
    1 0 0 1 30 127.2 Tm
    /F2 8 Tf
    (method reverse\(Supply:D: --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 122.2 572 18.8 re
  B
Q
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 105.2 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 60 >> BDC
  BT
    1 0 0 1 20 105.2 Tm
    /F2 8 Tf
    [ -4895 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  58.16 104.2 30.8 10.8 re
  B
Q
/P << /MCID 61 >> BDC
  BT
    1 0 0 1 20 105.2 Tm
    /F3 10 Tf
    [ -7276 ( it is called on. Once that ) ] TJ
  ET
EMC
/Code << /MCID 62 >> BDC
  BT
    1 0 0 1 20 105.2 Tm
    /F2 8 Tf
    [ -22184 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  196.47 104.2 30.8 10.8 re
  B
Q
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 105.2 Tm
    /F3 10 Tf
    [ -21107 ( emits ) ] TJ
  ET
EMC
/Code << /MCID 64 >> BDC
  BT
    1 0 0 1 20 105.2 Tm
    /F2 8 Tf
    [ -30030 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  259.24 104.2 21.2 10.8 re
  B
Q
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 105.2 Tm
    /F3 10 Tf
    [ -26424 (, all of the values it emitted will be emitted on the returned ) ] TJ
  ET
EMC
/Code << /MCID 66 >> BDC
  BT
    1 0 0 1 20 105.2 Tm
    /F2 8 Tf
    [ -62992 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  522.94 104.2 30.8 10.8 re
  B
Q
/P << /MCID 67 >> BDC
  BT
    1 0 0 1 20 105.2 Tm
    /F3 10 Tf
    [ -53754 ( in) ] TJ
    11 TL
    T*
    (reverse order. If the original ) Tj
  ET
EMC
/Code << /MCID 68 >> BDC
  BT
    1 0 0 1 20 94.2 Tm
    /F2 8 Tf
    [ -14682 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  136.46 93.2 30.8 10.8 re
  B
Q
/P << /MCID 69 >> BDC
  BT
    1 0 0 1 20 94.2 Tm
    /F3 10 Tf
    [ -15106 ( ) ] TJ
  ET
EMC
/Code << /MCID 70 >> BDC
  BT
    1 0 0 1 20 94.2 Tm
    /F2 8 Tf
    [ -19507 (quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  175.06 93.2 21.2 10.8 re
  B
Q
/P << /MCID 71 >> BDC
  BT
    1 0 0 1 20 94.2 Tm
    /F3 10 Tf
    [ -18006 (s, then the exception is immediately conveyed on the return ) ] TJ
  ET
EMC
/Code << /MCID 72 >> BDC
  BT
    1 0 0 1 20 94.2 Tm
    /F2 8 Tf
    [ -52920 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  442.36 93.2 30.8 10.8 re
  B
Q
/P << /MCID 73 >> BDC
  BT
    1 0 0 1 20 94.2 Tm
    /F3 10 Tf
    [ -45696 (.) ] TJ
  ET
EMC
/Code << /MCID 74 >> BDC
  BT
    1 0 0 1 30 76.6 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(1, 2, 3\);) Tj
    8.8 TL
    T*
    (my $t = $s.reverse;) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «321») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 54 572 36.4 re
  B
Q
endstream
endobj

47 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

48 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

49 0 obj
<<
  /Type /Page
  /Annots [ 50 0 R 52 0 R 54 0 R ]
  /Contents 56 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 57 0 R /GS2 58 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 17
>>
endobj

50 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 51 0 R
  /Border [ 0 0 0 ]
  /Contents (Block)
  /P 49 0 R
  /Rect [ 305.15 680.8 333.04 695.8 ]
  /StructParent 18
>>
endobj

51 0 obj
<< /Type /Action /S /URI /URI (/type/Block) >>
endobj

52 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 53 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.collate)
  /P 49 0 R
  /Rect [ 379.03 531.2 429.41 546.2 ]
  /StructParent 19
>>
endobj

53 0 obj
<< /Type /Action /S /URI /URI (/type/Any#method_collate) >>
endobj

54 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 55 0 R
  /Border [ 0 0 0 ]
  /Contents (List.reduce)
  /P 49 0 R
  /Rect [ 370.84 381.6 419.55 396.6 ]
  /StructParent 20
>>
endobj

55 0 obj
<< /Type /Action /S /URI /URI (/type/List#routine_reduce) >>
endobj

56 0 obj
<< /Length 6255 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method sort) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method sort\(Supply:D: &custom-routine-to-use? --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 711.8 572 18.8 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 8 Tf
    [ -4895 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  58.16 693.8 30.8 10.8 re
  B
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -7276 ( it is called on. Once that ) ] TJ
  ET
EMC
/Code << /MCID 5 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 8 Tf
    [ -22184 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  196.47 693.8 30.8 10.8 re
  B
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -21107 ( emits ) ] TJ
  ET
EMC
/Code << /MCID 7 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 8 Tf
    [ -30030 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  259.24 693.8 21.2 10.8 re
  B
Q
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -26424 (, all of the values that it emitted will be sorted, and the results emitted on the) ] TJ
    11 TL
    T*
    (returned ) Tj
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F2 8 Tf
    [ -4790 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  57.32 682.8 30.8 10.8 re
  B
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F3 10 Tf
    [ -7192 ( in the sorted order. Optionally accepts a comparator ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 11 >> BDC
    BT
      1 0 0 1 20 683.8 Tm
      [ -28715 (Block) ] TJ
    ET
  EMC
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    [ -31354 (. If the original ) ] TJ
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F2 8 Tf
    [ -47316 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  397.53 682.8 30.8 10.8 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F3 10 Tf
    [ -41213 ( ) ] TJ
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F2 8 Tf
    [ -52141 (quit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  436.13 682.8 21.2 10.8 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    /F3 10 Tf
    [ -44113 (s, then the exception is) ] TJ
    T*
    (immediately conveyed on the return ) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 20 672.8 Tm
    /F2 8 Tf
    [ -18677 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  168.42 671.8 30.8 10.8 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 672.8 Tm
    /F3 10 Tf
    [ -18302 (.) ] TJ
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 30 655.2 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $t = $s.sort\(\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «23410») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 632.6 572 36.4 re
  B
Q
/H2 << /MCID 20 >> BDC
  BT
    1 0 0 1 20 602.4 Tm
    /F1 16 Tf
    (method collate) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 30 567.2 Tm
    /F2 8 Tf
    (method collate\(Supply:D:\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 562.2 572 18.8 re
  B
Q
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F2 8 Tf
    [ -4895 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  58.16 544.2 30.8 10.8 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F3 10 Tf
    [ -7276 ( it is called on. Once that ) ] TJ
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F2 8 Tf
    [ -22184 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  196.47 544.2 30.8 10.8 re
  B
Q
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F3 10 Tf
    [ -21107 ( emits ) ] TJ
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F2 8 Tf
    [ -30030 (done) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  259.24 544.2 21.2 10.8 re
  B
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 545.2 Tm
    /F3 10 Tf
    [ -26424 (, all of the values that it emitted will be sorted taking into account Unicode) ] TJ
    11 TL
    T*
    (grapheme characteristics. A new ) Tj
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 20 534.2 Tm
    /F2 8 Tf
    [ -16939 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  154.51 533.2 30.8 10.8 re
  B
Q
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 534.2 Tm
    /F3 10 Tf
    [ -16911 ( is returned with the sorted values emitted. See ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 31 >> BDC
    BT
      1 0 0 1 20 534.2 Tm
      [ -36103 (Any.collate) ] TJ
    ET
  EMC
Q
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 534.2 Tm
    [ -40991 ( for more details on the collated sort.) ] TJ
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 516.6 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(<ä a o ö>\);) Tj
    8.8 TL
    T*
    (my $t = $s.collate\(\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «aäoö») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 494 572 36.4 re
  B
Q
/H2 << /MCID 34 >> BDC
  BT
    1 0 0 1 20 463.8 Tm
    /F1 16 Tf
    (method reduce) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 30 406.6 Tm
    /F2 8 Tf
    (method reduce\(Supply:D: &with --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 401.6 572 18.8 re
  B
Q
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 384.6 Tm
    /F3 10 Tf
    (Creates a "reducing" supply, which will emit a single value with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 38 >> BDC
    BT
      1 0 0 1 20 384.6 Tm
      [ -35284 (List.reduce) ] TJ
    ET
  EMC
Q
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 384.6 Tm
    [ -40005 (.) ] TJ
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 30 367 Tm
    /F2 8 Tf
    (my $supply = Supply.from-list\(1..5\).reduce\({$^a + $^b}\);) Tj
    T*
    ($supply.tap\(-> $v { say "$v" }\);  OUTPUT: «15») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 353.2 572 27.6 re
  B
Q
endstream
endobj

57 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

58 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

59 0 obj
<<
  /Type /Page
  /Annots [ 60 0 R 62 0 R 64 0 R ]
  /Contents 65 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 66 0 R /GS2 67 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 21
>>
endobj

60 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 61 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 59 0 R
  /Rect [ 280.95 155 300.5 170 ]
  /StructParent 22
>>
endobj

61 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

62 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 63 0 R
  /Border [ 0 0 0 ]
  /Contents (CLOSE)
  /P 59 0 R
  /Rect [ 589.13 144 593.13 159 ]
  /StructParent 23
>>
endobj

63 0 obj
<< /Type /Action /S /URI /URI (/language/phasers#CLOSE) >>
endobj

64 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 63 0 R
  /Border [ 0 0 0 ]
  /Contents (CLOSE)
  /P 59 0 R
  /Rect [ 18 133 53.67 148 ]
  /StructParent 24
>>
endobj

65 0 obj
<< /Length 6381 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that return another Supply) Tj
  ET
  q
    1 w
    20 750 m
    331.12 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method from-list) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method from-list\(Supply:U: +@values --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 654.6 572 18.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (Creates an on-demand supply from the values passed to this method.) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 30 620 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(1, 2, 3\);) Tj
    8.8 TL
    T*
    ($s.tap\(&say\);            OUTPUT: «123») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 606.2 572 27.6 re
  B
Q
/H2 << /MCID 5 >> BDC
  BT
    1 0 0 1 20 576 Tm
    /F1 16 Tf
    (method share) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 540.8 Tm
    /F2 8 Tf
    (method share\(Supply:D: --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 535.8 572 18.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 518.8 Tm
    /F3 10 Tf
    (Creates a live supply from an on-demand supply, thus making it possible to share the values of the on-demand supply on multiple taps, instead) Tj
    11 TL
    T*
    (of each tap seeing its own copy of all values from the on-demand supply.) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 490.2 Tm
    /F2 8 Tf
    ( this says in turn: "first 1" "first 2" "second 2" "first 3" "second 3") Tj
    8.8 TL
    T*
    (my $s = Supply.interval\(1\).share;) Tj
    T*
    ($s.tap: { "first $_".say };) Tj
    T*
    (sleep 1.1;) Tj
    T*
    ($s.tap: { "second $_".say };) Tj
    T*
    (sleep 2) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 441.2 572 62.8 re
  B
Q
/H2 << /MCID 9 >> BDC
  BT
    1 0 0 1 20 411 Tm
    /F1 16 Tf
    (method flat) Tj
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 30 375.8 Tm
    /F2 8 Tf
    (method flat\(Supply:D: --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 370.8 572 18.8 re
  B
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 353.8 Tm
    /F3 10 Tf
    (Creates a supply on which all of the values seen in the given supply are flattened before being emitted again.) Tj
  ET
EMC
/H2 << /MCID 12 >> BDC
  BT
    1 0 0 1 20 318.6 Tm
    /F1 16 Tf
    (method do) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 30 283.4 Tm
    /F2 8 Tf
    (method do\(Supply:D: &do --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 278.4 572 18.8 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 261.4 Tm
    /F3 10 Tf
    (Creates a supply to which all values seen in the given supply, are emitted again. The given code, executed for its side-effects only, is) Tj
    11 TL
    T*
    (guaranteed to be only executed by one thread at a time.) Tj
  ET
EMC
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 215.2 Tm
    /F1 16 Tf
    (method on-close) Tj
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 180 Tm
    /F2 8 Tf
    (method on-close\(Supply:D: &on-close --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 175 572 18.8 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F3 10 Tf
    (Returns a new ) Tj
  ET
EMC
/Code << /MCID 18 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F2 8 Tf
    [ -7776 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  81.21 157 30.8 10.8 re
  B
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F3 10 Tf
    [ -9581 ( which will run ) ] TJ
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F2 8 Tf
    [ -20205 (&on-close) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  180.64 157 45.2 10.8 re
  B
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F3 10 Tf
    [ -20964 ( whenever a ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 22 >> BDC
    BT
      1 0 0 1 20 158 Tm
      [ -26295 (Tap) ] TJ
    ET
  EMC
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 158 Tm
    [ -28100 ( of that ) ] TJ
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F2 8 Tf
    [ -39291 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  333.33 157 30.8 10.8 re
  B
Q
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F3 10 Tf
    [ -34793 ( is closed. This includes if further operations are) ] TJ
    T*
    (chained on to the ) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F2 8 Tf
    [ -9200 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  92.6 146 30.8 10.8 re
  B
Q
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F3 10 Tf
    [ -10720 (. \(for example, ) ] TJ
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F2 8 Tf
    [ -21384 ($supply.on-close\(&on-close\).map\(*.uc\)) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  190.07 146 179.6 10.8 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F3 10 Tf
    [ -35347 (\). When using a ) ] TJ
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F2 8 Tf
    [ -52724 (react) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  440.79 146 26 10.8 re
  B
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F3 10 Tf
    [ -45059 ( or ) ] TJ
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F2 8 Tf
    [ -58302 (supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  485.42 146 30.8 10.8 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 147 Tm
    /F3 10 Tf
    [ -50002 ( block, using the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 34 >> BDC
    BT
      1 0 0 1 20 147 Tm
      [ -57113 ] TJ
      T*
      (CLOSE) Tj
    ET
  EMC
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 136 Tm
    [ -3417 ( phaser is usually a better choice.) ] TJ
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 30 118.4 Tm
    /F2 8 Tf
    (my $s = Supplier.new;) Tj
    8.8 TL
    T*
    (my $tap = $s.Supply.on-close\({ say "Tap closed" }\).tap\() Tj
    T*
    (    -> $v { say "the value is $v" },) Tj
    T*
    (    done    => { say "Supply is done" },) Tj
    T*
    (    quit    => -> $ex { say "Supply finished with error $ex" },) Tj
    T*
    (\);) Tj
    T*
    [  ] TJ
    T*
    ($s.emit\('Raku'\);) Tj
    T*
    ($tap.close;         OUTPUT: «Tap closed») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 43 572 89.2 re
  B
Q
endstream
endobj

66 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

67 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

68 0 obj
<<
  /Type /Page
  /Contents 69 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 70 0 R /GS2 71 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 25
>>
endobj

69 0 obj
<< /Length 7450 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method interval) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method interval\(Supply:U: $interval, $delay = 0, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 711.8 572 18.8 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    (Creates a supply that emits a value every ) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 8 Tf
    [ -21072 ($interval) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  187.58 693.8 45.2 10.8 re
  B
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -21658 ( seconds, starting ) ] TJ
  ET
EMC
/Code << /MCID 5 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F2 8 Tf
    [ -36342 ($delay) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  309.74 693.8 30.8 10.8 re
  B
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    [ -32434 ( seconds from the call. The emitted value is an integer,) ] TJ
    11 TL
    T*
    (starting from 0, and is incremented by one for each value emitted.) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    (Implementations may treat too-small and negative values as lowest resolution they support, possibly warning in such situations; e.g. treating ) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    /F2 8 Tf
    [ -70794 ] TJ
    8.8 TL
    T*
    (0.0001) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  19 652 30.8 19.6 re
  B
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 653 Tm
    /F3 10 Tf
    [ -3360 ( as ) ] TJ
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 20 653 Tm
    /F2 8 Tf
    [ -6179 (0.001) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  68.43 652 26 10.8 re
  B
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 653 Tm
    /F3 10 Tf
    [ -7823 (. For 6.d language version, the minimal value specified is ) ] TJ
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 653 Tm
    /F2 8 Tf
    [ -39081 (0.001) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  331.65 652 26 10.8 re
  B
Q
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 653 Tm
    /F3 10 Tf
    [ -34145 (.) ] TJ
  ET
EMC
/H2 << /MCID 14 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F1 16 Tf
    (method grep) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 30 582.6 Tm
    /F2 8 Tf
    (method grep\(Supply:D: Mu $test --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 577.6 572 18.8 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 560.6 Tm
    /F3 10 Tf
    (Creates a new supply that only emits those values from the original supply that smartmatch against ) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 20 560.6 Tm
    /F2 8 Tf
    [ -50100 ($test) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  419.8 559.6 26 10.8 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 560.6 Tm
    /F3 10 Tf
    [ -42960 (.) ] TJ
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 30 543 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    T*
    (my $all      = $supplier.Supply;) Tj
    T*
    (my $ints     = $all.grep\(Int\);) Tj
    T*
    ($ints.tap\(&say\);) Tj
    T*
    ($supplier.emit\($_\) for 1, 'a string', 3.14159;    prints only 1) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 502.8 572 54 re
  B
Q
/H2 << /MCID 20 >> BDC
  BT
    1 0 0 1 20 472.6 Tm
    /F1 16 Tf
    (method map) Tj
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 30 437.4 Tm
    /F2 8 Tf
    (method map\(Supply:D: &mapper --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 432.4 572 18.8 re
  B
Q
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F3 10 Tf
    (Returns a new supply that maps each value of the given supply through ) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F2 8 Tf
    [ -36315 (&mapper) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  309.52 414.4 35.6 10.8 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F3 10 Tf
    [ -32892 ( and emits it to the new supply.) ] TJ
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 30 397.8 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    T*
    (my $all      = $supplier.Supply;) Tj
    T*
    (my $double   = $all.map\(-> $value { $value * 2 }\);) Tj
    T*
    ($double.tap\(&say\);) Tj
    T*
    ($supplier.emit\(4\);            OUTPUT: «8») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 357.6 572 54 re
  B
Q
/H2 << /MCID 26 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F1 16 Tf
    (method batch) Tj
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 30 292.2 Tm
    /F2 8 Tf
    (method batch\(Supply:D: :$elems, :$seconds --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 287.2 572 18.8 re
  B
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 270.2 Tm
    /F3 10 Tf
    (Creates a new supply that batches the values of the given supply by either the number of elements in the batch \(using ) Tj
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 20 270.2 Tm
    /F2 8 Tf
    [ -59192 (:elems) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  492.54 269.2 30.8 10.8 re
  B
Q
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 270.2 Tm
    /F3 10 Tf
    [ -50714 (\) or a duration) ] TJ
    11 TL
    T*
    (\(using ) Tj
  ET
EMC
/Code << /MCID 31 >> BDC
  BT
    1 0 0 1 20 259.2 Tm
    /F2 8 Tf
    [ -3750 (:seconds) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  49 258.2 40.4 10.8 re
  B
Q
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 259.2 Tm
    /F3 10 Tf
    [ -7320 (\) or both. Any remaining values are emitted in a final batch when the supply is done.) ] TJ
  ET
EMC
/Span << /MCID 33 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    /F1 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    /F3 10 Tf
    [ -2249 (: Since Rakudo version 2020.12, the ) ] TJ
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    /F2 8 Tf
    [ -21595 (:seconds) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  191.76 236.2 40.4 10.8 re
  B
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    /F3 10 Tf
    [ -21596 ( parameter has a millisecond granularity: for example a 1 millisecond duration could be) ] TJ
    T*
    (specified as ) Tj
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 20 226.2 Tm
    /F2 8 Tf
    [ -6491 (:seconds\(0.001\)) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  70.93 225.2 74 10.8 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 226.2 Tm
    /F3 10 Tf
    [ -12873 (. Before Rakudo version 2020.12, the ) ] TJ
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 20 226.2 Tm
    /F2 8 Tf
    [ -35464 (:seconds) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  302.71 225.2 40.4 10.8 re
  B
Q
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 226.2 Tm
    /F3 10 Tf
    [ -32691 ( parameter had a second granularity.) ] TJ
  ET
EMC
/H2 << /MCID 41 >> BDC
  BT
    1 0 0 1 20 191 Tm
    /F1 16 Tf
    (method elems) Tj
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 30 155.8 Tm
    /F2 8 Tf
    (method elems\(Supply:D: $seconds? --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 150.8 572 18.8 re
  B
Q
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 133.8 Tm
    /F3 10 Tf
    (Creates a new supply in which changes to the number of values seen are emitted. It optionally also takes an interval \(in seconds\) if you only) Tj
    T*
    (want to be updated every so many seconds.) Tj
  ET
EMC
endstream
endobj

70 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

71 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

72 0 obj
<<
  /Type /Page
  /Annots [ 73 0 R 75 0 R ]
  /Contents 77 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 78 0 R /GS2 79 0 R >>
    /Font << /F1 31 0 R /F2 34 0 R /F3 32 0 R >>
  >>
  /StructParents 26
>>
endobj

73 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 74 0 R
  /Border [ 0 0 0 ]
  /Contents (List.head)
  /P 72 0 R
  /Rect [ 229.46 652.2 270.4 667.2 ]
  /StructParent 27
>>
endobj

74 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_head) >>
endobj

75 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 76 0 R
  /Border [ 0 0 0 ]
  /Contents (List.tail)
  /P 72 0 R
  /Rect [ 223.36 449.8 258.2 464.8 ]
  /StructParent 28
>>
endobj

76 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_tail) >>
endobj

77 0 obj
<< /Length 7307 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method head) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 712.4 Tm
    /F2 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 694.8 Tm
    /F3 8 Tf
    (multi method head\(Supply:D:\)) Tj
    8.8 TL
    T*
    (multi method head\(Supply:D: Callable:D $limit\)) Tj
    T*
    (multi method head\(Supply:D: \\limit\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 672.2 572 36.4 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 655.2 Tm
    /F2 10 Tf
    (Creates a "head" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 4 >> BDC
    BT
      1 0 0 1 20 655.2 Tm
      [ -21146 (List.head) ] TJ
    ET
  EMC
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 655.2 Tm
    [ -25090 (.) ] TJ
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 637.6 Tm
    /F3 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    T*
    (my $hs = $s.head\(2\);) Tj
    T*
    ($hs.tap\(&say\);            OUTPUT: «410») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 615 572 36.4 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 598 Tm
    /F2 10 Tf
    (Since release 2020.07, A ) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 20 598 Tm
    /F3 8 Tf
    [ -13087 (WhateverCode) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  123.7 597 59.6 10.8 re
  B
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 598 Tm
    /F2 10 Tf
    [ -16710 ( can be used also, again with the same semantics as ) ] TJ
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 20 598 Tm
    /F3 8 Tf
    [ -47167 (List.head) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  396.34 597 45.2 10.8 re
  B
Q
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 30 580.4 Tm
    (my $s = Supply.from-list\(4, 10, 3, 2, 1\);) Tj
    T*
    (my $hs = $s.head\( * - 2\);) Tj
    T*
    ($hs.tap\(&say\);            OUTPUT: «4103») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 557.8 572 36.4 re
  B
Q
/H2 << /MCID 12 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F1 16 Tf
    (method tail) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 30 492.4 Tm
    /F3 8 Tf
    (multi method tail\(Supply:D:\)) Tj
    T*
    (multi method tail\(Supply:D: Callable:D $limit\)) Tj
    T*
    (multi method tail\(Supply:D: \\limit\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 469.8 572 36.4 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 452.8 Tm
    /F2 10 Tf
    (Creates a "tail" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 15 >> BDC
    BT
      1 0 0 1 20 452.8 Tm
      [ -20536 (List.tail) ] TJ
    ET
  EMC
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 452.8 Tm
    [ -23870 (.) ] TJ
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 30 435.2 Tm
    /F3 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    T*
    (my $ts = $s.tail\(2\);) Tj
    T*
    ($ts.tap\(&say\);            OUTPUT: «32») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 412.6 572 36.4 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    (You can call ) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 8 Tf
    [ -6942 (.tail) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  74.54 394.6 26 10.8 re
  B
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    [ -8434 ( with ) ] TJ
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 8 Tf
    [ -13702 (Whatever) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  128.62 394.6 40.4 10.8 re
  B
Q
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    [ -15282 ( or ) ] TJ
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 8 Tf
    [ -21081 (Inf) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  187.65 394.6 16.4 10.8 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    [ -18785 (; which will return a new supply equivalent to the initial one. Calling it with a ) ] TJ
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F3 8 Tf
    [ -62994 (WhateverCode) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  522.95 394.6 59.6 10.8 re
  B
Q
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 395.6 Tm
    /F2 10 Tf
    [ -56635 ] TJ
    11 TL
    T*
    (will be equivalent to skipping until that number.) Tj
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 30 367 Tm
    /F3 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $ts = $s.tail\( * - 2 \);) Tj
    T*
    ($ts.tap\(&say\);            OUTPUT: «32») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 344.4 572 36.4 re
  B
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F2 10 Tf
    (This feature is only available from the 2020.07 release of Raku.) Tj
  ET
EMC
/H2 << /MCID 29 >> BDC
  BT
    1 0 0 1 20 292.2 Tm
    /F1 16 Tf
    (method first) Tj
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 30 257 Tm
    /F3 8 Tf
    (method first\(Supply:D: :$end, |c\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 252 572 18.8 re
  B
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 235 Tm
    /F2 10 Tf
    (This method creates a supply of the first element, or the last element if the optional named parameter ) Tj
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 20 235 Tm
    /F3 8 Tf
    [ -51102 (:end) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  427.82 234 21.2 10.8 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 235 Tm
    /F2 10 Tf
    [ -43282 ( is truthy, from a supply created) ] TJ
    11 TL
    T*
    (by calling the ) Tj
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 20 224 Tm
    /F3 8 Tf
    [ -7430 (grep) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  78.44 223 21.2 10.8 re
  B
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 224 Tm
    /F2 10 Tf
    [ -8344 ( method on the invocant, with any remaining arguments as parameters. If there is no remaining argument, this method is) ] TJ
    T*
    (equivalent to calling on the invocant, without parameter, the ) Tj
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F3 8 Tf
    [ -30760 (head) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  265.08 212 21.2 10.8 re
  B
Q
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -27008 ( or the ) ] TJ
  ET
EMC
/Code << /MCID 38 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F3 8 Tf
    [ -37579 (tail) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  319.63 212 21.2 10.8 re
  B
Q
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -32463 ( method, according to named parameter ) ] TJ
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F3 8 Tf
    [ -61060 (:end) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  507.48 212 21.2 10.8 re
  B
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -51248 (.) ] TJ
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 30 195.4 Tm
    /F3 8 Tf
    (my $rand = supply { emit \(rand × 100\).floor for ^ };) Tj
    8.8 TL
    T*
    (my $first-prime = $rand.first: &is-prime;) Tj
    T*
    ( output the first prime from the endless random number supply $rand,) Tj
    T*
    ( then the $first-prime supply reaches its end) Tj
    T*
    ($first-prime.tap: &say;) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 155.2 572 54 re
  B
Q
endstream
endobj

78 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

79 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

80 0 obj
<<
  /Type /Page
  /Annots [ 81 0 R 83 0 R 85 0 R ]
  /Contents 87 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 88 0 R /GS2 89 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 29
>>
endobj

81 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 82 0 R
  /Border [ 0 0 0 ]
  /Contents (Str.split)
  /P 80 0 R
  /Rect [ 552.31 683 587.71 698 ]
  /StructParent 30
>>
endobj

82 0 obj
<< /Type /Action /S /URI /URI (/type/Str#routine_split) >>
endobj

83 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 84 0 R
  /Border [ 0 0 0 ]
  /Contents (.head)
  /P 80 0 R
  /Rect [ 78.54 661 103.92 676 ]
  /StructParent 31
>>
endobj

84 0 obj
<< /Type /Action /S /GoTo /D /method_head >>
endobj

85 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 86 0 R
  /Border [ 0 0 0 ]
  /Contents (List.rotor)
  /P 80 0 R
  /Rect [ 242.8 381.6 284.3 396.6 ]
  /StructParent 32
>>
endobj

86 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_rotor) >>
endobj

87 0 obj
<< /Length 5896 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method split) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (multi method split\(Supply:D: \\delimiter\)) Tj
    8.8 TL
    T*
    (multi method split\(Supply:D: \\delimiter, \\limit\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 703 572 27.6 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    (This method creates a supply of the values returned by the ) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F2 8 Tf
    [ -29786 (Str.split) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  257.29 685 45.2 10.8 re
  B
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    [ -28629 ( method called on the string collected from the invocant. See ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 5 >> BDC
    BT
      1 0 0 1 20 686 Tm
      [ -53431 (Str.split) ] TJ
    ET
  EMC
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 686 Tm
    [ -56821 ] TJ
    11 TL
    T*
    (for details on the ) Tj
  ET
EMC
/Code << /MCID 7 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F2 8 Tf
    [ -9061 (\\delimiter) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  91.49 674 50 10.8 re
  B
Q
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F3 10 Tf
    [ -12529 ( argument as well as available extra named parameters. The created supply can be limited with the ) ] TJ
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F2 8 Tf
    [ -65476 (\\limit) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  542.81 674 30.8 10.8 re
  B
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F3 10 Tf
    [ -55741 ] TJ
    T*
    (argument, see ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 11 >> BDC
    BT
      1 0 0 1 20 664 Tm
      [ -6054 (.head) ] TJ
    ET
  EMC
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 664 Tm
    [ -8442 (.) ] TJ
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 30 646.4 Tm
    /F2 8 Tf
    (my $words = Supply.from-list\(<Hello World From Raku!>\);) Tj
    8.8 TL
    T*
    (my $s = $words.split\(/ <?upper> /, 2, :skip-empty\);) Tj
    T*
    ($s.tap\(&say\);  OUTPUT: «HelloWorld») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 623.8 572 36.4 re
  B
Q
/H2 << /MCID 14 >> BDC
  BT
    1 0 0 1 20 593.6 Tm
    /F1 16 Tf
    (method rotate) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 30 558.4 Tm
    /F2 8 Tf
    (method rotate\(Supply:D: $rotate = 1\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 553.4 572 18.8 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F3 10 Tf
    (Creates a supply with elements rotated to the left when ) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F2 8 Tf
    [ -28086 ($rotate) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  243.69 535.4 35.6 10.8 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F3 10 Tf
    [ -26309 ( is positive or to the right otherwise, in which case the invocant is tapped on) ] TJ
    11 TL
    T*
    (before a new supply is returned.) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 30 507.8 Tm
    /F2 8 Tf
    (my $supply = Supply.from-list\(<a b c d e>\).rotate\(2\);) Tj
    8.8 TL
    T*
    ($supply.tap\(&say\);  OUTPUT: «cdeab») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 494 572 27.6 re
  B
Q
/Span << /MCID 20 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F1 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 477 Tm
    /F3 10 Tf
    [ -2249 (: Available since Rakudo 2020.06.) ] TJ
  ET
EMC
/H2 << /MCID 22 >> BDC
  BT
    1 0 0 1 20 441.8 Tm
    /F1 16 Tf
    (method rotor) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 30 406.6 Tm
    /F2 8 Tf
    (method rotor\(Supply:D: @cycle --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 401.6 572 18.8 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 384.6 Tm
    /F3 10 Tf
    (Creates a "rotoring" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 25 >> BDC
    BT
      1 0 0 1 20 384.6 Tm
      [ -22480 (List.rotor) ] TJ
    ET
  EMC
Q
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 384.6 Tm
    [ -26480 (.) ] TJ
  ET
EMC
/H2 << /MCID 27 >> BDC
  BT
    1 0 0 1 20 349.4 Tm
    /F1 16 Tf
    (method delayed) Tj
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 30 314.2 Tm
    /F2 8 Tf
    (method delayed\(Supply:D: $seconds, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 309.2 572 18.8 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 292.2 Tm
    /F3 10 Tf
    (Creates a new supply in which all values flowing through the given supply are emitted, but with the given delay in seconds.) Tj
  ET
EMC
/H2 << /MCID 30 >> BDC
  BT
    1 0 0 1 20 257 Tm
    /F1 16 Tf
    (method throttle) Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 217.4 Tm
    /F3 10 Tf
    (Defined as) Tj
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 30 199.8 Tm
    /F2 8 Tf
    (multi method throttle\(Supply:D:) Tj
    T*
    (      Int\(\)  $elems,) Tj
    T*
    (      Real\(\) $seconds,) Tj
    T*
    (      Real\(\) $delay  = 0,) Tj
    T*
    (      :$scheduler    = $*SCHEDULER,) Tj
    T*
    (      :$control,) Tj
    T*
    (      :$status,) Tj
    T*
    (      :$bleed,) Tj
    T*
    (      :$vent-at,) Tj
    T*
    (    \)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 115.6 572 98 re
  B
Q
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 103 Tm
    (multi method throttle\(Supply:D:) Tj
    T*
    (      Int\(\)  $elems,) Tj
    T*
    (      Callable:D $process,) Tj
    T*
    (      Real\(\) $delay = 0,) Tj
    T*
    (      :$scheduler   = $*SCHEDULER,) Tj
    T*
    (      :$control,) Tj
    T*
    (      :$status,) Tj
    T*
    (      :$bleed,) Tj
    T*
    (      :$vent-at,) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 27.6 572 89.2 re
  B
Q
endstream
endobj

88 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

89 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

90 0 obj
<<
  /Type /Page
  /Annots [ 91 0 R ]
  /Contents 93 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 94 0 R /GS2 95 0 R >>
    /Font << /F1 32 0 R /F2 34 0 R /F3 31 0 R >>
  >>
  /StructParents 33
>>
endobj

91 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 92 0 R
  /Border [ 0 0 0 ]
  /Contents (status message)
  /P 90 0 R
  /Rect [ 227.97 323 291.13 338 ]
  /StructParent 34
>>
endobj

92 0 obj
<< /Type /Action /S /GoTo /D /status_message >>
endobj

93 0 obj
<< /Length 10760 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 6.4 Tf
    (\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 747 572 17.04 re
  B
Q
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 730 Tm
    /F2 10 Tf
    (Arguments to ) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 20 730 Tm
    /F1 8 Tf
    [ -7465 (.throttle) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  78.72 729 45.2 10.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 730 Tm
    /F2 10 Tf
    [ -10772 ( are defined as follows:) ] TJ
  ET
EMC
/TH << /MCID 4 >> BDC
  BT
    1 0 0 1 20 708 Tm
    /F3 10 Tf
    (Argument) Tj
  ET
  q
    1 w
    20 706 m
    104.98 706 l
    S
  Q
EMC
/TH << /MCID 5 >> BDC
  BT
    1 0 0 1 114.98 708 Tm
    (Meaning) Tj
  ET
  q
    1 w
    114.98 706 m
    297.75 706 l
    S
  Q
EMC
/TD << /MCID 6 >> BDC
  BT
    1 0 0 1 20 694 Tm
    /F2 10 Tf
    ($limit,) Tj
  ET
EMC
/TD << /MCID 7 >> BDC
  BT
    1 0 0 1 114.98 694 Tm
    (values / time or simultaneous processing) Tj
  ET
EMC
/TD << /MCID 8 >> BDC
  BT
    1 0 0 1 20 681 Tm
    ($seconds or $process) Tj
  ET
EMC
/TD << /MCID 9 >> BDC
  BT
    1 0 0 1 114.98 681 Tm
    (time-unit / code to process simultaneously) Tj
  ET
EMC
/TD << /MCID 10 >> BDC
  BT
    1 0 0 1 20 668 Tm
    ($delay = 0,) Tj
  ET
EMC
/TD << /MCID 11 >> BDC
  BT
    1 0 0 1 114.98 668 Tm
    (initial delay before starting, in seconds) Tj
  ET
EMC
/TD << /MCID 12 >> BDC
  BT
    1 0 0 1 20 655 Tm
    (:$control,) Tj
  ET
EMC
/TD << /MCID 13 >> BDC
  BT
    1 0 0 1 114.98 655 Tm
    (supply to emit control messages on \(optional\)) Tj
  ET
EMC
/TD << /MCID 14 >> BDC
  BT
    1 0 0 1 20 642 Tm
    (:$status,) Tj
  ET
EMC
/TD << /MCID 15 >> BDC
  BT
    1 0 0 1 114.98 642 Tm
    (supply to tap status messages from \(optional\)) Tj
  ET
EMC
/TD << /MCID 16 >> BDC
  BT
    1 0 0 1 20 629 Tm
    (:$bleed,) Tj
  ET
EMC
/TD << /MCID 17 >> BDC
  BT
    1 0 0 1 114.98 629 Tm
    (supply to bleed messages to \(optional\)) Tj
  ET
EMC
/TD << /MCID 18 >> BDC
  BT
    1 0 0 1 20 616 Tm
    (:$vent-at,) Tj
  ET
EMC
/TD << /MCID 19 >> BDC
  BT
    1 0 0 1 114.98 616 Tm
    (bleed when so many buffered \(optional\)) Tj
  ET
EMC
/TD << /MCID 20 >> BDC
  BT
    1 0 0 1 20 603 Tm
    (:$scheduler,) Tj
  ET
EMC
/TD << /MCID 21 >> BDC
  BT
    1 0 0 1 114.98 603 Tm
    (scheduler to use, default $*SCHEDULER) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 568 Tm
    (This method produces a ) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 568 Tm
    /F1 8 Tf
    [ -12602 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  119.82 567 30.8 10.8 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 568 Tm
    /F2 10 Tf
    [ -13442 ( from a given one, but makes sure the number of messages passed through is limited.) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 546 Tm
    (It has two modes of operation: per time-unit or by maximum number of executions of a block of code: this is determined by the type of the) Tj
    11 TL
    T*
    (second positional parameter.) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 513 Tm
    (The first positional parameter specifies the limit that should be applied.) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 491 Tm
    (If the second positional parameter is a ) Tj
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 491 Tm
    /F1 8 Tf
    [ -19649 (Callable) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  176.19 490 40.4 10.8 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 491 Tm
    /F2 10 Tf
    [ -20039 (, then the limit indicates the maximum number of parallel processes executing the Callable,) ] TJ
    T*
    (which is given the value that was received. The emitted values in this case will be the ) Tj
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 20 480 Tm
    /F1 8 Tf
    [ -43361 (Promise) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  365.89 479 35.6 10.8 re
  B
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 480 Tm
    /F2 10 Tf
    [ -38529 (s that were obtained from ) ] TJ
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 20 480 Tm
    /F1 8 Tf
    [ -61561 (start) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  511.49 479 26 10.8 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 480 Tm
    /F2 10 Tf
    [ -52129 (ing the) ] TJ
    T*
    (Callable.) Tj
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 447 Tm
    (If the second positional parameter is a real number, it is interpreted as the time-unit \(in seconds\). If you specify ) Tj
  ET
EMC
/Span << /MCID 35 >> BDC
  BT
    1 0 0 1 20 447 Tm
    /F3 10 Tf
    [ -44964 (.1) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 447 Tm
    /F2 10 Tf
    [ -45964 ( as the value, then it makes) ] TJ
    T*
    (sure you don't exceed the limit for every tenth of a second.) Tj
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 414 Tm
    (If the limit is exceeded, then incoming messages are buffered until there is room to pass on / execute the Callable again.) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 392 Tm
    (The third positional parameter is optional: it indicates the number of seconds the throttle will wait before passing on any values.) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 370 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 20 370 Tm
    /F1 8 Tf
    [ -2569 (:control) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  39.55 369 40.4 10.8 re
  B
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 370 Tm
    /F2 10 Tf
    [ -6375 ( named parameter optionally specifies a Supply that you can use to control the throttle while it is in operation. Messages that) ] TJ
    T*
    (can be sent, are strings in the form of "key:value". Please see below for the types of messages that you can send to control the throttle.) Tj
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 337 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 43 >> BDC
  BT
    1 0 0 1 20 337 Tm
    /F1 8 Tf
    [ -2569 (:status) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  39.55 336 35.6 10.8 re
  B
Q
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 337 Tm
    /F2 10 Tf
    [ -5895 ( named parameter optionally specifies a Supply that will receive any status messages. If specified, it will at least send one status) ] TJ
    T*
    (message after the original Supply is exhausted. See ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 45 >> BDC
    BT
      1 0 0 1 20 326 Tm
      [ -20997 (status message) ] TJ
    ET
  EMC
Q
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 326 Tm
    [ -27163 ( below.) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 304 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 48 >> BDC
  BT
    1 0 0 1 20 304 Tm
    /F1 8 Tf
    [ -2569 (:bleed) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  39.55 303 30.8 10.8 re
  B
Q
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 304 Tm
    /F2 10 Tf
    [ -5415 ( named parameter optionally specifies a Supply that will receive any values that were either explicitly bled \(with the ) ] TJ
  ET
EMC
/Span << /MCID 50 >> BDC
  BT
    1 0 0 1 20 304 Tm
    /F3 10 Tf
    [ -52407 (bleed) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 304 Tm
    /F2 10 Tf
    [ -54935 ] TJ
    T*
    (control message\), or automatically bled \(if there's a ) Tj
  ET
EMC
/Span << /MCID 52 >> BDC
  BT
    1 0 0 1 20 293 Tm
    /F3 10 Tf
    [ -21009 (vent-at) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 293 Tm
    /F2 10 Tf
    [ -24258 ( active\).) ] TJ
  ET
EMC
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 271 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 55 >> BDC
  BT
    1 0 0 1 20 271 Tm
    /F1 8 Tf
    [ -2569 (:vent-at) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  39.55 270 40.4 10.8 re
  B
Q
/P << /MCID 56 >> BDC
  BT
    1 0 0 1 20 271 Tm
    /F2 10 Tf
    [ -6375 ( named parameter indicates the number of values that may be buffered before any additional value will be routed to the ) ] TJ
  ET
EMC
/Code << /MCID 57 >> BDC
  BT
    1 0 0 1 20 271 Tm
    /F1 8 Tf
    [ -68164 ] TJ
    8.8 TL
    T*
    (:bleed) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  19 261.2 30.8 19.6 re
  B
Q
/P << /MCID 58 >> BDC
  BT
    1 0 0 1 20 262.2 Tm
    /F2 10 Tf
    [ -3360 ( Supply. Defaults to 0 if not specified \(causing no automatic bleeding to happen\). Only makes sense if a ) ] TJ
  ET
EMC
/Code << /MCID 59 >> BDC
  BT
    1 0 0 1 20 262.2 Tm
    /F1 8 Tf
    [ -56762 (:bleed) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  473.1 261.2 30.8 10.8 re
  B
Q
/P << /MCID 60 >> BDC
  BT
    1 0 0 1 20 262.2 Tm
    /F2 10 Tf
    [ -48770 ( Supply has also) ] TJ
    11 TL
    T*
    (been specified.) Tj
  ET
EMC
/P << /MCID 61 >> BDC
  BT
    1 0 0 1 20 229.2 Tm
    (The ) Tj
  ET
EMC
/Code << /MCID 62 >> BDC
  BT
    1 0 0 1 20 229.2 Tm
    /F1 8 Tf
    [ -2569 (:scheduler) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  39.55 228.2 50 10.8 re
  B
Q
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 229.2 Tm
    /F2 10 Tf
    [ -7335 ( named parameter indicates the scheduler to be used. Defaults to ) ] TJ
  ET
EMC
/Code << /MCID 64 >> BDC
  BT
    1 0 0 1 20 229.2 Tm
    /F1 8 Tf
    [ -41974 ($*SCHEDULER) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  354.79 228.2 54.8 10.8 re
  B
Q
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 229.2 Tm
    /F2 10 Tf
    [ -39339 (.) ] TJ
  ET
EMC
/H3 << /MCID 66 >> BDC
  BT
    1 0 0 1 20 200.6 Tm
    /F3 13 Tf
    (control messages) Tj
  ET
EMC
/P << /MCID 67 >> BDC
  BT
    1 0 0 1 20 164.3 Tm
    /F2 10 Tf
    (These messages can be sent to the ) Tj
  ET
EMC
/Code << /MCID 68 >> BDC
  BT
    1 0 0 1 20 164.3 Tm
    /F1 8 Tf
    [ -17635 (:control) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  160.08 163.3 40.4 10.8 re
  B
Q
/P << /MCID 69 >> BDC
  BT
    1 0 0 1 20 164.3 Tm
    /F2 10 Tf
    [ -18428 ( Supply. A control message consists of a string of the form "key: value", e.g. "limit: 4".) ] TJ
  ET
EMC
/Lbl << /MCID 70 >> BDC
  BT
    1 0 0 1 20 142.3 Tm
    () Tj
  ET
EMC
/P << /MCID 71 >> BDC
  BT
    1 0 0 1 30 142.3 Tm
    (limit) Tj
  ET
EMC
/P << /MCID 72 >> BDC
  BT
    1 0 0 1 20 120.3 Tm
    (Change the number of messages \(as initially given in the first positional\) to the value given.) Tj
  ET
EMC
/Lbl << /MCID 73 >> BDC
  BT
    1 0 0 1 20 98.3 Tm
    () Tj
  ET
EMC
/P << /MCID 74 >> BDC
  BT
    1 0 0 1 30 98.3 Tm
    (bleed) Tj
  ET
EMC
/P << /MCID 75 >> BDC
  BT
    1 0 0 1 20 76.3 Tm
    (Route the given number of buffered messages to the ) Tj
  ET
EMC
/Code << /MCID 76 >> BDC
  BT
    1 0 0 1 20 76.3 Tm
    /F1 8 Tf
    [ -26731 (:bleed) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  232.85 75.3 30.8 10.8 re
  B
Q
/P << /MCID 77 >> BDC
  BT
    1 0 0 1 20 76.3 Tm
    /F2 10 Tf
    [ -24745 ( Supply.) ] TJ
  ET
EMC
endstream
endobj

94 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

95 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

96 0 obj
<<
  /Type /Page
  /Contents 97 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 98 0 R /GS2 99 0 R >>
    /Font << /F1 34 0 R /F2 32 0 R /F3 31 0 R >>
  >>
  /StructParents 35
>>
endobj

97 0 obj
<< /Length 5374 >> stream
/Lbl << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    () Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 30 752 Tm
    (vent-at) Tj
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 730 Tm
    (Change the maximum number of buffered values before automatic bleeding takes place. If the value is lower than before, will cause) Tj
    11 TL
    T*
    (immediate rerouting of buffered values to match the new maximum.) Tj
  ET
EMC
/Lbl << /MCID 3 >> BDC
  BT
    1 0 0 1 20 697 Tm
    () Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 30 697 Tm
    (status) Tj
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 675 Tm
    (Send a status message to the ) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F2 8 Tf
    [ -14825 (:status) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  137.6 674 35.6 10.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F1 10 Tf
    [ -15700 ( Supply with the given id.) ] TJ
  ET
EMC
/H3 << /MCID 8 >> BDC
  BT
    1 0 0 1 20 646.4 Tm
    /F3 13 Tf
    (status message) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 610.1 Tm
    /F1 10 Tf
    (The status return message is a hash with the following keys:) Tj
  ET
EMC
/Lbl << /MCID 10 >> BDC
  BT
    1 0 0 1 20 588.1 Tm
    () Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 30 588.1 Tm
    (allowed) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 566.1 Tm
    (The current number of messages / callables that is still allowed to be passed / executed.) Tj
  ET
EMC
/Lbl << /MCID 13 >> BDC
  BT
    1 0 0 1 20 544.1 Tm
    () Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 30 544.1 Tm
    (bled) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 522.1 Tm
    (The number of messages routed to the ) Tj
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 20 522.1 Tm
    /F2 8 Tf
    [ -19719 (:bleed) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  176.75 521.1 30.8 10.8 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 522.1 Tm
    /F1 10 Tf
    [ -19135 ( Supply.) ] TJ
  ET
EMC
/Lbl << /MCID 18 >> BDC
  BT
    1 0 0 1 20 500.1 Tm
    () Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 30 500.1 Tm
    (buffered) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 478.1 Tm
    (The number of messages currently buffered because of overflow.) Tj
  ET
EMC
/Lbl << /MCID 21 >> BDC
  BT
    1 0 0 1 20 456.1 Tm
    () Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 30 456.1 Tm
    (emitted) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 434.1 Tm
    (The number of messages emitted \(passed through\).) Tj
  ET
EMC
/Lbl << /MCID 24 >> BDC
  BT
    1 0 0 1 20 412.1 Tm
    () Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 30 412.1 Tm
    (id) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 390.1 Tm
    (The id of this status message \(a monotonically increasing number\). Handy if you want to log status messages.) Tj
  ET
EMC
/Lbl << /MCID 27 >> BDC
  BT
    1 0 0 1 20 368.1 Tm
    () Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 30 368.1 Tm
    (limit) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 346.1 Tm
    (The current limit that is being applied.) Tj
  ET
EMC
/Lbl << /MCID 30 >> BDC
  BT
    1 0 0 1 20 324.1 Tm
    () Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 30 324.1 Tm
    (vent-at) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 302.1 Tm
    (The maximum number of messages that may be buffered before they're automatically re-routed to the ) Tj
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 20 302.1 Tm
    /F2 8 Tf
    [ -51464 (:bleed) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  430.71 301.1 30.8 10.8 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 302.1 Tm
    /F1 10 Tf
    [ -44531 ( Supply.) ] TJ
  ET
EMC
/H3 << /MCID 35 >> BDC
  BT
    1 0 0 1 20 273.5 Tm
    /F3 13 Tf
    (Examples) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    /F1 10 Tf
    (Have a simple piece of code announce when it starts running asynchronously, wait a random amount of time, then announce when it is done.) Tj
    T*
    (Do this 6 times, but don't let more than 3 of them run simultaneously.) Tj
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 208.6 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(^6\);   set up supply) Tj
    8.8 TL
    T*
    (my $t = $s.throttle: 3,         only allow 3 at a time) Tj
    T*
    ({                               code block to run) Tj
    T*
    (    say "running $_";           announce we've started) Tj
    T*
    (    sleep rand;                 wait some random time) Tj
    T*
    (    say "done $_"               announce we're done) Tj
    T*
    (}                               don't need ; because } at end of line) Tj
    T*
    ($t.wait;                        wait for the supply to be done) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 142 572 80.4 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 125 Tm
    /F1 10 Tf
    (and the result of one run will be:) Tj
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 30 107.4 Tm
    /F2 8 Tf
    (running 0) Tj
    T*
    (running 1) Tj
    T*
    (running 2) Tj
    T*
    (done 2) Tj
    T*
    (running 3) Tj
    T*
    (done 1) Tj
    T*
    (running 4) Tj
    T*
    (done 4) Tj
    T*
    (running 5) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 32 572 89.2 re
  B
Q
endstream
endobj

98 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

99 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

100 0 obj
<<
  /Type /Page
  /Annots [ 101 0 R ]
  /Contents 103 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 104 0 R /GS2 105 0 R >>
    /Font << /F1 32 0 R /F2 31 0 R /F3 34 0 R >>
  >>
  /StructParents 36
>>
endobj

101 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 102 0 R
  /Border [ 0 0 0 ]
  /Contents (List.produce)
  /P 100 0 R
  /Rect [ 251.13 314.72 305.4 329.72 ]
  /StructParent 37
>>
endobj

102 0 obj
<< /Type /Action /S /URI /URI (/type/List#routine_produce) >>
endobj

103 0 obj
<< /Length 8223 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 6.4 Tf
    (done 0) Tj
    7.04 TL
    T*
    (done 3) Tj
    T*
    (done 5) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 732.92 572 31.12 re
  B
Q
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 702.72 Tm
    /F2 16 Tf
    (method stable) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 667.52 Tm
    /F1 8 Tf
    (method stable\(Supply:D: $time, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 662.52 572 18.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 645.52 Tm
    /F3 10 Tf
    (Creates a new supply that only passes on a value flowing through the given supply if it wasn't superseded by another value in the given ) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 20 645.52 Tm
    /F1 8 Tf
    [ -68202 ($time) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  564.62 644.52 26 10.8 re
  B
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 645.52 Tm
    /F3 10 Tf
    [ -57442 ] TJ
    11 TL
    T*
    (\(in seconds\). Optionally uses another scheduler than the default scheduler, using the ) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 20 634.52 Tm
    /F1 8 Tf
    [ -42666 (:scheduler) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  360.33 633.52 50 10.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 634.52 Tm
    /F3 10 Tf
    [ -39413 ( parameter.) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 612.52 Tm
    (To clarify the above, if, during the timeout ) Tj
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 20 612.52 Tm
    /F1 8 Tf
    [ -21976 ($time) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  194.81 611.52 26 10.8 re
  B
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 612.52 Tm
    /F3 10 Tf
    [ -20461 (, additional values are emitted to the ) ] TJ
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 20 612.52 Tm
    /F1 8 Tf
    [ -44359 (Supplier) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  373.87 611.52 40.4 10.8 re
  B
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 612.52 Tm
    /F3 10 Tf
    [ -39807 ( all but the last one will be thrown away.) ] TJ
    T*
    (Each time an additional value is emitted to the ) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 20 601.52 Tm
    /F1 8 Tf
    [ -23817 (Supplier) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  209.54 600.52 40.4 10.8 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 601.52 Tm
    /F3 10 Tf
    [ -23374 (, during the timeout, ) ] TJ
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 20 601.52 Tm
    /F1 8 Tf
    [ -40016 ($time) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  339.13 600.52 26 10.8 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 601.52 Tm
    /F3 10 Tf
    [ -34893 ( is reset.) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 579.52 Tm
    (This method can be quite useful when handling UI input, where it is not desired to perform an operation until the user has stopped typing for a) Tj
    T*
    (while rather than on every keystroke.) Tj
  ET
EMC
/Code << /MCID 18 >> BDC
  BT
    1 0 0 1 30 550.92 Tm
    /F1 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply1 = $supplier.Supply;) Tj
    T*
    ($supply1.tap\(-> $v { say "Supply1 got: $v" }\);) Tj
    T*
    ($supplier.emit\(42\);) Tj
    T*
    [  ] TJ
    T*
    (my Supply $supply2 = $supply1.stable\(5\);) Tj
    T*
    ($supply2.tap\(-> $v { say "Supply2 got: $v" }\);) Tj
    T*
    (sleep\(3\);) Tj
    T*
    ($supplier.emit\(43\);   will not be seen by $supply2 but will reset $time) Tj
    T*
    ($supplier.emit\(44\);) Tj
    T*
    (sleep\(10\);) Tj
    T*
    ( OUTPUT: «Supply1 got: 42Supply1 got: 43Supply1 got: 44Supply2 got: 44») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 449.12 572 115.6 re
  B
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 432.12 Tm
    /F3 10 Tf
    (As can be seen above, ) Tj
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 20 432.12 Tm
    /F1 8 Tf
    [ -11697 ($supply1) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  112.58 431.12 40.4 10.8 re
  B
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 432.12 Tm
    /F3 10 Tf
    [ -13678 ( received all values emitted to the ) ] TJ
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 20 432.12 Tm
    /F1 8 Tf
    [ -34525 (Supplier) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  295.2 431.12 40.4 10.8 re
  B
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 432.12 Tm
    /F3 10 Tf
    [ -31940 ( while ) ] TJ
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 20 432.12 Tm
    /F1 8 Tf
    [ -43640 ($supply2) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  368.12 431.12 40.4 10.8 re
  B
Q
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 432.12 Tm
    /F3 10 Tf
    [ -39232 ( only received one value. The 43 was thrown) ] TJ
    11 TL
    T*
    (away because it was followed by another 'last' value 44 which was retained and sent to ) Tj
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 20 421.12 Tm
    /F1 8 Tf
    [ -43947 ($supply2) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  370.58 420.12 40.4 10.8 re
  B
Q
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 421.12 Tm
    /F3 10 Tf
    [ -39478 ( after approximately eight seconds, this due) ] TJ
    T*
    (to the fact that the timeout ) Tj
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 20 410.12 Tm
    /F1 8 Tf
    [ -13784 ($time) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  129.27 409.12 26 10.8 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 410.12 Tm
    /F3 10 Tf
    [ -13907 ( was reset after three seconds.) ] TJ
  ET
EMC
/H2 << /MCID 30 >> BDC
  BT
    1 0 0 1 20 374.92 Tm
    /F2 16 Tf
    (method produce) Tj
  ET
EMC
/Code << /MCID 31 >> BDC
  BT
    1 0 0 1 30 339.72 Tm
    /F1 8 Tf
    (method produce\(Supply:D: &with --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 334.72 572 18.8 re
  B
Q
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 317.72 Tm
    /F3 10 Tf
    (Creates a "producing" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 33 >> BDC
    BT
      1 0 0 1 20 317.72 Tm
      [ -23313 (List.produce) ] TJ
    ET
  EMC
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 317.72 Tm
    [ -28590 (.) ] TJ
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 30 300.12 Tm
    /F1 8 Tf
    (my $supply = Supply.from-list\(1..5\).produce\({$^a + $^b}\);) Tj
    8.8 TL
    T*
    ($supply.tap\(-> $v { say "$v" }\);  OUTPUT: «1361015») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 286.32 572 27.6 re
  B
Q
/H2 << /MCID 36 >> BDC
  BT
    1 0 0 1 20 256.12 Tm
    /F2 16 Tf
    (method lines) Tj
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 220.92 Tm
    /F1 8 Tf
    (method lines\(Supply:D: :$chomp = True --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 215.92 572 18.8 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 198.92 Tm
    /F3 10 Tf
    (Creates a supply that will emit the characters coming in line by line from a supply that's usually created by some asynchronous I/O operation.) Tj
    11 TL
    T*
    (The optional ) Tj
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 20 187.92 Tm
    /F1 8 Tf
    [ -6979 (:chomp) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  74.83 186.92 30.8 10.8 re
  B
Q
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 187.92 Tm
    /F3 10 Tf
    [ -8943 ( parameter indicates whether to remove line separators: the default is ) ] TJ
  ET
EMC
/Code << /MCID 41 >> BDC
  BT
    1 0 0 1 20 187.92 Tm
    /F1 8 Tf
    [ -46240 (True) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  388.92 186.92 21.2 10.8 re
  B
Q
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 187.92 Tm
    /F3 10 Tf
    [ -39392 (.) ] TJ
  ET
EMC
/H2 << /MCID 43 >> BDC
  BT
    1 0 0 1 20 152.72 Tm
    /F2 16 Tf
    (method words) Tj
  ET
EMC
/Code << /MCID 44 >> BDC
  BT
    1 0 0 1 30 117.52 Tm
    /F1 8 Tf
    (method words\(Supply:D: --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 112.52 572 18.8 re
  B
Q
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 95.52 Tm
    /F3 10 Tf
    (Creates a supply that will emit the characters coming in word for word from a supply that's usually created by some asynchronous I/O) Tj
    T*
    (operation.) Tj
  ET
EMC
endstream
endobj

104 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

105 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

106 0 obj
<<
  /Type /Page
  /Annots [ 107 0 R 109 0 R 111 0 R 113 0 R 115 0 R 117 0 R 119 0 R ]
  /Contents 121 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 122 0 R /GS2 123 0 R >>
    /Font << /F1 32 0 R /F2 31 0 R /F3 34 0 R >>
  >>
  /StructParents 38
>>
endobj

107 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 108 0 R
  /Border [ 0 0 0 ]
  /Contents (unique)
  /P 106 0 R
  /Rect [ 508.71 639 539.93 654 ]
  /StructParent 39
>>
endobj

108 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_unique)
>>
endobj

109 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 110 0 R
  /Border [ 0 0 0 ]
  /Contents (unique)
  /P 106 0 R
  /Rect [ 515.36 524.6 546.58 539.6 ]
  /StructParent 40
>>
endobj

110 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_unique)
>>
endobj

111 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 112 0 R
  /Border [ 0 0 0 ]
  /Contents (repeated)
  /P 106 0 R
  /Rect [ 37.44 476.2 75.31 491.2 ]
  /StructParent 41
>>
endobj

112 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_repeated)
>>
endobj

113 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 114 0 R
  /Border [ 0 0 0 ]
  /Contents (Rakudo)
  /P 106 0 R
  /Rect [ 162.41 454.2 197.52 469.2 ]
  /StructParent 42
>>
endobj

114 0 obj
<< /Type /Action /S /URI /URI (/language/glossary#Rakudo) >>
endobj

115 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 116 0 R
  /Border [ 0 0 0 ]
  /Contents (squish)
  /P 106 0 R
  /Rect [ 508.71 361.8 538.27 376.8 ]
  /StructParent 43
>>
endobj

116 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_squish)
>>
endobj

117 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 118 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.max)
  /P 106 0 R
  /Rect [ 213.79 247.4 254.73 262.4 ]
  /StructParent 44
>>
endobj

118 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_max) >>
endobj

119 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 120 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.min)
  /P 106 0 R
  /Rect [ 213.79 133 253.07 148 ]
  /StructParent 45
>>
endobj

120 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_min) >>
endobj

121 0 obj
<< /Length 7374 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 8 Tf
    (my $s = Supply.from-list\("Hello Word!".comb\);) Tj
    8.8 TL
    T*
    (my $ws = $s.words;) Tj
    T*
    ($ws.tap\(&say\);            OUTPUT: «HelloWord!») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 729.4 572 36.4 re
  B
Q
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 699.2 Tm
    /F2 16 Tf
    (method unique) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 664 Tm
    /F1 8 Tf
    (method unique\(Supply:D: :$as, :$with, :$expires --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 659 572 18.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F3 10 Tf
    (Creates a supply that only provides unique values, as defined by the optional ) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F1 8 Tf
    [ -38989 (:as) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  330.91 641 16.4 10.8 re
  B
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F3 10 Tf
    [ -33111 ( and ) ] TJ
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F1 8 Tf
    [ -44131 (:with) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  372.05 641 26 10.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 642 Tm
    /F3 10 Tf
    [ -38185 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 8 >> BDC
    BT
      1 0 0 1 20 642 Tm
      [ -49071 (unique) ] TJ
    ET
  EMC
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 642 Tm
    [ -52043 (\). The) ] TJ
    11 TL
    T*
    (optional ) Tj
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F1 8 Tf
    [ -4722 (:expires) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  56.78 630 40.4 10.8 re
  B
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 631 Tm
    /F3 10 Tf
    [ -8098 ( parameter how long to wait \(in seconds\) before "resetting" and not considering a value to have been seen, even if it's the) ] TJ
    T*
    (same as an old value.) Tj
  ET
EMC
/H2 << /MCID 12 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F2 16 Tf
    (method repeated) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 30 549.6 Tm
    /F1 8 Tf
    (method repeated\(Supply:D: :&as, :&with\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 544.6 572 18.8 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    (Creates a supply that only provides repeated values, as defined by the optional ) Tj
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F1 8 Tf
    [ -39820 (:as) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  337.56 526.6 16.4 10.8 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    [ -33776 ( and ) ] TJ
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F1 8 Tf
    [ -44962 (:with) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  378.7 526.6 26 10.8 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    [ -38850 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 19 >> BDC
    BT
      1 0 0 1 20 527.6 Tm
      [ -49736 (unique) ] TJ
    ET
  EMC
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    [ -52708 (\).) ] TJ
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 30 510 Tm
    /F1 8 Tf
    (my $supply = Supply.from-list\(<a A B b c b C>\).repeated\(:as\(&lc\)\);) Tj
    8.8 TL
    T*
    ($supply.tap\(&say\);            OUTPUT: «AbbC») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 496.2 572 27.6 re
  B
Q
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    /F3 10 Tf
    (See ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 23 >> BDC
    BT
      1 0 0 1 20 479.2 Tm
      [ -1944 (repeated) ] TJ
    ET
  EMC
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 479.2 Tm
    [ -5581 ( for more examples that use its sub form.) ] TJ
  ET
EMC
/Span << /MCID 25 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    /F2 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    /F3 10 Tf
    [ -2249 (: Available since version 6.e \() ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 27 >> BDC
    BT
      1 0 0 1 20 457.2 Tm
      [ -14441 (Rakudo) ] TJ
    ET
  EMC
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 457.2 Tm
    [ -17802 ( 2020.01 and later\).) ] TJ
  ET
EMC
/H2 << /MCID 29 >> BDC
  BT
    1 0 0 1 20 422 Tm
    /F2 16 Tf
    (method squish) Tj
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 30 386.8 Tm
    /F1 8 Tf
    (method squish\(Supply:D: :$as, :$with --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 381.8 572 18.8 re
  B
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 364.8 Tm
    /F3 10 Tf
    (Creates a supply that only provides unique values, as defined by the optional ) Tj
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 20 364.8 Tm
    /F1 8 Tf
    [ -38989 (:as) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  330.91 363.8 16.4 10.8 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 364.8 Tm
    /F3 10 Tf
    [ -33111 ( and ) ] TJ
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 20 364.8 Tm
    /F1 8 Tf
    [ -44131 (:with) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  372.05 363.8 26 10.8 re
  B
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 364.8 Tm
    /F3 10 Tf
    [ -38185 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 36 >> BDC
    BT
      1 0 0 1 20 364.8 Tm
      [ -49071 (squish) ] TJ
    ET
  EMC
Q
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 364.8 Tm
    [ -51877 (\).) ] TJ
  ET
EMC
/H2 << /MCID 38 >> BDC
  BT
    1 0 0 1 20 329.6 Tm
    /F2 16 Tf
    (method max) Tj
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 30 294.4 Tm
    /F1 8 Tf
    (method max\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 289.4 572 18.8 re
  B
Q
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 272.4 Tm
    /F3 10 Tf
    (Creates a supply that only emits values from the given supply if they are larger than any value seen before. In other words, from a) Tj
    11 TL
    T*
    (continuously ascending supply it will emit all the values. From a continuously descending supply it will only emit the first value. The optional) Tj
    T*
    (parameter specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 41 >> BDC
    BT
      1 0 0 1 20 250.4 Tm
      [ -19579 (Any.max) ] TJ
    ET
  EMC
Q
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 250.4 Tm
    [ -23523 (.) ] TJ
  ET
EMC
/H2 << /MCID 43 >> BDC
  BT
    1 0 0 1 20 215.2 Tm
    /F2 16 Tf
    (method min) Tj
  ET
EMC
/Code << /MCID 44 >> BDC
  BT
    1 0 0 1 30 180 Tm
    /F1 8 Tf
    (method min\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 175 572 18.8 re
  B
Q
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 158 Tm
    /F3 10 Tf
    (Creates a supply that only emits values from the given supply if they are smaller than any value seen before. In other words, from a) Tj
    T*
    (continuously descending supply it will emit all the values. From a continuously ascending supply it will only emit the first value. The optional) Tj
    T*
    (parameter specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 46 >> BDC
    BT
      1 0 0 1 20 136 Tm
      [ -19579 (Any.min) ] TJ
    ET
  EMC
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 136 Tm
    [ -23357 (.) ] TJ
  ET
EMC
endstream
endobj

122 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

123 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

124 0 obj
<<
  /Type /Page
  /Annots [ 125 0 R ]
  /Contents 127 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 128 0 R /GS2 129 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 46
>>
endobj

125 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 126 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.minmax)
  /P 124 0 R
  /Rect [ 171.31 680.8 227.81 695.8 ]
  /StructParent 47
>>
endobj

126 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_minmax) >>
endobj

127 0 obj
<< /Length 7533 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method minmax) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method minmax\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 711.8 572 18.8 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F3 10 Tf
    (Creates a supply that emits a Range every time a new minimum or maximum values is seen from the given supply. The optional parameter) Tj
    11 TL
    T*
    (specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 3 >> BDC
    BT
      1 0 0 1 20 683.8 Tm
      [ -15331 (Any.minmax) ] TJ
    ET
  EMC
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 683.8 Tm
    [ -20831 (.) ] TJ
  ET
EMC
/H2 << /MCID 5 >> BDC
  BT
    1 0 0 1 20 648.6 Tm
    /F1 16 Tf
    (method skip) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 613.4 Tm
    /F2 8 Tf
    (method skip\(Supply:D: Int\(Cool\) $number = 1 --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 608.4 572 18.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F3 10 Tf
    (Returns a new ) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F2 8 Tf
    [ -7776 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  81.21 590.4 30.8 10.8 re
  B
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F3 10 Tf
    [ -9581 ( which will emit all values from the given ) ] TJ
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F2 8 Tf
    [ -33502 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  287.02 590.4 30.8 10.8 re
  B
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F3 10 Tf
    [ -30162 ( except for the first ) ] TJ
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F2 8 Tf
    [ -47839 ($number) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  401.71 590.4 35.6 10.8 re
  B
Q
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F3 10 Tf
    [ -42111 ( values, which will be thrown away.) ] TJ
  ET
EMC
/Code << /MCID 14 >> BDC
  BT
    1 0 0 1 30 573.8 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply = $supplier.Supply;) Tj
    T*
    ($supply = $supply.skip\(3\);) Tj
    T*
    ($supply.tap\({ say $_ }\);) Tj
    T*
    ($supplier.emit\($_\) for 1..10;  OUTPUT: «45678910») Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 533.6 572 54 re
  B
Q
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F1 16 Tf
    (method start) Tj
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 468.2 Tm
    /F2 8 Tf
    (method start\(Supply:D: &startee --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 463.2 572 18.8 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 446.2 Tm
    /F3 10 Tf
    (Creates a supply of supplies. For each value in the original supply, the code object is scheduled on another thread, and returns a supply either) Tj
    11 TL
    T*
    (of a single value \(if the code succeeds\), or one that quits without a value \(if the code fails\).) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 413.2 Tm
    (This is useful for asynchronously starting work that you don't block on.) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    (Use ) Tj
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F2 8 Tf
    [ -2569 (migrate) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  39.55 390.2 35.6 10.8 re
  B
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F3 10 Tf
    [ -5895 ( to join the values into a single supply again.) ] TJ
  ET
EMC
/H2 << /MCID 22 >> BDC
  BT
    1 0 0 1 20 356 Tm
    /F1 16 Tf
    (method migrate) Tj
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 30 320.8 Tm
    /F2 8 Tf
    (method migrate\(Supply:D: --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 315.8 572 18.8 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F3 10 Tf
    (Takes a ) Tj
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F2 8 Tf
    [ -4477 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  54.82 297.8 30.8 10.8 re
  B
Q
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F3 10 Tf
    [ -6942 ( which itself has values that are of type ) ] TJ
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F2 8 Tf
    [ -28812 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  249.5 297.8 30.8 10.8 re
  B
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F3 10 Tf
    [ -26410 ( as input. Each time the outer ) ] TJ
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F2 8 Tf
    [ -48254 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  405.03 297.8 30.8 10.8 re
  B
Q
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F3 10 Tf
    [ -41963 ( emits a new ) ] TJ
  ET
EMC
/Code << /MCID 31 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F2 8 Tf
    [ -59362 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  493.9 297.8 30.8 10.8 re
  B
Q
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F3 10 Tf
    [ -50850 (, this will be) ] TJ
    T*
    (tapped and its values emitted. Any previously tapped ) Tj
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F2 8 Tf
    [ -27150 (Supply) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  236.2 286.8 30.8 10.8 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F3 10 Tf
    [ -25080 ( will be closed. This is useful for migrating between different data sources, and) ] TJ
    T*
    (only paying attention to the latest one.) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 254.8 Tm
    (For example, imagine an application where the user can switch between different stocks. When they switch to a new one, a connection is) Tj
    T*
    (established to a web socket to get the latest values, and any previous connection should be closed. Each stream of values coming over the web) Tj
    T*
    (socket would be represented as a Supply, which themselves are emitted into a Supply of latest data sources to watch. The ) Tj
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F2 8 Tf
    [ -61240 (migrate) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  508.92 231.8 35.6 10.8 re
  B
Q
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F3 10 Tf
    [ -52832 ( method) ] TJ
    T*
    (could be used to flatten this supply of supplies into a single Supply of the current values that the user cares about.) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 199.8 Tm
    (Here is a simple simulation of such a program:) Tj
  ET
EMC
/Code << /MCID 39 >> BDC
  BT
    1 0 0 1 30 182.2 Tm
    /F2 8 Tf
    (my Supplier $stock-sources .= new;) Tj
    8.8 TL
    T*
    [  ] TJ
    T*
    (sub watch-stock\($symbol\) {) Tj
    T*
    (    $stock-sources.emit: supply {) Tj
    T*
    (        say "Starting to watch $symbol";) Tj
    T*
    (        whenever Supply.interval\(1\) {) Tj
    T*
    (            emit "$symbol: 111." ~ 99.rand.Int;) Tj
    T*
    (        }) Tj
    T*
    (        CLOSE say "Lost interest in $symbol";) Tj
    T*
    (    }) Tj
    T*
    (}) Tj
    T*
    [  ] TJ
    T*
    ($stock-sources.Supply.migrate.tap: *.say;) Tj
    T*
    [  ] TJ
    T*
    (watch-stock\('GOOG'\);) Tj
    T*
    (sleep 3;) Tj
    T*
    (watch-stock\('AAPL'\);) Tj
    T*
    (sleep 3;) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 27.6 572 168.4 re
  B
Q
endstream
endobj

128 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

129 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

130 0 obj
<<
  /Type /Page
  /Contents 131 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 132 0 R /GS2 133 0 R >>
    /Font << /F1 34 0 R /F2 32 0 R >>
  >>
  /StructParents 48
>>
endobj

131 0 obj
<< /Length 535 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (Which produces output like:) Tj
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 734.4 Tm
    /F2 8 Tf
    (Starting to watch GOOG) Tj
    8.8 TL
    T*
    (GOOG: 111.67) Tj
    T*
    (GOOG: 111.20) Tj
    T*
    (GOOG: 111.37) Tj
    T*
    (Lost interest in GOOG) Tj
    T*
    (Starting to watch AAPL) Tj
    T*
    (AAPL: 111.55) Tj
    T*
    (AAPL: 111.6) Tj
    T*
    (AAPL: 111.6) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 659 572 89.2 re
  B
Q
endstream
endobj

132 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

133 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

134 0 obj
<<
  /Type /Page
  /Annots [ 135 0 R 137 0 R ]
  /Contents 139 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 140 0 R /GS2 141 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 49
>>
endobj

135 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 136 0 R
  /Border [ 0 0 0 ]
  /Contents (Lists)
  /P 134 0 R
  /Rect [ 486.83 509.2 510.28 524.2 ]
  /StructParent 50
>>
endobj

136 0 obj
<< /Type /Action /S /URI /URI (/type/List) >>
endobj

137 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 138 0 R
  /Border [ 0 0 0 ]
  /Contents (Lists)
  /P 134 0 R
  /Rect [ 491.83 339.8 515.28 354.8 ]
  /StructParent 51
>>
endobj

138 0 obj
<< /Type /Action /S /URI /URI (/type/List) >>
endobj

139 0 obj
<< /Length 4587 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that combine supplies) Tj
  ET
  q
    1 w
    20 750 m
    285.02 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method merge) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method merge\(Supply @*supplies --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 654.6 572 18.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (Creates a supply to which any value seen from the given supplies, is emitted. The resulting supply is done only when all given supplies are) Tj
    11 TL
    T*
    (done. Can also be called as a class method.) Tj
  ET
EMC
/H2 << /MCID 4 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F1 16 Tf
    (method zip) Tj
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 551.8 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 534.2 Tm
    /F2 8 Tf
    (method zip\(**@s, :&with\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 529.2 572 18.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F3 10 Tf
    (Creates a supply that emits combined values as soon as there is a new value seen on ) Tj
  ET
EMC
/Span << /MCID 8 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F1 10 Tf
    [ -34050 (all) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    /F3 10 Tf
    [ -35356 ( of the supplies. By default, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 512.2 Tm
      [ -46883 (Lists) ] TJ
    ET
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 512.2 Tm
    [ -49078 ( are created, but this) ] TJ
    T*
    (can be changed by specifying your own combiner with the ) Tj
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F2 8 Tf
    [ -29890 (:with) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  258.12 500.2 26 10.8 re
  B
Q
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F3 10 Tf
    [ -26792 ( parameter. The resulting supply is done as soon as ) ] TJ
  ET
EMC
/Span << /MCID 14 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F1 10 Tf
    [ -47678 (any) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F3 10 Tf
    [ -49484 ( of the given) ] TJ
    T*
    (supplies are done. Can also be called as a class method.) Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    (This can also be used as a class method; in case it's used as an object method the corresponding supply will be one of the supplies combined) Tj
    T*
    (\(with no special treatment\).) Tj
  ET
EMC
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 422 Tm
    /F1 16 Tf
    (method zip-latest) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 30 364.8 Tm
    /F2 8 Tf
    (method zip-latest\(**@s, :&with, :$initial \)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 359.8 572 18.8 re
  B
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 342.8 Tm
    /F3 10 Tf
    (Creates a supply that emits combined values as soon as there is a new value seen on ) Tj
  ET
EMC
/Span << /MCID 21 >> BDC
  BT
    1 0 0 1 20 342.8 Tm
    /F1 10 Tf
    [ -34050 (any) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 342.8 Tm
    /F3 10 Tf
    [ -35856 ( of the supplies. By default, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 23 >> BDC
    BT
      1 0 0 1 20 342.8 Tm
      [ -47383 (Lists) ] TJ
    ET
  EMC
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 342.8 Tm
    [ -49578 ( are created, but) ] TJ
    T*
    (this can be changed by specifying your own combiner with the ) Tj
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 20 331.8 Tm
    /F2 8 Tf
    [ -32009 (:with) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  275.07 330.8 26 10.8 re
  B
Q
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 331.8 Tm
    /F3 10 Tf
    [ -28487 ( parameter. The optional :initial parameter can be used to indicate the) ] TJ
    T*
    (initial state of the combined values. By default, all supplies have to have at least one value emitted on them before the first combined values is) Tj
    T*
    (emitted on the resulting supply. The resulting supply is done as soon as ) Tj
  ET
EMC
/Span << /MCID 27 >> BDC
  BT
    1 0 0 1 20 309.8 Tm
    /F1 10 Tf
    [ -29027 (any) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 309.8 Tm
    /F3 10 Tf
    [ -30833 ( of the given supplies are done. Can also be called as a class) ] TJ
    T*
    (method.) Tj
  ET
EMC
endstream
endobj

140 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

141 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

142 0 obj
<<
  /Type /Page
  /Annots [ 143 0 R 145 0 R 146 0 R ]
  /Contents 148 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 149 0 R /GS2 150 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 52
>>
endobj

143 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 144 0 R
  /Border [ 0 0 0 ]
  /Contents (enum)
  /P 142 0 R
  /Rect [ 587.63 522.4 591.63 537.4 ]
  /StructParent 53
>>
endobj

144 0 obj
<< /Type /Action /S /URI /URI (/language/typesystem#enum) >>
endobj

145 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 144 0 R
  /Border [ 0 0 0 ]
  /Contents (enum)
  /P 142 0 R
  /Rect [ 18 511.4 44.22 526.4 ]
  /StructParent 54
>>
endobj

146 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 147 0 R
  /Border [ 0 0 0 ]
  /Contents (Rakudo)
  /P 142 0 R
  /Rect [ 48.82 489.4 83.93 504.4 ]
  /StructParent 55
>>
endobj

147 0 obj
<< /Type /Action /S /URI /URI (/language/glossary#Rakudo) >>
endobj

148 0 obj
<< /Length 5933 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (I/O features exposed as supplies) Tj
  ET
  q
    1 w
    20 750 m
    292.24 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (sub signal) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (sub signal\(*@signals, :$scheduler = $*SCHEDULER\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 654.6 572 18.8 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    (Creates a supply for the Signal enums \(such as SIGINT\) specified, and an optional ) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 8 Tf
    [ -41937 (:scheduler) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  354.5 636.6 50 10.8 re
  B
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F3 10 Tf
    [ -38830 ( parameter. Any signals received, will be) ] TJ
    11 TL
    T*
    (emitted on the supply. For example:) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 609 Tm
    /F2 8 Tf
    (signal\(SIGINT\).tap\( { say "Thank you for your attention"; exit 0 } \);) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 604 572 18.8 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 587 Tm
    /F3 10 Tf
    (would catch Control-C, thank you, and then exit.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 565 Tm
    (To go from a signal number to a ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 565 Tm
    [ -13415 (Signal) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 565 Tm
    [ -16221 (, you can do something like this:) ] TJ
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 30 547.4 Tm
    /F2 8 Tf
    (signal\(Signal\(2\)\).tap\( -> $sig { say "Received signal: $sig" } \);) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 542.4 572 18.8 re
  B
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 525.4 Tm
    /F3 10 Tf
    (The list of supported signals can be found by checking ) Tj
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 20 525.4 Tm
    /F2 8 Tf
    [ -27947 (Signal::.keys) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  242.58 524.4 64.4 10.8 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 525.4 Tm
    /F3 10 Tf
    [ -29078 ( \(as you would any enum\). For more details on how enums work see ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 15 >> BDC
    BT
      1 0 0 1 20 525.4 Tm
      [ -56963 ] TJ
      T*
      (enum) Tj
    ET
  EMC
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    [ -2472 (.) ] TJ
  ET
EMC
/Span << /MCID 17 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F1 10 Tf
    (Note:) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F3 10 Tf
    [ -2582 ( ) ] TJ
  ET
EMC
q
  0 0 1 rg
  /Link << /MCID 19 >> BDC
    BT
      1 0 0 1 20 492.4 Tm
      [ -3082 (Rakudo) ] TJ
    ET
  EMC
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    [ -6443 ( versions up to 2018.05 had a bug due to which numeric values of signals were incorrect on some systems. For example, ) ] TJ
  ET
EMC
/Code << /MCID 21 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F2 8 Tf
    [ -68879 ] TJ
    8.8 TL
    T*
    (Signal\(10\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  19 482.6 50 19.6 re
  B
Q
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F3 10 Tf
    [ -5280 ( was returning ) ] TJ
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F2 8 Tf
    [ -14376 (SIGBUS) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  134.01 482.6 30.8 10.8 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F3 10 Tf
    [ -14861 ( even if it was actually ) ] TJ
  ET
EMC
/Code << /MCID 25 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F2 8 Tf
    [ -30484 (SIGUSR1) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  262.87 482.6 35.6 10.8 re
  B
Q
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F3 10 Tf
    [ -28227 ( on a particular system. That being said, using ) ] TJ
  ET
EMC
/Code << /MCID 27 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F2 8 Tf
    [ -58892 (signal\(SIGUSR1\)) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  490.14 482.6 74 10.8 re
  B
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F3 10 Tf
    [ -54794 ( was) ] TJ
    11 TL
    T*
    (working as expected on all Rakudo versions except 2018.04, 2018.04.1 and 2018.05, where the intended behavior can be achieved by using ) Tj
  ET
EMC
/Code << /MCID 29 >> BDC
  BT
    1 0 0 1 20 472.6 Tm
    /F2 8 Tf
    [ -70474 ] TJ
    8.8 TL
    T*
    (signal\(SIGBUS\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  19 462.8 69.2 19.6 re
  B
Q
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 463.8 Tm
    /F3 10 Tf
    [ -7200 ( instead. These issues are resolved in Rakudo releases after 2018.05.) ] TJ
  ET
EMC
/H2 << /MCID 31 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F1 16 Tf
    (method IO::Notification.watch-path) Tj
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 30 393.4 Tm
    /F2 8 Tf
    (method watch-path\($path --> Supply:D\)) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 388.4 572 18.8 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 371.4 Tm
    /F3 10 Tf
    (Creates a supply to which the OS will emit values to indicate changes on the filesystem for the given path. Also has a shortcut with the ) Tj
  ET
EMC
/Code << /MCID 34 >> BDC
  BT
    1 0 0 1 20 371.4 Tm
    /F2 8 Tf
    [ -68049 (watch) ] TJ
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  563.39 370.4 26 10.8 re
  B
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 371.4 Tm
    /F3 10 Tf
    [ -57319 ] TJ
    11 TL
    T*
    (method on an IO object, like this:) Tj
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 30 342.8 Tm
    /F2 8 Tf
    (IO::Notification.watch-path\("."\).act\( { say "$^file changed" } \);) Tj
    8.8 TL
    T*
    (".".IO.watch.act\(                     { say "$^file changed" } \);    same) Tj
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  25 329 572 27.6 re
  B
Q
endstream
endobj

149 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

150 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

151 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

152 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

153 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Italic
  /Encoding /WinAnsiEncoding
>>
endobj

154 0 obj
<< /Count 62 /First 155 0 R /Last 837 0 R >>
endobj

155 0 obj
<<
  /Count 2
  /Dest /class_Supply
  /First 156 0 R
  /Last 156 0 R
  /Next 780 0 R
  /SE 159 0 R
  /Title (class Supply)
>>
endobj

156 0 obj
<<
  /Count 1
  /Dest /Asynchronous_data_stream_with_multiple_subscribers
  /SE 157 0 R
  /Title (Asynchronous data stream with multiple subscribers)
>>
endobj

157 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 158 0 R
  /Pg 4 0 R
  /T (Asynchronous data stream with multiple subscribers)
>>
endobj

158 0 obj
<<
  /Type /StructElem
  /S /Document
  /K [ 159 0 R 157 0 R 160 0 R 161 0 R 165 0 R 168 0 R 173 0 R 176 0 R 184 0 R 185 0 R 194 0 R 198 0 R 201 0 R 202 0 R 203 0 R 204 0 R 206 0 R 214 0 R 220 0 R 231 0 R 236 0 R 237 0 R 238 0 R 239 0 R 240 0 R 241 0 R 243 0 R 244 0 R 245 0 R 246 0 R 247 0 R 250 0 R 251 0 R 252 0 R 256 0 R 257 0 R 258 0 R 270 0 R 271 0 R 273 0 R 274 0 R 275 0 R 281 0 R 282 0 R 283 0 R 284 0 R 285 0 R 286 0 R 287 0 R 288 0 R 289 0 R 296 0 R 297 0 R 298 0 R 299 0 R 306 0 R 307 0 R 308 0 R 311 0 R 312 0 R 313 0 R 321 0 R 322 0 R 323 0 R 324 0 R 332 0 R 333 0 R 334 0 R 335 0 R 345 0 R 346 0 R 347 0 R 348 0 R 355 0 R 356 0 R 357 0 R 358 0 R 359 0 R 362 0 R 363 0 R 364 0 R 365 0 R 366 0 R 367 0 R 368 0 R 369 0 R 370 0 R 371 0 R 372 0 R 373 0 R 374 0 R 375 0 R 376 0 R 377 0 R 378 0 R 379 0 R 380 0 R 394 0 R 395 0 R 396 0 R 397 0 R 400 0 R 404 0 R 405 0 R 406 0 R 408 0 R 409 0 R 410 0 R 411 0 R 413 0 R 414 0 R 415 0 R 416 0 R 419 0 R 424 0 R 425 0 R 426 0 R 427 0 R 428 0 R 429 0 R 430 0 R 433 0 R 434 0 R 437 0 R 438 0 R 439 0 R 440 0 R 443 0 R 444 0 R 449 0 R 450 0 R 451 0 R 452 0 R 453 0 R 459 0 R 460 0 R 461 0 R 462 0 R 470 0 R 471 0 R 472 0 R 473 0 R 475 0 R 476 0 R 478 0 R 479 0 R 480 0 R 483 0 R 484 0 R 485 0 R 486 0 R 487 0 R 488 0 R 489 0 R 491 0 R 493 0 R 523 0 R 525 0 R 526 0 R 527 0 R 531 0 R 533 0 R 534 0 R 535 0 R 537 0 R 541 0 R 545 0 R 549 0 R 552 0 R 553 0 R 555 0 R 559 0 R 560 0 R 564 0 R 566 0 R 570 0 R 571 0 R 575 0 R 577 0 R 578 0 R 579 0 R 583 0 R 584 0 R 588 0 R 590 0 R 594 0 R 595 0 R 599 0 R 600 0 R 604 0 R 605 0 R 609 0 R 610 0 R 614 0 R 616 0 R 617 0 R 618 0 R 619 0 R 620 0 R 622 0 R 623 0 R 624 0 R 627 0 R 632 0 R 633 0 R 634 0 R 640 0 R 641 0 R 642 0 R 645 0 R 646 0 R 647 0 R 648 0 R 651 0 R 652 0 R 653 0 R 654 0 R 655 0 R 656 0 R 657 0 R 663 0 R 664 0 R 665 0 R 670 0 R 671 0 R 674 0 R 678 0 R 679 0 R 680 0 R 685 0 R 686 0 R 687 0 R 690 0 R 691 0 R 692 0 R 695 0 R 696 0 R 697 0 R 700 0 R 701 0 R 702 0 R 706 0 R 707 0 R 708 0 R 709 0 R 710 0 R 711 0 R 713 0 R 714 0 R 715 0 R 721 0 R 723 0 R 724 0 R 725 0 R 726 0 R 727 0 R 728 0 R 729 0 R 730 0 R 731 0 R 732 0 R 733 0 R 734 0 R 740 0 R 741 0 R 742 0 R 743 0 R 744 0 R 750 0 R 751 0 R 752 0 R 753 0 R 755 0 R 756 0 R 757 0 R 758 0 R 759 0 R 765 0 R 774 0 R 775 0 R 776 0 R 778 0 R ]
  /P 779 0 R
>>
endobj

159 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 158 0 R
  /Pg 4 0 R
  /T (class Supply)
>>
endobj

160 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 158 0 R /Pg 4 0 R >>
endobj

161 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 3 162 0 R 5 164 0 R 7 ]
  /P 158 0 R
  /Pg 4 0 R
>>
endobj

162 0 obj
<< /Type /StructElem /S /Link /K [ 163 0 R 4 ] /P 161 0 R >>
endobj

163 0 obj
<< /Type /OBJR /Obj 5 0 R /Pg 4 0 R >>
endobj

164 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontWeight (italic) >>
  /K [ 6 ]
  /P 161 0 R
>>
endobj

165 0 obj
<< /Type /StructElem /S /P /K [ 8 166 0 R 10 ] /P 158 0 R /Pg 4 0 R >>
endobj

166 0 obj
<< /Type /StructElem /S /Link /K [ 167 0 R 9 ] /P 165 0 R >>
endobj

167 0 obj
<< /Type /OBJR /Obj 7 0 R /Pg 4 0 R >>
endobj

168 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 11 169 0 R 13 170 0 R 15 171 0 R 17 172 0 R 19 ]
  /P 158 0 R
  /Pg 4 0 R
>>
endobj

169 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 168 0 R >>
endobj

170 0 obj
<< /Type /StructElem /S /Code /K [ 14 ] /P 168 0 R >>
endobj

171 0 obj
<< /Type /StructElem /S /Code /K [ 16 ] /P 168 0 R >>
endobj

172 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 18 ]
  /P 168 0 R
>>
endobj

173 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 20 174 0 R 22 175 0 R 24 ]
  /P 158 0 R
  /Pg 4 0 R
>>
endobj

174 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 173 0 R >>
endobj

175 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 173 0 R >>
endobj

176 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 25 177 0 R 27 178 0 R 29 179 0 R 31 181 0 R 33 182 0 R 35 183 0 R 37 ]
  /P 158 0 R
  /Pg 4 0 R
>>
endobj

177 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 176 0 R >>
endobj

178 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 176 0 R >>
endobj

179 0 obj
<< /Type /StructElem /S /Link /K [ 180 0 R 30 ] /P 176 0 R >>
endobj

180 0 obj
<< /Type /OBJR /Obj 9 0 R /Pg 4 0 R >>
endobj

181 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 176 0 R >>
endobj

182 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 176 0 R >>
endobj

183 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 176 0 R >>
endobj

184 0 obj
<< /Type /StructElem /S /Code /K [ 38 ] /P 158 0 R /Pg 4 0 R >>
endobj

185 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 39 186 0 R 41 188 0 R 43 189 0 R 45 191 0 R 47 193 0 R 49 ]
  /P 158 0 R
  /Pg 4 0 R
>>
endobj

186 0 obj
<< /Type /StructElem /S /Link /K [ 187 0 R 40 ] /P 185 0 R >>
endobj

187 0 obj
<< /Type /OBJR /Obj 11 0 R /Pg 4 0 R >>
endobj

188 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 185 0 R >>
endobj

189 0 obj
<< /Type /StructElem /S /Link /K [ 190 0 R 44 ] /P 185 0 R >>
endobj

190 0 obj
<< /Type /OBJR /Obj 13 0 R /Pg 4 0 R >>
endobj

191 0 obj
<< /Type /StructElem /S /Link /K [ 192 0 R 46 ] /P 185 0 R >>
endobj

192 0 obj
<< /Type /OBJR /Obj 15 0 R /Pg 4 0 R >>
endobj

193 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontWeight (italic) >>
  /K [ 48 ]
  /P 185 0 R
>>
endobj

194 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 50 195 0 R 52 196 0 R 54 ]
  /P 158 0 R
  /Pg 4 0 R
>>
endobj

195 0 obj
<< /Type /StructElem /S /Code /K [ 51 ] /P 194 0 R >>
endobj

196 0 obj
<< /Type /StructElem /S /Link /K [ 197 0 R 53 ] /P 194 0 R >>
endobj

197 0 obj
<< /Type /OBJR /Obj 17 0 R /Pg 4 0 R >>
endobj

198 0 obj
<< /Type /StructElem /S /P /K [ 55 199 0 R 57 ] /P 158 0 R /Pg 4 0 R >>
endobj

199 0 obj
<< /Type /StructElem /S /Link /K [ 200 0 R 56 ] /P 198 0 R >>
endobj

200 0 obj
<< /Type /OBJR /Obj 19 0 R /Pg 4 0 R >>
endobj

201 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 158 0 R
  /Pg 23 0 R
  /T (Methods that return Taps)
>>
endobj

202 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 158 0 R
  /Pg 23 0 R
  /T (method tap)
>>
endobj

203 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 158 0 R /Pg 23 0 R >>
endobj

204 0 obj
<< /Type /StructElem /S /P /K [ 3 205 0 R 5 ] /P 158 0 R /Pg 23 0 R >>
endobj

205 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 204 0 R >>
endobj

206 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 6 207 0 R 8 208 0 R 10 209 0 R 12 210 0 R 14 211 0 R 16 212 0 R 18 213 0 R 20 ]
  /P 158 0 R
  /Pg 23 0 R
>>
endobj

207 0 obj
<< /Type /StructElem /S /Code /K [ 7 ] /P 206 0 R >>
endobj

208 0 obj
<< /Type /StructElem /S /Code /K [ 9 ] /P 206 0 R >>
endobj

209 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 206 0 R >>
endobj

210 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 206 0 R >>
endobj

211 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 206 0 R >>
endobj

212 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 206 0 R >>
endobj

213 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 206 0 R >>
endobj

214 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 21 215 0 R 23 216 0 R 25 217 0 R 27 218 0 R 29 219 0 R 31 ]
  /P 158 0 R
  /Pg 23 0 R
>>
endobj

215 0 obj
<< /Type /StructElem /S /Code /K [ 22 ] /P 214 0 R >>
endobj

216 0 obj
<< /Type /StructElem /S /Code /K [ 24 ] /P 214 0 R >>
endobj

217 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 214 0 R >>
endobj

218 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 214 0 R >>
endobj

219 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 214 0 R >>
endobj

220 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 32 221 0 R 34 222 0 R 36 224 0 R 38 225 0 R 40 226 0 R 42 227 0 R 44 228 0 R 46 229 0 R 48 230 0 R 50 ]
  /P 158 0 R
  /Pg 23 0 R
>>
endobj

221 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 220 0 R >>
endobj

222 0 obj
<< /Type /StructElem /S /Link /K [ 223 0 R 35 ] /P 220 0 R >>
endobj

223 0 obj
<< /Type /OBJR /Obj 24 0 R /Pg 23 0 R >>
endobj

224 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 220 0 R >>
endobj

225 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 220 0 R >>
endobj

226 0 obj
<< /Type /StructElem /S /Code /K [ 41 ] /P 220 0 R >>
endobj

227 0 obj
<< /Type /StructElem /S /Code /K [ 43 ] /P 220 0 R >>
endobj

228 0 obj
<< /Type /StructElem /S /Code /K [ 45 ] /P 220 0 R >>
endobj

229 0 obj
<< /Type /StructElem /S /Code /K [ 47 ] /P 220 0 R >>
endobj

230 0 obj
<< /Type /StructElem /S /Code /K [ 49 ] /P 220 0 R >>
endobj

231 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 51 232 0 R 53 233 0 R 55 235 0 R 57 ]
  /P 158 0 R
  /Pg 23 0 R
>>
endobj

232 0 obj
<< /Type /StructElem /S /Code /K [ 52 ] /P 231 0 R >>
endobj

233 0 obj
<< /Type /StructElem /S /Link /K [ 234 0 R 54 ] /P 231 0 R >>
endobj

234 0 obj
<< /Type /OBJR /Obj 26 0 R /Pg 23 0 R >>
endobj

235 0 obj
<< /Type /StructElem /S /Code /K [ 56 ] /P 231 0 R >>
endobj

236 0 obj
<< /Type /StructElem /S /Code /K [ 58 ] /P 158 0 R /Pg 23 0 R >>
endobj

237 0 obj
<< /Type /StructElem /S /P /K [ 59 ] /P 158 0 R /Pg 23 0 R >>
endobj

238 0 obj
<< /Type /StructElem /S /Code /K [ 60 ] /P 158 0 R /Pg 23 0 R >>
endobj

239 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 61 ]
  /P 158 0 R
  /Pg 23 0 R
  /T (method act)
>>
endobj

240 0 obj
<< /Type /StructElem /S /Code /K [ 62 ] /P 158 0 R /Pg 23 0 R >>
endobj

241 0 obj
<< /Type /StructElem /S /P /K [ 63 242 0 R 65 ] /P 158 0 R /Pg 23 0 R >>
endobj

242 0 obj
<< /Type /StructElem /S /Code /K [ 64 ] /P 241 0 R >>
endobj

243 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 158 0 R
  /Pg 35 0 R
  /T (Utility methods)
>>
endobj

244 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 158 0 R
  /Pg 35 0 R
  /T (method Capture)
>>
endobj

245 0 obj
<< /Type /StructElem /S /P /K [ 2 ] /P 158 0 R /Pg 35 0 R >>
endobj

246 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 158 0 R /Pg 35 0 R >>
endobj

247 0 obj
<< /Type /StructElem /S /P /K [ 4 248 0 R 6 ] /P 158 0 R /Pg 35 0 R >>
endobj

248 0 obj
<< /Type /StructElem /S /Link /K [ 249 0 R 5 ] /P 247 0 R >>
endobj

249 0 obj
<< /Type /OBJR /Obj 36 0 R /Pg 35 0 R >>
endobj

250 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 7 ]
  /P 158 0 R
  /Pg 35 0 R
  /T (method Channel)
>>
endobj

251 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 158 0 R /Pg 35 0 R >>
endobj

252 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 9 253 0 R 11 255 0 R 13 ]
  /P 158 0 R
  /Pg 35 0 R
>>
endobj

253 0 obj
<< /Type /StructElem /S /Link /K [ 254 0 R 10 ] /P 252 0 R >>
endobj

254 0 obj
<< /Type /OBJR /Obj 38 0 R /Pg 35 0 R >>
endobj

255 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 252 0 R >>
endobj

256 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 14 ]
  /P 158 0 R
  /Pg 35 0 R
  /T (method Promise)
>>
endobj

257 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 158 0 R /Pg 35 0 R >>
endobj

258 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 16 259 0 R 18 261 0 R 20 262 0 R 22 263 0 R 24 264 0 R 26 265 0 R 28 266 0 R 30 267 0 R 32 268 0 R 34 269 0 R 36 ]
  /P 158 0 R
  /Pg 35 0 R
>>
endobj

259 0 obj
<< /Type /StructElem /S /Link /K [ 260 0 R 17 ] /P 258 0 R >>
endobj

260 0 obj
<< /Type /OBJR /Obj 40 0 R /Pg 35 0 R >>
endobj

261 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 258 0 R >>
endobj

262 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 258 0 R >>
endobj

263 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 258 0 R >>
endobj

264 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 258 0 R >>
endobj

265 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 258 0 R >>
endobj

266 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 258 0 R >>
endobj

267 0 obj
<< /Type /StructElem /S /Code /K [ 31 ] /P 258 0 R >>
endobj

268 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 258 0 R >>
endobj

269 0 obj
<< /Type /StructElem /S /Code /K [ 35 ] /P 258 0 R >>
endobj

270 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 158 0 R /Pg 35 0 R >>
endobj

271 0 obj
<< /Type /StructElem /S /P /K [ 38 272 0 R 40 ] /P 158 0 R /Pg 35 0 R >>
endobj

272 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 271 0 R >>
endobj

273 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 41 ]
  /P 158 0 R
  /Pg 35 0 R
  /T (method live)
>>
endobj

274 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 158 0 R /Pg 35 0 R >>
endobj

275 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 43 276 0 R 45 277 0 R 47 278 0 R 49 279 0 R 51 280 0 R 53 ]
  /P 158 0 R
  /Pg 35 0 R
>>
endobj

276 0 obj
<< /Type /StructElem /S /Code /K [ 44 ] /P 275 0 R >>
endobj

277 0 obj
<< /Type /StructElem /S /Code /K [ 46 ] /P 275 0 R >>
endobj

278 0 obj
<< /Type /StructElem /S /Code /K [ 48 ] /P 275 0 R >>
endobj

279 0 obj
<< /Type /StructElem /S /Code /K [ 50 ] /P 275 0 R >>
endobj

280 0 obj
<< /Type /StructElem /S /Code /K [ 52 ] /P 275 0 R >>
endobj

281 0 obj
<< /Type /StructElem /S /Code /K [ 54 ] /P 158 0 R /Pg 35 0 R >>
endobj

282 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 55 ]
  /P 158 0 R
  /Pg 35 0 R
  /T (method schedule-on)
>>
endobj

283 0 obj
<< /Type /StructElem /S /Code /K [ 56 ] /P 158 0 R /Pg 35 0 R >>
endobj

284 0 obj
<< /Type /StructElem /S /P /K [ 57 ] /P 158 0 R /Pg 35 0 R >>
endobj

285 0 obj
<< /Type /StructElem /S /P /K [ 58 ] /P 158 0 R /Pg 35 0 R >>
endobj

286 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 158 0 R
  /Pg 45 0 R
  /T (Methods that wait until the supply is done)
>>
endobj

287 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 158 0 R
  /Pg 45 0 R
  /T (method wait)
>>
endobj

288 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 158 0 R /Pg 45 0 R >>
endobj

289 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 3 290 0 R 5 291 0 R 7 292 0 R 9 293 0 R 11 294 0 R 13 295 0 R 15 ]
  /P 158 0 R
  /Pg 45 0 R
>>
endobj

290 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 289 0 R >>
endobj

291 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 289 0 R >>
endobj

292 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 289 0 R >>
endobj

293 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 289 0 R >>
endobj

294 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 289 0 R >>
endobj

295 0 obj
<< /Type /StructElem /S /Code /K [ 14 ] /P 289 0 R >>
endobj

296 0 obj
<< /Type /StructElem /S /Code /K [ 16 ] /P 158 0 R /Pg 45 0 R >>
endobj

297 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 17 ]
  /P 158 0 R
  /Pg 45 0 R
  /T (method list)
>>
endobj

298 0 obj
<< /Type /StructElem /S /Code /K [ 18 ] /P 158 0 R /Pg 45 0 R >>
endobj

299 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 19 300 0 R 21 301 0 R 23 302 0 R 25 303 0 R 27 304 0 R 29 305 0 R 31 ]
  /P 158 0 R
  /Pg 45 0 R
>>
endobj

300 0 obj
<< /Type /StructElem /S /Code /K [ 20 ] /P 299 0 R >>
endobj

301 0 obj
<< /Type /StructElem /S /Code /K [ 22 ] /P 299 0 R >>
endobj

302 0 obj
<< /Type /StructElem /S /Code /K [ 24 ] /P 299 0 R >>
endobj

303 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 299 0 R >>
endobj

304 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 299 0 R >>
endobj

305 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 299 0 R >>
endobj

306 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 32 ]
  /P 158 0 R
  /Pg 45 0 R
  /T (method Seq)
>>
endobj

307 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 158 0 R /Pg 45 0 R >>
endobj

308 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 34 309 0 R 36 310 0 R 38 ]
  /P 158 0 R
  /Pg 45 0 R
>>
endobj

309 0 obj
<< /Type /StructElem /S /Code /K [ 35 ] /P 308 0 R >>
endobj

310 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 308 0 R >>
endobj

311 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 39 ]
  /P 158 0 R
  /Pg 45 0 R
  /T (method grab)
>>
endobj

312 0 obj
<< /Type /StructElem /S /Code /K [ 40 ] /P 158 0 R /Pg 45 0 R >>
endobj

313 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 41 314 0 R 43 315 0 R 45 316 0 R 47 317 0 R 49 318 0 R 51 319 0 R 53 320 0 R 55 ]
  /P 158 0 R
  /Pg 45 0 R
>>
endobj

314 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 313 0 R >>
endobj

315 0 obj
<< /Type /StructElem /S /Code /K [ 44 ] /P 313 0 R >>
endobj

316 0 obj
<< /Type /StructElem /S /Code /K [ 46 ] /P 313 0 R >>
endobj

317 0 obj
<< /Type /StructElem /S /Code /K [ 48 ] /P 313 0 R >>
endobj

318 0 obj
<< /Type /StructElem /S /Code /K [ 50 ] /P 313 0 R >>
endobj

319 0 obj
<< /Type /StructElem /S /Code /K [ 52 ] /P 313 0 R >>
endobj

320 0 obj
<< /Type /StructElem /S /Code /K [ 54 ] /P 313 0 R >>
endobj

321 0 obj
<< /Type /StructElem /S /Code /K [ 56 ] /P 158 0 R /Pg 45 0 R >>
endobj

322 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 57 ]
  /P 158 0 R
  /Pg 45 0 R
  /T (method reverse)
>>
endobj

323 0 obj
<< /Type /StructElem /S /Code /K [ 58 ] /P 158 0 R /Pg 45 0 R >>
endobj

324 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 59 325 0 R 61 326 0 R 63 327 0 R 65 328 0 R 67 329 0 R 69 330 0 R 71 331 0 R 73 ]
  /P 158 0 R
  /Pg 45 0 R
>>
endobj

325 0 obj
<< /Type /StructElem /S /Code /K [ 60 ] /P 324 0 R >>
endobj

326 0 obj
<< /Type /StructElem /S /Code /K [ 62 ] /P 324 0 R >>
endobj

327 0 obj
<< /Type /StructElem /S /Code /K [ 64 ] /P 324 0 R >>
endobj

328 0 obj
<< /Type /StructElem /S /Code /K [ 66 ] /P 324 0 R >>
endobj

329 0 obj
<< /Type /StructElem /S /Code /K [ 68 ] /P 324 0 R >>
endobj

330 0 obj
<< /Type /StructElem /S /Code /K [ 70 ] /P 324 0 R >>
endobj

331 0 obj
<< /Type /StructElem /S /Code /K [ 72 ] /P 324 0 R >>
endobj

332 0 obj
<< /Type /StructElem /S /Code /K [ 74 ] /P 158 0 R /Pg 45 0 R >>
endobj

333 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 158 0 R
  /Pg 49 0 R
  /T (method sort)
>>
endobj

334 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 158 0 R /Pg 49 0 R >>
endobj

335 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2 336 0 R 4 337 0 R 6 338 0 R 8 339 0 R 10 340 0 R 12 342 0 R 14 343 0 R 16 344 0 R 18 ]
  /P 158 0 R
  /Pg 49 0 R
>>
endobj

336 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 335 0 R >>
endobj

337 0 obj
<< /Type /StructElem /S /Code /K [ 5 ] /P 335 0 R >>
endobj

338 0 obj
<< /Type /StructElem /S /Code /K [ 7 ] /P 335 0 R >>
endobj

339 0 obj
<< /Type /StructElem /S /Code /K [ 9 ] /P 335 0 R >>
endobj

340 0 obj
<< /Type /StructElem /S /Link /K [ 341 0 R 11 ] /P 335 0 R >>
endobj

341 0 obj
<< /Type /OBJR /Obj 50 0 R /Pg 49 0 R >>
endobj

342 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 335 0 R >>
endobj

343 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 335 0 R >>
endobj

344 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 335 0 R >>
endobj

345 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 158 0 R /Pg 49 0 R >>
endobj

346 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 20 ]
  /P 158 0 R
  /Pg 49 0 R
  /T (method collate)
>>
endobj

347 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 158 0 R /Pg 49 0 R >>
endobj

348 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 22 349 0 R 24 350 0 R 26 351 0 R 28 352 0 R 30 353 0 R 32 ]
  /P 158 0 R
  /Pg 49 0 R
>>
endobj

349 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 348 0 R >>
endobj

350 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 348 0 R >>
endobj

351 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 348 0 R >>
endobj

352 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 348 0 R >>
endobj

353 0 obj
<< /Type /StructElem /S /Link /K [ 354 0 R 31 ] /P 348 0 R >>
endobj

354 0 obj
<< /Type /OBJR /Obj 52 0 R /Pg 49 0 R >>
endobj

355 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 158 0 R /Pg 49 0 R >>
endobj

356 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 34 ]
  /P 158 0 R
  /Pg 49 0 R
  /T (method reduce)
>>
endobj

357 0 obj
<< /Type /StructElem /S /P /K [ 35 ] /P 158 0 R /Pg 49 0 R >>
endobj

358 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 158 0 R /Pg 49 0 R >>
endobj

359 0 obj
<< /Type /StructElem /S /P /K [ 37 360 0 R 39 ] /P 158 0 R /Pg 49 0 R >>
endobj

360 0 obj
<< /Type /StructElem /S /Link /K [ 361 0 R 38 ] /P 359 0 R >>
endobj

361 0 obj
<< /Type /OBJR /Obj 54 0 R /Pg 49 0 R >>
endobj

362 0 obj
<< /Type /StructElem /S /Code /K [ 40 ] /P 158 0 R /Pg 49 0 R >>
endobj

363 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 158 0 R
  /Pg 59 0 R
  /T (Methods that return another Supply)
>>
endobj

364 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 158 0 R
  /Pg 59 0 R
  /T (method from-list)
>>
endobj

365 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 158 0 R /Pg 59 0 R >>
endobj

366 0 obj
<< /Type /StructElem /S /P /K [ 3 ] /P 158 0 R /Pg 59 0 R >>
endobj

367 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 158 0 R /Pg 59 0 R >>
endobj

368 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 5 ]
  /P 158 0 R
  /Pg 59 0 R
  /T (method share)
>>
endobj

369 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 158 0 R /Pg 59 0 R >>
endobj

370 0 obj
<< /Type /StructElem /S /P /K [ 7 ] /P 158 0 R /Pg 59 0 R >>
endobj

371 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 158 0 R /Pg 59 0 R >>
endobj

372 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 9 ]
  /P 158 0 R
  /Pg 59 0 R
  /T (method flat)
>>
endobj

373 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 158 0 R /Pg 59 0 R >>
endobj

374 0 obj
<< /Type /StructElem /S /P /K [ 11 ] /P 158 0 R /Pg 59 0 R >>
endobj

375 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 12 ]
  /P 158 0 R
  /Pg 59 0 R
  /T (method do)
>>
endobj

376 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 158 0 R /Pg 59 0 R >>
endobj

377 0 obj
<< /Type /StructElem /S /P /K [ 14 ] /P 158 0 R /Pg 59 0 R >>
endobj

378 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 15 ]
  /P 158 0 R
  /Pg 59 0 R
  /T (method on-close)
>>
endobj

379 0 obj
<< /Type /StructElem /S /Code /K [ 16 ] /P 158 0 R /Pg 59 0 R >>
endobj

380 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 17 381 0 R 19 382 0 R 21 383 0 R 23 385 0 R 25 386 0 R 27 387 0 R 29 388 0 R 31 389 0 R 33 390 0 R 392 0 R 35 ]
  /P 158 0 R
  /Pg 59 0 R
>>
endobj

381 0 obj
<< /Type /StructElem /S /Code /K [ 18 ] /P 380 0 R >>
endobj

382 0 obj
<< /Type /StructElem /S /Code /K [ 20 ] /P 380 0 R >>
endobj

383 0 obj
<< /Type /StructElem /S /Link /K [ 384 0 R 22 ] /P 380 0 R >>
endobj

384 0 obj
<< /Type /OBJR /Obj 60 0 R /Pg 59 0 R >>
endobj

385 0 obj
<< /Type /StructElem /S /Code /K [ 24 ] /P 380 0 R >>
endobj

386 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 380 0 R >>
endobj

387 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 380 0 R >>
endobj

388 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 380 0 R >>
endobj

389 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 380 0 R >>
endobj

390 0 obj
<< /Type /StructElem /S /Link /K [ 391 0 R ] /P 380 0 R >>
endobj

391 0 obj
<< /Type /OBJR /Obj 62 0 R /Pg 59 0 R >>
endobj

392 0 obj
<< /Type /StructElem /S /Link /K [ 393 0 R 34 ] /P 380 0 R >>
endobj

393 0 obj
<< /Type /OBJR /Obj 64 0 R /Pg 59 0 R >>
endobj

394 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 158 0 R /Pg 59 0 R >>
endobj

395 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 158 0 R
  /Pg 68 0 R
  /T (method interval)
>>
endobj

396 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 158 0 R /Pg 68 0 R >>
endobj

397 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2 398 0 R 4 399 0 R 6 ]
  /P 158 0 R
  /Pg 68 0 R
>>
endobj

398 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 397 0 R >>
endobj

399 0 obj
<< /Type /StructElem /S /Code /K [ 5 ] /P 397 0 R >>
endobj

400 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 7 401 0 R 9 402 0 R 11 403 0 R 13 ]
  /P 158 0 R
  /Pg 68 0 R
>>
endobj

401 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 400 0 R >>
endobj

402 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 400 0 R >>
endobj

403 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 400 0 R >>
endobj

404 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 14 ]
  /P 158 0 R
  /Pg 68 0 R
  /T (method grep)
>>
endobj

405 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 158 0 R /Pg 68 0 R >>
endobj

406 0 obj
<< /Type /StructElem /S /P /K [ 16 407 0 R 18 ] /P 158 0 R /Pg 68 0 R >>
endobj

407 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 406 0 R >>
endobj

408 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 158 0 R /Pg 68 0 R >>
endobj

409 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 20 ]
  /P 158 0 R
  /Pg 68 0 R
  /T (method map)
>>
endobj

410 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 158 0 R /Pg 68 0 R >>
endobj

411 0 obj
<< /Type /StructElem /S /P /K [ 22 412 0 R 24 ] /P 158 0 R /Pg 68 0 R >>
endobj

412 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 411 0 R >>
endobj

413 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 158 0 R /Pg 68 0 R >>
endobj

414 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 26 ]
  /P 158 0 R
  /Pg 68 0 R
  /T (method batch)
>>
endobj

415 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 158 0 R /Pg 68 0 R >>
endobj

416 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 28 417 0 R 30 418 0 R 32 ]
  /P 158 0 R
  /Pg 68 0 R
>>
endobj

417 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 416 0 R >>
endobj

418 0 obj
<< /Type /StructElem /S /Code /K [ 31 ] /P 416 0 R >>
endobj

419 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 420 0 R 34 421 0 R 36 422 0 R 38 423 0 R 40 ]
  /P 158 0 R
  /Pg 68 0 R
>>
endobj

420 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 33 ]
  /P 419 0 R
  /Pg 68 0 R
>>
endobj

421 0 obj
<< /Type /StructElem /S /Code /K [ 35 ] /P 419 0 R >>
endobj

422 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 419 0 R >>
endobj

423 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 419 0 R >>
endobj

424 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 41 ]
  /P 158 0 R
  /Pg 68 0 R
  /T (method elems)
>>
endobj

425 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 158 0 R /Pg 68 0 R >>
endobj

426 0 obj
<< /Type /StructElem /S /P /K [ 43 ] /P 158 0 R /Pg 68 0 R >>
endobj

427 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 158 0 R
  /Pg 72 0 R
  /T (method head)
>>
endobj

428 0 obj
<< /Type /StructElem /S /P /K [ 1 ] /P 158 0 R /Pg 72 0 R >>
endobj

429 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 158 0 R /Pg 72 0 R >>
endobj

430 0 obj
<< /Type /StructElem /S /P /K [ 3 431 0 R 5 ] /P 158 0 R /Pg 72 0 R >>
endobj

431 0 obj
<< /Type /StructElem /S /Link /K [ 432 0 R 4 ] /P 430 0 R >>
endobj

432 0 obj
<< /Type /OBJR /Obj 73 0 R /Pg 72 0 R >>
endobj

433 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 158 0 R /Pg 72 0 R >>
endobj

434 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 7 435 0 R 9 436 0 R ]
  /P 158 0 R
  /Pg 72 0 R
>>
endobj

435 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 434 0 R >>
endobj

436 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 434 0 R >>
endobj

437 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 158 0 R /Pg 72 0 R >>
endobj

438 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 12 ]
  /P 158 0 R
  /Pg 72 0 R
  /T (method tail)
>>
endobj

439 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 158 0 R /Pg 72 0 R >>
endobj

440 0 obj
<< /Type /StructElem /S /P /K [ 14 441 0 R 16 ] /P 158 0 R /Pg 72 0 R >>
endobj

441 0 obj
<< /Type /StructElem /S /Link /K [ 442 0 R 15 ] /P 440 0 R >>
endobj

442 0 obj
<< /Type /OBJR /Obj 75 0 R /Pg 72 0 R >>
endobj

443 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 158 0 R /Pg 72 0 R >>
endobj

444 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 18 445 0 R 20 446 0 R 22 447 0 R 24 448 0 R 26 ]
  /P 158 0 R
  /Pg 72 0 R
>>
endobj

445 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 444 0 R >>
endobj

446 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 444 0 R >>
endobj

447 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 444 0 R >>
endobj

448 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 444 0 R >>
endobj

449 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 158 0 R /Pg 72 0 R >>
endobj

450 0 obj
<< /Type /StructElem /S /P /K [ 28 ] /P 158 0 R /Pg 72 0 R >>
endobj

451 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 29 ]
  /P 158 0 R
  /Pg 72 0 R
  /T (method first)
>>
endobj

452 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 158 0 R /Pg 72 0 R >>
endobj

453 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 31 454 0 R 33 455 0 R 35 456 0 R 37 457 0 R 39 458 0 R 41 ]
  /P 158 0 R
  /Pg 72 0 R
>>
endobj

454 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 453 0 R >>
endobj

455 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 453 0 R >>
endobj

456 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 453 0 R >>
endobj

457 0 obj
<< /Type /StructElem /S /Code /K [ 38 ] /P 453 0 R >>
endobj

458 0 obj
<< /Type /StructElem /S /Code /K [ 40 ] /P 453 0 R >>
endobj

459 0 obj
<< /Type /StructElem /S /Code /K [ 42 ] /P 158 0 R /Pg 72 0 R >>
endobj

460 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 158 0 R
  /Pg 80 0 R
  /T (method split)
>>
endobj

461 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 158 0 R /Pg 80 0 R >>
endobj

462 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2 463 0 R 4 464 0 R 6 466 0 R 8 467 0 R 10 468 0 R 12 ]
  /P 158 0 R
  /Pg 80 0 R
>>
endobj

463 0 obj
<< /Type /StructElem /S /Code /K [ 3 ] /P 462 0 R >>
endobj

464 0 obj
<< /Type /StructElem /S /Link /K [ 465 0 R 5 ] /P 462 0 R >>
endobj

465 0 obj
<< /Type /OBJR /Obj 81 0 R /Pg 80 0 R >>
endobj

466 0 obj
<< /Type /StructElem /S /Code /K [ 7 ] /P 462 0 R >>
endobj

467 0 obj
<< /Type /StructElem /S /Code /K [ 9 ] /P 462 0 R >>
endobj

468 0 obj
<< /Type /StructElem /S /Link /K [ 469 0 R 11 ] /P 462 0 R >>
endobj

469 0 obj
<< /Type /OBJR /Obj 83 0 R /Pg 80 0 R >>
endobj

470 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 158 0 R /Pg 80 0 R >>
endobj

471 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 14 ]
  /P 158 0 R
  /Pg 80 0 R
  /T (method rotate)
>>
endobj

472 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 158 0 R /Pg 80 0 R >>
endobj

473 0 obj
<< /Type /StructElem /S /P /K [ 16 474 0 R 18 ] /P 158 0 R /Pg 80 0 R >>
endobj

474 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 473 0 R >>
endobj

475 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 158 0 R /Pg 80 0 R >>
endobj

476 0 obj
<< /Type /StructElem /S /P /K [ 477 0 R 21 ] /P 158 0 R /Pg 80 0 R >>
endobj

477 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 20 ]
  /P 476 0 R
  /Pg 80 0 R
>>
endobj

478 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 22 ]
  /P 158 0 R
  /Pg 80 0 R
  /T (method rotor)
>>
endobj

479 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 158 0 R /Pg 80 0 R >>
endobj

480 0 obj
<< /Type /StructElem /S /P /K [ 24 481 0 R 26 ] /P 158 0 R /Pg 80 0 R >>
endobj

481 0 obj
<< /Type /StructElem /S /Link /K [ 482 0 R 25 ] /P 480 0 R >>
endobj

482 0 obj
<< /Type /OBJR /Obj 85 0 R /Pg 80 0 R >>
endobj

483 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 27 ]
  /P 158 0 R
  /Pg 80 0 R
  /T (method delayed)
>>
endobj

484 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 158 0 R /Pg 80 0 R >>
endobj

485 0 obj
<< /Type /StructElem /S /P /K [ 29 ] /P 158 0 R /Pg 80 0 R >>
endobj

486 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 30 ]
  /P 158 0 R
  /Pg 80 0 R
  /T (method throttle)
>>
endobj

487 0 obj
<< /Type /StructElem /S /P /K [ 31 ] /P 158 0 R /Pg 80 0 R >>
endobj

488 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 158 0 R /Pg 80 0 R >>
endobj

489 0 obj
<< /Type /StructElem /S /Code /K [ 33 490 0 R ] /P 158 0 R /Pg 80 0 R >>
endobj

490 0 obj
<< /Type /MCR /MCID 0 /Pg 90 0 R >>
endobj

491 0 obj
<< /Type /StructElem /S /P /K [ 1 492 0 R 3 ] /P 158 0 R /Pg 90 0 R >>
endobj

492 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 491 0 R >>
endobj

493 0 obj
<< /Type /StructElem /S /Table /K [ 494 0 R 498 0 R ] /P 158 0 R >>
endobj

494 0 obj
<< /Type /StructElem /S /THead /K [ 495 0 R ] /P 493 0 R >>
endobj

495 0 obj
<< /Type /StructElem /S /TR /K [ 496 0 R 497 0 R ] /P 494 0 R >>
endobj

496 0 obj
<< /Type /StructElem /S /TH /K [ 4 ] /P 495 0 R /Pg 90 0 R >>
endobj

497 0 obj
<< /Type /StructElem /S /TH /K [ 5 ] /P 495 0 R /Pg 90 0 R >>
endobj

498 0 obj
<<
  /Type /StructElem
  /S /TBody
  /K [ 499 0 R 502 0 R 505 0 R 508 0 R 511 0 R 514 0 R 517 0 R 520 0 R ]
  /P 493 0 R
>>
endobj

499 0 obj
<< /Type /StructElem /S /TR /K [ 500 0 R 501 0 R ] /P 498 0 R >>
endobj

500 0 obj
<< /Type /StructElem /S /TD /K [ 6 ] /P 499 0 R /Pg 90 0 R >>
endobj

501 0 obj
<< /Type /StructElem /S /TD /K [ 7 ] /P 499 0 R /Pg 90 0 R >>
endobj

502 0 obj
<< /Type /StructElem /S /TR /K [ 503 0 R 504 0 R ] /P 498 0 R >>
endobj

503 0 obj
<< /Type /StructElem /S /TD /K [ 8 ] /P 502 0 R /Pg 90 0 R >>
endobj

504 0 obj
<< /Type /StructElem /S /TD /K [ 9 ] /P 502 0 R /Pg 90 0 R >>
endobj

505 0 obj
<< /Type /StructElem /S /TR /K [ 506 0 R 507 0 R ] /P 498 0 R >>
endobj

506 0 obj
<< /Type /StructElem /S /TD /K [ 10 ] /P 505 0 R /Pg 90 0 R >>
endobj

507 0 obj
<< /Type /StructElem /S /TD /K [ 11 ] /P 505 0 R /Pg 90 0 R >>
endobj

508 0 obj
<< /Type /StructElem /S /TR /K [ 509 0 R 510 0 R ] /P 498 0 R >>
endobj

509 0 obj
<< /Type /StructElem /S /TD /K [ 12 ] /P 508 0 R /Pg 90 0 R >>
endobj

510 0 obj
<< /Type /StructElem /S /TD /K [ 13 ] /P 508 0 R /Pg 90 0 R >>
endobj

511 0 obj
<< /Type /StructElem /S /TR /K [ 512 0 R 513 0 R ] /P 498 0 R >>
endobj

512 0 obj
<< /Type /StructElem /S /TD /K [ 14 ] /P 511 0 R /Pg 90 0 R >>
endobj

513 0 obj
<< /Type /StructElem /S /TD /K [ 15 ] /P 511 0 R /Pg 90 0 R >>
endobj

514 0 obj
<< /Type /StructElem /S /TR /K [ 515 0 R 516 0 R ] /P 498 0 R >>
endobj

515 0 obj
<< /Type /StructElem /S /TD /K [ 16 ] /P 514 0 R /Pg 90 0 R >>
endobj

516 0 obj
<< /Type /StructElem /S /TD /K [ 17 ] /P 514 0 R /Pg 90 0 R >>
endobj

517 0 obj
<< /Type /StructElem /S /TR /K [ 518 0 R 519 0 R ] /P 498 0 R >>
endobj

518 0 obj
<< /Type /StructElem /S /TD /K [ 18 ] /P 517 0 R /Pg 90 0 R >>
endobj

519 0 obj
<< /Type /StructElem /S /TD /K [ 19 ] /P 517 0 R /Pg 90 0 R >>
endobj

520 0 obj
<< /Type /StructElem /S /TR /K [ 521 0 R 522 0 R ] /P 498 0 R >>
endobj

521 0 obj
<< /Type /StructElem /S /TD /K [ 20 ] /P 520 0 R /Pg 90 0 R >>
endobj

522 0 obj
<< /Type /StructElem /S /TD /K [ 21 ] /P 520 0 R /Pg 90 0 R >>
endobj

523 0 obj
<< /Type /StructElem /S /P /K [ 22 524 0 R 24 ] /P 158 0 R /Pg 90 0 R >>
endobj

524 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 523 0 R >>
endobj

525 0 obj
<< /Type /StructElem /S /P /K [ 25 ] /P 158 0 R /Pg 90 0 R >>
endobj

526 0 obj
<< /Type /StructElem /S /P /K [ 26 ] /P 158 0 R /Pg 90 0 R >>
endobj

527 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 27 528 0 R 29 529 0 R 31 530 0 R 33 ]
  /P 158 0 R
  /Pg 90 0 R
>>
endobj

528 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 527 0 R >>
endobj

529 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 527 0 R >>
endobj

530 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 527 0 R >>
endobj

531 0 obj
<< /Type /StructElem /S /P /K [ 34 532 0 R 36 ] /P 158 0 R /Pg 90 0 R >>
endobj

532 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 35 ]
  /P 531 0 R
>>
endobj

533 0 obj
<< /Type /StructElem /S /P /K [ 37 ] /P 158 0 R /Pg 90 0 R >>
endobj

534 0 obj
<< /Type /StructElem /S /P /K [ 38 ] /P 158 0 R /Pg 90 0 R >>
endobj

535 0 obj
<< /Type /StructElem /S /P /K [ 39 536 0 R 41 ] /P 158 0 R /Pg 90 0 R >>
endobj

536 0 obj
<< /Type /StructElem /S /Code /K [ 40 ] /P 535 0 R >>
endobj

537 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 42 538 0 R 44 539 0 R 46 ]
  /P 158 0 R
  /Pg 90 0 R
>>
endobj

538 0 obj
<< /Type /StructElem /S /Code /K [ 43 ] /P 537 0 R >>
endobj

539 0 obj
<< /Type /StructElem /S /Link /K [ 540 0 R 45 ] /P 537 0 R >>
endobj

540 0 obj
<< /Type /OBJR /Obj 91 0 R /Pg 90 0 R >>
endobj

541 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 47 542 0 R 49 543 0 R 51 544 0 R 53 ]
  /P 158 0 R
  /Pg 90 0 R
>>
endobj

542 0 obj
<< /Type /StructElem /S /Code /K [ 48 ] /P 541 0 R >>
endobj

543 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 50 ]
  /P 541 0 R
>>
endobj

544 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 52 ]
  /P 541 0 R
>>
endobj

545 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 54 546 0 R 56 547 0 R 58 548 0 R 60 ]
  /P 158 0 R
  /Pg 90 0 R
>>
endobj

546 0 obj
<< /Type /StructElem /S /Code /K [ 55 ] /P 545 0 R >>
endobj

547 0 obj
<< /Type /StructElem /S /Code /K [ 57 ] /P 545 0 R >>
endobj

548 0 obj
<< /Type /StructElem /S /Code /K [ 59 ] /P 545 0 R >>
endobj

549 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 61 550 0 R 63 551 0 R 65 ]
  /P 158 0 R
  /Pg 90 0 R
>>
endobj

550 0 obj
<< /Type /StructElem /S /Code /K [ 62 ] /P 549 0 R >>
endobj

551 0 obj
<< /Type /StructElem /S /Code /K [ 64 ] /P 549 0 R >>
endobj

552 0 obj
<<
  /Type /StructElem
  /S /H3
  /K [ 66 ]
  /P 158 0 R
  /Pg 90 0 R
  /T (control messages)
>>
endobj

553 0 obj
<< /Type /StructElem /S /P /K [ 67 554 0 R 69 ] /P 158 0 R /Pg 90 0 R >>
endobj

554 0 obj
<< /Type /StructElem /S /Code /K [ 68 ] /P 553 0 R >>
endobj

555 0 obj
<< /Type /StructElem /S /LI /K [ 556 0 R 557 0 R ] /P 158 0 R >>
endobj

556 0 obj
<< /Type /StructElem /S /Lbl /K [ 70 ] /P 555 0 R /Pg 90 0 R >>
endobj

557 0 obj
<< /Type /StructElem /S /LBody /K [ 558 0 R ] /P 555 0 R >>
endobj

558 0 obj
<< /Type /StructElem /S /P /K [ 71 ] /P 557 0 R /Pg 90 0 R >>
endobj

559 0 obj
<< /Type /StructElem /S /P /K [ 72 ] /P 158 0 R /Pg 90 0 R >>
endobj

560 0 obj
<< /Type /StructElem /S /LI /K [ 561 0 R 562 0 R ] /P 158 0 R >>
endobj

561 0 obj
<< /Type /StructElem /S /Lbl /K [ 73 ] /P 560 0 R /Pg 90 0 R >>
endobj

562 0 obj
<< /Type /StructElem /S /LBody /K [ 563 0 R ] /P 560 0 R >>
endobj

563 0 obj
<< /Type /StructElem /S /P /K [ 74 ] /P 562 0 R /Pg 90 0 R >>
endobj

564 0 obj
<< /Type /StructElem /S /P /K [ 75 565 0 R 77 ] /P 158 0 R /Pg 90 0 R >>
endobj

565 0 obj
<< /Type /StructElem /S /Code /K [ 76 ] /P 564 0 R >>
endobj

566 0 obj
<< /Type /StructElem /S /LI /K [ 567 0 R 568 0 R ] /P 158 0 R >>
endobj

567 0 obj
<< /Type /StructElem /S /Lbl /K [ 0 ] /P 566 0 R /Pg 96 0 R >>
endobj

568 0 obj
<< /Type /StructElem /S /LBody /K [ 569 0 R ] /P 566 0 R >>
endobj

569 0 obj
<< /Type /StructElem /S /P /K [ 1 ] /P 568 0 R /Pg 96 0 R >>
endobj

570 0 obj
<< /Type /StructElem /S /P /K [ 2 ] /P 158 0 R /Pg 96 0 R >>
endobj

571 0 obj
<< /Type /StructElem /S /LI /K [ 572 0 R 573 0 R ] /P 158 0 R >>
endobj

572 0 obj
<< /Type /StructElem /S /Lbl /K [ 3 ] /P 571 0 R /Pg 96 0 R >>
endobj

573 0 obj
<< /Type /StructElem /S /LBody /K [ 574 0 R ] /P 571 0 R >>
endobj

574 0 obj
<< /Type /StructElem /S /P /K [ 4 ] /P 573 0 R /Pg 96 0 R >>
endobj

575 0 obj
<< /Type /StructElem /S /P /K [ 5 576 0 R 7 ] /P 158 0 R /Pg 96 0 R >>
endobj

576 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 575 0 R >>
endobj

577 0 obj
<<
  /Type /StructElem
  /S /H3
  /K [ 8 ]
  /P 158 0 R
  /Pg 96 0 R
  /T (status message)
>>
endobj

578 0 obj
<< /Type /StructElem /S /P /K [ 9 ] /P 158 0 R /Pg 96 0 R >>
endobj

579 0 obj
<< /Type /StructElem /S /LI /K [ 580 0 R 581 0 R ] /P 158 0 R >>
endobj

580 0 obj
<< /Type /StructElem /S /Lbl /K [ 10 ] /P 579 0 R /Pg 96 0 R >>
endobj

581 0 obj
<< /Type /StructElem /S /LBody /K [ 582 0 R ] /P 579 0 R >>
endobj

582 0 obj
<< /Type /StructElem /S /P /K [ 11 ] /P 581 0 R /Pg 96 0 R >>
endobj

583 0 obj
<< /Type /StructElem /S /P /K [ 12 ] /P 158 0 R /Pg 96 0 R >>
endobj

584 0 obj
<< /Type /StructElem /S /LI /K [ 585 0 R 586 0 R ] /P 158 0 R >>
endobj

585 0 obj
<< /Type /StructElem /S /Lbl /K [ 13 ] /P 584 0 R /Pg 96 0 R >>
endobj

586 0 obj
<< /Type /StructElem /S /LBody /K [ 587 0 R ] /P 584 0 R >>
endobj

587 0 obj
<< /Type /StructElem /S /P /K [ 14 ] /P 586 0 R /Pg 96 0 R >>
endobj

588 0 obj
<< /Type /StructElem /S /P /K [ 15 589 0 R 17 ] /P 158 0 R /Pg 96 0 R >>
endobj

589 0 obj
<< /Type /StructElem /S /Code /K [ 16 ] /P 588 0 R >>
endobj

590 0 obj
<< /Type /StructElem /S /LI /K [ 591 0 R 592 0 R ] /P 158 0 R >>
endobj

591 0 obj
<< /Type /StructElem /S /Lbl /K [ 18 ] /P 590 0 R /Pg 96 0 R >>
endobj

592 0 obj
<< /Type /StructElem /S /LBody /K [ 593 0 R ] /P 590 0 R >>
endobj

593 0 obj
<< /Type /StructElem /S /P /K [ 19 ] /P 592 0 R /Pg 96 0 R >>
endobj

594 0 obj
<< /Type /StructElem /S /P /K [ 20 ] /P 158 0 R /Pg 96 0 R >>
endobj

595 0 obj
<< /Type /StructElem /S /LI /K [ 596 0 R 597 0 R ] /P 158 0 R >>
endobj

596 0 obj
<< /Type /StructElem /S /Lbl /K [ 21 ] /P 595 0 R /Pg 96 0 R >>
endobj

597 0 obj
<< /Type /StructElem /S /LBody /K [ 598 0 R ] /P 595 0 R >>
endobj

598 0 obj
<< /Type /StructElem /S /P /K [ 22 ] /P 597 0 R /Pg 96 0 R >>
endobj

599 0 obj
<< /Type /StructElem /S /P /K [ 23 ] /P 158 0 R /Pg 96 0 R >>
endobj

600 0 obj
<< /Type /StructElem /S /LI /K [ 601 0 R 602 0 R ] /P 158 0 R >>
endobj

601 0 obj
<< /Type /StructElem /S /Lbl /K [ 24 ] /P 600 0 R /Pg 96 0 R >>
endobj

602 0 obj
<< /Type /StructElem /S /LBody /K [ 603 0 R ] /P 600 0 R >>
endobj

603 0 obj
<< /Type /StructElem /S /P /K [ 25 ] /P 602 0 R /Pg 96 0 R >>
endobj

604 0 obj
<< /Type /StructElem /S /P /K [ 26 ] /P 158 0 R /Pg 96 0 R >>
endobj

605 0 obj
<< /Type /StructElem /S /LI /K [ 606 0 R 607 0 R ] /P 158 0 R >>
endobj

606 0 obj
<< /Type /StructElem /S /Lbl /K [ 27 ] /P 605 0 R /Pg 96 0 R >>
endobj

607 0 obj
<< /Type /StructElem /S /LBody /K [ 608 0 R ] /P 605 0 R >>
endobj

608 0 obj
<< /Type /StructElem /S /P /K [ 28 ] /P 607 0 R /Pg 96 0 R >>
endobj

609 0 obj
<< /Type /StructElem /S /P /K [ 29 ] /P 158 0 R /Pg 96 0 R >>
endobj

610 0 obj
<< /Type /StructElem /S /LI /K [ 611 0 R 612 0 R ] /P 158 0 R >>
endobj

611 0 obj
<< /Type /StructElem /S /Lbl /K [ 30 ] /P 610 0 R /Pg 96 0 R >>
endobj

612 0 obj
<< /Type /StructElem /S /LBody /K [ 613 0 R ] /P 610 0 R >>
endobj

613 0 obj
<< /Type /StructElem /S /P /K [ 31 ] /P 612 0 R /Pg 96 0 R >>
endobj

614 0 obj
<< /Type /StructElem /S /P /K [ 32 615 0 R 34 ] /P 158 0 R /Pg 96 0 R >>
endobj

615 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 614 0 R >>
endobj

616 0 obj
<<
  /Type /StructElem
  /S /H3
  /K [ 35 ]
  /P 158 0 R
  /Pg 96 0 R
  /T (Examples)
>>
endobj

617 0 obj
<< /Type /StructElem /S /P /K [ 36 ] /P 158 0 R /Pg 96 0 R >>
endobj

618 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 158 0 R /Pg 96 0 R >>
endobj

619 0 obj
<< /Type /StructElem /S /P /K [ 38 ] /P 158 0 R /Pg 96 0 R >>
endobj

620 0 obj
<< /Type /StructElem /S /Code /K [ 39 621 0 R ] /P 158 0 R /Pg 96 0 R >>
endobj

621 0 obj
<< /Type /MCR /MCID 0 /Pg 100 0 R >>
endobj

622 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 158 0 R
  /Pg 100 0 R
  /T (method stable)
>>
endobj

623 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 158 0 R /Pg 100 0 R >>
endobj

624 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 3 625 0 R 5 626 0 R 7 ]
  /P 158 0 R
  /Pg 100 0 R
>>
endobj

625 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 624 0 R >>
endobj

626 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 624 0 R >>
endobj

627 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 8 628 0 R 10 629 0 R 12 630 0 R 14 631 0 R 16 ]
  /P 158 0 R
  /Pg 100 0 R
>>
endobj

628 0 obj
<< /Type /StructElem /S /Code /K [ 9 ] /P 627 0 R >>
endobj

629 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 627 0 R >>
endobj

630 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 627 0 R >>
endobj

631 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 627 0 R >>
endobj

632 0 obj
<< /Type /StructElem /S /P /K [ 17 ] /P 158 0 R /Pg 100 0 R >>
endobj

633 0 obj
<< /Type /StructElem /S /Code /K [ 18 ] /P 158 0 R /Pg 100 0 R >>
endobj

634 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 19 635 0 R 21 636 0 R 23 637 0 R 25 638 0 R 27 639 0 R 29 ]
  /P 158 0 R
  /Pg 100 0 R
>>
endobj

635 0 obj
<< /Type /StructElem /S /Code /K [ 20 ] /P 634 0 R >>
endobj

636 0 obj
<< /Type /StructElem /S /Code /K [ 22 ] /P 634 0 R >>
endobj

637 0 obj
<< /Type /StructElem /S /Code /K [ 24 ] /P 634 0 R >>
endobj

638 0 obj
<< /Type /StructElem /S /Code /K [ 26 ] /P 634 0 R >>
endobj

639 0 obj
<< /Type /StructElem /S /Code /K [ 28 ] /P 634 0 R >>
endobj

640 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 30 ]
  /P 158 0 R
  /Pg 100 0 R
  /T (method produce)
>>
endobj

641 0 obj
<< /Type /StructElem /S /Code /K [ 31 ] /P 158 0 R /Pg 100 0 R >>
endobj

642 0 obj
<< /Type /StructElem /S /P /K [ 32 643 0 R 34 ] /P 158 0 R /Pg 100 0 R >>
endobj

643 0 obj
<< /Type /StructElem /S /Link /K [ 644 0 R 33 ] /P 642 0 R >>
endobj

644 0 obj
<< /Type /OBJR /Obj 101 0 R /Pg 100 0 R >>
endobj

645 0 obj
<< /Type /StructElem /S /Code /K [ 35 ] /P 158 0 R /Pg 100 0 R >>
endobj

646 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 36 ]
  /P 158 0 R
  /Pg 100 0 R
  /T (method lines)
>>
endobj

647 0 obj
<< /Type /StructElem /S /Code /K [ 37 ] /P 158 0 R /Pg 100 0 R >>
endobj

648 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 38 649 0 R 40 650 0 R 42 ]
  /P 158 0 R
  /Pg 100 0 R
>>
endobj

649 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 648 0 R >>
endobj

650 0 obj
<< /Type /StructElem /S /Code /K [ 41 ] /P 648 0 R >>
endobj

651 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 43 ]
  /P 158 0 R
  /Pg 100 0 R
  /T (method words)
>>
endobj

652 0 obj
<< /Type /StructElem /S /Code /K [ 44 ] /P 158 0 R /Pg 100 0 R >>
endobj

653 0 obj
<< /Type /StructElem /S /P /K [ 45 ] /P 158 0 R /Pg 100 0 R >>
endobj

654 0 obj
<< /Type /StructElem /S /Code /K [ 0 ] /P 158 0 R /Pg 106 0 R >>
endobj

655 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 158 0 R
  /Pg 106 0 R
  /T (method unique)
>>
endobj

656 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 158 0 R /Pg 106 0 R >>
endobj

657 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 3 658 0 R 5 659 0 R 7 660 0 R 9 662 0 R 11 ]
  /P 158 0 R
  /Pg 106 0 R
>>
endobj

658 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 657 0 R >>
endobj

659 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 657 0 R >>
endobj

660 0 obj
<< /Type /StructElem /S /Link /K [ 661 0 R 8 ] /P 657 0 R >>
endobj

661 0 obj
<< /Type /OBJR /Obj 107 0 R /Pg 106 0 R >>
endobj

662 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 657 0 R >>
endobj

663 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 12 ]
  /P 158 0 R
  /Pg 106 0 R
  /T (method repeated)
>>
endobj

664 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 158 0 R /Pg 106 0 R >>
endobj

665 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 14 666 0 R 16 667 0 R 18 668 0 R 20 ]
  /P 158 0 R
  /Pg 106 0 R
>>
endobj

666 0 obj
<< /Type /StructElem /S /Code /K [ 15 ] /P 665 0 R >>
endobj

667 0 obj
<< /Type /StructElem /S /Code /K [ 17 ] /P 665 0 R >>
endobj

668 0 obj
<< /Type /StructElem /S /Link /K [ 669 0 R 19 ] /P 665 0 R >>
endobj

669 0 obj
<< /Type /OBJR /Obj 109 0 R /Pg 106 0 R >>
endobj

670 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 158 0 R /Pg 106 0 R >>
endobj

671 0 obj
<< /Type /StructElem /S /P /K [ 22 672 0 R 24 ] /P 158 0 R /Pg 106 0 R >>
endobj

672 0 obj
<< /Type /StructElem /S /Link /K [ 673 0 R 23 ] /P 671 0 R >>
endobj

673 0 obj
<< /Type /OBJR /Obj 111 0 R /Pg 106 0 R >>
endobj

674 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 675 0 R 26 676 0 R 28 ]
  /P 158 0 R
  /Pg 106 0 R
>>
endobj

675 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 25 ]
  /P 674 0 R
  /Pg 106 0 R
>>
endobj

676 0 obj
<< /Type /StructElem /S /Link /K [ 677 0 R 27 ] /P 674 0 R >>
endobj

677 0 obj
<< /Type /OBJR /Obj 113 0 R /Pg 106 0 R >>
endobj

678 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 29 ]
  /P 158 0 R
  /Pg 106 0 R
  /T (method squish)
>>
endobj

679 0 obj
<< /Type /StructElem /S /Code /K [ 30 ] /P 158 0 R /Pg 106 0 R >>
endobj

680 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 31 681 0 R 33 682 0 R 35 683 0 R 37 ]
  /P 158 0 R
  /Pg 106 0 R
>>
endobj

681 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 680 0 R >>
endobj

682 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 680 0 R >>
endobj

683 0 obj
<< /Type /StructElem /S /Link /K [ 684 0 R 36 ] /P 680 0 R >>
endobj

684 0 obj
<< /Type /OBJR /Obj 115 0 R /Pg 106 0 R >>
endobj

685 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 38 ]
  /P 158 0 R
  /Pg 106 0 R
  /T (method max)
>>
endobj

686 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 158 0 R /Pg 106 0 R >>
endobj

687 0 obj
<< /Type /StructElem /S /P /K [ 40 688 0 R 42 ] /P 158 0 R /Pg 106 0 R >>
endobj

688 0 obj
<< /Type /StructElem /S /Link /K [ 689 0 R 41 ] /P 687 0 R >>
endobj

689 0 obj
<< /Type /OBJR /Obj 117 0 R /Pg 106 0 R >>
endobj

690 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 43 ]
  /P 158 0 R
  /Pg 106 0 R
  /T (method min)
>>
endobj

691 0 obj
<< /Type /StructElem /S /Code /K [ 44 ] /P 158 0 R /Pg 106 0 R >>
endobj

692 0 obj
<< /Type /StructElem /S /P /K [ 45 693 0 R 47 ] /P 158 0 R /Pg 106 0 R >>
endobj

693 0 obj
<< /Type /StructElem /S /Link /K [ 694 0 R 46 ] /P 692 0 R >>
endobj

694 0 obj
<< /Type /OBJR /Obj 119 0 R /Pg 106 0 R >>
endobj

695 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 0 ]
  /P 158 0 R
  /Pg 124 0 R
  /T (method minmax)
>>
endobj

696 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 158 0 R /Pg 124 0 R >>
endobj

697 0 obj
<< /Type /StructElem /S /P /K [ 2 698 0 R 4 ] /P 158 0 R /Pg 124 0 R >>
endobj

698 0 obj
<< /Type /StructElem /S /Link /K [ 699 0 R 3 ] /P 697 0 R >>
endobj

699 0 obj
<< /Type /OBJR /Obj 125 0 R /Pg 124 0 R >>
endobj

700 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 5 ]
  /P 158 0 R
  /Pg 124 0 R
  /T (method skip)
>>
endobj

701 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 158 0 R /Pg 124 0 R >>
endobj

702 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 7 703 0 R 9 704 0 R 11 705 0 R 13 ]
  /P 158 0 R
  /Pg 124 0 R
>>
endobj

703 0 obj
<< /Type /StructElem /S /Code /K [ 8 ] /P 702 0 R >>
endobj

704 0 obj
<< /Type /StructElem /S /Code /K [ 10 ] /P 702 0 R >>
endobj

705 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 702 0 R >>
endobj

706 0 obj
<< /Type /StructElem /S /Code /K [ 14 ] /P 158 0 R /Pg 124 0 R >>
endobj

707 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 15 ]
  /P 158 0 R
  /Pg 124 0 R
  /T (method start)
>>
endobj

708 0 obj
<< /Type /StructElem /S /Code /K [ 16 ] /P 158 0 R /Pg 124 0 R >>
endobj

709 0 obj
<< /Type /StructElem /S /P /K [ 17 ] /P 158 0 R /Pg 124 0 R >>
endobj

710 0 obj
<< /Type /StructElem /S /P /K [ 18 ] /P 158 0 R /Pg 124 0 R >>
endobj

711 0 obj
<< /Type /StructElem /S /P /K [ 19 712 0 R 21 ] /P 158 0 R /Pg 124 0 R >>
endobj

712 0 obj
<< /Type /StructElem /S /Code /K [ 20 ] /P 711 0 R >>
endobj

713 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 22 ]
  /P 158 0 R
  /Pg 124 0 R
  /T (method migrate)
>>
endobj

714 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 158 0 R /Pg 124 0 R >>
endobj

715 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 24 716 0 R 26 717 0 R 28 718 0 R 30 719 0 R 32 720 0 R 34 ]
  /P 158 0 R
  /Pg 124 0 R
>>
endobj

716 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 715 0 R >>
endobj

717 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 715 0 R >>
endobj

718 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 715 0 R >>
endobj

719 0 obj
<< /Type /StructElem /S /Code /K [ 31 ] /P 715 0 R >>
endobj

720 0 obj
<< /Type /StructElem /S /Code /K [ 33 ] /P 715 0 R >>
endobj

721 0 obj
<< /Type /StructElem /S /P /K [ 35 722 0 R 37 ] /P 158 0 R /Pg 124 0 R >>
endobj

722 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 721 0 R >>
endobj

723 0 obj
<< /Type /StructElem /S /P /K [ 38 ] /P 158 0 R /Pg 124 0 R >>
endobj

724 0 obj
<< /Type /StructElem /S /Code /K [ 39 ] /P 158 0 R /Pg 124 0 R >>
endobj

725 0 obj
<< /Type /StructElem /S /P /K [ 0 ] /P 158 0 R /Pg 130 0 R >>
endobj

726 0 obj
<< /Type /StructElem /S /Code /K [ 1 ] /P 158 0 R /Pg 130 0 R >>
endobj

727 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 158 0 R
  /Pg 134 0 R
  /T (Methods that combine supplies)
>>
endobj

728 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 158 0 R
  /Pg 134 0 R
  /T (method merge)
>>
endobj

729 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 158 0 R /Pg 134 0 R >>
endobj

730 0 obj
<< /Type /StructElem /S /P /K [ 3 ] /P 158 0 R /Pg 134 0 R >>
endobj

731 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 4 ]
  /P 158 0 R
  /Pg 134 0 R
  /T (method zip)
>>
endobj

732 0 obj
<< /Type /StructElem /S /P /K [ 5 ] /P 158 0 R /Pg 134 0 R >>
endobj

733 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 158 0 R /Pg 134 0 R >>
endobj

734 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 7 735 0 R 9 736 0 R 11 738 0 R 13 739 0 R 15 ]
  /P 158 0 R
  /Pg 134 0 R
>>
endobj

735 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 8 ]
  /P 734 0 R
>>
endobj

736 0 obj
<< /Type /StructElem /S /Link /K [ 737 0 R 10 ] /P 734 0 R >>
endobj

737 0 obj
<< /Type /OBJR /Obj 135 0 R /Pg 134 0 R >>
endobj

738 0 obj
<< /Type /StructElem /S /Code /K [ 12 ] /P 734 0 R >>
endobj

739 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 14 ]
  /P 734 0 R
>>
endobj

740 0 obj
<< /Type /StructElem /S /P /K [ 16 ] /P 158 0 R /Pg 134 0 R >>
endobj

741 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 17 ]
  /P 158 0 R
  /Pg 134 0 R
  /T (method zip-latest)
>>
endobj

742 0 obj
<< /Type /StructElem /S /P /K [ 18 ] /P 158 0 R /Pg 134 0 R >>
endobj

743 0 obj
<< /Type /StructElem /S /Code /K [ 19 ] /P 158 0 R /Pg 134 0 R >>
endobj

744 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 20 745 0 R 22 746 0 R 24 748 0 R 26 749 0 R 28 ]
  /P 158 0 R
  /Pg 134 0 R
>>
endobj

745 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 21 ]
  /P 744 0 R
>>
endobj

746 0 obj
<< /Type /StructElem /S /Link /K [ 747 0 R 23 ] /P 744 0 R >>
endobj

747 0 obj
<< /Type /OBJR /Obj 137 0 R /Pg 134 0 R >>
endobj

748 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 744 0 R >>
endobj

749 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 27 ]
  /P 744 0 R
>>
endobj

750 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 0 ]
  /P 158 0 R
  /Pg 142 0 R
  /T (I/O features exposed as supplies)
>>
endobj

751 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1 ]
  /P 158 0 R
  /Pg 142 0 R
  /T (sub signal)
>>
endobj

752 0 obj
<< /Type /StructElem /S /Code /K [ 2 ] /P 158 0 R /Pg 142 0 R >>
endobj

753 0 obj
<< /Type /StructElem /S /P /K [ 3 754 0 R 5 ] /P 158 0 R /Pg 142 0 R >>
endobj

754 0 obj
<< /Type /StructElem /S /Code /K [ 4 ] /P 753 0 R >>
endobj

755 0 obj
<< /Type /StructElem /S /Code /K [ 6 ] /P 158 0 R /Pg 142 0 R >>
endobj

756 0 obj
<< /Type /StructElem /S /P /K [ 7 ] /P 158 0 R /Pg 142 0 R >>
endobj

757 0 obj
<< /Type /StructElem /S /P /K [ 8 9 10 ] /P 158 0 R /Pg 142 0 R >>
endobj

758 0 obj
<< /Type /StructElem /S /Code /K [ 11 ] /P 158 0 R /Pg 142 0 R >>
endobj

759 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 12 760 0 R 14 761 0 R 763 0 R 16 ]
  /P 158 0 R
  /Pg 142 0 R
>>
endobj

760 0 obj
<< /Type /StructElem /S /Code /K [ 13 ] /P 759 0 R >>
endobj

761 0 obj
<< /Type /StructElem /S /Link /K [ 762 0 R ] /P 759 0 R >>
endobj

762 0 obj
<< /Type /OBJR /Obj 143 0 R /Pg 142 0 R >>
endobj

763 0 obj
<< /Type /StructElem /S /Link /K [ 764 0 R 15 ] /P 759 0 R >>
endobj

764 0 obj
<< /Type /OBJR /Obj 145 0 R /Pg 142 0 R >>
endobj

765 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 766 0 R 18 767 0 R 20 769 0 R 22 770 0 R 24 771 0 R 26 772 0 R 28 773 0 R 30 ]
  /P 158 0 R
  /Pg 142 0 R
>>
endobj

766 0 obj
<<
  /Type /StructElem
  /S /Span
  /A << /FontStyle (bold) >>
  /K [ 17 ]
  /P 765 0 R
  /Pg 142 0 R
>>
endobj

767 0 obj
<< /Type /StructElem /S /Link /K [ 768 0 R 19 ] /P 765 0 R >>
endobj

768 0 obj
<< /Type /OBJR /Obj 146 0 R /Pg 142 0 R >>
endobj

769 0 obj
<< /Type /StructElem /S /Code /K [ 21 ] /P 765 0 R >>
endobj

770 0 obj
<< /Type /StructElem /S /Code /K [ 23 ] /P 765 0 R >>
endobj

771 0 obj
<< /Type /StructElem /S /Code /K [ 25 ] /P 765 0 R >>
endobj

772 0 obj
<< /Type /StructElem /S /Code /K [ 27 ] /P 765 0 R >>
endobj

773 0 obj
<< /Type /StructElem /S /Code /K [ 29 ] /P 765 0 R >>
endobj

774 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 31 ]
  /P 158 0 R
  /Pg 142 0 R
  /T (method IO::Notification.watch-path)
>>
endobj

775 0 obj
<< /Type /StructElem /S /Code /K [ 32 ] /P 158 0 R /Pg 142 0 R >>
endobj

776 0 obj
<< /Type /StructElem /S /P /K [ 33 777 0 R 35 ] /P 158 0 R /Pg 142 0 R >>
endobj

777 0 obj
<< /Type /StructElem /S /Code /K [ 34 ] /P 776 0 R >>
endobj

778 0 obj
<< /Type /StructElem /S /Code /K [ 36 ] /P 158 0 R /Pg 142 0 R >>
endobj

779 0 obj
<<
  /Type /StructTreeRoot
  /K [ 158 0 R ]
  /ParentTree <<
    /Nums [ 0 [ 159 0 R 157 0 R 160 0 R 161 0 R 162 0 R 161 0 R 164 0 R 161 0 R 165 0 R 166 0 R 165 0 R 168 0 R 169 0 R 168 0 R 170 0 R 168 0 R 171 0 R 168 0 R 172 0 R 168 0 R 173 0 R 174 0 R 173 0 R 175 0 R 173 0 R 176 0 R 177 0 R 176 0 R 178 0 R 176 0 R 179 0 R 176 0 R 181 0 R 176 0 R 182 0 R 176 0 R 183 0 R 176 0 R 184 0 R 185 0 R 186 0 R 185 0 R 188 0 R 185 0 R 189 0 R 185 0 R 191 0 R 185 0 R 193 0 R 185 0 R 194 0 R 195 0 R 194 0 R 196 0 R 194 0 R 198 0 R 199 0 R 198 0 R ] 1 162 0 R 2 166 0 R 3 179 0 R 4 186 0 R 5 189 0 R 6 191 0 R 7 196 0 R 8 199 0 R 9 [ 201 0 R 202 0 R 203 0 R 204 0 R 205 0 R 204 0 R 206 0 R 207 0 R 206 0 R 208 0 R 206 0 R 209 0 R 206 0 R 210 0 R 206 0 R 211 0 R 206 0 R 212 0 R 206 0 R 213 0 R 206 0 R 214 0 R 215 0 R 214 0 R 216 0 R 214 0 R 217 0 R 214 0 R 218 0 R 214 0 R 219 0 R 214 0 R 220 0 R 221 0 R 220 0 R 222 0 R 220 0 R 224 0 R 220 0 R 225 0 R 220 0 R 226 0 R 220 0 R 227 0 R 220 0 R 228 0 R 220 0 R 229 0 R 220 0 R 230 0 R 220 0 R 231 0 R 232 0 R 231 0 R 233 0 R 231 0 R 235 0 R 231 0 R 236 0 R 237 0 R 238 0 R 239 0 R 240 0 R 241 0 R 242 0 R 241 0 R ] 10 222 0 R 11 233 0 R 12 [ 243 0 R 244 0 R 245 0 R 246 0 R 247 0 R 248 0 R 247 0 R 250 0 R 251 0 R 252 0 R 253 0 R 252 0 R 255 0 R 252 0 R 256 0 R 257 0 R 258 0 R 259 0 R 258 0 R 261 0 R 258 0 R 262 0 R 258 0 R 263 0 R 258 0 R 264 0 R 258 0 R 265 0 R 258 0 R 266 0 R 258 0 R 267 0 R 258 0 R 268 0 R 258 0 R 269 0 R 258 0 R 270 0 R 271 0 R 272 0 R 271 0 R 273 0 R 274 0 R 275 0 R 276 0 R 275 0 R 277 0 R 275 0 R 278 0 R 275 0 R 279 0 R 275 0 R 280 0 R 275 0 R 281 0 R 282 0 R 283 0 R 284 0 R 285 0 R ] 13 248 0 R 14 253 0 R 15 259 0 R 16 [ 286 0 R 287 0 R 288 0 R 289 0 R 290 0 R 289 0 R 291 0 R 289 0 R 292 0 R 289 0 R 293 0 R 289 0 R 294 0 R 289 0 R 295 0 R 289 0 R 296 0 R 297 0 R 298 0 R 299 0 R 300 0 R 299 0 R 301 0 R 299 0 R 302 0 R 299 0 R 303 0 R 299 0 R 304 0 R 299 0 R 305 0 R 299 0 R 306 0 R 307 0 R 308 0 R 309 0 R 308 0 R 310 0 R 308 0 R 311 0 R 312 0 R 313 0 R 314 0 R 313 0 R 315 0 R 313 0 R 316 0 R 313 0 R 317 0 R 313 0 R 318 0 R 313 0 R 319 0 R 313 0 R 320 0 R 313 0 R 321 0 R 322 0 R 323 0 R 324 0 R 325 0 R 324 0 R 326 0 R 324 0 R 327 0 R 324 0 R 328 0 R 324 0 R 329 0 R 324 0 R 330 0 R 324 0 R 331 0 R 324 0 R 332 0 R ] 17 [ 333 0 R 334 0 R 335 0 R 336 0 R 335 0 R 337 0 R 335 0 R 338 0 R 335 0 R 339 0 R 335 0 R 340 0 R 335 0 R 342 0 R 335 0 R 343 0 R 335 0 R 344 0 R 335 0 R 345 0 R 346 0 R 347 0 R 348 0 R 349 0 R 348 0 R 350 0 R 348 0 R 351 0 R 348 0 R 352 0 R 348 0 R 353 0 R 348 0 R 355 0 R 356 0 R 357 0 R 358 0 R 359 0 R 360 0 R 359 0 R 362 0 R ] 18 340 0 R 19 353 0 R 20 360 0 R 21 [ 363 0 R 364 0 R 365 0 R 366 0 R 367 0 R 368 0 R 369 0 R 370 0 R 371 0 R 372 0 R 373 0 R 374 0 R 375 0 R 376 0 R 377 0 R 378 0 R 379 0 R 380 0 R 381 0 R 380 0 R 382 0 R 380 0 R 383 0 R 380 0 R 385 0 R 380 0 R 386 0 R 380 0 R 387 0 R 380 0 R 388 0 R 380 0 R 389 0 R 380 0 R 392 0 R 380 0 R 394 0 R ] 22 383 0 R 23 390 0 R 24 392 0 R 25 [ 395 0 R 396 0 R 397 0 R 398 0 R 397 0 R 399 0 R 397 0 R 400 0 R 401 0 R 400 0 R 402 0 R 400 0 R 403 0 R 400 0 R 404 0 R 405 0 R 406 0 R 407 0 R 406 0 R 408 0 R 409 0 R 410 0 R 411 0 R 412 0 R 411 0 R 413 0 R 414 0 R 415 0 R 416 0 R 417 0 R 416 0 R 418 0 R 416 0 R 420 0 R 419 0 R 421 0 R 419 0 R 422 0 R 419 0 R 423 0 R 419 0 R 424 0 R 425 0 R 426 0 R ] 26 [ 427 0 R 428 0 R 429 0 R 430 0 R 431 0 R 430 0 R 433 0 R 434 0 R 435 0 R 434 0 R 436 0 R 437 0 R 438 0 R 439 0 R 440 0 R 441 0 R 440 0 R 443 0 R 444 0 R 445 0 R 444 0 R 446 0 R 444 0 R 447 0 R 444 0 R 448 0 R 444 0 R 449 0 R 450 0 R 451 0 R 452 0 R 453 0 R 454 0 R 453 0 R 455 0 R 453 0 R 456 0 R 453 0 R 457 0 R 453 0 R 458 0 R 453 0 R 459 0 R ] 27 431 0 R 28 441 0 R 29 [ 460 0 R 461 0 R 462 0 R 463 0 R 462 0 R 464 0 R 462 0 R 466 0 R 462 0 R 467 0 R 462 0 R 468 0 R 462 0 R 470 0 R 471 0 R 472 0 R 473 0 R 474 0 R 473 0 R 475 0 R 477 0 R 476 0 R 478 0 R 479 0 R 480 0 R 481 0 R 480 0 R 483 0 R 484 0 R 485 0 R 486 0 R 487 0 R 488 0 R 489 0 R ] 30 464 0 R 31 468 0 R 32 481 0 R 33 [ 489 0 R 491 0 R 492 0 R 491 0 R 496 0 R 497 0 R 500 0 R 501 0 R 503 0 R 504 0 R 506 0 R 507 0 R 509 0 R 510 0 R 512 0 R 513 0 R 515 0 R 516 0 R 518 0 R 519 0 R 521 0 R 522 0 R 523 0 R 524 0 R 523 0 R 525 0 R 526 0 R 527 0 R 528 0 R 527 0 R 529 0 R 527 0 R 530 0 R 527 0 R 531 0 R 532 0 R 531 0 R 533 0 R 534 0 R 535 0 R 536 0 R 535 0 R 537 0 R 538 0 R 537 0 R 539 0 R 537 0 R 541 0 R 542 0 R 541 0 R 543 0 R 541 0 R 544 0 R 541 0 R 545 0 R 546 0 R 545 0 R 547 0 R 545 0 R 548 0 R 545 0 R 549 0 R 550 0 R 549 0 R 551 0 R 549 0 R 552 0 R 553 0 R 554 0 R 553 0 R 556 0 R 558 0 R 559 0 R 561 0 R 563 0 R 564 0 R 565 0 R 564 0 R ] 34 539 0 R 35 [ 567 0 R 569 0 R 570 0 R 572 0 R 574 0 R 575 0 R 576 0 R 575 0 R 577 0 R 578 0 R 580 0 R 582 0 R 583 0 R 585 0 R 587 0 R 588 0 R 589 0 R 588 0 R 591 0 R 593 0 R 594 0 R 596 0 R 598 0 R 599 0 R 601 0 R 603 0 R 604 0 R 606 0 R 608 0 R 609 0 R 611 0 R 613 0 R 614 0 R 615 0 R 614 0 R 616 0 R 617 0 R 618 0 R 619 0 R 620 0 R ] 36 [ 620 0 R 622 0 R 623 0 R 624 0 R 625 0 R 624 0 R 626 0 R 624 0 R 627 0 R 628 0 R 627 0 R 629 0 R 627 0 R 630 0 R 627 0 R 631 0 R 627 0 R 632 0 R 633 0 R 634 0 R 635 0 R 634 0 R 636 0 R 634 0 R 637 0 R 634 0 R 638 0 R 634 0 R 639 0 R 634 0 R 640 0 R 641 0 R 642 0 R 643 0 R 642 0 R 645 0 R 646 0 R 647 0 R 648 0 R 649 0 R 648 0 R 650 0 R 648 0 R 651 0 R 652 0 R 653 0 R ] 37 643 0 R 38 [ 654 0 R 655 0 R 656 0 R 657 0 R 658 0 R 657 0 R 659 0 R 657 0 R 660 0 R 657 0 R 662 0 R 657 0 R 663 0 R 664 0 R 665 0 R 666 0 R 665 0 R 667 0 R 665 0 R 668 0 R 665 0 R 670 0 R 671 0 R 672 0 R 671 0 R 675 0 R 674 0 R 676 0 R 674 0 R 678 0 R 679 0 R 680 0 R 681 0 R 680 0 R 682 0 R 680 0 R 683 0 R 680 0 R 685 0 R 686 0 R 687 0 R 688 0 R 687 0 R 690 0 R 691 0 R 692 0 R 693 0 R 692 0 R ] 39 660 0 R 40 668 0 R 41 672 0 R 42 676 0 R 43 683 0 R 44 688 0 R 45 693 0 R 46 [ 695 0 R 696 0 R 697 0 R 698 0 R 697 0 R 700 0 R 701 0 R 702 0 R 703 0 R 702 0 R 704 0 R 702 0 R 705 0 R 702 0 R 706 0 R 707 0 R 708 0 R 709 0 R 710 0 R 711 0 R 712 0 R 711 0 R 713 0 R 714 0 R 715 0 R 716 0 R 715 0 R 717 0 R 715 0 R 718 0 R 715 0 R 719 0 R 715 0 R 720 0 R 715 0 R 721 0 R 722 0 R 721 0 R 723 0 R 724 0 R ] 47 698 0 R 48 [ 725 0 R 726 0 R ] 49 [ 727 0 R 728 0 R 729 0 R 730 0 R 731 0 R 732 0 R 733 0 R 734 0 R 735 0 R 734 0 R 736 0 R 734 0 R 738 0 R 734 0 R 739 0 R 734 0 R 740 0 R 741 0 R 742 0 R 743 0 R 744 0 R 745 0 R 744 0 R 746 0 R 744 0 R 748 0 R 744 0 R 749 0 R 744 0 R ] 50 736 0 R 51 746 0 R 52 [ 750 0 R 751 0 R 752 0 R 753 0 R 754 0 R 753 0 R 755 0 R 756 0 R 757 0 R 757 0 R 757 0 R 758 0 R 759 0 R 760 0 R 759 0 R 763 0 R 759 0 R 766 0 R 765 0 R 767 0 R 765 0 R 769 0 R 765 0 R 770 0 R 765 0 R 771 0 R 765 0 R 772 0 R 765 0 R 773 0 R 765 0 R 774 0 R 775 0 R 776 0 R 777 0 R 776 0 R 778 0 R ] 53 761 0 R 54 763 0 R 55 767 0 R ]
  >>
>>
endobj

780 0 obj
<<
  /Count 3
  /Dest /Methods_that_return_Taps
  /First 781 0 R
  /Last 782 0 R
  /Next 783 0 R
  /Prev 155 0 R
  /SE 201 0 R
  /Title (Methods that return Taps)
>>
endobj

781 0 obj
<<
  /Count 1
  /Dest /method_tap
  /Next 782 0 R
  /SE 202 0 R
  /Title (method tap)
>>
endobj

782 0 obj
<<
  /Count 1
  /Dest /method_act
  /Prev 781 0 R
  /SE 239 0 R
  /Title (method act)
>>
endobj

783 0 obj
<<
  /Count 6
  /Dest /Utility_methods
  /First 784 0 R
  /Last 788 0 R
  /Next 789 0 R
  /Prev 780 0 R
  /SE 243 0 R
  /Title (Utility methods)
>>
endobj

784 0 obj
<<
  /Count 1
  /Dest /method_Capture
  /Next 785 0 R
  /SE 244 0 R
  /Title (method Capture)
>>
endobj

785 0 obj
<<
  /Count 1
  /Dest /method_Channel
  /Next 786 0 R
  /Prev 784 0 R
  /SE 250 0 R
  /Title (method Channel)
>>
endobj

786 0 obj
<<
  /Count 1
  /Dest /method_Promise
  /Next 787 0 R
  /Prev 785 0 R
  /SE 256 0 R
  /Title (method Promise)
>>
endobj

787 0 obj
<<
  /Count 1
  /Dest /method_live
  /Next 788 0 R
  /Prev 786 0 R
  /SE 273 0 R
  /Title (method live)
>>
endobj

788 0 obj
<<
  /Count 1
  /Dest /method_schedule-on
  /Prev 787 0 R
  /SE 282 0 R
  /Title (method schedule-on)
>>
endobj

789 0 obj
<<
  /Count 9
  /Dest /Methods_that_wait_until_the_supply_is_done
  /First 790 0 R
  /Last 797 0 R
  /Next 798 0 R
  /Prev 783 0 R
  /SE 286 0 R
  /Title (Methods that wait until the supply is done)
>>
endobj

790 0 obj
<<
  /Count 1
  /Dest /method_wait
  /Next 791 0 R
  /SE 287 0 R
  /Title (method wait)
>>
endobj

791 0 obj
<<
  /Count 1
  /Dest /method_list
  /Next 792 0 R
  /Prev 790 0 R
  /SE 297 0 R
  /Title (method list)
>>
endobj

792 0 obj
<<
  /Count 1
  /Dest /method_Seq
  /Next 793 0 R
  /Prev 791 0 R
  /SE 306 0 R
  /Title (method Seq)
>>
endobj

793 0 obj
<<
  /Count 1
  /Dest /method_grab
  /Next 794 0 R
  /Prev 792 0 R
  /SE 311 0 R
  /Title (method grab)
>>
endobj

794 0 obj
<<
  /Count 1
  /Dest /method_reverse
  /Next 795 0 R
  /Prev 793 0 R
  /SE 322 0 R
  /Title (method reverse)
>>
endobj

795 0 obj
<<
  /Count 1
  /Dest /method_sort
  /Next 796 0 R
  /Prev 794 0 R
  /SE 333 0 R
  /Title (method sort)
>>
endobj

796 0 obj
<<
  /Count 1
  /Dest /method_collate
  /Next 797 0 R
  /Prev 795 0 R
  /SE 346 0 R
  /Title (method collate)
>>
endobj

797 0 obj
<<
  /Count 1
  /Dest /method_reduce
  /Prev 796 0 R
  /SE 356 0 R
  /Title (method reduce)
>>
endobj

798 0 obj
<<
  /Count 35
  /Dest /Methods_that_return_another_Supply
  /First 799 0 R
  /Last 832 0 R
  /Next 833 0 R
  /Prev 789 0 R
  /SE 363 0 R
  /Title (Methods that return another Supply)
>>
endobj

799 0 obj
<<
  /Count 1
  /Dest /method_from-list
  /Next 800 0 R
  /SE 364 0 R
  /Title (method from-list)
>>
endobj

800 0 obj
<<
  /Count 1
  /Dest /method_share
  /Next 801 0 R
  /Prev 799 0 R
  /SE 368 0 R
  /Title (method share)
>>
endobj

801 0 obj
<<
  /Count 1
  /Dest /method_flat
  /Next 802 0 R
  /Prev 800 0 R
  /SE 372 0 R
  /Title (method flat)
>>
endobj

802 0 obj
<<
  /Count 1
  /Dest /method_do
  /Next 803 0 R
  /Prev 801 0 R
  /SE 375 0 R
  /Title (method do)
>>
endobj

803 0 obj
<<
  /Count 1
  /Dest /method_on-close
  /Next 804 0 R
  /Prev 802 0 R
  /SE 378 0 R
  /Title (method on-close)
>>
endobj

804 0 obj
<<
  /Count 1
  /Dest /method_interval
  /Next 805 0 R
  /Prev 803 0 R
  /SE 395 0 R
  /Title (method interval)
>>
endobj

805 0 obj
<<
  /Count 1
  /Dest /method_grep
  /Next 806 0 R
  /Prev 804 0 R
  /SE 404 0 R
  /Title (method grep)
>>
endobj

806 0 obj
<<
  /Count 1
  /Dest /method_map
  /Next 807 0 R
  /Prev 805 0 R
  /SE 409 0 R
  /Title (method map)
>>
endobj

807 0 obj
<<
  /Count 1
  /Dest /method_batch
  /Next 808 0 R
  /Prev 806 0 R
  /SE 414 0 R
  /Title (method batch)
>>
endobj

808 0 obj
<<
  /Count 1
  /Dest /method_elems
  /Next 809 0 R
  /Prev 807 0 R
  /SE 424 0 R
  /Title (method elems)
>>
endobj

809 0 obj
<<
  /Count 1
  /Dest /method_head
  /Next 810 0 R
  /Prev 808 0 R
  /SE 427 0 R
  /Title (method head)
>>
endobj

810 0 obj
<<
  /Count 1
  /Dest /method_tail
  /Next 811 0 R
  /Prev 809 0 R
  /SE 438 0 R
  /Title (method tail)
>>
endobj

811 0 obj
<<
  /Count 1
  /Dest /method_first
  /Next 812 0 R
  /Prev 810 0 R
  /SE 451 0 R
  /Title (method first)
>>
endobj

812 0 obj
<<
  /Count 1
  /Dest /method_split
  /Next 813 0 R
  /Prev 811 0 R
  /SE 460 0 R
  /Title (method split)
>>
endobj

813 0 obj
<<
  /Count 1
  /Dest /method_rotate
  /Next 814 0 R
  /Prev 812 0 R
  /SE 471 0 R
  /Title (method rotate)
>>
endobj

814 0 obj
<<
  /Count 1
  /Dest /method_rotor
  /Next 815 0 R
  /Prev 813 0 R
  /SE 478 0 R
  /Title (method rotor)
>>
endobj

815 0 obj
<<
  /Count 1
  /Dest /method_delayed
  /Next 816 0 R
  /Prev 814 0 R
  /SE 483 0 R
  /Title (method delayed)
>>
endobj

816 0 obj
<<
  /Count 4
  /Dest /method_throttle
  /First 817 0 R
  /Last 819 0 R
  /Next 820 0 R
  /Prev 815 0 R
  /SE 486 0 R
  /Title (method throttle)
>>
endobj

817 0 obj
<<
  /Count 1
  /Dest /control_messages
  /Next 818 0 R
  /SE 552 0 R
  /Title (control messages)
>>
endobj

818 0 obj
<<
  /Count 1
  /Dest /status_message
  /Next 819 0 R
  /Prev 817 0 R
  /SE 577 0 R
  /Title (status message)
>>
endobj

819 0 obj
<< /Count 1 /Dest /Examples /Prev 818 0 R /SE 616 0 R /Title (Examples) >>
endobj

820 0 obj
<<
  /Count 1
  /Dest /method_stable
  /Next 821 0 R
  /Prev 816 0 R
  /SE 622 0 R
  /Title (method stable)
>>
endobj

821 0 obj
<<
  /Count 1
  /Dest /method_produce
  /Next 822 0 R
  /Prev 820 0 R
  /SE 640 0 R
  /Title (method produce)
>>
endobj

822 0 obj
<<
  /Count 1
  /Dest /method_lines
  /Next 823 0 R
  /Prev 821 0 R
  /SE 646 0 R
  /Title (method lines)
>>
endobj

823 0 obj
<<
  /Count 1
  /Dest /method_words
  /Next 824 0 R
  /Prev 822 0 R
  /SE 651 0 R
  /Title (method words)
>>
endobj

824 0 obj
<<
  /Count 1
  /Dest /method_unique
  /Next 825 0 R
  /Prev 823 0 R
  /SE 655 0 R
  /Title (method unique)
>>
endobj

825 0 obj
<<
  /Count 1
  /Dest /method_repeated
  /Next 826 0 R
  /Prev 824 0 R
  /SE 663 0 R
  /Title (method repeated)
>>
endobj

826 0 obj
<<
  /Count 1
  /Dest /method_squish
  /Next 827 0 R
  /Prev 825 0 R
  /SE 678 0 R
  /Title (method squish)
>>
endobj

827 0 obj
<<
  /Count 1
  /Dest /method_max
  /Next 828 0 R
  /Prev 826 0 R
  /SE 685 0 R
  /Title (method max)
>>
endobj

828 0 obj
<<
  /Count 1
  /Dest /method_min
  /Next 829 0 R
  /Prev 827 0 R
  /SE 690 0 R
  /Title (method min)
>>
endobj

829 0 obj
<<
  /Count 1
  /Dest /method_minmax
  /Next 830 0 R
  /Prev 828 0 R
  /SE 695 0 R
  /Title (method minmax)
>>
endobj

830 0 obj
<<
  /Count 1
  /Dest /method_skip
  /Next 831 0 R
  /Prev 829 0 R
  /SE 700 0 R
  /Title (method skip)
>>
endobj

831 0 obj
<<
  /Count 1
  /Dest /method_start
  /Next 832 0 R
  /Prev 830 0 R
  /SE 707 0 R
  /Title (method start)
>>
endobj

832 0 obj
<<
  /Count 1
  /Dest /method_migrate
  /Prev 831 0 R
  /SE 713 0 R
  /Title (method migrate)
>>
endobj

833 0 obj
<<
  /Count 4
  /Dest /Methods_that_combine_supplies
  /First 834 0 R
  /Last 836 0 R
  /Next 837 0 R
  /Prev 798 0 R
  /SE 727 0 R
  /Title (Methods that combine supplies)
>>
endobj

834 0 obj
<<
  /Count 1
  /Dest /method_merge
  /Next 835 0 R
  /SE 728 0 R
  /Title (method merge)
>>
endobj

835 0 obj
<<
  /Count 1
  /Dest /method_zip
  /Next 836 0 R
  /Prev 834 0 R
  /SE 731 0 R
  /Title (method zip)
>>
endobj

836 0 obj
<<
  /Count 1
  /Dest /method_zip-latest
  /Prev 835 0 R
  /SE 741 0 R
  /Title (method zip-latest)
>>
endobj

837 0 obj
<<
  /Count 3
  /Dest /I#2fO_features_exposed_as_supplies
  /First 838 0 R
  /Last 839 0 R
  /Prev 833 0 R
  /SE 750 0 R
  /Title (I/O features exposed as supplies)
>>
endobj

838 0 obj
<<
  /Count 1
  /Dest /sub_signal
  /Next 839 0 R
  /SE 751 0 R
  /Title (sub signal)
>>
endobj

839 0 obj
<<
  /Count 1
  /Dest /method_IO::Notification.watch-path
  /Prev 838 0 R
  /SE 774 0 R
  /Title (method IO::Notification.watch-path)
>>
endobj

xref
0 840
0000000000 65535 f 
0000000015 00000 n 
0000000251 00000 n 
0000000411 00000 n 
0000003085 00000 n 
0000003400 00000 n 
0000003573 00000 n 
0000003638 00000 n 
0000003821 00000 n 
0000003925 00000 n 
0000004101 00000 n 
0000004168 00000 n 
0000004346 00000 n 
0000004408 00000 n 
0000004584 00000 n 
0000004650 00000 n 
0000004828 00000 n 
0000004895 00000 n 
0000005084 00000 n 
0000005163 00000 n 
0000005348 00000 n 
0000005431 00000 n 
0000013611 00000 n 
0000013797 00000 n 
0000014060 00000 n 
0000014234 00000 n 
0000014296 00000 n 
0000014470 00000 n 
0000014532 00000 n 
0000025075 00000 n 
0000025123 00000 n 
0000025172 00000 n 
0000025280 00000 n 
0000025367 00000 n 
0000025484 00000 n 
0000025593 00000 n 
0000025864 00000 n 
0000026048 00000 n 
0000026126 00000 n 
0000026302 00000 n 
0000026368 00000 n 
0000026544 00000 n 
0000026610 00000 n 
0000035477 00000 n 
0000035525 00000 n 
0000035574 00000 n 
0000035810 00000 n 
0000047302 00000 n 
0000047350 00000 n 
0000047399 00000 n 
0000047670 00000 n 
0000047846 00000 n 
0000047910 00000 n 
0000048092 00000 n 
0000048169 00000 n 
0000048351 00000 n 
0000048429 00000 n 
0000054738 00000 n 
0000054786 00000 n 
0000054835 00000 n 
0000055106 00000 n 
0000055275 00000 n 
0000055337 00000 n 
0000055509 00000 n 
0000055585 00000 n 
0000055752 00000 n 
0000062187 00000 n 
0000062235 00000 n 
0000062284 00000 n 
0000062520 00000 n 
0000070024 00000 n 
0000070072 00000 n 
0000070121 00000 n 
0000070385 00000 n 
0000070564 00000 n 
0000070639 00000 n 
0000070818 00000 n 
0000070893 00000 n 
0000078254 00000 n 
0000078302 00000 n 
0000078351 00000 n 
0000078622 00000 n 
0000078798 00000 n 
0000078874 00000 n 
0000079045 00000 n 
0000079107 00000 n 
0000079286 00000 n 
0000079362 00000 n 
0000085312 00000 n 
0000085360 00000 n 
0000085409 00000 n 
0000085666 00000 n 
0000085847 00000 n 
0000085912 00000 n 
0000096727 00000 n 
0000096775 00000 n 
0000096824 00000 n 
0000097060 00000 n 
0000102488 00000 n 
0000102536 00000 n 
0000102585 00000 n 
0000102847 00000 n 
0000103034 00000 n 
0000103114 00000 n 
0000111392 00000 n 
0000111441 00000 n 
0000111491 00000 n 
0000111801 00000 n 
0000111977 00000 n 
0000112082 00000 n 
0000112262 00000 n 
0000112367 00000 n 
0000112547 00000 n 
0000112654 00000 n 
0000112834 00000 n 
0000112913 00000 n 
0000113093 00000 n 
0000113198 00000 n 
0000113379 00000 n 
0000113454 00000 n 
0000113631 00000 n 
0000113706 00000 n 
0000121135 00000 n 
0000121184 00000 n 
0000121234 00000 n 
0000121496 00000 n 
0000121680 00000 n 
0000121758 00000 n 
0000129346 00000 n 
0000129395 00000 n 
0000129445 00000 n 
0000129674 00000 n 
0000130263 00000 n 
0000130312 00000 n 
0000130362 00000 n 
0000130632 00000 n 
0000130811 00000 n 
0000130875 00000 n 
0000131054 00000 n 
0000131118 00000 n 
0000135760 00000 n 
0000135809 00000 n 
0000135859 00000 n 
0000136137 00000 n 
0000136315 00000 n 
0000136394 00000 n 
0000136567 00000 n 
0000136745 00000 n 
0000136824 00000 n 
0000142812 00000 n 
0000142861 00000 n 
0000142911 00000 n 
0000142960 00000 n 
0000143010 00000 n 
0000143121 00000 n 
0000143184 00000 n 
0000143328 00000 n 
0000143499 00000 n 
0000143646 00000 n 
0000145983 00000 n 
0000146092 00000 n 
0000146173 00000 n 
0000146281 00000 n 
0000146360 00000 n 
0000146417 00000 n 
0000146528 00000 n 
0000146617 00000 n 
0000146696 00000 n 
0000146753 00000 n 
0000146886 00000 n 
0000146958 00000 n 
0000147030 00000 n 
0000147102 00000 n 
0000147211 00000 n 
0000147322 00000 n 
0000147394 00000 n 
0000147466 00000 n 
0000147621 00000 n 
0000147693 00000 n 
0000147765 00000 n 
0000147845 00000 n 
0000147902 00000 n 
0000147974 00000 n 
0000148046 00000 n 
0000148118 00000 n 
0000148200 00000 n 
0000148344 00000 n 
0000148424 00000 n 
0000148482 00000 n 
0000148554 00000 n 
0000148634 00000 n 
0000148692 00000 n 
0000148772 00000 n 
0000148830 00000 n 
0000148942 00000 n 
0000149053 00000 n 
0000149125 00000 n 
0000149205 00000 n 
0000149263 00000 n 
0000149353 00000 n 
0000149433 00000 n 
0000149491 00000 n 
0000149613 00000 n 
0000149721 00000 n 
0000149803 00000 n 
0000149892 00000 n 
0000149963 00000 n 
0000150128 00000 n 
0000150199 00000 n 
0000150270 00000 n 
0000150342 00000 n 
0000150414 00000 n 
0000150486 00000 n 
0000150558 00000 n 
0000150630 00000 n 
0000150775 00000 n 
0000150847 00000 n 
0000150919 00000 n 
0000150991 00000 n 
0000151063 00000 n 
0000151135 00000 n 
0000151324 00000 n 
0000151396 00000 n 
0000151476 00000 n 
0000151535 00000 n 
0000151607 00000 n 
0000151679 00000 n 
0000151751 00000 n 
0000151823 00000 n 
0000151895 00000 n 
0000151967 00000 n 
0000152039 00000 n 
0000152162 00000 n 
0000152234 00000 n 
0000152314 00000 n 
0000152373 00000 n 
0000152445 00000 n 
0000152528 00000 n 
0000152608 00000 n 
0000152691 00000 n 
0000152800 00000 n 
0000152883 00000 n 
0000152974 00000 n 
0000153046 00000 n 
0000153159 00000 n 
0000153271 00000 n 
0000153350 00000 n 
0000153432 00000 n 
0000153521 00000 n 
0000153600 00000 n 
0000153659 00000 n 
0000153771 00000 n 
0000153853 00000 n 
0000153964 00000 n 
0000154044 00000 n 
0000154103 00000 n 
0000154175 00000 n 
0000154288 00000 n 
0000154371 00000 n 
0000154571 00000 n 
0000154651 00000 n 
0000154710 00000 n 
0000154782 00000 n 
0000154854 00000 n 
0000154926 00000 n 
0000154998 00000 n 
0000155070 00000 n 
0000155142 00000 n 
0000155214 00000 n 
0000155286 00000 n 
0000155358 00000 n 
0000155441 00000 n 
0000155532 00000 n 
0000155604 00000 n 
0000155714 00000 n 
0000155797 00000 n 
0000155942 00000 n 
0000156014 00000 n 
0000156086 00000 n 
0000156158 00000 n 
0000156230 00000 n 
0000156302 00000 n 
0000156385 00000 n 
0000156502 00000 n 
0000156585 00000 n 
0000156665 00000 n 
0000156745 00000 n 
0000156885 00000 n 
0000156994 00000 n 
0000157076 00000 n 
0000157228 00000 n 
0000157299 00000 n 
0000157370 00000 n 
0000157441 00000 n 
0000157513 00000 n 
0000157585 00000 n 
0000157657 00000 n 
0000157740 00000 n 
0000157850 00000 n 
0000157933 00000 n 
0000158089 00000 n 
0000158161 00000 n 
0000158233 00000 n 
0000158305 00000 n 
0000158377 00000 n 
0000158449 00000 n 
0000158521 00000 n 
0000158630 00000 n 
0000158713 00000 n 
0000158825 00000 n 
0000158897 00000 n 
0000158969 00000 n 
0000159079 00000 n 
0000159162 00000 n 
0000159329 00000 n 
0000159401 00000 n 
0000159473 00000 n 
0000159545 00000 n 
0000159617 00000 n 
0000159689 00000 n 
0000159761 00000 n 
0000159833 00000 n 
0000159916 00000 n 
0000160029 00000 n 
0000160112 00000 n 
0000160279 00000 n 
0000160351 00000 n 
0000160423 00000 n 
0000160495 00000 n 
0000160567 00000 n 
0000160639 00000 n 
0000160711 00000 n 
0000160783 00000 n 
0000160866 00000 n 
0000160975 00000 n 
0000161057 00000 n 
0000161231 00000 n 
0000161302 00000 n 
0000161373 00000 n 
0000161444 00000 n 
0000161515 00000 n 
0000161595 00000 n 
0000161654 00000 n 
0000161726 00000 n 
0000161798 00000 n 
0000161870 00000 n 
0000161953 00000 n 
0000162066 00000 n 
0000162149 00000 n 
0000162294 00000 n 
0000162366 00000 n 
0000162438 00000 n 
0000162510 00000 n 
0000162582 00000 n 
0000162662 00000 n 
0000162721 00000 n 
0000162804 00000 n 
0000162916 00000 n 
0000162996 00000 n 
0000163079 00000 n 
0000163170 00000 n 
0000163250 00000 n 
0000163309 00000 n 
0000163392 00000 n 
0000163524 00000 n 
0000163638 00000 n 
0000163720 00000 n 
0000163799 00000 n 
0000163881 00000 n 
0000163991 00000 n 
0000164073 00000 n 
0000164152 00000 n 
0000164234 00000 n 
0000164343 00000 n 
0000164426 00000 n 
0000164506 00000 n 
0000164614 00000 n 
0000164697 00000 n 
0000164777 00000 n 
0000164891 00000 n 
0000164974 00000 n 
0000165171 00000 n 
0000165243 00000 n 
0000165315 00000 n 
0000165395 00000 n 
0000165454 00000 n 
0000165526 00000 n 
0000165598 00000 n 
0000165670 00000 n 
0000165742 00000 n 
0000165814 00000 n 
0000165891 00000 n 
0000165950 00000 n 
0000166030 00000 n 
0000166089 00000 n 
0000166172 00000 n 
0000166285 00000 n 
0000166367 00000 n 
0000166476 00000 n 
0000166547 00000 n 
0000166618 00000 n 
0000166739 00000 n 
0000166810 00000 n 
0000166882 00000 n 
0000166954 00000 n 
0000167064 00000 n 
0000167147 00000 n 
0000167238 00000 n 
0000167310 00000 n 
0000167393 00000 n 
0000167502 00000 n 
0000167585 00000 n 
0000167676 00000 n 
0000167748 00000 n 
0000167831 00000 n 
0000167942 00000 n 
0000168025 00000 n 
0000168137 00000 n 
0000168209 00000 n 
0000168281 00000 n 
0000168412 00000 n 
0000168534 00000 n 
0000168606 00000 n 
0000168678 00000 n 
0000168750 00000 n 
0000168861 00000 n 
0000168944 00000 n 
0000169024 00000 n 
0000169133 00000 n 
0000169212 00000 n 
0000169294 00000 n 
0000169383 00000 n 
0000169462 00000 n 
0000169521 00000 n 
0000169603 00000 n 
0000169710 00000 n 
0000169781 00000 n 
0000169853 00000 n 
0000169936 00000 n 
0000170046 00000 n 
0000170129 00000 n 
0000170220 00000 n 
0000170300 00000 n 
0000170359 00000 n 
0000170442 00000 n 
0000170576 00000 n 
0000170648 00000 n 
0000170720 00000 n 
0000170792 00000 n 
0000170864 00000 n 
0000170947 00000 n 
0000171027 00000 n 
0000171138 00000 n 
0000171221 00000 n 
0000171366 00000 n 
0000171438 00000 n 
0000171510 00000 n 
0000171582 00000 n 
0000171654 00000 n 
0000171726 00000 n 
0000171809 00000 n 
0000171919 00000 n 
0000172001 00000 n 
0000172142 00000 n 
0000172213 00000 n 
0000172292 00000 n 
0000172351 00000 n 
0000172422 00000 n 
0000172493 00000 n 
0000172573 00000 n 
0000172632 00000 n 
0000172715 00000 n 
0000172827 00000 n 
0000172910 00000 n 
0000173001 00000 n 
0000173073 00000 n 
0000173156 00000 n 
0000173244 00000 n 
0000173366 00000 n 
0000173477 00000 n 
0000173560 00000 n 
0000173651 00000 n 
0000173731 00000 n 
0000173790 00000 n 
0000173903 00000 n 
0000173986 00000 n 
0000174066 00000 n 
0000174180 00000 n 
0000174260 00000 n 
0000174343 00000 n 
0000174434 00000 n 
0000174488 00000 n 
0000174577 00000 n 
0000174648 00000 n 
0000174734 00000 n 
0000174812 00000 n 
0000174895 00000 n 
0000174975 00000 n 
0000175055 00000 n 
0000175197 00000 n 
0000175280 00000 n 
0000175360 00000 n 
0000175440 00000 n 
0000175523 00000 n 
0000175603 00000 n 
0000175683 00000 n 
0000175766 00000 n 
0000175847 00000 n 
0000175928 00000 n 
0000176011 00000 n 
0000176092 00000 n 
0000176173 00000 n 
0000176256 00000 n 
0000176337 00000 n 
0000176418 00000 n 
0000176501 00000 n 
0000176582 00000 n 
0000176663 00000 n 
0000176746 00000 n 
0000176827 00000 n 
0000176908 00000 n 
0000176991 00000 n 
0000177072 00000 n 
0000177153 00000 n 
0000177244 00000 n 
0000177316 00000 n 
0000177396 00000 n 
0000177476 00000 n 
0000177599 00000 n 
0000177671 00000 n 
0000177743 00000 n 
0000177815 00000 n 
0000177906 00000 n 
0000178015 00000 n 
0000178095 00000 n 
0000178175 00000 n 
0000178266 00000 n 
0000178338 00000 n 
0000178450 00000 n 
0000178522 00000 n 
0000178602 00000 n 
0000178661 00000 n 
0000178784 00000 n 
0000178856 00000 n 
0000178965 00000 n 
0000179074 00000 n 
0000179197 00000 n 
0000179269 00000 n 
0000179341 00000 n 
0000179413 00000 n 
0000179525 00000 n 
0000179597 00000 n 
0000179669 00000 n 
0000179784 00000 n 
0000179875 00000 n 
0000179947 00000 n 
0000180030 00000 n 
0000180112 00000 n 
0000180190 00000 n 
0000180270 00000 n 
0000180350 00000 n 
0000180433 00000 n 
0000180515 00000 n 
0000180593 00000 n 
0000180673 00000 n 
0000180764 00000 n 
0000180836 00000 n 
0000180919 00000 n 
0000181000 00000 n 
0000181078 00000 n 
0000181157 00000 n 
0000181236 00000 n 
0000181319 00000 n 
0000181400 00000 n 
0000181478 00000 n 
0000181557 00000 n 
0000181646 00000 n 
0000181717 00000 n 
0000181829 00000 n 
0000181908 00000 n 
0000181991 00000 n 
0000182073 00000 n 
0000182151 00000 n 
0000182231 00000 n 
0000182311 00000 n 
0000182394 00000 n 
0000182476 00000 n 
0000182554 00000 n 
0000182634 00000 n 
0000182725 00000 n 
0000182797 00000 n 
0000182880 00000 n 
0000182962 00000 n 
0000183040 00000 n 
0000183120 00000 n 
0000183200 00000 n 
0000183283 00000 n 
0000183365 00000 n 
0000183443 00000 n 
0000183523 00000 n 
0000183603 00000 n 
0000183686 00000 n 
0000183768 00000 n 
0000183846 00000 n 
0000183926 00000 n 
0000184006 00000 n 
0000184089 00000 n 
0000184171 00000 n 
0000184249 00000 n 
0000184329 00000 n 
0000184409 00000 n 
0000184492 00000 n 
0000184574 00000 n 
0000184652 00000 n 
0000184732 00000 n 
0000184823 00000 n 
0000184895 00000 n 
0000185002 00000 n 
0000185082 00000 n 
0000185165 00000 n 
0000185245 00000 n 
0000185336 00000 n 
0000185391 00000 n 
0000185503 00000 n 
0000185586 00000 n 
0000185696 00000 n 
0000185767 00000 n 
0000185838 00000 n 
0000185972 00000 n 
0000186043 00000 n 
0000186115 00000 n 
0000186187 00000 n 
0000186259 00000 n 
0000186340 00000 n 
0000186424 00000 n 
0000186570 00000 n 
0000186642 00000 n 
0000186714 00000 n 
0000186786 00000 n 
0000186858 00000 n 
0000186930 00000 n 
0000187044 00000 n 
0000187128 00000 n 
0000187220 00000 n 
0000187300 00000 n 
0000187361 00000 n 
0000187445 00000 n 
0000187557 00000 n 
0000187641 00000 n 
0000187754 00000 n 
0000187826 00000 n 
0000187898 00000 n 
0000188010 00000 n 
0000188094 00000 n 
0000188175 00000 n 
0000188258 00000 n 
0000188370 00000 n 
0000188453 00000 n 
0000188584 00000 n 
0000188655 00000 n 
0000188726 00000 n 
0000188805 00000 n 
0000188866 00000 n 
0000188938 00000 n 
0000189053 00000 n 
0000189137 00000 n 
0000189261 00000 n 
0000189333 00000 n 
0000189405 00000 n 
0000189485 00000 n 
0000189546 00000 n 
0000189630 00000 n 
0000189722 00000 n 
0000189802 00000 n 
0000189863 00000 n 
0000189973 00000 n 
0000190096 00000 n 
0000190176 00000 n 
0000190237 00000 n 
0000190350 00000 n 
0000190434 00000 n 
0000190558 00000 n 
0000190630 00000 n 
0000190702 00000 n 
0000190782 00000 n 
0000190843 00000 n 
0000190953 00000 n 
0000191037 00000 n 
0000191129 00000 n 
0000191209 00000 n 
0000191270 00000 n 
0000191380 00000 n 
0000191464 00000 n 
0000191556 00000 n 
0000191636 00000 n 
0000191697 00000 n 
0000191809 00000 n 
0000191892 00000 n 
0000191982 00000 n 
0000192061 00000 n 
0000192122 00000 n 
0000192232 00000 n 
0000192315 00000 n 
0000192437 00000 n 
0000192508 00000 n 
0000192580 00000 n 
0000192652 00000 n 
0000192736 00000 n 
0000192848 00000 n 
0000192932 00000 n 
0000193013 00000 n 
0000193094 00000 n 
0000193186 00000 n 
0000193258 00000 n 
0000193372 00000 n 
0000193456 00000 n 
0000193602 00000 n 
0000193674 00000 n 
0000193746 00000 n 
0000193818 00000 n 
0000193890 00000 n 
0000193962 00000 n 
0000194054 00000 n 
0000194126 00000 n 
0000194207 00000 n 
0000194291 00000 n 
0000194371 00000 n 
0000194454 00000 n 
0000194582 00000 n 
0000194693 00000 n 
0000194776 00000 n 
0000194856 00000 n 
0000194965 00000 n 
0000195045 00000 n 
0000195128 00000 n 
0000195261 00000 n 
0000195369 00000 n 
0000195449 00000 n 
0000195510 00000 n 
0000195582 00000 n 
0000195691 00000 n 
0000195772 00000 n 
0000195889 00000 n 
0000195970 00000 n 
0000196054 00000 n 
0000196189 00000 n 
0000196298 00000 n 
0000196378 00000 n 
0000196439 00000 n 
0000196511 00000 n 
0000196620 00000 n 
0000196751 00000 n 
0000196860 00000 n 
0000196943 00000 n 
0000197033 00000 n 
0000197104 00000 n 
0000197187 00000 n 
0000197267 00000 n 
0000197352 00000 n 
0000197436 00000 n 
0000197557 00000 n 
0000197629 00000 n 
0000197706 00000 n 
0000197767 00000 n 
0000197847 00000 n 
0000197908 00000 n 
0000198073 00000 n 
0000198196 00000 n 
0000198276 00000 n 
0000198337 00000 n 
0000198409 00000 n 
0000198481 00000 n 
0000198553 00000 n 
0000198625 00000 n 
0000198697 00000 n 
0000198831 00000 n 
0000198915 00000 n 
0000199007 00000 n 
0000199079 00000 n 
0000199163 00000 n 
0000206018 00000 n 
0000206202 00000 n 
0000206309 00000 n 
0000206416 00000 n 
0000206582 00000 n 
0000206697 00000 n 
0000206828 00000 n 
0000206959 00000 n 
0000207084 00000 n 
0000207207 00000 n 
0000207427 00000 n 
0000207536 00000 n 
0000207661 00000 n 
0000207784 00000 n 
0000207909 00000 n 
0000208040 00000 n 
0000208165 00000 n 
0000208296 00000 n 
0000208409 00000 n 
0000208614 00000 n 
0000208733 00000 n 
0000208860 00000 n 
0000208985 00000 n 
0000209106 00000 n 
0000209239 00000 n 
0000209372 00000 n 
0000209497 00000 n 
0000209620 00000 n 
0000209747 00000 n 
0000209874 00000 n 
0000209999 00000 n 
0000210124 00000 n 
0000210251 00000 n 
0000210378 00000 n 
0000210507 00000 n 
0000210634 00000 n 
0000210765 00000 n 
0000210931 00000 n 
0000211050 00000 n 
0000211181 00000 n 
0000211274 00000 n 
0000211403 00000 n 
0000211534 00000 n 
0000211661 00000 n 
0000211788 00000 n 
0000211917 00000 n 
0000212050 00000 n 
0000212179 00000 n 
0000212302 00000 n 
0000212425 00000 n 
0000212554 00000 n 
0000212679 00000 n 
0000212806 00000 n 
0000212921 00000 n 
0000213115 00000 n 
0000213226 00000 n 
0000213349 00000 n 
0000213470 00000 n 
0000213656 00000 n 
0000213763 00000 n 
trailer
<<
  /ID [ <128a6592ec1ad595afc5a975f8cc5369> <128a6592ec1ad595afc5a975f8cc5369> ]
  /Info 1 0 R
  /Root 2 0 R
  /Size 840
>>
startxref
213918
%%EOF