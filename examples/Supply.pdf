%PDF-1.3
%¥±ë¼
1 0 obj
<<
  /CreationDate (D:20211220084909+13'00')
  /Creator (PDF::Class-0.4.18; PDF::Content-0.5.13; PDF-0.4.17; Raku-6.d; PDF::Tags-0.0.10; Pod::To::PDF-0.0.1)
  /Producer (PDF::API6-0.2.4)
  /Title (class Supply)
>>
endobj

2 0 obj
<<
  /Type /Catalog
  /Dests 3 0 R
  /Lang (en)
  /MarkInfo << /Marked true >>
  /Outlines 153 0 R
  /Pages 22 0 R
  /StructTreeRoot 2127 0 R
>>
endobj

3 0 obj
<<
  /Asynchronous_data_stream_with_multiple_subscribers [ 4 0 R /FitBH 712.4 ]
  /Examples [ 98 0 R /FitBH 112.9 ]
  /I#2fO_features_exposed_as_supplies [ 142 0 R /FitBH 774 ]
  /Methods_that_combine_supplies [ 134 0 R /FitBH 774 ]
  /Methods_that_return_Taps [ 23 0 R /FitBH 774 ]
  /Methods_that_return_another_Supply [ 61 0 R /FitBH 774 ]
  /Methods_that_wait_until_the_supply_is_done [ 47 0 R /FitBH 774 ]
  /Utility_methods [ 35 0 R /FitBH 774 ]
  /class_Supply [ 4 0 R /FitBH 774 ]
  /control_messages [ 98 0 R /FitBH 737.7 ]
  /method_Capture [ 35 0 R /FitBH 712.4 ]
  /method_Channel [ 35 0 R /FitBH 589.2 ]
  /method_IO::Notification.watch-path [ 142 0 R /FitBH 415.4 ]
  /method_Promise [ 35 0 R /FitBH 477 ]
  /method_Seq [ 47 0 R /FitBH 371.4 ]
  /method_act [ 23 0 R /FitBH 261.4 ]
  /method_batch [ 69 0 R /FitBH 184.4 ]
  /method_collate [ 51 0 R /FitBH 512.2 ]
  /method_delayed [ 81 0 R /FitBH 215.2 ]
  /method_do [ 61 0 R /FitBH 292.2 ]
  /method_elems [ 73 0 R /FitBH 769.6 ]
  /method_first [ 73 0 R /FitBH 144.8 ]
  /method_flat [ 61 0 R /FitBH 393.4 ]
  /method_from-list [ 61 0 R /FitBH 712.4 ]
  /method_grab [ 47 0 R /FitBH 270.2 ]
  /method_grep [ 69 0 R /FitBH 510 ]
  /method_head [ 73 0 R /FitBH 657.4 ]
  /method_interval [ 69 0 R /FitBH 655.2 ]
  /method_lines [ 106 0 R /FitBH 769.6 ]
  /method_list [ 47 0 R /FitBH 483.6 ]
  /method_live [ 35 0 R /FitBH 250.4 ]
  /method_map [ 69 0 R /FitBH 347.2 ]
  /method_max [ 120 0 R /FitBH 769.6 ]
  /method_merge [ 134 0 R /FitBH 712.4 ]
  /method_migrate [ 130 0 R /FitBH 769.6 ]
  /method_min [ 120 0 R /FitBH 646.4 ]
  /method_minmax [ 120 0 R /FitBH 523.2 ]
  /method_on-close [ 61 0 R /FitBH 180 ]
  /method_produce [ 100 0 R /FitBH 173.4 ]
  /method_reduce [ 51 0 R /FitBH 345 ]
  /method_repeated [ 106 0 R /FitBH 378 ]
  /method_reverse [ 47 0 R /FitBH 114 ]
  /method_rotate [ 81 0 R /FitBH 485.8 ]
  /method_rotor [ 81 0 R /FitBH 316.4 ]
  /method_schedule-on [ 35 0 R /FitBH 111.8 ]
  /method_share [ 61 0 R /FitBH 576 ]
  /method_skip [ 120 0 R /FitBH 411 ]
  /method_sort [ 51 0 R /FitBH 679.4 ]
  /method_split [ 81 0 R /FitBH 661.8 ]
  /method_squish [ 106 0 R /FitBH 197.6 ]
  /method_stable [ 100 0 R /FitBH 518.8 ]
  /method_start [ 120 0 R /FitBH 237.2 ]
  /method_tail [ 73 0 R /FitBH 406.6 ]
  /method_tap [ 23 0 R /FitBH 712.4 ]
  /method_throttle [ 81 0 R /FitBH 114 ]
  /method_unique [ 106 0 R /FitBH 501.2 ]
  /method_wait [ 47 0 R /FitBH 712.4 ]
  /method_words [ 106 0 R /FitBH 657.4 ]
  /method_zip [ 134 0 R /FitBH 600.2 ]
  /method_zip-latest [ 134 0 R /FitBH 422 ]
  /status_message [ 98 0 R /FitBH 485.8 ]
  /sub_signal [ 142 0 R /FitBH 712.4 ]
>>
endobj

4 0 obj
<<
  /Type /Page
  /Annots [ 5 0 R 7 0 R 9 0 R 11 0 R 13 0 R 15 0 R 17 0 R 19 0 R ]
  /Contents 21 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 150 0 R /GS2 151 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R /F4 152 0 R >>
  >>
  /StructParents 0
>>
endobj

5 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 6 0 R
  /Border [ 0 0 0 ]
  /Contents (Channel)
  /P 4 0 R
  /Rect [ 255.17 625.8 292.5 640.8 ]
  /StructParent 1
>>
endobj

6 0 obj
<< /Type /Action /S /URI /URI (/type/Channel) >>
endobj

7 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 8 0 R
  /Border [ 0 0 0 ]
  /Contents (Observer Pattern)
  /P 4 0 R
  /Rect [ 182.97 592.8 254.45 607.8 ]
  /StructParent 2
>>
endobj

8 0 obj
<<
  /Type /Action
  /S /URI
  /URI (https://en.wikipedia.org/wiki/Observer_pattern)
>>
endobj

9 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 10 0 R
  /Border [ 0 0 0 ]
  /Contents (Supplier)
  /P 4 0 R
  /Rect [ 194.99 482.8 232.88 497.8 ]
  /StructParent 3
>>
endobj

10 0 obj
<< /Type /Action /S /URI /URI (/type/Supplier) >>
endobj

11 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 12 0 R
  /Border [ 0 0 0 ]
  /Contents (live method)
  /P 4 0 R
  /Rect [ 38.55 397 90.05 412 ]
  /StructParent 4
>>
endobj

12 0 obj
<< /Type /Action /S /GoTo /D /method_live >>
endobj

13 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 14 0 R
  /Border [ 0 0 0 ]
  /Contents (interval)
  /P 4 0 R
  /Rect [ 327.7 397 362.25 412 ]
  /StructParent 5
>>
endobj

14 0 obj
<< /Type /Action /S /GoTo /D /method_interval >>
endobj

15 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 16 0 R
  /Border [ 0 0 0 ]
  /Contents (from-list)
  /P 4 0 R
  /Rect [ 368.25 397 407.25 412 ]
  /StructParent 6
>>
endobj

16 0 obj
<< /Type /Action /S /GoTo /D /method_from-list >>
endobj

17 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 18 0 R
  /Border [ 0 0 0 ]
  /Contents (Supplier::Preserving)
  /P 4 0 R
  /Rect [ 349.12 375 435.34 390 ]
  /StructParent 7
>>
endobj

18 0 obj
<< /Type /Action /S /URI /URI (/type/Supplier::Preserving) >>
endobj

19 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 20 0 R
  /Border [ 0 0 0 ]
  /Contents (concurrency page)
  /P 4 0 R
  /Rect [ 171.86 353 246.66 368 ]
  /StructParent 8
>>
endobj

20 0 obj
<< /Type /Action /S /URI /URI (/language/concurrency#Supplies) >>
endobj

21 0 obj
<< /Length 7965 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (class Supply) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    125.04 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (Asynchronous data stream with multiple subscribers) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (    class Supply does Awaitable {}) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 648.8 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    (A supply is a thread-safe, asynchronous data stream like a ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 4 >> BDC
    BT
      1 0 0 1 20 628.8 Tm
      [ -23717 (Channel) ] TJ
    ET
    q
      0.5 w
      257.17 627.8 m
      290.5 627.8 l
      S
    Q
  EMC
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    [ -27300 (, but it can have multiple subscribers \() ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F4 10 Tf
    [ -42826 (taps) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    [ -44743 (\) that all get the same values) ] TJ
    11 TL
    T*
    (flowing through the supply.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    (It is a thread-safe implementation of the ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 9 >> BDC
    BT
      1 0 0 1 20 595.8 Tm
      [ -16497 (Observer Pattern) ] TJ
    ET
    q
      0.5 w
      184.97 594.8 m
      252.45 594.8 l
      S
    Q
  EMC
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    [ -23495 (, and central to supporting reactive programming in Raku.) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    (There are two types of Supplies: ) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F2 10 Tf
    [ -13470 (live) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F3 10 Tf
    [ -16470 ( and ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F2 10 Tf
    [ -18664 (on demand) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F3 10 Tf
    [ -24664 (. When tapping into a ) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F2 10 Tf
    [ -33802 (live) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F3 10 Tf
    [ -36802 ( supply, the tap will only see values that are) ] TJ
    T*
    (flowing through the supply ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 562.8 Tm
    /F1 10 Tf
    [ -11361 (after) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 562.8 Tm
    /F3 10 Tf
    [ -13665 ( the tap has been created. Such supplies are normally infinite in nature, such as mouse movements. Closing) ] TJ
    T*
    (such a tap does not stop mouse events from occurring, it just means that the values will go by unseen. All tappers see the same flow of values.) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 529.8 Tm
    (A tap on an ) Tj
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 529.8 Tm
    /F2 10 Tf
    [ -5138 (on demand) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 529.8 Tm
    /F3 10 Tf
    [ -11138 ( supply will initiate the production of values, and tapping the supply again may result in a new set of values. For) ] TJ
    T*
    (example, ) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 518.8 Tm
    /F2 10 Tf
    [ -4138 (Supply.interval) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 518.8 Tm
    /F3 10 Tf
    [ -13738 ( produces a fresh timer with the appropriate interval each time it is tapped. If the tap is closed, the timer) ] TJ
    T*
    (simply stops emitting values to that tap.) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    (A ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F2 10 Tf
    [ -1222 (live) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F3 10 Tf
    [ -4222 ( ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F2 10 Tf
    [ -4722 (Supply) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F3 10 Tf
    [ -8922 ( is obtained from the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 30 >> BDC
    BT
      1 0 0 1 20 485.8 Tm
      [ -17699 (Supplier) ] TJ
    ET
    q
      0.5 w
      196.99 484.8 m
      230.88 484.8 l
      S
    Q
  EMC
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    [ -21338 ( factory method ) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F2 10 Tf
    [ -28170 (Supply) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F3 10 Tf
    [ -32370 (. New values are emitted by calling ) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F2 10 Tf
    [ -47006 (emit) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F3 10 Tf
    [ -50006 ( on the ) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 485.8 Tm
    /F2 10 Tf
    [ -53228 ] TJ
    T*
    (Supplier) Tj
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 474.8 Tm
    /F3 10 Tf
    [ -5400 ( object.) ] TJ
  ET
EMC
/Code << /MCID 38 >> BDC
  BT
    1 0 0 1 30 457.2 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply = $supplier.Supply;) Tj
    T*
    ($supply.tap\(-> $v { say "$v" }\);) Tj
    T*
    ($supplier.emit\(42\);  Will cause the tap to output "42") Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 420 562 48 re
  B
Q
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    (The ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 40 >> BDC
    BT
      1 0 0 1 20 400 Tm
      [ -2055 (live method) ] TJ
    ET
    q
      0.5 w
      40.55 399 m
      88.05 399 l
      S
    Q
  EMC
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 400 Tm
    [ -7055 ( returns ) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F2 10 Tf
    [ -10582 (True) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    [ -13582 ( on live supplies. Factory methods such as ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 44 >> BDC
    BT
      1 0 0 1 20 400 Tm
      [ -30970 (interval) ] TJ
    ET
    q
      0.5 w
      329.7 399 m
      360.25 399 l
      S
    Q
  EMC
Q
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 400 Tm
    [ -34275 (, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 46 >> BDC
    BT
      1 0 0 1 20 400 Tm
      [ -35025 (from-list) ] TJ
    ET
    q
      0.5 w
      370.25 399 m
      405.25 399 l
      S
    Q
  EMC
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 400 Tm
    [ -38775 ( will return ) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F4 10 Tf
    [ -43719 (on demand) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    [ -48385 ( supplies.) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 378 Tm
    (A live ) Tj
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 378 Tm
    /F2 10 Tf
    [ -2972 (Supply) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 378 Tm
    /F3 10 Tf
    [ -7172 ( that keeps values until tapped the first time can be created with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 53 >> BDC
    BT
      1 0 0 1 20 378 Tm
      [ -33112 (Supplier::Preserving) ] TJ
    ET
    q
      0.5 w
      351.12 377 m
      433.34 377 l
      S
    Q
  EMC
Q
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 378 Tm
    [ -41584 (.) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 356 Tm
    (Further examples can be found in the ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 56 >> BDC
    BT
      1 0 0 1 20 356 Tm
      [ -15386 (concurrency page) ] TJ
    ET
    q
      0.5 w
      173.86 355 m
      244.66 355 l
      S
    Q
  EMC
Q
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 356 Tm
    [ -22716 (.) ] TJ
  ET
EMC
endstream
endobj

22 0 obj
<<
  /Type /Pages
  /Count 18
  /Kids [ 4 0 R 23 0 R 35 0 R 45 0 R 47 0 R 51 0 R 61 0 R 69 0 R 73 0 R 81 0 R 92 0 R 98 0 R 100 0 R 106 0 R 120 0 R 130 0 R 134 0 R 142 0 R ]
>>
endobj

23 0 obj
<<
  /Type /Page
  /Annots [ 24 0 R 26 0 R ]
  /Contents 28 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 29 0 R /GS2 30 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 9
>>
endobj

24 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 25 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 23 0 R
  /Rect [ 181.02 467.4 200.57 482.4 ]
  /StructParent 10
>>
endobj

25 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

26 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 27 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 23 0 R
  /Rect [ 182.81 412.4 202.36 427.4 ]
  /StructParent 11
>>
endobj

27 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

28 0 obj
<< /Length 9070 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that return Taps) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    241.66 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method tap) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method tap\(Supply:D: &emit = -> $ { },) Tj
    8.8 TL
    T*
    (        :&done = -> {},) Tj
    T*
    (        :&quit = -> $ex { $ex.throw },) Tj
    T*
    (        :&tap = -> $ {} \)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 622.4 562 48 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 602.4 Tm
    /F3 10 Tf
    (Creates a new tap \(a kind of subscription if you will\), in addition to all existing taps. The first positional argument is a piece of code that will) Tj
    11 TL
    T*
    (be called when a new value becomes available through the ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F2 10 Tf
    [ -23966 (emit) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 591.4 Tm
    /F3 10 Tf
    [ -26966 ( call.) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F2 10 Tf
    [ -2055 (&done) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F3 10 Tf
    [ -5655 ( callback can be called in a number of cases: if a supply block is being tapped, when a ) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F2 10 Tf
    [ -40564 (done) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F3 10 Tf
    [ -43564 ( routine is reached; if a supply) ] TJ
    T*
    (block is being tapped, it will be automatically triggered if the supply block reaches the end; if the ) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F2 10 Tf
    [ -39384 (done) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F3 10 Tf
    [ -42384 ( method is called on the parent ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F2 10 Tf
    [ -55160 ] TJ
    T*
    (Supplier) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F3 10 Tf
    [ -5400 ( \(in the case of a supply block, if there are multiple Suppliers referenced by ) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F2 10 Tf
    [ -36032 (whenever) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F3 10 Tf
    [ -41432 (, they must all have their ) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F2 10 Tf
    [ -51820 (done) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F3 10 Tf
    [ -54820 ] TJ
    T*
    (method invoked for this to trigger the ) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F2 10 Tf
    [ -15499 (&done) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F3 10 Tf
    [ -19099 ( callback of the tap as the block will then reach its end\).) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    /F2 10 Tf
    [ -2055 (&quit) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    /F3 10 Tf
    [ -5655 ( callback is called if the tap is on a supply block which exits with an error. It is also called if the ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    /F2 10 Tf
    [ -44455 (quit) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    /F3 10 Tf
    [ -47455 ( method is invoked on) ] TJ
    T*
    (the parent ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F2 10 Tf
    [ -4471 (Supplier) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F3 10 Tf
    [ -9871 ( \(in the case of a supply block any one ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F2 10 Tf
    [ -25729 (Supplier) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F3 10 Tf
    [ -31129 ( quitting with an uncaught exception will call the ) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F2 10 Tf
    [ -51239 (&quit) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 503.4 Tm
    /F3 10 Tf
    [ -54839 ] TJ
    T*
    (callback as the block will exit with an error\). The error is passed as a parameter to the callback.) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 10 Tf
    [ -2055 (&tap) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F3 10 Tf
    [ -5055 ( callback is called once the ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 35 >> BDC
    BT
      1 0 0 1 20 470.4 Tm
      [ -16302 (Tap) ] TJ
    ET
    q
      0.5 w
      183.02 469.4 m
      198.57 469.4 l
      S
    Q
  EMC
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    [ -18107 ( object is created, which is passed as a parameter to the callback. The callback is called ahead of ) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 470.4 Tm
    /F2 10 Tf
    [ -57096 ] TJ
    T*
    (emit) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -3000 (/) ] TJ
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 10 Tf
    [ -3528 (done) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -6528 (/) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 10 Tf
    [ -7056 (quit) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -10056 (, providing a reliable way to get the ) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 10 Tf
    [ -24776 (Tap) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -27176 ( object. One case where this is useful is when the ) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F2 10 Tf
    [ -47311 (Supply) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F3 10 Tf
    [ -51511 ( begins) ] TJ
    T*
    (emitting values synchronously, since the call to ) Tj
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    /F2 10 Tf
    [ -19471 (.tap) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    /F3 10 Tf
    [ -22471 ( won't return the ) ] TJ
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    /F2 10 Tf
    [ -29511 (Tap) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    /F3 10 Tf
    [ -31911 ( object until it is done emitting, preventing it from being) ] TJ
    T*
    (stopped if needed.) Tj
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    (Method ) Tj
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F2 10 Tf
    [ -3611 (tap) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F3 10 Tf
    [ -6011 ( returns an object of type ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 54 >> BDC
    BT
      1 0 0 1 20 415.4 Tm
      [ -16481 (Tap) ] TJ
    ET
    q
      0.5 w
      184.81 414.4 m
      200.36 414.4 l
      S
    Q
  EMC
Q
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    [ -18286 (, on which you can call the ) ] TJ
  ET
EMC
/P << /MCID 56 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F2 10 Tf
    [ -29534 (close) ] TJ
  ET
EMC
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 415.4 Tm
    /F3 10 Tf
    [ -33134 ( method to cancel the subscription.) ] TJ
  ET
EMC
/Code << /MCID 58 >> BDC
  BT
    1 0 0 1 30 397.8 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(0 .. 5\);) Tj
    8.8 TL
    T*
    (my $t = $s.tap\(-> $v { say $v }, done => { say "no more ticks" }\);) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 378.2 562 30.4 re
  B
Q
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 358.2 Tm
    /F3 10 Tf
    (Produces:) Tj
  ET
EMC
/Code << /MCID 60 >> BDC
  BT
    1 0 0 1 30 340.6 Tm
    /F2 8 Tf
    (0) Tj
    T*
    (1) Tj
    T*
    (2) Tj
    T*
    (3) Tj
    T*
    (4) Tj
    T*
    (5) Tj
    T*
    (no more ticks) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 277 562 74.4 re
  B
Q
/H2 << /MCID 61 >> BDC
  BT
    1 0 0 1 20 243.8 Tm
    /F1 16 Tf
    (method act) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 62 >> BDC
  BT
    1 0 0 1 30 208.6 Tm
    /F2 8 Tf
    (method act\(Supply:D: &actor, *%others\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 197.8 562 21.6 re
  B
Q
/P << /MCID 63 >> BDC
  BT
    1 0 0 1 20 177.8 Tm
    /F3 10 Tf
    (Creates a tap on the given supply with the given code. Differently from ) Tj
  ET
EMC
/P << /MCID 64 >> BDC
  BT
    1 0 0 1 20 177.8 Tm
    /F2 10 Tf
    [ -29023 (tap) ] TJ
  ET
EMC
/P << /MCID 65 >> BDC
  BT
    1 0 0 1 20 177.8 Tm
    /F3 10 Tf
    [ -31423 (, the given code is guaranteed to be executed by only one thread) ] TJ
    11 TL
    T*
    (at a time.) Tj
  ET
EMC
endstream
endobj

29 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

30 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

31 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Bold
  /Encoding /WinAnsiEncoding
>>
endobj

32 0 obj
<< /Type /Font /Subtype /Type1 /BaseFont /Courier /Encoding 33 0 R >>
endobj

33 0 obj
<<
  /Type /Encoding
  /BaseEncoding /WinAnsiEncoding
  /Differences [ 1 /numbersign /infinity ]
>>
endobj

34 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Roman
  /Encoding /WinAnsiEncoding
>>
endobj

35 0 obj
<<
  /Type /Page
  /Annots [ 36 0 R 38 0 R 40 0 R ]
  /Contents 42 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 43 0 R /GS2 44 0 R >>
    /Font << /F1 31 0 R /F2 34 0 R /F3 32 0 R >>
  >>
  /StructParents 12
>>
endobj

36 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 37 0 R
  /Border [ 0 0 0 ]
  /Contents (.List.Capture)
  /P 35 0 R
  /Rect [ 106.33 603.8 162.55 618.8 ]
  /StructParent 13
>>
endobj

37 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_Capture) >>
endobj

38 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 39 0 R
  /Border [ 0 0 0 ]
  /Contents (Channel)
  /P 35 0 R
  /Rect [ 61.05 502.6 98.38 517.6 ]
  /StructParent 14
>>
endobj

39 0 obj
<< /Type /Action /S /URI /URI (/type/Channel) >>
endobj

40 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 41 0 R
  /Border [ 0 0 0 ]
  /Contents (Promise)
  /P 35 0 R
  /Rect [ 61.05 390.4 97.83 405.4 ]
  /StructParent 15
>>
endobj

41 0 obj
<< /Type /Action /S /URI /URI (/type/Promise) >>
endobj

42 0 obj
<< /Length 7882 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Utility methods) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    151.66 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method Capture) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 655.2 Tm
    /F2 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 3 >> BDC
  BT
    1 0 0 1 30 637.6 Tm
    /F3 8 Tf
    (method Capture\(Supply:D: --> Capture:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 626.8 562 21.6 re
  B
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 606.8 Tm
    /F2 10 Tf
    (Equivalent to calling ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 5 >> BDC
    BT
      1 0 0 1 20 606.8 Tm
      [ -8833 (.List.Capture) ] TJ
    ET
    q
      0.5 w
      108.33 605.8 m
      160.55 605.8 l
      S
    Q
  EMC
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 606.8 Tm
    [ -14305 ( on the invocant.) ] TJ
  ET
EMC
/H2 << /MCID 7 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F1 16 Tf
    (method Channel) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 536.4 Tm
    /F3 8 Tf
    (method Channel\(Supply:D: --> Channel:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 525.6 562 21.6 re
  B
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    /F2 10 Tf
    (Returns a ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 505.6 Tm
      [ -4305 (Channel) ] TJ
    ET
    q
      0.5 w
      63.05 504.6 m
      96.38 504.6 l
      S
    Q
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    [ -7888 ( object that will receive all future values from the supply, and will be ) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    /F3 10 Tf
    [ -35995 (close) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    /F2 10 Tf
    [ -39595 (d when the Supply is done, and quit \(shut) ] TJ
    11 TL
    T*
    (down with error\) when the supply is quit.) Tj
  ET
EMC
/H2 << /MCID 14 >> BDC
  BT
    1 0 0 1 20 459.4 Tm
    /F1 16 Tf
    (method Promise) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 30 424.2 Tm
    /F3 8 Tf
    (method Promise\(Supply:D: --> Promise:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 413.4 562 21.6 re
  B
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F2 10 Tf
    (Returns a ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 17 >> BDC
    BT
      1 0 0 1 20 393.4 Tm
      [ -4305 (Promise) ] TJ
    ET
    q
      0.5 w
      63.05 392.4 m
      95.83 392.4 l
      S
    Q
  EMC
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    [ -7833 ( that will be kept when the ) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F3 10 Tf
    [ -18943 (Supply) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F2 10 Tf
    [ -23143 ( is ) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F3 10 Tf
    [ -24560 (done) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F2 10 Tf
    [ -27560 (. If the ) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F3 10 Tf
    [ -30698 (Supply) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F2 10 Tf
    [ -34898 ( also emits any values, then the ) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F3 10 Tf
    [ -47869 (Promise) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F2 10 Tf
    [ -52669 ( will be) ] TJ
    11 TL
    T*
    (kept with the final value. Otherwise, it will be kept with ) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -22887 (Nil) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F2 10 Tf
    [ -25287 (. If the ) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -28425 (Supply) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F2 10 Tf
    [ -32625 ( ends with a ) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -37930 (quit) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F2 10 Tf
    [ -40930 ( instead of a ) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -46290 (done) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F2 10 Tf
    [ -49290 (, then the ) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 382.4 Tm
    /F3 10 Tf
    [ -53484 ] TJ
    T*
    (Promise) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 371.4 Tm
    /F2 10 Tf
    [ -4800 ( will be broken with that exception.) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 353.8 Tm
    /F3 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $s = $supplier.Supply;) Tj
    T*
    (my $p = $s.Promise;) Tj
    T*
    ($p.then\(-> $v { say "got $v.result\(\)" }\);) Tj
    T*
    ($supplier.emit\('cha'\);          not output yet) Tj
    T*
    ($supplier.done\(\);               got cha) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 299 562 65.6 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 279 Tm
    /F2 10 Tf
    (The ) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 279 Tm
    /F3 10 Tf
    [ -2055 (Promise) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 279 Tm
    /F2 10 Tf
    [ -6855 ( method is most useful when dealing with supplies that will tend to produce just one value, when only the final value is of) ] TJ
    11 TL
    T*
    (interest, or when only completion \(successful or not\) is relevant.) Tj
  ET
EMC
/H2 << /MCID 41 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F1 16 Tf
    (method live) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 42 >> BDC
  BT
    1 0 0 1 30 197.6 Tm
    /F3 8 Tf
    (method live\(Supply:D: --> Bool:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 186.8 562 21.6 re
  B
Q
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F2 10 Tf
    (Returns ) Tj
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F3 10 Tf
    [ -3611 (True) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F2 10 Tf
    [ -6611 ( if the supply is "live", that is, values are emitted to taps as soon as they arrive. Always returns ) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F3 10 Tf
    [ -44867 (True) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F2 10 Tf
    [ -47867 ( in the default ) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F3 10 Tf
    [ -53894 ] TJ
    11 TL
    T*
    (Supply) Tj
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F2 10 Tf
    [ -4200 ( \(but for example on the supply returned from ) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F3 10 Tf
    [ -23030 (Supply.from-list) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F2 10 Tf
    [ -33230 ( it's ) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F3 10 Tf
    [ -35105 (False) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F2 10 Tf
    [ -38705 (\).) ] TJ
  ET
EMC
/Code << /MCID 54 >> BDC
  BT
    1 0 0 1 30 138.2 Tm
    /F3 8 Tf
    (say Supplier.new.Supply.live;     OUTPUT: «True») Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 127.4 562 21.6 re
  B
Q
/H2 << /MCID 55 >> BDC
  BT
    1 0 0 1 20 94.2 Tm
    /F1 16 Tf
    (method schedule-on) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 30 59 Tm
    /F3 8 Tf
    (method schedule-on\(Supply:D: Scheduler $scheduler\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 48.2 562 21.6 re
  B
Q
endstream
endobj

43 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

44 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

45 0 obj
<<
  /Type /Page
  /Contents 46 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources << /Font << /F1 34 0 R >> >>
  /StructParents 16
>>
endobj

46 0 obj
<< /Length 304 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (Runs the emit, done and quit callbacks on the specified scheduler.) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 730 Tm
    (This is useful for GUI toolkits that require certain actions to be run from the GUI thread.) Tj
  ET
EMC
endstream
endobj

47 0 obj
<<
  /Type /Page
  /Contents 48 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 49 0 R /GS2 50 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 17
>>
endobj

48 0 obj
<< /Length 7746 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that wait until the supply is done) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    378.38 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method wait) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method wait\(Supply:D:\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 648.8 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    [ -8116 ( it is called on, and blocks execution until the either the supply is ) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F2 10 Tf
    [ -34559 (done) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    [ -37559 ( \(in which case it evaluates to the final value that) ] TJ
    11 TL
    T*
    (was emitted on the ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F2 10 Tf
    [ -8027 (Supply) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F3 10 Tf
    [ -12227 (, or ) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F2 10 Tf
    [ -14060 (Nil) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F3 10 Tf
    [ -16460 ( if not value was emitted\) or ) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F2 10 Tf
    [ -28236 (quit) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F3 10 Tf
    [ -31236 ( \(in which case it will throw the exception that was passed to ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 617.8 Tm
    /F2 10 Tf
    [ -56066 ] TJ
    T*
    (quit) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 606.8 Tm
    /F3 10 Tf
    [ -3000 (\).) ] TJ
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 589.2 Tm
    /F2 8 Tf
    (my $s = Supplier.new;) Tj
    8.8 TL
    T*
    (start {) Tj
    T*
    (  sleep 1;) Tj
    T*
    (  say "One second: running.";) Tj
    T*
    (  sleep 1;) Tj
    T*
    (  $s.emit\(42\);) Tj
    T*
    (  $s.done;) Tj
    T*
    (}) Tj
    T*
    ($s.Supply.wait;) Tj
    T*
    (say "Two seconds: done";) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 499.2 562 100.8 re
  B
Q
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 466 Tm
    /F1 16 Tf
    (method list) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 18 >> BDC
  BT
    1 0 0 1 30 430.8 Tm
    /F2 8 Tf
    (multi method list\(Supply:D:\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 420 562 21.6 re
  B
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    [ -8116 ( it is called on, and returns a lazy list that will be reified as the ) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F2 10 Tf
    [ -33446 (Supply) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 400 Tm
    /F3 10 Tf
    [ -37646 ( emits values. The list will be terminated once) ] TJ
    11 TL
    T*
    (the ) Tj
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F2 10 Tf
    [ -1722 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F3 10 Tf
    [ -5922 ( is ) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F2 10 Tf
    [ -7339 (done) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F3 10 Tf
    [ -10339 (. If the ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F2 10 Tf
    [ -13477 (Supply) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F3 10 Tf
    [ -17677 ( ) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F2 10 Tf
    [ -18177 (quit) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F3 10 Tf
    [ -21177 (s, then an exception will be thrown once that point in the lazy list is reached.) ] TJ
  ET
EMC
/H2 << /MCID 32 >> BDC
  BT
    1 0 0 1 20 353.8 Tm
    /F1 16 Tf
    (method Seq) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 318.6 Tm
    /F2 8 Tf
    (method Seq\(Supply:D:\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 307.8 562 21.6 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F3 10 Tf
    (Returns a ) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F2 10 Tf
    [ -4305 (Seq) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F3 10 Tf
    [ -6705 ( with an iterator containing the values that the ) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F2 10 Tf
    [ -25536 (Supply) ] TJ
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F3 10 Tf
    [ -29736 ( contains.) ] TJ
  ET
EMC
/H2 << /MCID 39 >> BDC
  BT
    1 0 0 1 20 252.6 Tm
    /F1 16 Tf
    (method grab) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 30 217.4 Tm
    /F2 8 Tf
    (method grab\(Supply:D: &when-done --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 206.6 562 21.6 re
  B
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F3 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F3 10 Tf
    [ -8116 ( it is called on. When it is ) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F2 10 Tf
    [ -18838 (done) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F3 10 Tf
    [ -21838 (, calls ) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F2 10 Tf
    [ -24671 (&when-done) ] TJ
  ET
EMC
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F3 10 Tf
    [ -31271 ( and then emits the list of values that it returns on the result ) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 186.6 Tm
    /F2 10 Tf
    [ -55464 ] TJ
    11 TL
    T*
    (Supply) Tj
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F3 10 Tf
    [ -4200 (. If the original ) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F2 10 Tf
    [ -10699 (Supply) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F3 10 Tf
    [ -14899 ( ) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F2 10 Tf
    [ -15399 (quit) ] TJ
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F3 10 Tf
    [ -18399 (s, then the exception is immediately conveyed on the return ) ] TJ
  ET
EMC
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F2 10 Tf
    [ -42729 (Supply) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 175.6 Tm
    /F3 10 Tf
    [ -46929 (.) ] TJ
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 30 158 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $t = $s.grab\(&sum\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «19») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 129.6 562 39.2 re
  B
Q
/H2 << /MCID 57 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F1 16 Tf
    (method reverse) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 58 >> BDC
  BT
    1 0 0 1 30 61.2 Tm
    /F2 8 Tf
    (method reverse\(Supply:D: --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 50.4 562 21.6 re
  B
Q
endstream
endobj

49 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

50 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

51 0 obj
<<
  /Type /Page
  /Annots [ 52 0 R 54 0 R 56 0 R ]
  /Contents 58 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 59 0 R /GS2 60 0 R >>
    /Font << /F1 34 0 R /F2 32 0 R /F3 31 0 R >>
  >>
  /StructParents 18
>>
endobj

52 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 53 0 R
  /Border [ 0 0 0 ]
  /Contents (Block)
  /P 51 0 R
  /Rect [ 340.77 581.8 368.66 596.8 ]
  /StructParent 19
>>
endobj

53 0 obj
<< /Type /Action /S /URI /URI (/type/Block) >>
endobj

54 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 55 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.collate)
  /P 51 0 R
  /Rect [ 423.81 414.6 474.19 429.6 ]
  /StructParent 20
>>
endobj

55 0 obj
<< /Type /Action /S /URI /URI (/type/Any#method_collate) >>
endobj

56 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 57 0 R
  /Border [ 0 0 0 ]
  /Contents (List.reduce)
  /P 51 0 R
  /Rect [ 370.84 236.4 419.55 251.4 ]
  /StructParent 21
>>
endobj

57 0 obj
<< /Type /Action /S /URI /URI (/type/List#routine_reduce) >>
endobj

58 0 obj
<< /Length 7838 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -8116 ( it is called on. Once that ) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -18587 (Supply) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -22787 ( emits ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -25704 (done) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -28704 (, all of the values it emitted will be emitted on the returned ) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -52674 (Supply) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -56874 ] TJ
    11 TL
    T*
    (in reverse order. If the original ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -12774 (Supply) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -16974 ( ) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -17474 (quit) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -20474 (s, then the exception is immediately conveyed on the return ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -44804 (Supply) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -49004 (.) ] TJ
  ET
EMC
/Code << /MCID 15 >> BDC
  BT
    1 0 0 1 30 723.4 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(1, 2, 3\);) Tj
    8.8 TL
    T*
    (my $t = $s.reverse;) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «321») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 695 562 39.2 re
  B
Q
/H2 << /MCID 16 >> BDC
  BT
    1 0 0 1 20 661.8 Tm
    /F3 16 Tf
    (method sort) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 30 626.6 Tm
    /F2 8 Tf
    (method sort\(Supply:D: &custom-routine-to-use? --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 615.8 562 21.6 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F1 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F1 10 Tf
    [ -8116 ( it is called on. Once that ) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F2 10 Tf
    [ -18587 (Supply) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F1 10 Tf
    [ -22787 ( emits ) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F2 10 Tf
    [ -25704 (done) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 595.8 Tm
    /F1 10 Tf
    [ -28704 (, all of the values that it emitted will be sorted, and the results emitted) ] TJ
    11 TL
    T*
    (on the returned ) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F2 10 Tf
    [ -6554 (Supply) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F1 10 Tf
    [ -10754 ( in the sorted order. Optionally accepts a comparator ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 27 >> BDC
    BT
      1 0 0 1 20 584.8 Tm
      [ -32277 (Block) ] TJ
    ET
    q
      0.5 w
      342.77 583.8 m
      366.66 583.8 l
      S
    Q
  EMC
Q
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    [ -34916 (. If the original ) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F2 10 Tf
    [ -41415 (Supply) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F1 10 Tf
    [ -45615 ( ) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F2 10 Tf
    [ -46115 (quit) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 584.8 Tm
    /F1 10 Tf
    [ -49115 (s, then the) ] TJ
    T*
    (exception is immediately conveyed on the return ) Tj
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F2 10 Tf
    [ -19997 (Supply) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F1 10 Tf
    [ -24197 (.) ] TJ
  ET
EMC
/Code << /MCID 35 >> BDC
  BT
    1 0 0 1 30 556.2 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $t = $s.sort\(\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «23410») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 527.8 562 39.2 re
  B
Q
/H2 << /MCID 36 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 16 Tf
    (method collate) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 459.4 Tm
    /F2 8 Tf
    (method collate\(Supply:D:\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 448.6 562 21.6 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F1 10 Tf
    (Taps the ) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F2 10 Tf
    [ -3916 (Supply) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F1 10 Tf
    [ -8116 ( it is called on. Once that ) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F2 10 Tf
    [ -18587 (Supply) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F1 10 Tf
    [ -22787 ( emits ) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F2 10 Tf
    [ -25704 (done) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    /F1 10 Tf
    [ -28704 (, all of the values that it emitted will be sorted taking into account) ] TJ
    11 TL
    T*
    (Unicode grapheme characteristics. A new ) Tj
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F2 10 Tf
    [ -17189 (Supply) ] TJ
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F1 10 Tf
    [ -21389 ( is returned with the sorted values emitted. See ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 47 >> BDC
    BT
      1 0 0 1 20 417.6 Tm
      [ -40581 (Any.collate) ] TJ
    ET
    q
      0.5 w
      425.81 416.6 m
      472.19 416.6 l
      S
    Q
  EMC
Q
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    [ -45469 ( for more details on the) ] TJ
    T*
    (collated sort.) Tj
  ET
EMC
/Code << /MCID 49 >> BDC
  BT
    1 0 0 1 30 389 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(<ä a o ö>\);) Tj
    8.8 TL
    T*
    (my $t = $s.collate\(\);) Tj
    T*
    ($t.tap\(&say\);            OUTPUT: «aäoö») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 360.6 562 39.2 re
  B
Q
/H2 << /MCID 50 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F3 16 Tf
    (method reduce) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 287.8 Tm
    /F1 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 52 >> BDC
  BT
    1 0 0 1 30 270.2 Tm
    /F2 8 Tf
    (method reduce\(Supply:D: &with --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 259.4 562 21.6 re
  B
Q
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F1 10 Tf
    (Creates a "reducing" supply, which will emit a single value with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 54 >> BDC
    BT
      1 0 0 1 20 239.4 Tm
      [ -35284 (List.reduce) ] TJ
    ET
    q
      0.5 w
      372.84 238.4 m
      417.55 238.4 l
      S
    Q
  EMC
Q
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    [ -40005 (.) ] TJ
  ET
EMC
/Code << /MCID 56 >> BDC
  BT
    1 0 0 1 30 221.8 Tm
    /F2 8 Tf
    (my $supply = Supply.from-list\(1..5\).reduce\({$^a + $^b}\);) Tj
    T*
    ($supply.tap\(-> $v { say "$v" }\);  OUTPUT: «15») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 202.2 562 30.4 re
  B
Q
endstream
endobj

59 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

60 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

61 0 obj
<<
  /Type /Page
  /Annots [ 62 0 R 64 0 R ]
  /Contents 66 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 67 0 R /GS2 68 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 22
>>
endobj

62 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 63 0 R
  /Border [ 0 0 0 ]
  /Contents (Tap)
  /P 61 0 R
  /Rect [ 301.35 93.4 320.9 108.4 ]
  /StructParent 23
>>
endobj

63 0 obj
<< /Type /Action /S /URI /URI (/type/Tap) >>
endobj

64 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 65 0 R
  /Border [ 0 0 0 ]
  /Contents (CLOSE)
  /P 61 0 R
  /Rect [ 86.61 71.4 122.28 86.4 ]
  /StructParent 24
>>
endobj

65 0 obj
<< /Type /Action /S /URI /URI (/language/phasers#CLOSE) >>
endobj

66 0 obj
<< /Length 5736 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that return another Supply) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    331.12 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method from-list) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method from-list\(Supply:U: +@values --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 648.8 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    (Creates an on-demand supply from the values passed to this method.) Tj
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 30 611.2 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(1, 2, 3\);) Tj
    T*
    ($s.tap\(&say\);            OUTPUT: «123») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 591.6 562 30.4 re
  B
Q
/H2 << /MCID 5 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F1 16 Tf
    (method share) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 523.2 Tm
    /F2 8 Tf
    (method share\(Supply:D: --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 512.4 562 21.6 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F3 10 Tf
    (Creates a live supply from an on-demand supply, thus making it possible to share the values of the on-demand supply on multiple taps, instead) Tj
    11 TL
    T*
    (of each tap seeing its own copy of all values from the on-demand supply.) Tj
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 463.8 Tm
    /F2 8 Tf
    ( this says in turn: "first 1" "first 2" "second 2" "first 3" "second 3") Tj
    8.8 TL
    T*
    (my $s = Supply.interval\(1\).share;) Tj
    T*
    ($s.tap: { "first $_".say };) Tj
    T*
    (sleep 1.1;) Tj
    T*
    ($s.tap: { "second $_".say };) Tj
    T*
    (sleep 2) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 409 562 65.6 re
  B
Q
/H2 << /MCID 9 >> BDC
  BT
    1 0 0 1 20 375.8 Tm
    /F1 16 Tf
    (method flat) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 30 340.6 Tm
    /F2 8 Tf
    (method flat\(Supply:D: --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 329.8 562 21.6 re
  B
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 309.8 Tm
    /F3 10 Tf
    (Creates a supply on which all of the values seen in the given supply are flattened before being emitted again.) Tj
  ET
EMC
/H2 << /MCID 12 >> BDC
  BT
    1 0 0 1 20 274.6 Tm
    /F1 16 Tf
    (method do) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 13 >> BDC
  BT
    1 0 0 1 30 239.4 Tm
    /F2 8 Tf
    (method do\(Supply:D: &do --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 228.6 562 21.6 re
  B
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 208.6 Tm
    /F3 10 Tf
    (Creates a supply to which all values seen in the given supply, are emitted again. The given code, executed for its side-effects only, is) Tj
    11 TL
    T*
    (guaranteed to be only executed by one thread at a time.) Tj
  ET
EMC
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 162.4 Tm
    /F1 16 Tf
    (method on-close) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 127.2 Tm
    /F2 8 Tf
    (method on-close\(Supply:D: &on-close --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 116.4 562 21.6 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 10 Tf
    (Returns a new ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F2 10 Tf
    [ -6221 (Supply) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 10 Tf
    [ -10421 ( which will run ) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F2 10 Tf
    [ -17004 (&on-close) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 10 Tf
    [ -23004 ( whenever a ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 22 >> BDC
    BT
      1 0 0 1 20 96.4 Tm
      [ -28335 (Tap) ] TJ
    ET
    q
      0.5 w
      303.35 95.4 m
      318.9 95.4 l
      S
    Q
  EMC
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    [ -30140 ( of that ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F2 10 Tf
    [ -33473 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 10 Tf
    [ -37673 ( is closed. This includes if further operations are) ] TJ
    11 TL
    T*
    (chained on to the ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F2 10 Tf
    [ -7360 (Supply) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F3 10 Tf
    [ -11560 (. \(for example, ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F2 10 Tf
    [ -17947 ($supply.on-close\(&on-close\).map\(*.uc\)) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F3 10 Tf
    [ -40747 (\). When using a ) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F2 10 Tf
    [ -47579 (react) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F3 10 Tf
    [ -51179 ( or ) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F2 10 Tf
    [ -52762 (supply) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 85.4 Tm
    /F3 10 Tf
    [ -56962 ] TJ
    T*
    (block, using the ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 34 >> BDC
    BT
      1 0 0 1 20 74.4 Tm
      [ -6861 (CLOSE) ] TJ
    ET
    q
      0.5 w
      88.61 73.4 m
      120.28 73.4 l
      S
    Q
  EMC
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 74.4 Tm
    [ -10278 ( phaser is usually a better choice.) ] TJ
  ET
EMC
endstream
endobj

67 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

68 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

69 0 obj
<<
  /Type /Page
  /Contents 70 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 71 0 R /GS2 72 0 R >>
    /Font << /F1 32 0 R /F2 31 0 R /F3 34 0 R >>
  >>
  /StructParents 25
>>
endobj

70 0 obj
<< /Length 6792 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 8 Tf
    (my $s = Supplier.new;) Tj
    8.8 TL
    T*
    (my $tap = $s.Supply.on-close\({ say "Tap closed" }\).tap\() Tj
    T*
    (    -> $v { say "the value is $v" },) Tj
    T*
    (    done    => { say "Supply is done" },) Tj
    T*
    (    quit    => -> $ex { say "Supply finished with error $ex" },) Tj
    T*
    (\);) Tj
    T*
    [  ] TJ
    T*
    ($s.emit\('Raku'\);) Tj
    T*
    ($tap.close;         OUTPUT: «Tap closed») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 670.8 562 92 re
  B
Q
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 637.6 Tm
    /F2 16 Tf
    (method interval) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 602.4 Tm
    /F1 8 Tf
    (method interval\(Supply:U: $interval, $delay = 0, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 591.6 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F3 10 Tf
    (Creates a supply that emits a value every ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F1 10 Tf
    [ -16858 ($interval) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F3 10 Tf
    [ -22858 ( seconds, starting ) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F1 10 Tf
    [ -30274 ($delay) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 571.6 Tm
    /F3 10 Tf
    [ -34474 ( seconds from the call. The emitted value is an integer,) ] TJ
    11 TL
    T*
    (starting from 0, and is incremented by one for each value emitted.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    (Implementations may treat too-small and negative values as lowest resolution they support, possibly warning in such situations; e.g. treating ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 538.6 Tm
    /F1 10 Tf
    [ -56635 ] TJ
    T*
    (0.0001) Tj
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    [ -4200 ( as ) ] TJ
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F1 10 Tf
    [ -5783 (0.001) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    [ -9383 (. For 6.d language version, the minimal value specified is ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F1 10 Tf
    [ -32825 (0.001) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 527.6 Tm
    /F3 10 Tf
    [ -36425 (.) ] TJ
  ET
EMC
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 492.4 Tm
    /F2 16 Tf
    (method grep) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 457.2 Tm
    /F1 8 Tf
    (method grep\(Supply:D: Mu $test --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 446.4 562 21.6 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F3 10 Tf
    (Creates a new supply that only emits those values from the original supply that smartmatch against ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F1 10 Tf
    [ -40080 ($test) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 426.4 Tm
    /F3 10 Tf
    [ -43680 (.) ] TJ
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 30 408.8 Tm
    /F1 8 Tf
    (my $supplier = Supplier.new;) Tj
    T*
    (my $all      = $supplier.Supply;) Tj
    T*
    (my $ints     = $all.grep\(Int\);) Tj
    T*
    ($ints.tap\(&say\);) Tj
    T*
    ($supplier.emit\($_\) for 1, 'a string', 3.14159;    prints only 1) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 362.8 562 56.8 re
  B
Q
/H2 << /MCID 21 >> BDC
  BT
    1 0 0 1 20 329.6 Tm
    /F2 16 Tf
    (method map) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 30 294.4 Tm
    /F1 8 Tf
    (method map\(Supply:D: &mapper --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 283.6 562 21.6 re
  B
Q
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 263.6 Tm
    /F3 10 Tf
    (Returns a new supply that maps each value of the given supply through ) Tj
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 263.6 Tm
    /F1 10 Tf
    [ -29052 (&mapper) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 263.6 Tm
    /F3 10 Tf
    [ -33852 ( and emits it to the new supply.) ] TJ
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 30 246 Tm
    /F1 8 Tf
    (my $supplier = Supplier.new;) Tj
    T*
    (my $all      = $supplier.Supply;) Tj
    T*
    (my $double   = $all.map\(-> $value { $value * 2 }\);) Tj
    T*
    ($double.tap\(&say\);) Tj
    T*
    ($supplier.emit\(4\);            OUTPUT: «8») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 200 562 56.8 re
  B
Q
/H2 << /MCID 27 >> BDC
  BT
    1 0 0 1 20 166.8 Tm
    /F2 16 Tf
    (method batch) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 30 131.6 Tm
    /F1 8 Tf
    (method batch\(Supply:D: :$elems, :$seconds --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 120.8 562 21.6 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 100.8 Tm
    /F3 10 Tf
    (Creates a new supply that batches the values of the given supply by either the number of elements in the batch \(using ) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 100.8 Tm
    /F1 10 Tf
    [ -47354 (:elems) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 100.8 Tm
    /F3 10 Tf
    [ -51554 (\) or a) ] TJ
    11 TL
    T*
    (duration \(using ) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 89.8 Tm
    /F1 10 Tf
    [ -6583 (:seconds) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 89.8 Tm
    /F3 10 Tf
    [ -11983 (\) or both. Any remaining values are emitted in a final batch when the supply is done.) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 67.8 Tm
    /F2 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 67.8 Tm
    /F3 10 Tf
    [ -2249 (: Since Rakudo version 2020.12, the ) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 67.8 Tm
    /F1 10 Tf
    [ -17276 (:seconds) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 67.8 Tm
    /F3 10 Tf
    [ -22676 ( parameter has a millisecond granularity: for example a 1 millisecond duration could) ] TJ
    T*
    (be specified as ) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 56.8 Tm
    /F1 10 Tf
    [ -6387 (:seconds\(0.001\)) ] TJ
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 56.8 Tm
    /F3 10 Tf
    [ -15987 (. Before Rakudo version 2020.12, the ) ] TJ
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 56.8 Tm
    /F1 10 Tf
    [ -31485 (:seconds) ] TJ
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 56.8 Tm
    /F3 10 Tf
    [ -36885 ( parameter had a second granularity.) ] TJ
  ET
EMC
endstream
endobj

71 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

72 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

73 0 obj
<<
  /Type /Page
  /Annots [ 74 0 R 76 0 R ]
  /Contents 78 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 79 0 R /GS2 80 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 26
>>
endobj

74 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 75 0 R
  /Border [ 0 0 0 ]
  /Contents (List.head)
  /P 73 0 R
  /Rect [ 229.46 531.2 270.4 546.2 ]
  /StructParent 27
>>
endobj

75 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_head) >>
endobj

76 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 77 0 R
  /Border [ 0 0 0 ]
  /Contents (List.tail)
  /P 73 0 R
  /Rect [ 223.36 302.4 258.2 317.4 ]
  /StructParent 28
>>
endobj

77 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_tail) >>
endobj

78 0 obj
<< /Length 6038 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method elems) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method elems\(Supply:D: $seconds? --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 706 562 21.6 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    (Creates a new supply in which changes to the number of values seen are emitted. It optionally also takes an interval \(in seconds\) if you only) Tj
    11 TL
    T*
    (want to be updated every so many seconds.) Tj
  ET
EMC
/H2 << /MCID 3 >> BDC
  BT
    1 0 0 1 20 639.8 Tm
    /F1 16 Tf
    (method head) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 600.2 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 5 >> BDC
  BT
    1 0 0 1 30 582.6 Tm
    /F2 8 Tf
    (multi method head\(Supply:D:\)) Tj
    8.8 TL
    T*
    (multi method head\(Supply:D: Callable:D $limit\)) Tj
    T*
    (multi method head\(Supply:D: \\limit\)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 554.2 562 39.2 re
  B
Q
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 534.2 Tm
    /F3 10 Tf
    (Creates a "head" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 7 >> BDC
    BT
      1 0 0 1 20 534.2 Tm
      [ -21146 (List.head) ] TJ
    ET
    q
      0.5 w
      231.46 533.2 m
      268.4 533.2 l
      S
    Q
  EMC
Q
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 534.2 Tm
    [ -25090 (.) ] TJ
  ET
EMC
/Code << /MCID 9 >> BDC
  BT
    1 0 0 1 30 516.6 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    T*
    (my $hs = $s.head\(2\);) Tj
    T*
    ($hs.tap\(&say\);            OUTPUT: «410») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 488.2 562 39.2 re
  B
Q
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 10 Tf
    (Since release 2020.07, A ) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F2 10 Tf
    [ -10470 (WhateverCode) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 10 Tf
    [ -18270 ( can be used also, again with the same semantics as ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F2 10 Tf
    [ -39294 (List.head) ] TJ
  ET
EMC
/Code << /MCID 14 >> BDC
  BT
    1 0 0 1 30 450.6 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2, 1\);) Tj
    T*
    (my $hs = $s.head\( * - 2\);) Tj
    T*
    ($hs.tap\(&say\);            OUTPUT: «4103») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 422.2 562 39.2 re
  B
Q
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F1 16 Tf
    (method tail) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 353.8 Tm
    /F2 8 Tf
    (multi method tail\(Supply:D:\)) Tj
    8.8 TL
    T*
    (multi method tail\(Supply:D: Callable:D $limit\)) Tj
    T*
    (multi method tail\(Supply:D: \\limit\)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 325.4 562 39.2 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 305.4 Tm
    /F3 10 Tf
    (Creates a "tail" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 18 >> BDC
    BT
      1 0 0 1 20 305.4 Tm
      [ -20536 (List.tail) ] TJ
    ET
    q
      0.5 w
      225.36 304.4 m
      256.2 304.4 l
      S
    Q
  EMC
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 305.4 Tm
    [ -23870 (.) ] TJ
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 30 287.8 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    T*
    (my $ts = $s.tail\(2\);) Tj
    T*
    ($ts.tap\(&say\);            OUTPUT: «32») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 259.4 562 39.2 re
  B
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F3 10 Tf
    (You can call ) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F2 10 Tf
    [ -5554 (.tail) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F3 10 Tf
    [ -9154 ( with ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F2 10 Tf
    [ -11682 (Whatever) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F3 10 Tf
    [ -17082 ( or ) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F2 10 Tf
    [ -18665 (Inf) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F3 10 Tf
    [ -21065 (; which will return a new supply equivalent to the initial one. Calling it with a ) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 239.4 Tm
    /F2 10 Tf
    [ -52675 ] TJ
    11 TL
    T*
    (WhateverCode) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 228.4 Tm
    /F3 10 Tf
    [ -7800 ( will be equivalent to skipping until that number.) ] TJ
  ET
EMC
/Code << /MCID 30 >> BDC
  BT
    1 0 0 1 30 210.8 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\(4, 10, 3, 2\);) Tj
    8.8 TL
    T*
    (my $ts = $s.tail\( * - 2 \);) Tj
    T*
    ($ts.tap\(&say\);            OUTPUT: «32») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 182.4 562 39.2 re
  B
Q
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 162.4 Tm
    /F3 10 Tf
    (This feature is only available from the 2020.07 release of Raku.) Tj
  ET
EMC
/H2 << /MCID 32 >> BDC
  BT
    1 0 0 1 20 127.2 Tm
    /F1 16 Tf
    (method first) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 92 Tm
    /F2 8 Tf
    (method first\(Supply:D: :$end, |c\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 81.2 562 21.6 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 61.2 Tm
    /F3 10 Tf
    (This method creates a supply of the first element, or the last element if the optional named parameter ) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 61.2 Tm
    /F2 10 Tf
    [ -40882 (:end) ] TJ
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 61.2 Tm
    /F3 10 Tf
    [ -43882 ( is truthy, from a supply created) ] TJ
    11 TL
    T*
    (by calling the ) Tj
  ET
EMC
endstream
endobj

79 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

80 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

81 0 obj
<<
  /Type /Page
  /Annots [ 82 0 R 84 0 R 85 0 R 87 0 R ]
  /Contents 89 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 90 0 R /GS2 91 0 R >>
    /Font << /F1 32 0 R /F2 34 0 R /F3 31 0 R >>
  >>
  /StructParents 29
>>
endobj

82 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 83 0 R
  /Border [ 0 0 0 ]
  /Contents (Str.split)
  /P 81 0 R
  /Rect [ 564.31 566.4 568.31 581.4 ]
  /StructParent 30
>>
endobj

83 0 obj
<< /Type /Action /S /URI /URI (/type/Str#routine_split) >>
endobj

84 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 83 0 R
  /Border [ 0 0 0 ]
  /Contents (Str.split)
  /P 81 0 R
  /Rect [ 18 555.4 53.4 570.4 ]
  /StructParent 31
>>
endobj

85 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 86 0 R
  /Border [ 0 0 0 ]
  /Contents (.head)
  /P 81 0 R
  /Rect [ 123.04 544.4 148.42 559.4 ]
  /StructParent 32
>>
endobj

86 0 obj
<< /Type /Action /S /GoTo /D /method_head >>
endobj

87 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 88 0 R
  /Border [ 0 0 0 ]
  /Contents (List.rotor)
  /P 81 0 R
  /Rect [ 242.8 229.8 284.3 244.8 ]
  /StructParent 33
>>
endobj

88 0 obj
<< /Type /Action /S /URI /URI (/type/List#method_rotor) >>
endobj

89 0 obj
<< /Length 6641 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (grep) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -3000 ( method on the invocant, with any remaining arguments as parameters. If there is no remaining argument, this method is equivalent to) ] TJ
    11 TL
    T*
    (calling on the invocant, without parameter, the ) Tj
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -19164 (head) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -22164 ( or the ) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -25219 (tail) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -28219 ( method, according to named parameter ) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F1 10 Tf
    [ -44604 (:end) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 741 Tm
    /F2 10 Tf
    [ -47604 (.) ] TJ
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 723.4 Tm
    /F1 8 Tf
    (my $rand = supply { emit \(rand × 100\).floor for ^ };) Tj
    8.8 TL
    T*
    (my $first-prime = $rand.first: &is-prime;) Tj
    T*
    ( output the first prime from the endless random number supply $rand,) Tj
    T*
    ( then the $first-prime supply reaches its end) Tj
    T*
    ($first-prime.tap: &say;) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 677.4 562 56.8 re
  B
Q
/H2 << /MCID 9 >> BDC
  BT
    1 0 0 1 20 644.2 Tm
    /F3 16 Tf
    (method split) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 30 609 Tm
    /F1 8 Tf
    (multi method split\(Supply:D: \\delimiter\)) Tj
    8.8 TL
    T*
    (multi method split\(Supply:D: \\delimiter, \\limit\)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 589.4 562 30.4 re
  B
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F2 10 Tf
    (This method creates a supply of the values returned by the ) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F1 10 Tf
    [ -23829 (Str.split) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F2 10 Tf
    [ -29829 ( method called on the string collected from the invocant. See ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 14 >> BDC
    BT
      1 0 0 1 20 569.4 Tm
      [ -54631 ] TJ
      11 TL
      T*
      (Str.split) Tj
    ET
    q
      0.5 w
      566.31 568.4 m
      566.31 568.4 l
      S
    Q
    q
      0.5 w
      20 557.4 m
      51.4 557.4 l
      S
    Q
  EMC
Q
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    [ -3390 ( for details on the ) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F1 10 Tf
    [ -10889 (\\delimiter) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F2 10 Tf
    [ -17489 ( argument as well as available extra named parameters. The created supply can be limited with the ) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 558.4 Tm
    /F1 10 Tf
    [ -57341 ] TJ
    11 TL
    T*
    (\\limit) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    /F2 10 Tf
    [ -4200 ( argument, see ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 20 >> BDC
    BT
      1 0 0 1 20 547.4 Tm
      [ -10504 (.head) ] TJ
    ET
    q
      0.5 w
      125.04 546.4 m
      146.42 546.4 l
      S
    Q
  EMC
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    [ -12892 (.) ] TJ
  ET
EMC
/Code << /MCID 22 >> BDC
  BT
    1 0 0 1 30 529.8 Tm
    /F1 8 Tf
    (my $words = Supply.from-list\(<Hello World From Raku!>\);) Tj
    8.8 TL
    T*
    (my $s = $words.split\(/ <?upper> /, 2, :skip-empty\);) Tj
    T*
    ($s.tap\(&say\);  OUTPUT: «HelloWorld») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 501.4 562 39.2 re
  B
Q
/H2 << /MCID 23 >> BDC
  BT
    1 0 0 1 20 468.2 Tm
    /F3 16 Tf
    (method rotate) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 30 433 Tm
    /F1 8 Tf
    (method rotate\(Supply:D: $rotate = 1\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 422.2 562 21.6 re
  B
Q
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F2 10 Tf
    (Creates a supply with elements rotated to the left when ) Tj
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F1 10 Tf
    [ -22469 ($rotate) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F2 10 Tf
    [ -27269 ( is positive or to the right otherwise, in which case the invocant is tapped) ] TJ
    11 TL
    T*
    (on before a new supply is returned.) Tj
  ET
EMC
/Code << /MCID 28 >> BDC
  BT
    1 0 0 1 30 373.6 Tm
    /F1 8 Tf
    (my $supply = Supply.from-list\(<a b c d e>\).rotate\(2\);) Tj
    8.8 TL
    T*
    ($supply.tap\(&say\);  OUTPUT: «cdeab») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 354 562 30.4 re
  B
Q
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 334 Tm
    /F3 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 334 Tm
    /F2 10 Tf
    [ -2249 (: Available since Rakudo 2020.06.) ] TJ
  ET
EMC
/H2 << /MCID 31 >> BDC
  BT
    1 0 0 1 20 298.8 Tm
    /F3 16 Tf
    (method rotor) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 30 263.6 Tm
    /F1 8 Tf
    (method rotor\(Supply:D: @cycle --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 252.8 562 21.6 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    /F2 10 Tf
    (Creates a "rotoring" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 34 >> BDC
    BT
      1 0 0 1 20 232.8 Tm
      [ -22480 (List.rotor) ] TJ
    ET
    q
      0.5 w
      244.8 231.8 m
      282.3 231.8 l
      S
    Q
  EMC
Q
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 232.8 Tm
    [ -26480 (.) ] TJ
  ET
EMC
/H2 << /MCID 36 >> BDC
  BT
    1 0 0 1 20 197.6 Tm
    /F3 16 Tf
    (method delayed) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 162.4 Tm
    /F1 8 Tf
    (method delayed\(Supply:D: $seconds, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 151.6 562 21.6 re
  B
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 131.6 Tm
    /F2 10 Tf
    (Creates a new supply in which all values flowing through the given supply are emitted, but with the given delay in seconds.) Tj
  ET
EMC
/H2 << /MCID 39 >> BDC
  BT
    1 0 0 1 20 96.4 Tm
    /F3 16 Tf
    (method throttle) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 56.8 Tm
    /F2 10 Tf
    (Defined as) Tj
  ET
EMC
endstream
endobj

90 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

91 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

92 0 obj
<<
  /Type /Page
  /Annots [ 93 0 R ]
  /Contents 95 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 96 0 R /GS2 97 0 R >>
    /Font << /F1 32 0 R /F2 34 0 R /F3 31 0 R >>
  >>
  /StructParents 34
>>
endobj

93 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 94 0 R
  /Border [ 0 0 0 ]
  /Contents (status message)
  /P 92 0 R
  /Rect [ 253.25 129.4 316.41 144.4 ]
  /StructParent 35
>>
endobj

94 0 obj
<< /Type /Action /S /GoTo /D /status_message >>
endobj

95 0 obj
<< /Length 8960 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 8 Tf
    (multi method throttle\(Supply:D:) Tj
    8.8 TL
    T*
    (      Int\(\)  $elems,) Tj
    T*
    (      Real\(\) $seconds,) Tj
    T*
    (      Real\(\) $delay  = 0,) Tj
    T*
    (      :$scheduler    = $*SCHEDULER,) Tj
    T*
    (      :$control,) Tj
    T*
    (      :$status,) Tj
    T*
    (      :$bleed,) Tj
    T*
    (      :$vent-at,) Tj
    T*
    (    \)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 662 562 100.8 re
  B
Q
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 646.4 Tm
    (multi method throttle\(Supply:D:) Tj
    T*
    (      Int\(\)  $elems,) Tj
    T*
    (      Callable:D $process,) Tj
    T*
    (      Real\(\) $delay = 0,) Tj
    T*
    (      :$scheduler   = $*SCHEDULER,) Tj
    T*
    (      :$control,) Tj
    T*
    (      :$status,) Tj
    T*
    (      :$bleed,) Tj
    T*
    (      :$vent-at,) Tj
    T*
    (    \)) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 556.4 562 100.8 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F2 10 Tf
    (Arguments to ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F1 10 Tf
    [ -5972 (.throttle) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 536.4 Tm
    /F2 10 Tf
    [ -11972 ( are defined as follows:) ] TJ
  ET
EMC
/TH << /MCID 5 >> BDC
  BT
    1 0 0 1 20 514.4 Tm
    /F3 10 Tf
    (Argument) Tj
  ET
  q
    1 w
    20 512.4 m
    104.98 512.4 l
    S
  Q
EMC
/TH << /MCID 6 >> BDC
  BT
    1 0 0 1 114.98 514.4 Tm
    (Meaning) Tj
  ET
  q
    1 w
    114.98 512.4 m
    297.75 512.4 l
    S
  Q
EMC
/TD << /MCID 7 >> BDC
  BT
    1 0 0 1 20 500.4 Tm
    /F2 10 Tf
    ($limit,) Tj
  ET
EMC
/TD << /MCID 8 >> BDC
  BT
    1 0 0 1 114.98 500.4 Tm
    (values / time or simultaneous processing) Tj
  ET
EMC
/TD << /MCID 9 >> BDC
  BT
    1 0 0 1 20 487.4 Tm
    ($seconds or $process) Tj
  ET
EMC
/TD << /MCID 10 >> BDC
  BT
    1 0 0 1 114.98 487.4 Tm
    (time-unit / code to process simultaneously) Tj
  ET
EMC
/TD << /MCID 11 >> BDC
  BT
    1 0 0 1 20 474.4 Tm
    ($delay = 0,) Tj
  ET
EMC
/TD << /MCID 12 >> BDC
  BT
    1 0 0 1 114.98 474.4 Tm
    (initial delay before starting, in seconds) Tj
  ET
EMC
/TD << /MCID 13 >> BDC
  BT
    1 0 0 1 20 461.4 Tm
    (:$control,) Tj
  ET
EMC
/TD << /MCID 14 >> BDC
  BT
    1 0 0 1 114.98 461.4 Tm
    (supply to emit control messages on \(optional\)) Tj
  ET
EMC
/TD << /MCID 15 >> BDC
  BT
    1 0 0 1 20 448.4 Tm
    (:$status,) Tj
  ET
EMC
/TD << /MCID 16 >> BDC
  BT
    1 0 0 1 114.98 448.4 Tm
    (supply to tap status messages from \(optional\)) Tj
  ET
EMC
/TD << /MCID 17 >> BDC
  BT
    1 0 0 1 20 435.4 Tm
    (:$bleed,) Tj
  ET
EMC
/TD << /MCID 18 >> BDC
  BT
    1 0 0 1 114.98 435.4 Tm
    (supply to bleed messages to \(optional\)) Tj
  ET
EMC
/TD << /MCID 19 >> BDC
  BT
    1 0 0 1 20 422.4 Tm
    (:$vent-at,) Tj
  ET
EMC
/TD << /MCID 20 >> BDC
  BT
    1 0 0 1 114.98 422.4 Tm
    (bleed when so many buffered \(optional\)) Tj
  ET
EMC
/TD << /MCID 21 >> BDC
  BT
    1 0 0 1 20 409.4 Tm
    (:$scheduler,) Tj
  ET
EMC
/TD << /MCID 22 >> BDC
  BT
    1 0 0 1 114.98 409.4 Tm
    (scheduler to use, default $*SCHEDULER) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 374.4 Tm
    (This method produces a ) Tj
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 374.4 Tm
    /F1 10 Tf
    [ -10082 (Supply) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 374.4 Tm
    /F2 10 Tf
    [ -14282 ( from a given one, but makes sure the number of messages passed through is limited.) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 352.4 Tm
    (It has two modes of operation: per time-unit or by maximum number of executions of a block of code: this is determined by the type of the) Tj
    11 TL
    T*
    (second positional parameter.) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 319.4 Tm
    (The first positional parameter specifies the limit that should be applied.) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 297.4 Tm
    (If the second positional parameter is a ) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 297.4 Tm
    /F1 10 Tf
    [ -15719 (Callable) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 297.4 Tm
    /F2 10 Tf
    [ -21119 (, then the limit indicates the maximum number of parallel processes executing the) ] TJ
    T*
    (Callable, which is given the value that was received. The emitted values in this case will be the ) Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 286.4 Tm
    /F1 10 Tf
    [ -38522 (Promise) ] TJ
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 286.4 Tm
    /F2 10 Tf
    [ -43322 (s that were obtained from ) ] TJ
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 286.4 Tm
    /F1 10 Tf
    [ -54042 (start) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 286.4 Tm
    /F2 10 Tf
    [ -57642 ] TJ
    T*
    (ing the Callable.) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 253.4 Tm
    (If the second positional parameter is a real number, it is interpreted as the time-unit \(in seconds\). If you specify ) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 253.4 Tm
    /F3 10 Tf
    [ -44964 (.1) ] TJ
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 253.4 Tm
    /F2 10 Tf
    [ -45964 ( as the value, then it makes) ] TJ
    T*
    (sure you don't exceed the limit for every tenth of a second.) Tj
  ET
EMC
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 220.4 Tm
    (If the limit is exceeded, then incoming messages are buffered until there is room to pass on / execute the Callable again.) Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 20 198.4 Tm
    (The third positional parameter is optional: it indicates the number of seconds the throttle will wait before passing on any values.) Tj
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 176.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 176.4 Tm
    /F1 10 Tf
    [ -2055 (:control) ] TJ
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 176.4 Tm
    /F2 10 Tf
    [ -7455 ( named parameter optionally specifies a Supply that you can use to control the throttle while it is in operation. Messages) ] TJ
    T*
    (that can be sent, are strings in the form of "key:value". Please see below for the types of messages that you can send to control the throttle.) Tj
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 143.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 143.4 Tm
    /F1 10 Tf
    [ -2055 (:status) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 143.4 Tm
    /F2 10 Tf
    [ -6855 ( named parameter optionally specifies a Supply that will receive any status messages. If specified, it will at least send one) ] TJ
    T*
    (status message after the original Supply is exhausted. See ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 46 >> BDC
    BT
      1 0 0 1 20 132.4 Tm
      [ -23525 (status message) ] TJ
    ET
    q
      0.5 w
      255.25 131.4 m
      314.41 131.4 l
      S
    Q
  EMC
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 132.4 Tm
    [ -29691 ( below.) ] TJ
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 20 110.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 110.4 Tm
    /F1 10 Tf
    [ -2055 (:bleed) ] TJ
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 110.4 Tm
    /F2 10 Tf
    [ -6255 ( named parameter optionally specifies a Supply that will receive any values that were either explicitly bled \(with the ) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 110.4 Tm
    /F3 10 Tf
    [ -53247 (bleed) ] TJ
  ET
EMC
/P << /MCID 52 >> BDC
  BT
    1 0 0 1 20 110.4 Tm
    /F2 10 Tf
    [ -55775 ] TJ
    T*
    (control message\), or automatically bled \(if there's a ) Tj
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 99.4 Tm
    /F3 10 Tf
    [ -21009 (vent-at) ] TJ
  ET
EMC
/P << /MCID 54 >> BDC
  BT
    1 0 0 1 20 99.4 Tm
    /F2 10 Tf
    [ -24258 ( active\).) ] TJ
  ET
EMC
/P << /MCID 55 >> BDC
  BT
    1 0 0 1 20 77.4 Tm
    (The ) Tj
  ET
EMC
/P << /MCID 56 >> BDC
  BT
    1 0 0 1 20 77.4 Tm
    /F1 10 Tf
    [ -2055 (:vent-at) ] TJ
  ET
EMC
/P << /MCID 57 >> BDC
  BT
    1 0 0 1 20 77.4 Tm
    /F2 10 Tf
    [ -7455 ( named parameter indicates the number of values that may be buffered before any additional value will be routed to the ) ] TJ
  ET
EMC
/P << /MCID 58 >> BDC
  BT
    1 0 0 1 20 77.4 Tm
    /F1 10 Tf
    [ -55611 ] TJ
    T*
    (:bleed) Tj
  ET
EMC
/P << /MCID 59 >> BDC
  BT
    1 0 0 1 20 66.4 Tm
    /F2 10 Tf
    [ -4200 ( Supply. Defaults to 0 if not specified \(causing no automatic bleeding to happen\). Only makes sense if a ) ] TJ
  ET
EMC
/P << /MCID 60 >> BDC
  BT
    1 0 0 1 20 66.4 Tm
    /F1 10 Tf
    [ -46250 (:bleed) ] TJ
  ET
EMC
/P << /MCID 61 >> BDC
  BT
    1 0 0 1 20 66.4 Tm
    /F2 10 Tf
    [ -50450 ( Supply has also) ] TJ
    T*
    (been specified.) Tj
  ET
EMC
endstream
endobj

96 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

97 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

98 0 obj
<<
  /Type /Page
  /Contents 99 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources << /Font << /F1 34 0 R /F2 32 0 R /F3 31 0 R >> >>
  /StructParents 36
>>
endobj

99 0 obj
<< /Length 5858 >> stream
/P << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    (The ) Tj
  ET
EMC
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -2055 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -8655 ( named parameter indicates the scheduler to be used. Defaults to ) ] TJ
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F2 10 Tf
    [ -34899 ($*SCHEDULER) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 10 Tf
    [ -42099 (.) ] TJ
  ET
EMC
/H3 << /MCID 5 >> BDC
  BT
    1 0 0 1 20 723.4 Tm
    /F3 13 Tf
    (control messages) Tj
    14.3 TL
    T*
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 687.1 Tm
    /F1 10 Tf
    (These messages can be sent to the ) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 687.1 Tm
    /F2 10 Tf
    [ -14108 (:control) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 687.1 Tm
    /F1 10 Tf
    [ -19508 ( Supply. A control message consists of a string of the form "key: value", e.g. "limit: 4".) ] TJ
  ET
EMC
/Lbl << /MCID 9 >> BDC
  BT
    1 0 0 1 20 665.1 Tm
    () Tj
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 30 665.1 Tm
    (limit) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 643.1 Tm
    (Change the number of messages \(as initially given in the first positional\) to the value given.) Tj
  ET
EMC
/Lbl << /MCID 12 >> BDC
  BT
    1 0 0 1 20 621.1 Tm
    () Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 30 621.1 Tm
    (bleed) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 599.1 Tm
    (Route the given number of buffered messages to the ) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 599.1 Tm
    /F2 10 Tf
    [ -21385 (:bleed) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 599.1 Tm
    /F1 10 Tf
    [ -25585 ( Supply.) ] TJ
  ET
EMC
/Lbl << /MCID 17 >> BDC
  BT
    1 0 0 1 20 577.1 Tm
    () Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 30 577.1 Tm
    (vent-at) Tj
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 555.1 Tm
    (Change the maximum number of buffered values before automatic bleeding takes place. If the value is lower than before, will cause) Tj
    11 TL
    T*
    (immediate rerouting of buffered values to match the new maximum.) Tj
  ET
EMC
/Lbl << /MCID 20 >> BDC
  BT
    1 0 0 1 20 522.1 Tm
    () Tj
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 30 522.1 Tm
    (status) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 500.1 Tm
    (Send a status message to the ) Tj
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 500.1 Tm
    /F2 10 Tf
    [ -11860 (:status) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 500.1 Tm
    /F1 10 Tf
    [ -16660 ( Supply with the given id.) ] TJ
  ET
EMC
/H3 << /MCID 25 >> BDC
  BT
    1 0 0 1 20 471.5 Tm
    /F3 13 Tf
    (status message) Tj
    14.3 TL
    T*
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 435.2 Tm
    /F1 10 Tf
    (The status return message is a hash with the following keys:) Tj
  ET
EMC
/Lbl << /MCID 27 >> BDC
  BT
    1 0 0 1 20 413.2 Tm
    () Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 30 413.2 Tm
    (allowed) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    (The current number of messages / callables that is still allowed to be passed / executed.) Tj
  ET
EMC
/Lbl << /MCID 30 >> BDC
  BT
    1 0 0 1 20 369.2 Tm
    () Tj
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 30 369.2 Tm
    (bled) Tj
  ET
EMC
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 347.2 Tm
    (The number of messages routed to the ) Tj
  ET
EMC
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 347.2 Tm
    /F2 10 Tf
    [ -15775 (:bleed) ] TJ
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 347.2 Tm
    /F1 10 Tf
    [ -19975 ( Supply.) ] TJ
  ET
EMC
/Lbl << /MCID 35 >> BDC
  BT
    1 0 0 1 20 325.2 Tm
    () Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 30 325.2 Tm
    (buffered) Tj
  ET
EMC
/P << /MCID 37 >> BDC
  BT
    1 0 0 1 20 303.2 Tm
    (The number of messages currently buffered because of overflow.) Tj
  ET
EMC
/Lbl << /MCID 38 >> BDC
  BT
    1 0 0 1 20 281.2 Tm
    () Tj
  ET
EMC
/P << /MCID 39 >> BDC
  BT
    1 0 0 1 30 281.2 Tm
    (emitted) Tj
  ET
EMC
/P << /MCID 40 >> BDC
  BT
    1 0 0 1 20 259.2 Tm
    (The number of messages emitted \(passed through\).) Tj
  ET
EMC
/Lbl << /MCID 41 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    () Tj
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 30 237.2 Tm
    (id) Tj
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 215.2 Tm
    (The id of this status message \(a monotonically increasing number\). Handy if you want to log status messages.) Tj
  ET
EMC
/Lbl << /MCID 44 >> BDC
  BT
    1 0 0 1 20 193.2 Tm
    () Tj
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 30 193.2 Tm
    (limit) Tj
  ET
EMC
/P << /MCID 46 >> BDC
  BT
    1 0 0 1 20 171.2 Tm
    (The current limit that is being applied.) Tj
  ET
EMC
/Lbl << /MCID 47 >> BDC
  BT
    1 0 0 1 20 149.2 Tm
    () Tj
  ET
EMC
/P << /MCID 48 >> BDC
  BT
    1 0 0 1 30 149.2 Tm
    (vent-at) Tj
  ET
EMC
/P << /MCID 49 >> BDC
  BT
    1 0 0 1 20 127.2 Tm
    (The maximum number of messages that may be buffered before they're automatically re-routed to the ) Tj
  ET
EMC
/P << /MCID 50 >> BDC
  BT
    1 0 0 1 20 127.2 Tm
    /F2 10 Tf
    [ -41171 (:bleed) ] TJ
  ET
EMC
/P << /MCID 51 >> BDC
  BT
    1 0 0 1 20 127.2 Tm
    /F1 10 Tf
    [ -45371 ( Supply.) ] TJ
  ET
EMC
/H3 << /MCID 52 >> BDC
  BT
    1 0 0 1 20 98.6 Tm
    /F3 13 Tf
    (Examples) Tj
    T*
  ET
EMC
/P << /MCID 53 >> BDC
  BT
    1 0 0 1 20 62.3 Tm
    /F1 10 Tf
    (Have a simple piece of code announce when it starts running asynchronously, wait a random amount of time, then announce when it is done.) Tj
    11 TL
    T*
    (Do this 6 times, but don't let more than 3 of them run simultaneously.) Tj
  ET
EMC
endstream
endobj

100 0 obj
<<
  /Type /Page
  /Annots [ 101 0 R ]
  /Contents 103 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 104 0 R /GS2 105 0 R >>
    /Font << /F1 32 0 R /F2 34 0 R /F3 31 0 R >>
  >>
  /StructParents 37
>>
endobj

101 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 102 0 R
  /Border [ 0 0 0 ]
  /Contents (List.produce)
  /P 100 0 R
  /Rect [ 251.13 86.8 305.4 101.8 ]
  /StructParent 38
>>
endobj

102 0 obj
<< /Type /Action /S /URI /URI (/type/List#routine_produce) >>
endobj

103 0 obj
<< /Length 6903 >> stream
/Code << /MCID 0 >> BDC
  BT
    1 0 0 1 30 752 Tm
    /F1 8 Tf
    (my $s = Supply.from-list\(^6\);   set up supply) Tj
    8.8 TL
    T*
    (my $t = $s.throttle: 3,         only allow 3 at a time) Tj
    T*
    ({                               code block to run) Tj
    T*
    (    say "running $_";           announce we've started) Tj
    T*
    (    sleep rand;                 wait some random time) Tj
    T*
    (    say "done $_"               announce we're done) Tj
    T*
    (}                               don't need ; because } at end of line) Tj
    T*
    ($t.wait;                        wait for the supply to be done) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 679.6 562 83.2 re
  B
Q
/P << /MCID 1 >> BDC
  BT
    1 0 0 1 20 659.6 Tm
    /F2 10 Tf
    (and the result of one run will be:) Tj
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 642 Tm
    /F1 8 Tf
    (running 0) Tj
    T*
    (running 1) Tj
    T*
    (running 2) Tj
    T*
    (done 2) Tj
    T*
    (running 3) Tj
    T*
    (done 1) Tj
    T*
    (running 4) Tj
    T*
    (done 4) Tj
    T*
    (running 5) Tj
    T*
    (done 0) Tj
    T*
    (done 3) Tj
    T*
    (done 5) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 534.4 562 118.4 re
  B
Q
/H2 << /MCID 3 >> BDC
  BT
    1 0 0 1 20 501.2 Tm
    /F3 16 Tf
    (method stable) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 4 >> BDC
  BT
    1 0 0 1 30 466 Tm
    /F1 8 Tf
    (method stable\(Supply:D: $time, :$scheduler = $*SCHEDULER --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 455.2 562 21.6 re
  B
Q
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 435.2 Tm
    /F2 10 Tf
    (Creates a new supply that only passes on a value flowing through the given supply if it wasn't superseded by another value in the given ) Tj
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 435.2 Tm
    /F1 10 Tf
    [ -54562 ] TJ
    11 TL
    T*
    ($time) Tj
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F2 10 Tf
    [ -3600 ( \(in seconds\). Optionally uses another scheduler than the default scheduler, using the ) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F1 10 Tf
    [ -37983 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 424.2 Tm
    /F2 10 Tf
    [ -44583 ( parameter.) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    (To clarify the above, if, during the timeout ) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F1 10 Tf
    [ -17581 ($time) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F2 10 Tf
    [ -21181 (, additional values are emitted to the ) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F1 10 Tf
    [ -36207 (Supplier) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 402.2 Tm
    /F2 10 Tf
    [ -41607 ( all but the last one will be thrown) ] TJ
    T*
    (away. Each time an additional value is emitted to the ) Tj
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F1 10 Tf
    [ -21664 (Supplier) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F2 10 Tf
    [ -27064 (, during the timeout, ) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F1 10 Tf
    [ -35703 ($time) ] TJ
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 391.2 Tm
    /F2 10 Tf
    [ -39303 ( is reset.) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 369.2 Tm
    (This method can be quite useful when handling UI input, where it is not desired to perform an operation until the user has stopped typing for a) Tj
    T*
    (while rather than on every keystroke.) Tj
  ET
EMC
/Code << /MCID 20 >> BDC
  BT
    1 0 0 1 30 340.6 Tm
    /F1 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply1 = $supplier.Supply;) Tj
    T*
    ($supply1.tap\(-> $v { say "Supply1 got: $v" }\);) Tj
    T*
    ($supplier.emit\(42\);) Tj
    T*
    [  ] TJ
    T*
    (my Supply $supply2 = $supply1.stable\(5\);) Tj
    T*
    ($supply2.tap\(-> $v { say "Supply2 got: $v" }\);) Tj
    T*
    (sleep\(3\);) Tj
    T*
    ($supplier.emit\(43\);   will not be seen by $supply2 but will reset $time) Tj
    T*
    ($supplier.emit\(44\);) Tj
    T*
    (sleep\(10\);) Tj
    T*
    ( OUTPUT: «Supply1 got: 42Supply1 got: 43Supply1 got: 44Supply2 got: 44») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 233 562 118.4 re
  B
Q
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    (As can be seen above, ) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F1 10 Tf
    [ -9358 ($supply1) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -14758 ( received all values emitted to the ) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F1 10 Tf
    [ -28700 (Supplier) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -34100 ( while ) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F1 10 Tf
    [ -37072 ($supply2) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 213 Tm
    /F2 10 Tf
    [ -42472 ( only received one value. The 43) ] TJ
    11 TL
    T*
    (was thrown away because it was followed by another 'last' value 44 which was retained and sent to ) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 202 Tm
    /F1 10 Tf
    [ -40046 ($supply2) ] TJ
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 202 Tm
    /F2 10 Tf
    [ -45446 ( after approximately eight) ] TJ
    T*
    (seconds, this due to the fact that the timeout ) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 191 Tm
    /F1 10 Tf
    [ -18082 ($time) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 191 Tm
    /F2 10 Tf
    [ -21682 ( was reset after three seconds.) ] TJ
  ET
EMC
/H2 << /MCID 32 >> BDC
  BT
    1 0 0 1 20 155.8 Tm
    /F3 16 Tf
    (method produce) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 33 >> BDC
  BT
    1 0 0 1 30 120.6 Tm
    /F1 8 Tf
    (method produce\(Supply:D: &with --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 109.8 562 21.6 re
  B
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 89.8 Tm
    /F2 10 Tf
    (Creates a "producing" supply with the same semantics as ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 35 >> BDC
    BT
      1 0 0 1 20 89.8 Tm
      [ -23313 (List.produce) ] TJ
    ET
    q
      0.5 w
      253.13 88.8 m
      303.4 88.8 l
      S
    Q
  EMC
Q
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 89.8 Tm
    [ -28590 (.) ] TJ
  ET
EMC
/Code << /MCID 37 >> BDC
  BT
    1 0 0 1 30 72.2 Tm
    /F1 8 Tf
    (my $supply = Supply.from-list\(1..5\).produce\({$^a + $^b}\);) Tj
    T*
    ($supply.tap\(-> $v { say "$v" }\);  OUTPUT: «1361015») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 52.6 562 30.4 re
  B
Q
endstream
endobj

104 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

105 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

106 0 obj
<<
  /Type /Page
  /Annots [ 107 0 R 109 0 R 111 0 R 113 0 R 115 0 R ]
  /Contents 117 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 118 0 R /GS2 119 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 39
>>
endobj

107 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 108 0 R
  /Border [ 0 0 0 ]
  /Contents (unique)
  /P 106 0 R
  /Rect [ 520.71 414.6 551.93 429.6 ]
  /StructParent 40
>>
endobj

108 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_unique)
>>
endobj

109 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 110 0 R
  /Border [ 0 0 0 ]
  /Contents (unique)
  /P 106 0 R
  /Rect [ 527.36 291.4 558.58 306.4 ]
  /StructParent 41
>>
endobj

110 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_unique)
>>
endobj

111 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 112 0 R
  /Border [ 0 0 0 ]
  /Contents (repeated)
  /P 106 0 R
  /Rect [ 37.44 234.2 75.31 249.2 ]
  /StructParent 42
>>
endobj

112 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_repeated)
>>
endobj

113 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 114 0 R
  /Border [ 0 0 0 ]
  /Contents (Rakudo)
  /P 106 0 R
  /Rect [ 162.41 212.2 197.52 227.2 ]
  /StructParent 43
>>
endobj

114 0 obj
<< /Type /Action /S /URI /URI (/language/glossary#Rakudo) >>
endobj

115 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 116 0 R
  /Border [ 0 0 0 ]
  /Contents (squish)
  /P 106 0 R
  /Rect [ 520.71 111 550.27 126 ]
  /StructParent 44
>>
endobj

116 0 obj
<<
  /Type /Action
  /S /URI
  /URI (/language/independent-routines#routine_squish)
>>
endobj

117 0 obj
<< /Length 7139 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method lines) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method lines\(Supply:D: :$chomp = True --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 706 562 21.6 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    (Creates a supply that will emit the characters coming in line by line from a supply that's usually created by some asynchronous I/O operation.) Tj
    11 TL
    T*
    (The optional ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F2 10 Tf
    [ -5583 (:chomp) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F3 10 Tf
    [ -9783 ( parameter indicates whether to remove line separators: the default is ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F2 10 Tf
    [ -37832 (True) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F3 10 Tf
    [ -40832 (.) ] TJ
  ET
EMC
/H2 << /MCID 7 >> BDC
  BT
    1 0 0 1 20 639.8 Tm
    /F1 16 Tf
    (method words) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 8 >> BDC
  BT
    1 0 0 1 30 604.6 Tm
    /F2 8 Tf
    (method words\(Supply:D: --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 593.8 562 21.6 re
  B
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 573.8 Tm
    /F3 10 Tf
    (Creates a supply that will emit the characters coming in word for word from a supply that's usually created by some asynchronous I/O) Tj
    11 TL
    T*
    (operation.) Tj
  ET
EMC
/Code << /MCID 10 >> BDC
  BT
    1 0 0 1 30 545.2 Tm
    /F2 8 Tf
    (my $s = Supply.from-list\("Hello Word!".comb\);) Tj
    8.8 TL
    T*
    (my $ws = $s.words;) Tj
    T*
    ($ws.tap\(&say\);            OUTPUT: «HelloWord!») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 516.8 562 39.2 re
  B
Q
/H2 << /MCID 11 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F1 16 Tf
    (method unique) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 12 >> BDC
  BT
    1 0 0 1 30 448.4 Tm
    /F2 8 Tf
    (method unique\(Supply:D: :$as, :$with, :$expires --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 437.6 562 21.6 re
  B
Q
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    (Creates a supply that only provides unique values, as defined by the optional ) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F2 10 Tf
    [ -31191 (:as) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    [ -33591 ( and ) ] TJ
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F2 10 Tf
    [ -35785 (:with) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    /F3 10 Tf
    [ -39385 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 18 >> BDC
    BT
      1 0 0 1 20 417.6 Tm
      [ -50271 (unique) ] TJ
    ET
    q
      0.5 w
      522.71 416.6 m
      549.93 416.6 l
      S
    Q
  EMC
Q
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 417.6 Tm
    [ -53243 (\). The) ] TJ
    11 TL
    T*
    (optional ) Tj
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 406.6 Tm
    /F2 10 Tf
    [ -3778 (:expires) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 406.6 Tm
    /F3 10 Tf
    [ -9178 ( parameter how long to wait \(in seconds\) before "resetting" and not considering a value to have been seen, even if it's) ] TJ
    T*
    (the same as an old value.) Tj
  ET
EMC
/H2 << /MCID 22 >> BDC
  BT
    1 0 0 1 20 360.4 Tm
    /F1 16 Tf
    (method repeated) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 23 >> BDC
  BT
    1 0 0 1 30 325.2 Tm
    /F2 8 Tf
    (method repeated\(Supply:D: :&as, :&with\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 314.4 562 21.6 re
  B
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 294.4 Tm
    /F3 10 Tf
    (Creates a supply that only provides repeated values, as defined by the optional ) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 294.4 Tm
    /F2 10 Tf
    [ -31856 (:as) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 294.4 Tm
    /F3 10 Tf
    [ -34256 ( and ) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 294.4 Tm
    /F2 10 Tf
    [ -36450 (:with) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 294.4 Tm
    /F3 10 Tf
    [ -40050 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 29 >> BDC
    BT
      1 0 0 1 20 294.4 Tm
      [ -50936 (unique) ] TJ
    ET
    q
      0.5 w
      529.36 293.4 m
      556.58 293.4 l
      S
    Q
  EMC
Q
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 294.4 Tm
    [ -53908 (\).) ] TJ
  ET
EMC
/Code << /MCID 31 >> BDC
  BT
    1 0 0 1 30 276.8 Tm
    /F2 8 Tf
    (my $supply = Supply.from-list\(<a A B b c b C>\).repeated\(:as\(&lc\)\);) Tj
    T*
    ($supply.tap\(&say\);            OUTPUT: «AbbC») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 257.2 562 30.4 re
  B
Q
/P << /MCID 32 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    /F3 10 Tf
    (See ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 33 >> BDC
    BT
      1 0 0 1 20 237.2 Tm
      [ -1944 (repeated) ] TJ
    ET
    q
      0.5 w
      39.44 236.2 m
      73.31 236.2 l
      S
    Q
  EMC
Q
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 237.2 Tm
    [ -5581 ( for more examples that use its sub form.) ] TJ
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 215.2 Tm
    /F1 10 Tf
    (Note) Tj
  ET
EMC
/P << /MCID 36 >> BDC
  BT
    1 0 0 1 20 215.2 Tm
    /F3 10 Tf
    [ -2249 (: Available since version 6.e \() ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 37 >> BDC
    BT
      1 0 0 1 20 215.2 Tm
      [ -14441 (Rakudo) ] TJ
    ET
    q
      0.5 w
      164.41 214.2 m
      195.52 214.2 l
      S
    Q
  EMC
Q
/P << /MCID 38 >> BDC
  BT
    1 0 0 1 20 215.2 Tm
    [ -17802 ( 2020.01 and later\).) ] TJ
  ET
EMC
/H2 << /MCID 39 >> BDC
  BT
    1 0 0 1 20 180 Tm
    /F1 16 Tf
    (method squish) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 40 >> BDC
  BT
    1 0 0 1 30 144.8 Tm
    /F2 8 Tf
    (method squish\(Supply:D: :$as, :$with --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 134 562 21.6 re
  B
Q
/P << /MCID 41 >> BDC
  BT
    1 0 0 1 20 114 Tm
    /F3 10 Tf
    (Creates a supply that only provides unique values, as defined by the optional ) Tj
  ET
EMC
/P << /MCID 42 >> BDC
  BT
    1 0 0 1 20 114 Tm
    /F2 10 Tf
    [ -31191 (:as) ] TJ
  ET
EMC
/P << /MCID 43 >> BDC
  BT
    1 0 0 1 20 114 Tm
    /F3 10 Tf
    [ -33591 ( and ) ] TJ
  ET
EMC
/P << /MCID 44 >> BDC
  BT
    1 0 0 1 20 114 Tm
    /F2 10 Tf
    [ -35785 (:with) ] TJ
  ET
EMC
/P << /MCID 45 >> BDC
  BT
    1 0 0 1 20 114 Tm
    /F3 10 Tf
    [ -39385 ( parameters \(same as with ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 46 >> BDC
    BT
      1 0 0 1 20 114 Tm
      [ -50271 (squish) ] TJ
    ET
    q
      0.5 w
      522.71 113 m
      548.27 113 l
      S
    Q
  EMC
Q
/P << /MCID 47 >> BDC
  BT
    1 0 0 1 20 114 Tm
    [ -53077 (\).) ] TJ
  ET
EMC
endstream
endobj

118 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

119 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

120 0 obj
<<
  /Type /Page
  /Annots [ 121 0 R 123 0 R 125 0 R ]
  /Contents 127 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 128 0 R /GS2 129 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 45
>>
endobj

121 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 122 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.max)
  /P 120 0 R
  /Rect [ 213.79 661 254.73 676 ]
  /StructParent 46
>>
endobj

122 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_max) >>
endobj

123 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 124 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.min)
  /P 120 0 R
  /Rect [ 213.79 537.8 253.07 552.8 ]
  /StructParent 47
>>
endobj

124 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_min) >>
endobj

125 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 126 0 R
  /Border [ 0 0 0 ]
  /Contents (Any.minmax)
  /P 120 0 R
  /Rect [ 171.31 425.6 227.81 440.6 ]
  /StructParent 48
>>
endobj

126 0 obj
<< /Type /Action /S /URI /URI (/type/Any#routine_minmax) >>
endobj

127 0 obj
<< /Length 5785 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method max) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method max\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 706 562 21.6 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    (Creates a supply that only emits values from the given supply if they are larger than any value seen before. In other words, from a) Tj
    11 TL
    T*
    (continuously ascending supply it will emit all the values. From a continuously descending supply it will only emit the first value. The optional) Tj
    T*
    (parameter specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 3 >> BDC
    BT
      1 0 0 1 20 664 Tm
      [ -19579 (Any.max) ] TJ
    ET
    q
      0.5 w
      215.79 663 m
      252.73 663 l
      S
    Q
  EMC
Q
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 664 Tm
    [ -23523 (.) ] TJ
  ET
EMC
/H2 << /MCID 5 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F1 16 Tf
    (method min) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 593.6 Tm
    /F2 8 Tf
    (method min\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 582.8 562 21.6 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 562.8 Tm
    /F3 10 Tf
    (Creates a supply that only emits values from the given supply if they are smaller than any value seen before. In other words, from a) Tj
    11 TL
    T*
    (continuously descending supply it will emit all the values. From a continuously ascending supply it will only emit the first value. The optional) Tj
    T*
    (parameter specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 8 >> BDC
    BT
      1 0 0 1 20 540.8 Tm
      [ -19579 (Any.min) ] TJ
    ET
    q
      0.5 w
      215.79 539.8 m
      251.07 539.8 l
      S
    Q
  EMC
Q
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 540.8 Tm
    [ -23357 (.) ] TJ
  ET
EMC
/H2 << /MCID 10 >> BDC
  BT
    1 0 0 1 20 505.6 Tm
    /F1 16 Tf
    (method minmax) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 30 470.4 Tm
    /F2 8 Tf
    (method minmax\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 459.6 562 21.6 re
  B
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 439.6 Tm
    /F3 10 Tf
    (Creates a supply that emits a Range every time a new minimum or maximum values is seen from the given supply. The optional parameter) Tj
    11 TL
    T*
    (specifies the comparator, just as with ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 13 >> BDC
    BT
      1 0 0 1 20 428.6 Tm
      [ -15331 (Any.minmax) ] TJ
    ET
    q
      0.5 w
      173.31 427.6 m
      225.81 427.6 l
      S
    Q
  EMC
Q
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 428.6 Tm
    [ -20831 (.) ] TJ
  ET
EMC
/H2 << /MCID 15 >> BDC
  BT
    1 0 0 1 20 393.4 Tm
    /F1 16 Tf
    (method skip) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 16 >> BDC
  BT
    1 0 0 1 30 358.2 Tm
    /F2 8 Tf
    (method skip\(Supply:D: Int\(Cool\) $number = 1 --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 347.4 562 21.6 re
  B
Q
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F3 10 Tf
    (Returns a new ) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F2 10 Tf
    [ -6221 (Supply) ] TJ
  ET
EMC
/P << /MCID 19 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F3 10 Tf
    [ -10421 ( which will emit all values from the given ) ] TJ
  ET
EMC
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F2 10 Tf
    [ -27642 (Supply) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F3 10 Tf
    [ -31842 ( except for the first ) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F2 10 Tf
    [ -39951 ($number) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 327.4 Tm
    /F3 10 Tf
    [ -44751 ( values, which will be thrown) ] TJ
    11 TL
    T*
    (away.) Tj
  ET
EMC
/Code << /MCID 24 >> BDC
  BT
    1 0 0 1 30 298.8 Tm
    /F2 8 Tf
    (my $supplier = Supplier.new;) Tj
    8.8 TL
    T*
    (my $supply = $supplier.Supply;) Tj
    T*
    ($supply = $supply.skip\(3\);) Tj
    T*
    ($supply.tap\({ say $_ }\);) Tj
    T*
    ($supplier.emit\($_\) for 1..10;  OUTPUT: «45678910») Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 252.8 562 56.8 re
  B
Q
/H2 << /MCID 25 >> BDC
  BT
    1 0 0 1 20 219.6 Tm
    /F1 16 Tf
    (method start) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 26 >> BDC
  BT
    1 0 0 1 30 184.4 Tm
    /F2 8 Tf
    (method start\(Supply:D: &startee --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 173.6 562 21.6 re
  B
Q
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 153.6 Tm
    /F3 10 Tf
    (Creates a supply of supplies. For each value in the original supply, the code object is scheduled on another thread, and returns a supply either) Tj
    11 TL
    T*
    (of a single value \(if the code succeeds\), or one that quits without a value \(if the code fails\).) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 120.6 Tm
    (This is useful for asynchronously starting work that you don't block on.) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 98.6 Tm
    (Use ) Tj
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 98.6 Tm
    /F2 10 Tf
    [ -2055 (migrate) ] TJ
  ET
EMC
/P << /MCID 31 >> BDC
  BT
    1 0 0 1 20 98.6 Tm
    /F3 10 Tf
    [ -6855 ( to join the values into a single supply again.) ] TJ
  ET
EMC
endstream
endobj

128 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

129 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

130 0 obj
<<
  /Type /Page
  /Contents 131 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 132 0 R /GS2 133 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 49
>>
endobj

131 0 obj
<< /Length 4000 >> stream
/H2 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 16 Tf
    (method migrate) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 1 >> BDC
  BT
    1 0 0 1 30 716.8 Tm
    /F2 8 Tf
    (method migrate\(Supply:D: --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 706 562 21.6 re
  B
Q
/P << /MCID 2 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    (Takes a ) Tj
  ET
EMC
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F2 10 Tf
    [ -3582 (Supply) ] TJ
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    [ -7782 ( which itself has values that are of type ) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F2 10 Tf
    [ -23890 (Supply) ] TJ
  ET
EMC
/P << /MCID 6 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    [ -28090 ( as input. Each time the outer ) ] TJ
  ET
EMC
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F2 10 Tf
    [ -40283 (Supply) ] TJ
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    [ -44483 ( emits a new ) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F2 10 Tf
    [ -50010 (Supply) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 686 Tm
    /F3 10 Tf
    [ -54210 (, this) ] TJ
    11 TL
    T*
    (will be tapped and its values emitted. Any previously tapped ) Tj
  ET
EMC
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F2 10 Tf
    [ -24720 (Supply) ] TJ
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 675 Tm
    /F3 10 Tf
    [ -28920 ( will be closed. This is useful for migrating between different data) ] TJ
    T*
    (sources, and only paying attention to the latest one.) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 642 Tm
    (For example, imagine an application where the user can switch between different stocks. When they switch to a new one, a connection is) Tj
    T*
    (established to a web socket to get the latest values, and any previous connection should be closed. Each stream of values coming over the web) Tj
    T*
    (socket would be represented as a Supply, which themselves are emitted into a Supply of latest data sources to watch. The ) Tj
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 620 Tm
    /F2 10 Tf
    [ -48992 (migrate) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 620 Tm
    /F3 10 Tf
    [ -53792 ( method) ] TJ
    T*
    (could be used to flatten this supply of supplies into a single Supply of the current values that the user cares about.) Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 587 Tm
    (Here is a simple simulation of such a program:) Tj
  ET
EMC
/Code << /MCID 17 >> BDC
  BT
    1 0 0 1 30 569.4 Tm
    /F2 8 Tf
    (my Supplier $stock-sources .= new;) Tj
    8.8 TL
    T*
    [  ] TJ
    T*
    (sub watch-stock\($symbol\) {) Tj
    T*
    (    $stock-sources.emit: supply {) Tj
    T*
    (        say "Starting to watch $symbol";) Tj
    T*
    (        whenever Supply.interval\(1\) {) Tj
    T*
    (            emit "$symbol: 111." ~ 99.rand.Int;) Tj
    T*
    (        }) Tj
    T*
    (        CLOSE say "Lost interest in $symbol";) Tj
    T*
    (    }) Tj
    T*
    (}) Tj
    T*
    [  ] TJ
    T*
    ($stock-sources.Supply.migrate.tap: *.say;) Tj
    T*
    [  ] TJ
    T*
    (watch-stock\('GOOG'\);) Tj
    T*
    (sleep 3;) Tj
    T*
    (watch-stock\('AAPL'\);) Tj
    T*
    (sleep 3;) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 409 562 171.2 re
  B
Q
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 389 Tm
    /F3 10 Tf
    (Which produces output like:) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 30 371.4 Tm
    /F2 8 Tf
    (Starting to watch GOOG) Tj
    T*
    (GOOG: 111.67) Tj
    T*
    (GOOG: 111.20) Tj
    T*
    (GOOG: 111.37) Tj
    T*
    (Lost interest in GOOG) Tj
    T*
    (Starting to watch AAPL) Tj
    T*
    (AAPL: 111.55) Tj
    T*
    (AAPL: 111.6) Tj
    T*
    (AAPL: 111.6) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 290.2 562 92 re
  B
Q
endstream
endobj

132 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

133 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

134 0 obj
<<
  /Type /Page
  /Annots [ 135 0 R 137 0 R ]
  /Contents 139 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 140 0 R /GS2 141 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 50
>>
endobj

135 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 136 0 R
  /Border [ 0 0 0 ]
  /Contents (Lists)
  /P 134 0 R
  /Rect [ 486.83 491.6 510.28 506.6 ]
  /StructParent 51
>>
endobj

136 0 obj
<< /Type /Action /S /URI /URI (/type/List) >>
endobj

137 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 138 0 R
  /Border [ 0 0 0 ]
  /Contents (Lists)
  /P 134 0 R
  /Rect [ 491.83 313.4 515.28 328.4 ]
  /StructParent 52
>>
endobj

138 0 obj
<< /Type /Action /S /URI /URI (/type/List) >>
endobj

139 0 obj
<< /Length 4757 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (Methods that combine supplies) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    285.02 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (method merge) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (method merge\(Supply @*supplies --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 648.8 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    (Creates a supply to which any value seen from the given supplies, is emitted. The resulting supply is done only when all given supplies are) Tj
    11 TL
    T*
    (done. Can also be called as a class method.) Tj
  ET
EMC
/H2 << /MCID 4 >> BDC
  BT
    1 0 0 1 20 582.6 Tm
    /F1 16 Tf
    (method zip) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 543 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 525.4 Tm
    /F2 8 Tf
    (method zip\(**@s, :&with\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 514.6 562 21.6 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    (Creates a supply that emits combined values as soon as there is a new value seen on ) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F1 10 Tf
    [ -34050 (all) ] TJ
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    /F3 10 Tf
    [ -35356 ( of the supplies. By default, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 10 >> BDC
    BT
      1 0 0 1 20 494.6 Tm
      [ -46883 (Lists) ] TJ
    ET
    q
      0.5 w
      488.83 493.6 m
      508.28 493.6 l
      S
    Q
  EMC
Q
/P << /MCID 11 >> BDC
  BT
    1 0 0 1 20 494.6 Tm
    [ -49078 ( are created, but this) ] TJ
    11 TL
    T*
    (can be changed by specifying your own combiner with the ) Tj
  ET
EMC
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F2 10 Tf
    [ -23912 (:with) ] TJ
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F3 10 Tf
    [ -27512 ( parameter. The resulting supply is done as soon as ) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F1 10 Tf
    [ -48398 (any) ] TJ
  ET
EMC
/P << /MCID 15 >> BDC
  BT
    1 0 0 1 20 483.6 Tm
    /F3 10 Tf
    [ -50204 ( of the given) ] TJ
    T*
    (supplies are done. Can also be called as a class method.) Tj
  ET
EMC
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 450.6 Tm
    (This can also be used as a class method; in case it's used as an object method the corresponding supply will be one of the supplies combined) Tj
    T*
    (\(with no special treatment\).) Tj
  ET
EMC
/H2 << /MCID 17 >> BDC
  BT
    1 0 0 1 20 404.4 Tm
    /F1 16 Tf
    (method zip-latest) Tj
    17.6 TL
    T*
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 364.8 Tm
    /F3 10 Tf
    (Defined as:) Tj
  ET
EMC
/Code << /MCID 19 >> BDC
  BT
    1 0 0 1 30 347.2 Tm
    /F2 8 Tf
    (method zip-latest\(**@s, :&with, :$initial \)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 336.4 562 21.6 re
  B
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 316.4 Tm
    /F3 10 Tf
    (Creates a supply that emits combined values as soon as there is a new value seen on ) Tj
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 316.4 Tm
    /F1 10 Tf
    [ -34050 (any) ] TJ
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 316.4 Tm
    /F3 10 Tf
    [ -35856 ( of the supplies. By default, ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 23 >> BDC
    BT
      1 0 0 1 20 316.4 Tm
      [ -47383 (Lists) ] TJ
    ET
    q
      0.5 w
      493.83 315.4 m
      513.28 315.4 l
      S
    Q
  EMC
Q
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 316.4 Tm
    [ -49578 ( are created, but) ] TJ
    11 TL
    T*
    (this can be changed by specifying your own combiner with the ) Tj
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 305.4 Tm
    /F2 10 Tf
    [ -25607 (:with) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 305.4 Tm
    /F3 10 Tf
    [ -29207 ( parameter. The optional :initial parameter can be used to indicate the) ] TJ
    T*
    (initial state of the combined values. By default, all supplies have to have at least one value emitted on them before the first combined values is) Tj
    T*
    (emitted on the resulting supply. The resulting supply is done as soon as ) Tj
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 283.4 Tm
    /F1 10 Tf
    [ -29027 (any) ] TJ
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 283.4 Tm
    /F3 10 Tf
    [ -30833 ( of the given supplies are done. Can also be called as a class) ] TJ
    T*
    (method.) Tj
  ET
EMC
endstream
endobj

140 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

141 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

142 0 obj
<<
  /Type /Page
  /Annots [ 143 0 R 145 0 R ]
  /Contents 147 0 R
  /MediaBox [ 0 0 612 792 ]
  /Parent 22 0 R
  /Resources <<
    /ExtGState << /GS1 148 0 R /GS2 149 0 R >>
    /Font << /F1 31 0 R /F2 32 0 R /F3 34 0 R >>
  >>
  /StructParents 53
>>
endobj

143 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 144 0 R
  /Border [ 0 0 0 ]
  /Contents (enum)
  /P 142 0 R
  /Rect [ 35.77 485 61.99 500 ]
  /StructParent 54
>>
endobj

144 0 obj
<< /Type /Action /S /URI /URI (/language/typesystem#enum) >>
endobj

145 0 obj
<<
  /Type /Annot
  /Subtype /Link
  /A 146 0 R
  /Border [ 0 0 0 ]
  /Contents (Rakudo)
  /P 142 0 R
  /Rect [ 48.82 463 83.93 478 ]
  /StructParent 55
>>
endobj

146 0 obj
<< /Type /Action /S /URI /URI (/language/glossary#Rakudo) >>
endobj

147 0 obj
<< /Length 5617 >> stream
/H1 << /MCID 0 >> BDC
  BT
    1 0 0 1 20 752 Tm
    /F1 20 Tf
    (I/O features exposed as supplies) Tj
    22 TL
    T*
  ET
  q
    1 w
    20 750 m
    292.24 750 l
    S
  Q
EMC
/H2 << /MCID 1 >> BDC
  BT
    1 0 0 1 20 694.8 Tm
    /F1 16 Tf
    (sub signal) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 2 >> BDC
  BT
    1 0 0 1 30 659.6 Tm
    /F2 8 Tf
    (sub signal\(*@signals, :$scheduler = $*SCHEDULER\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 648.8 562 21.6 re
  B
Q
/P << /MCID 3 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    (Creates a supply for the Signal enums \(such as SIGINT\) specified, and an optional ) Tj
  ET
EMC
/P << /MCID 4 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F2 10 Tf
    [ -33550 (:scheduler) ] TJ
  ET
EMC
/P << /MCID 5 >> BDC
  BT
    1 0 0 1 20 628.8 Tm
    /F3 10 Tf
    [ -40150 ( parameter. Any signals received, will be) ] TJ
    11 TL
    T*
    (emitted on the supply. For example:) Tj
  ET
EMC
/Code << /MCID 6 >> BDC
  BT
    1 0 0 1 30 600.2 Tm
    /F2 8 Tf
    (signal\(SIGINT\).tap\( { say "Thank you for your attention"; exit 0 } \);) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 589.4 562 21.6 re
  B
Q
/P << /MCID 7 >> BDC
  BT
    1 0 0 1 20 569.4 Tm
    /F3 10 Tf
    (would catch Control-C, thank you, and then exit.) Tj
  ET
EMC
/P << /MCID 8 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    (To go from a signal number to a ) Tj
  ET
EMC
/P << /MCID 9 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    [ -13415 (Signal) ] TJ
  ET
EMC
/P << /MCID 10 >> BDC
  BT
    1 0 0 1 20 547.4 Tm
    [ -16221 (, you can do something like this:) ] TJ
  ET
EMC
/Code << /MCID 11 >> BDC
  BT
    1 0 0 1 30 529.8 Tm
    /F2 8 Tf
    (signal\(Signal\(2\)\).tap\( -> $sig { say "Received signal: $sig" } \);) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 519 562 21.6 re
  B
Q
/P << /MCID 12 >> BDC
  BT
    1 0 0 1 20 499 Tm
    /F3 10 Tf
    (The list of supported signals can be found by checking ) Tj
  ET
EMC
/P << /MCID 13 >> BDC
  BT
    1 0 0 1 20 499 Tm
    /F2 10 Tf
    [ -22358 (Signal::.keys) ] TJ
  ET
EMC
/P << /MCID 14 >> BDC
  BT
    1 0 0 1 20 499 Tm
    /F3 10 Tf
    [ -30758 ( \(as you would any enum\). For more details on how enums work) ] TJ
    11 TL
    T*
    (see ) Tj
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 15 >> BDC
    BT
      1 0 0 1 20 488 Tm
      [ -1777 (enum) ] TJ
    ET
    q
      0.5 w
      37.77 487 m
      59.99 487 l
      S
    Q
  EMC
Q
/P << /MCID 16 >> BDC
  BT
    1 0 0 1 20 488 Tm
    [ -4249 (.) ] TJ
  ET
EMC
/P << /MCID 17 >> BDC
  BT
    1 0 0 1 20 466 Tm
    /F1 10 Tf
    (Note:) Tj
  ET
EMC
/P << /MCID 18 >> BDC
  BT
    1 0 0 1 20 466 Tm
    /F3 10 Tf
    [ -2582 ( ) ] TJ
  ET
EMC
q
  0 0 1 rg
  0 0 1 RG
  /Link << /MCID 19 >> BDC
    BT
      1 0 0 1 20 466 Tm
      [ -3082 (Rakudo) ] TJ
    ET
    q
      0.5 w
      50.82 465 m
      81.93 465 l
      S
    Q
  EMC
Q
/P << /MCID 20 >> BDC
  BT
    1 0 0 1 20 466 Tm
    [ -6443 ( versions up to 2018.05 had a bug due to which numeric values of signals were incorrect on some systems. For example, ) ] TJ
  ET
EMC
/P << /MCID 21 >> BDC
  BT
    1 0 0 1 20 466 Tm
    /F2 10 Tf
    [ -55103 ] TJ
    T*
    (Signal\(10\)) Tj
  ET
EMC
/P << /MCID 22 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F3 10 Tf
    [ -6600 ( was returning ) ] TJ
  ET
EMC
/P << /MCID 23 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F2 10 Tf
    [ -12821 (SIGBUS) ] TJ
  ET
EMC
/P << /MCID 24 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F3 10 Tf
    [ -17021 ( even if it was actually ) ] TJ
  ET
EMC
/P << /MCID 25 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F2 10 Tf
    [ -26547 (SIGUSR1) ] TJ
  ET
EMC
/P << /MCID 26 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F3 10 Tf
    [ -31347 ( on a particular system. That being said, using ) ] TJ
  ET
EMC
/P << /MCID 27 >> BDC
  BT
    1 0 0 1 20 455 Tm
    /F2 10 Tf
    [ -50234 ] TJ
    T*
    (signal\(SIGUSR1\)) Tj
  ET
EMC
/P << /MCID 28 >> BDC
  BT
    1 0 0 1 20 444 Tm
    /F3 10 Tf
    [ -9600 ( was working as expected on all Rakudo versions except 2018.04, 2018.04.1 and 2018.05, where the intended) ] TJ
    T*
    (behavior can be achieved by using ) Tj
  ET
EMC
/P << /MCID 29 >> BDC
  BT
    1 0 0 1 20 433 Tm
    /F2 10 Tf
    [ -14302 (signal\(SIGBUS\)) ] TJ
  ET
EMC
/P << /MCID 30 >> BDC
  BT
    1 0 0 1 20 433 Tm
    /F3 10 Tf
    [ -23302 ( instead. These issues are resolved in Rakudo releases after 2018.05.) ] TJ
  ET
EMC
/H2 << /MCID 31 >> BDC
  BT
    1 0 0 1 20 397.8 Tm
    /F1 16 Tf
    (method IO::Notification.watch-path) Tj
    17.6 TL
    T*
  ET
EMC
/Code << /MCID 32 >> BDC
  BT
    1 0 0 1 30 362.6 Tm
    /F2 8 Tf
    (method watch-path\($path --> Supply:D\)) Tj
    8.8 TL
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 351.8 562 21.6 re
  B
Q
/P << /MCID 33 >> BDC
  BT
    1 0 0 1 20 331.8 Tm
    /F3 10 Tf
    (Creates a supply to which the OS will emit values to indicate changes on the filesystem for the given path. Also has a shortcut with the ) Tj
  ET
EMC
/P << /MCID 34 >> BDC
  BT
    1 0 0 1 20 331.8 Tm
    /F2 10 Tf
    [ -54439 ] TJ
    11 TL
    T*
    (watch) Tj
  ET
EMC
/P << /MCID 35 >> BDC
  BT
    1 0 0 1 20 320.8 Tm
    /F3 10 Tf
    [ -3600 ( method on an IO object, like this:) ] TJ
  ET
EMC
/Code << /MCID 36 >> BDC
  BT
    1 0 0 1 30 303.2 Tm
    /F2 8 Tf
    (IO::Notification.watch-path\("."\).act\( { say "$^file changed" } \);) Tj
    8.8 TL
    T*
    (".".IO.watch.act\(                     { say "$^file changed" } \);    same) Tj
    T*
  ET
EMC
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  28 283.6 562 30.4 re
  B
Q
endstream
endobj

148 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

149 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

150 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

151 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

152 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Italic
  /Encoding /WinAnsiEncoding
>>
endobj

153 0 obj
<< /Count 62 /First 154 0 R /Last 2185 0 R >>
endobj

154 0 obj
<<
  /Count 2
  /Dest /class_Supply
  /First 155 0 R
  /Last 155 0 R
  /Next 2128 0 R
  /SE 160 0 R
  /Title (class Supply)
>>
endobj

155 0 obj
<<
  /Count 1
  /Dest /Asynchronous_data_stream_with_multiple_subscribers
  /SE 156 0 R
  /Title (Asynchronous data stream with multiple subscribers)
>>
endobj

156 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 157 0 R ]
  /P 159 0 R
  /T (Asynchronous data stream with multiple subscribers)
>>
endobj

157 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Asynchronous data stream with multiple subscribers\n)
  /K [ 158 0 R ]
  /P 156 0 R
>>
endobj

158 0 obj
<< /Type /MCR /MCID 1 /Pg 4 0 R >>
endobj

159 0 obj
<<
  /Type /StructElem
  /S /Document
  /K [ 160 0 R 156 0 R 163 0 R 166 0 R 179 0 R 188 0 R 207 0 R 218 0 R 247 0 R 250 0 R 279 0 R 292 0 R 301 0 R 304 0 R 307 0 R 310 0 R 317 0 R 348 0 R 371 0 R 412 0 R 429 0 R 432 0 R 435 0 R 438 0 R 441 0 R 444 0 R 451 0 R 454 0 R 457 0 R 460 0 R 463 0 R 472 0 R 475 0 R 478 0 R 491 0 R 494 0 R 497 0 R 542 0 R 545 0 R 552 0 R 555 0 R 558 0 R 581 0 R 584 0 R 587 0 R 590 0 R 593 0 R 596 0 R 599 0 R 602 0 R 605 0 R 632 0 R 635 0 R 638 0 R 641 0 R 668 0 R 671 0 R 674 0 R 685 0 R 688 0 R 691 0 R 722 0 R 725 0 R 728 0 R 731 0 R 762 0 R 765 0 R 768 0 R 771 0 R 808 0 R 811 0 R 814 0 R 817 0 R 842 0 R 845 0 R 848 0 R 851 0 R 854 0 R 863 0 R 866 0 R 869 0 R 872 0 R 875 0 R 878 0 R 881 0 R 884 0 R 887 0 R 890 0 R 893 0 R 896 0 R 899 0 R 902 0 R 905 0 R 908 0 R 911 0 R 914 0 R 917 0 R 960 0 R 963 0 R 966 0 R 969 0 R 980 0 R 995 0 R 998 0 R 1001 0 R 1008 0 R 1011 0 R 1014 0 R 1017 0 R 1024 0 R 1027 0 R 1030 0 R 1033 0 R 1044 0 R 1061 0 R 1064 0 R 1067 0 R 1070 0 R 1073 0 R 1076 0 R 1079 0 R 1088 0 R 1091 0 R 1100 0 R 1103 0 R 1106 0 R 1109 0 R 1118 0 R 1121 0 R 1140 0 R 1143 0 R 1146 0 R 1149 0 R 1152 0 R 1175 0 R 1178 0 R 1181 0 R 1184 0 R 1213 0 R 1216 0 R 1219 0 R 1222 0 R 1229 0 R 1232 0 R 1237 0 R 1240 0 R 1243 0 R 1252 0 R 1255 0 R 1258 0 R 1261 0 R 1264 0 R 1267 0 R 1270 0 R 1273 0 R 1280 0 R 1346 0 R 1353 0 R 1356 0 R 1359 0 R 1374 0 R 1381 0 R 1384 0 R 1387 0 R 1394 0 R 1407 0 R 1422 0 R 1437 0 R 1448 0 R 1451 0 R 1458 0 R 1466 0 R 1469 0 R 1477 0 R 1484 0 R 1492 0 R 1495 0 R 1503 0 R 1510 0 R 1513 0 R 1516 0 R 1524 0 R 1527 0 R 1535 0 R 1542 0 R 1550 0 R 1553 0 R 1561 0 R 1564 0 R 1572 0 R 1575 0 R 1583 0 R 1586 0 R 1594 0 R 1601 0 R 1604 0 R 1607 0 R 1610 0 R 1613 0 R 1616 0 R 1619 0 R 1622 0 R 1633 0 R 1652 0 R 1655 0 R 1658 0 R 1681 0 R 1684 0 R 1687 0 R 1696 0 R 1699 0 R 1702 0 R 1705 0 R 1716 0 R 1719 0 R 1722 0 R 1725 0 R 1728 0 R 1731 0 R 1734 0 R 1755 0 R 1758 0 R 1761 0 R 1778 0 R 1781 0 R 1790 0 R 1801 0 R 1804 0 R 1807 0 R 1824 0 R 1827 0 R 1830 0 R 1839 0 R 1842 0 R 1845 0 R 1854 0 R 1857 0 R 1860 0 R 1869 0 R 1872 0 R 1875 0 R 1890 0 R 1893 0 R 1896 0 R 1899 0 R 1902 0 R 1905 0 R 1912 0 R 1915 0 R 1918 0 R 1941 0 R 1948 0 R 1951 0 R 1954 0 R 1957 0 R 1960 0 R 1963 0 R 1966 0 R 1969 0 R 1972 0 R 1975 0 R 1978 0 R 1981 0 R 2002 0 R 2005 0 R 2008 0 R 2011 0 R 2014 0 R 2035 0 R 2038 0 R 2041 0 R 2044 0 R 2051 0 R 2054 0 R 2057 0 R 2064 0 R 2067 0 R 2080 0 R 2111 0 R 2114 0 R 2117 0 R 2124 0 R ]
  /P 2127 0 R
>>
endobj

160 0 obj
<< /Type /StructElem /S /H1 /K [ 161 0 R ] /P 159 0 R /T (class Supply) >>
endobj

161 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (class Supply\n)
  /K [ 162 0 R ]
  /P 160 0 R
>>
endobj

162 0 obj
<< /Type /MCR /MCID 0 /Pg 4 0 R >>
endobj

163 0 obj
<< /Type /StructElem /S /Code /K [ 164 0 R ] /P 159 0 R >>
endobj

164 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (    class Supply does Awaitable {}\n)
  /K [ 165 0 R ]
  /P 163 0 R
>>
endobj

165 0 obj
<< /Type /MCR /MCID 2 /Pg 4 0 R >>
endobj

166 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 167 0 R 169 0 R 173 0 R 175 0 R 177 0 R ]
  /P 159 0 R
>>
endobj

167 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (A supply is a thread-safe, asynchronous data stream like a )
  /K [ 168 0 R ]
  /P 166 0 R
>>
endobj

168 0 obj
<< /Type /MCR /MCID 3 /Pg 4 0 R >>
endobj

169 0 obj
<< /Type /StructElem /S /Link /K [ 170 0 R 171 0 R ] /P 166 0 R >>
endobj

170 0 obj
<< /Type /OBJR /Obj 5 0 R /Pg 4 0 R >>
endobj

171 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Channel)
  /K [ 172 0 R ]
  /P 169 0 R
>>
endobj

172 0 obj
<< /Type /MCR /MCID 4 /Pg 4 0 R >>
endobj

173 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, but it can have multiple subscribers \()
  /K [ 174 0 R ]
  /P 166 0 R
>>
endobj

174 0 obj
<< /Type /MCR /MCID 5 /Pg 4 0 R >>
endobj

175 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (taps)
  /K [ 176 0 R ]
  /P 166 0 R
>>
endobj

176 0 obj
<< /Type /MCR /MCID 6 /Pg 4 0 R >>
endobj

177 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\) that all get the same values flowing through the supply.)
  /K [ 178 0 R ]
  /P 166 0 R
>>
endobj

178 0 obj
<< /Type /MCR /MCID 7 /Pg 4 0 R >>
endobj

179 0 obj
<< /Type /StructElem /S /P /K [ 180 0 R 182 0 R 186 0 R ] /P 159 0 R >>
endobj

180 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (It is a thread-safe implementation of the )
  /K [ 181 0 R ]
  /P 179 0 R
>>
endobj

181 0 obj
<< /Type /MCR /MCID 8 /Pg 4 0 R >>
endobj

182 0 obj
<< /Type /StructElem /S /Link /K [ 183 0 R 184 0 R ] /P 179 0 R >>
endobj

183 0 obj
<< /Type /OBJR /Obj 7 0 R /Pg 4 0 R >>
endobj

184 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Observer Pattern)
  /K [ 185 0 R ]
  /P 182 0 R
>>
endobj

185 0 obj
<< /Type /MCR /MCID 9 /Pg 4 0 R >>
endobj

186 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, and central to supporting reactive programming in Raku.)
  /K [ 187 0 R ]
  /P 179 0 R
>>
endobj

187 0 obj
<< /Type /MCR /MCID 10 /Pg 4 0 R >>
endobj

188 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 189 0 R 191 0 R 193 0 R 195 0 R 197 0 R 199 0 R 201 0 R 203 0 R 205 0 R ]
  /P 159 0 R
>>
endobj

189 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (There are two types of Supplies: )
  /K [ 190 0 R ]
  /P 188 0 R
>>
endobj

190 0 obj
<< /Type /MCR /MCID 11 /Pg 4 0 R >>
endobj

191 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (live)
  /K [ 192 0 R ]
  /P 188 0 R
>>
endobj

192 0 obj
<< /Type /MCR /MCID 12 /Pg 4 0 R >>
endobj

193 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and )
  /K [ 194 0 R ]
  /P 188 0 R
>>
endobj

194 0 obj
<< /Type /MCR /MCID 13 /Pg 4 0 R >>
endobj

195 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (on demand)
  /K [ 196 0 R ]
  /P 188 0 R
>>
endobj

196 0 obj
<< /Type /MCR /MCID 14 /Pg 4 0 R >>
endobj

197 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. When tapping into a )
  /K [ 198 0 R ]
  /P 188 0 R
>>
endobj

198 0 obj
<< /Type /MCR /MCID 15 /Pg 4 0 R >>
endobj

199 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (live)
  /K [ 200 0 R ]
  /P 188 0 R
>>
endobj

200 0 obj
<< /Type /MCR /MCID 16 /Pg 4 0 R >>
endobj

201 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( supply, the tap will only see values that are flowing through the supply )
  /K [ 202 0 R ]
  /P 188 0 R
>>
endobj

202 0 obj
<< /Type /MCR /MCID 17 /Pg 4 0 R >>
endobj

203 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (after)
  /K [ 204 0 R ]
  /P 188 0 R
>>
endobj

204 0 obj
<< /Type /MCR /MCID 18 /Pg 4 0 R >>
endobj

205 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( the tap has been created. Such supplies are normally infinite in nature, such as mouse movements. Closing such a tap does not stop mouse events from occurring, it just means that the values will go by unseen. All tappers see the same flow of values.)
  /K [ 206 0 R ]
  /P 188 0 R
>>
endobj

206 0 obj
<< /Type /MCR /MCID 19 /Pg 4 0 R >>
endobj

207 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 208 0 R 210 0 R 212 0 R 214 0 R 216 0 R ]
  /P 159 0 R
>>
endobj

208 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (A tap on an )
  /K [ 209 0 R ]
  /P 207 0 R
>>
endobj

209 0 obj
<< /Type /MCR /MCID 20 /Pg 4 0 R >>
endobj

210 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (on demand)
  /K [ 211 0 R ]
  /P 207 0 R
>>
endobj

211 0 obj
<< /Type /MCR /MCID 21 /Pg 4 0 R >>
endobj

212 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( supply will initiate the production of values, and tapping the supply again may result in a new set of values. For example, )
  /K [ 213 0 R ]
  /P 207 0 R
>>
endobj

213 0 obj
<< /Type /MCR /MCID 22 /Pg 4 0 R >>
endobj

214 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply.interval)
  /K [ 215 0 R ]
  /P 207 0 R
>>
endobj

215 0 obj
<< /Type /MCR /MCID 23 /Pg 4 0 R >>
endobj

216 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( produces a fresh timer with the appropriate interval each time it is tapped. If the tap is closed, the timer simply stops emitting values to that tap.)
  /K [ 217 0 R ]
  /P 207 0 R
>>
endobj

217 0 obj
<< /Type /MCR /MCID 24 /Pg 4 0 R >>
endobj

218 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 219 0 R 221 0 R 223 0 R 225 0 R 227 0 R 229 0 R 233 0 R 235 0 R 237 0 R 239 0 R 241 0 R 243 0 R 245 0 R ]
  /P 159 0 R
>>
endobj

219 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (A )
  /K [ 220 0 R ]
  /P 218 0 R
>>
endobj

220 0 obj
<< /Type /MCR /MCID 25 /Pg 4 0 R >>
endobj

221 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (live)
  /K [ 222 0 R ]
  /P 218 0 R
>>
endobj

222 0 obj
<< /Type /MCR /MCID 26 /Pg 4 0 R >>
endobj

223 0 obj
<< /Type /StructElem /S /Span /ActualText ( ) /K [ 224 0 R ] /P 218 0 R >>
endobj

224 0 obj
<< /Type /MCR /MCID 27 /Pg 4 0 R >>
endobj

225 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 226 0 R ]
  /P 218 0 R
>>
endobj

226 0 obj
<< /Type /MCR /MCID 28 /Pg 4 0 R >>
endobj

227 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is obtained from the )
  /K [ 228 0 R ]
  /P 218 0 R
>>
endobj

228 0 obj
<< /Type /MCR /MCID 29 /Pg 4 0 R >>
endobj

229 0 obj
<< /Type /StructElem /S /Link /K [ 230 0 R 231 0 R ] /P 218 0 R >>
endobj

230 0 obj
<< /Type /OBJR /Obj 9 0 R /Pg 4 0 R >>
endobj

231 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 232 0 R ]
  /P 229 0 R
>>
endobj

232 0 obj
<< /Type /MCR /MCID 30 /Pg 4 0 R >>
endobj

233 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( factory method )
  /K [ 234 0 R ]
  /P 218 0 R
>>
endobj

234 0 obj
<< /Type /MCR /MCID 31 /Pg 4 0 R >>
endobj

235 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 236 0 R ]
  /P 218 0 R
>>
endobj

236 0 obj
<< /Type /MCR /MCID 32 /Pg 4 0 R >>
endobj

237 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. New values are emitted by calling )
  /K [ 238 0 R ]
  /P 218 0 R
>>
endobj

238 0 obj
<< /Type /MCR /MCID 33 /Pg 4 0 R >>
endobj

239 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (emit)
  /K [ 240 0 R ]
  /P 218 0 R
>>
endobj

240 0 obj
<< /Type /MCR /MCID 34 /Pg 4 0 R >>
endobj

241 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( on the )
  /K [ 242 0 R ]
  /P 218 0 R
>>
endobj

242 0 obj
<< /Type /MCR /MCID 35 /Pg 4 0 R >>
endobj

243 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 244 0 R ]
  /P 218 0 R
>>
endobj

244 0 obj
<< /Type /MCR /MCID 36 /Pg 4 0 R >>
endobj

245 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( object.)
  /K [ 246 0 R ]
  /P 218 0 R
>>
endobj

246 0 obj
<< /Type /MCR /MCID 37 /Pg 4 0 R >>
endobj

247 0 obj
<< /Type /StructElem /S /Code /K [ 248 0 R ] /P 159 0 R >>
endobj

248 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $supplier = Supplier.new;\nmy $supply = $supplier.Supply;\n$supply.tap\(-> $v { say "$v" }\);\n$supplier.emit\(42\); # Will cause the tap to output "42"\n)
  /K [ 249 0 R ]
  /P 247 0 R
>>
endobj

249 0 obj
<< /Type /MCR /MCID 38 /Pg 4 0 R >>
endobj

250 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 251 0 R 253 0 R 257 0 R 259 0 R 261 0 R 263 0 R 267 0 R 269 0 R 273 0 R 275 0 R 277 0 R ]
  /P 159 0 R
>>
endobj

251 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 252 0 R ]
  /P 250 0 R
>>
endobj

252 0 obj
<< /Type /MCR /MCID 39 /Pg 4 0 R >>
endobj

253 0 obj
<< /Type /StructElem /S /Link /K [ 254 0 R 255 0 R ] /P 250 0 R >>
endobj

254 0 obj
<< /Type /OBJR /Obj 11 0 R /Pg 4 0 R >>
endobj

255 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (live method)
  /K [ 256 0 R ]
  /P 253 0 R
>>
endobj

256 0 obj
<< /Type /MCR /MCID 40 /Pg 4 0 R >>
endobj

257 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( returns )
  /K [ 258 0 R ]
  /P 250 0 R
>>
endobj

258 0 obj
<< /Type /MCR /MCID 41 /Pg 4 0 R >>
endobj

259 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (True)
  /K [ 260 0 R ]
  /P 250 0 R
>>
endobj

260 0 obj
<< /Type /MCR /MCID 42 /Pg 4 0 R >>
endobj

261 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( on live supplies. Factory methods such as )
  /K [ 262 0 R ]
  /P 250 0 R
>>
endobj

262 0 obj
<< /Type /MCR /MCID 43 /Pg 4 0 R >>
endobj

263 0 obj
<< /Type /StructElem /S /Link /K [ 264 0 R 265 0 R ] /P 250 0 R >>
endobj

264 0 obj
<< /Type /OBJR /Obj 13 0 R /Pg 4 0 R >>
endobj

265 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (interval)
  /K [ 266 0 R ]
  /P 263 0 R
>>
endobj

266 0 obj
<< /Type /MCR /MCID 44 /Pg 4 0 R >>
endobj

267 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, )
  /K [ 268 0 R ]
  /P 250 0 R
>>
endobj

268 0 obj
<< /Type /MCR /MCID 45 /Pg 4 0 R >>
endobj

269 0 obj
<< /Type /StructElem /S /Link /K [ 270 0 R 271 0 R ] /P 250 0 R >>
endobj

270 0 obj
<< /Type /OBJR /Obj 15 0 R /Pg 4 0 R >>
endobj

271 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (from-list)
  /K [ 272 0 R ]
  /P 269 0 R
>>
endobj

272 0 obj
<< /Type /MCR /MCID 46 /Pg 4 0 R >>
endobj

273 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( will return )
  /K [ 274 0 R ]
  /P 250 0 R
>>
endobj

274 0 obj
<< /Type /MCR /MCID 47 /Pg 4 0 R >>
endobj

275 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (on demand)
  /K [ 276 0 R ]
  /P 250 0 R
>>
endobj

276 0 obj
<< /Type /MCR /MCID 48 /Pg 4 0 R >>
endobj

277 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( supplies.)
  /K [ 278 0 R ]
  /P 250 0 R
>>
endobj

278 0 obj
<< /Type /MCR /MCID 49 /Pg 4 0 R >>
endobj

279 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 280 0 R 282 0 R 284 0 R 286 0 R 290 0 R ]
  /P 159 0 R
>>
endobj

280 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (A live )
  /K [ 281 0 R ]
  /P 279 0 R
>>
endobj

281 0 obj
<< /Type /MCR /MCID 50 /Pg 4 0 R >>
endobj

282 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 283 0 R ]
  /P 279 0 R
>>
endobj

283 0 obj
<< /Type /MCR /MCID 51 /Pg 4 0 R >>
endobj

284 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( that keeps values until tapped the first time can be created with )
  /K [ 285 0 R ]
  /P 279 0 R
>>
endobj

285 0 obj
<< /Type /MCR /MCID 52 /Pg 4 0 R >>
endobj

286 0 obj
<< /Type /StructElem /S /Link /K [ 287 0 R 288 0 R ] /P 279 0 R >>
endobj

287 0 obj
<< /Type /OBJR /Obj 17 0 R /Pg 4 0 R >>
endobj

288 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier::Preserving)
  /K [ 289 0 R ]
  /P 286 0 R
>>
endobj

289 0 obj
<< /Type /MCR /MCID 53 /Pg 4 0 R >>
endobj

290 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 291 0 R ] /P 279 0 R >>
endobj

291 0 obj
<< /Type /MCR /MCID 54 /Pg 4 0 R >>
endobj

292 0 obj
<< /Type /StructElem /S /P /K [ 293 0 R 295 0 R 299 0 R ] /P 159 0 R >>
endobj

293 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Further examples can be found in the )
  /K [ 294 0 R ]
  /P 292 0 R
>>
endobj

294 0 obj
<< /Type /MCR /MCID 55 /Pg 4 0 R >>
endobj

295 0 obj
<< /Type /StructElem /S /Link /K [ 296 0 R 297 0 R ] /P 292 0 R >>
endobj

296 0 obj
<< /Type /OBJR /Obj 19 0 R /Pg 4 0 R >>
endobj

297 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (concurrency page)
  /K [ 298 0 R ]
  /P 295 0 R
>>
endobj

298 0 obj
<< /Type /MCR /MCID 56 /Pg 4 0 R >>
endobj

299 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 300 0 R ] /P 292 0 R >>
endobj

300 0 obj
<< /Type /MCR /MCID 57 /Pg 4 0 R >>
endobj

301 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 302 0 R ]
  /P 159 0 R
  /T (Methods that return Taps)
>>
endobj

302 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Methods that return Taps\n)
  /K [ 303 0 R ]
  /P 301 0 R
>>
endobj

303 0 obj
<< /Type /MCR /MCID 0 /Pg 23 0 R >>
endobj

304 0 obj
<< /Type /StructElem /S /H2 /K [ 305 0 R ] /P 159 0 R /T (method tap) >>
endobj

305 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method tap\n)
  /K [ 306 0 R ]
  /P 304 0 R
>>
endobj

306 0 obj
<< /Type /MCR /MCID 1 /Pg 23 0 R >>
endobj

307 0 obj
<< /Type /StructElem /S /Code /K [ 308 0 R ] /P 159 0 R >>
endobj

308 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method tap\(Supply:D: &emit = -> $ { },\n        :&done = -> {},\n        :&quit = -> $ex { $ex.throw },\n        :&tap = -> $ {} \)\n)
  /K [ 309 0 R ]
  /P 307 0 R
>>
endobj

309 0 obj
<< /Type /MCR /MCID 2 /Pg 23 0 R >>
endobj

310 0 obj
<< /Type /StructElem /S /P /K [ 311 0 R 313 0 R 315 0 R ] /P 159 0 R >>
endobj

311 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new tap \(a kind of subscription if you will\), in addition to all existing taps. The first positional argument is a piece of code that will be called when a new value becomes available through the )
  /K [ 312 0 R ]
  /P 310 0 R
>>
endobj

312 0 obj
<< /Type /MCR /MCID 3 /Pg 23 0 R >>
endobj

313 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (emit)
  /K [ 314 0 R ]
  /P 310 0 R
>>
endobj

314 0 obj
<< /Type /MCR /MCID 4 /Pg 23 0 R >>
endobj

315 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( call.)
  /K [ 316 0 R ]
  /P 310 0 R
>>
endobj

316 0 obj
<< /Type /MCR /MCID 5 /Pg 23 0 R >>
endobj

317 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 318 0 R 320 0 R 322 0 R 324 0 R 326 0 R 328 0 R 330 0 R 332 0 R 334 0 R 336 0 R 338 0 R 340 0 R 342 0 R 344 0 R 346 0 R ]
  /P 159 0 R
>>
endobj

318 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 319 0 R ]
  /P 317 0 R
>>
endobj

319 0 obj
<< /Type /MCR /MCID 6 /Pg 23 0 R >>
endobj

320 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&done)
  /K [ 321 0 R ]
  /P 317 0 R
>>
endobj

321 0 obj
<< /Type /MCR /MCID 7 /Pg 23 0 R >>
endobj

322 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( callback can be called in a number of cases: if a supply block is being tapped, when a )
  /K [ 323 0 R ]
  /P 317 0 R
>>
endobj

323 0 obj
<< /Type /MCR /MCID 8 /Pg 23 0 R >>
endobj

324 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 325 0 R ]
  /P 317 0 R
>>
endobj

325 0 obj
<< /Type /MCR /MCID 9 /Pg 23 0 R >>
endobj

326 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( routine is reached; if a supply block is being tapped, it will be automatically triggered if the supply block reaches the end; if the )
  /K [ 327 0 R ]
  /P 317 0 R
>>
endobj

327 0 obj
<< /Type /MCR /MCID 10 /Pg 23 0 R >>
endobj

328 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 329 0 R ]
  /P 317 0 R
>>
endobj

329 0 obj
<< /Type /MCR /MCID 11 /Pg 23 0 R >>
endobj

330 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method is called on the parent )
  /K [ 331 0 R ]
  /P 317 0 R
>>
endobj

331 0 obj
<< /Type /MCR /MCID 12 /Pg 23 0 R >>
endobj

332 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 333 0 R ]
  /P 317 0 R
>>
endobj

333 0 obj
<< /Type /MCR /MCID 13 /Pg 23 0 R >>
endobj

334 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(in the case of a supply block, if there are multiple Suppliers referenced by )
  /K [ 335 0 R ]
  /P 317 0 R
>>
endobj

335 0 obj
<< /Type /MCR /MCID 14 /Pg 23 0 R >>
endobj

336 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (whenever)
  /K [ 337 0 R ]
  /P 317 0 R
>>
endobj

337 0 obj
<< /Type /MCR /MCID 15 /Pg 23 0 R >>
endobj

338 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, they must all have their )
  /K [ 339 0 R ]
  /P 317 0 R
>>
endobj

339 0 obj
<< /Type /MCR /MCID 16 /Pg 23 0 R >>
endobj

340 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 341 0 R ]
  /P 317 0 R
>>
endobj

341 0 obj
<< /Type /MCR /MCID 17 /Pg 23 0 R >>
endobj

342 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method invoked for this to trigger the )
  /K [ 343 0 R ]
  /P 317 0 R
>>
endobj

343 0 obj
<< /Type /MCR /MCID 18 /Pg 23 0 R >>
endobj

344 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&done)
  /K [ 345 0 R ]
  /P 317 0 R
>>
endobj

345 0 obj
<< /Type /MCR /MCID 19 /Pg 23 0 R >>
endobj

346 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( callback of the tap as the block will then reach its end\).)
  /K [ 347 0 R ]
  /P 317 0 R
>>
endobj

347 0 obj
<< /Type /MCR /MCID 20 /Pg 23 0 R >>
endobj

348 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 349 0 R 351 0 R 353 0 R 355 0 R 357 0 R 359 0 R 361 0 R 363 0 R 365 0 R 367 0 R 369 0 R ]
  /P 159 0 R
>>
endobj

349 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 350 0 R ]
  /P 348 0 R
>>
endobj

350 0 obj
<< /Type /MCR /MCID 21 /Pg 23 0 R >>
endobj

351 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&quit)
  /K [ 352 0 R ]
  /P 348 0 R
>>
endobj

352 0 obj
<< /Type /MCR /MCID 22 /Pg 23 0 R >>
endobj

353 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( callback is called if the tap is on a supply block which exits with an error. It is also called if the )
  /K [ 354 0 R ]
  /P 348 0 R
>>
endobj

354 0 obj
<< /Type /MCR /MCID 23 /Pg 23 0 R >>
endobj

355 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 356 0 R ]
  /P 348 0 R
>>
endobj

356 0 obj
<< /Type /MCR /MCID 24 /Pg 23 0 R >>
endobj

357 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method is invoked on the parent )
  /K [ 358 0 R ]
  /P 348 0 R
>>
endobj

358 0 obj
<< /Type /MCR /MCID 25 /Pg 23 0 R >>
endobj

359 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 360 0 R ]
  /P 348 0 R
>>
endobj

360 0 obj
<< /Type /MCR /MCID 26 /Pg 23 0 R >>
endobj

361 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(in the case of a supply block any one )
  /K [ 362 0 R ]
  /P 348 0 R
>>
endobj

362 0 obj
<< /Type /MCR /MCID 27 /Pg 23 0 R >>
endobj

363 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 364 0 R ]
  /P 348 0 R
>>
endobj

364 0 obj
<< /Type /MCR /MCID 28 /Pg 23 0 R >>
endobj

365 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( quitting with an uncaught exception will call the )
  /K [ 366 0 R ]
  /P 348 0 R
>>
endobj

366 0 obj
<< /Type /MCR /MCID 29 /Pg 23 0 R >>
endobj

367 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&quit)
  /K [ 368 0 R ]
  /P 348 0 R
>>
endobj

368 0 obj
<< /Type /MCR /MCID 30 /Pg 23 0 R >>
endobj

369 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( callback as the block will exit with an error\). The error is passed as a parameter to the callback.)
  /K [ 370 0 R ]
  /P 348 0 R
>>
endobj

370 0 obj
<< /Type /MCR /MCID 31 /Pg 23 0 R >>
endobj

371 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 372 0 R 374 0 R 376 0 R 378 0 R 382 0 R 384 0 R 386 0 R 388 0 R 390 0 R 392 0 R 394 0 R 396 0 R 398 0 R 400 0 R 402 0 R 404 0 R 406 0 R 408 0 R 410 0 R ]
  /P 159 0 R
>>
endobj

372 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 373 0 R ]
  /P 371 0 R
>>
endobj

373 0 obj
<< /Type /MCR /MCID 32 /Pg 23 0 R >>
endobj

374 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&tap)
  /K [ 375 0 R ]
  /P 371 0 R
>>
endobj

375 0 obj
<< /Type /MCR /MCID 33 /Pg 23 0 R >>
endobj

376 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( callback is called once the )
  /K [ 377 0 R ]
  /P 371 0 R
>>
endobj

377 0 obj
<< /Type /MCR /MCID 34 /Pg 23 0 R >>
endobj

378 0 obj
<< /Type /StructElem /S /Link /K [ 379 0 R 380 0 R ] /P 371 0 R >>
endobj

379 0 obj
<< /Type /OBJR /Obj 24 0 R /Pg 23 0 R >>
endobj

380 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Tap)
  /K [ 381 0 R ]
  /P 378 0 R
>>
endobj

381 0 obj
<< /Type /MCR /MCID 35 /Pg 23 0 R >>
endobj

382 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( object is created, which is passed as a parameter to the callback. The callback is called ahead of )
  /K [ 383 0 R ]
  /P 371 0 R
>>
endobj

383 0 obj
<< /Type /MCR /MCID 36 /Pg 23 0 R >>
endobj

384 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (emit)
  /K [ 385 0 R ]
  /P 371 0 R
>>
endobj

385 0 obj
<< /Type /MCR /MCID 37 /Pg 23 0 R >>
endobj

386 0 obj
<< /Type /StructElem /S /Span /ActualText (/) /K [ 387 0 R ] /P 371 0 R >>
endobj

387 0 obj
<< /Type /MCR /MCID 38 /Pg 23 0 R >>
endobj

388 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 389 0 R ]
  /P 371 0 R
>>
endobj

389 0 obj
<< /Type /MCR /MCID 39 /Pg 23 0 R >>
endobj

390 0 obj
<< /Type /StructElem /S /Span /ActualText (/) /K [ 391 0 R ] /P 371 0 R >>
endobj

391 0 obj
<< /Type /MCR /MCID 40 /Pg 23 0 R >>
endobj

392 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 393 0 R ]
  /P 371 0 R
>>
endobj

393 0 obj
<< /Type /MCR /MCID 41 /Pg 23 0 R >>
endobj

394 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, providing a reliable way to get the )
  /K [ 395 0 R ]
  /P 371 0 R
>>
endobj

395 0 obj
<< /Type /MCR /MCID 42 /Pg 23 0 R >>
endobj

396 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Tap)
  /K [ 397 0 R ]
  /P 371 0 R
>>
endobj

397 0 obj
<< /Type /MCR /MCID 43 /Pg 23 0 R >>
endobj

398 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( object. One case where this is useful is when the )
  /K [ 399 0 R ]
  /P 371 0 R
>>
endobj

399 0 obj
<< /Type /MCR /MCID 44 /Pg 23 0 R >>
endobj

400 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 401 0 R ]
  /P 371 0 R
>>
endobj

401 0 obj
<< /Type /MCR /MCID 45 /Pg 23 0 R >>
endobj

402 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( begins emitting values synchronously, since the call to )
  /K [ 403 0 R ]
  /P 371 0 R
>>
endobj

403 0 obj
<< /Type /MCR /MCID 46 /Pg 23 0 R >>
endobj

404 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.tap)
  /K [ 405 0 R ]
  /P 371 0 R
>>
endobj

405 0 obj
<< /Type /MCR /MCID 47 /Pg 23 0 R >>
endobj

406 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( won't return the )
  /K [ 407 0 R ]
  /P 371 0 R
>>
endobj

407 0 obj
<< /Type /MCR /MCID 48 /Pg 23 0 R >>
endobj

408 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Tap)
  /K [ 409 0 R ]
  /P 371 0 R
>>
endobj

409 0 obj
<< /Type /MCR /MCID 49 /Pg 23 0 R >>
endobj

410 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( object until it is done emitting, preventing it from being stopped if needed.)
  /K [ 411 0 R ]
  /P 371 0 R
>>
endobj

411 0 obj
<< /Type /MCR /MCID 50 /Pg 23 0 R >>
endobj

412 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 413 0 R 415 0 R 417 0 R 419 0 R 423 0 R 425 0 R 427 0 R ]
  /P 159 0 R
>>
endobj

413 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Method )
  /K [ 414 0 R ]
  /P 412 0 R
>>
endobj

414 0 obj
<< /Type /MCR /MCID 51 /Pg 23 0 R >>
endobj

415 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (tap)
  /K [ 416 0 R ]
  /P 412 0 R
>>
endobj

416 0 obj
<< /Type /MCR /MCID 52 /Pg 23 0 R >>
endobj

417 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( returns an object of type )
  /K [ 418 0 R ]
  /P 412 0 R
>>
endobj

418 0 obj
<< /Type /MCR /MCID 53 /Pg 23 0 R >>
endobj

419 0 obj
<< /Type /StructElem /S /Link /K [ 420 0 R 421 0 R ] /P 412 0 R >>
endobj

420 0 obj
<< /Type /OBJR /Obj 26 0 R /Pg 23 0 R >>
endobj

421 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Tap)
  /K [ 422 0 R ]
  /P 419 0 R
>>
endobj

422 0 obj
<< /Type /MCR /MCID 54 /Pg 23 0 R >>
endobj

423 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, on which you can call the )
  /K [ 424 0 R ]
  /P 412 0 R
>>
endobj

424 0 obj
<< /Type /MCR /MCID 55 /Pg 23 0 R >>
endobj

425 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (close)
  /K [ 426 0 R ]
  /P 412 0 R
>>
endobj

426 0 obj
<< /Type /MCR /MCID 56 /Pg 23 0 R >>
endobj

427 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method to cancel the subscription.)
  /K [ 428 0 R ]
  /P 412 0 R
>>
endobj

428 0 obj
<< /Type /MCR /MCID 57 /Pg 23 0 R >>
endobj

429 0 obj
<< /Type /StructElem /S /Code /K [ 430 0 R ] /P 159 0 R >>
endobj

430 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $s = Supply.from-list\(0 .. 5\);\nmy $t = $s.tap\(-> $v { say $v }, done => { say "no more ticks" }\);\n)
  /K [ 431 0 R ]
  /P 429 0 R
>>
endobj

431 0 obj
<< /Type /MCR /MCID 58 /Pg 23 0 R >>
endobj

432 0 obj
<< /Type /StructElem /S /P /K [ 433 0 R ] /P 159 0 R >>
endobj

433 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Produces:)
  /K [ 434 0 R ]
  /P 432 0 R
>>
endobj

434 0 obj
<< /Type /MCR /MCID 59 /Pg 23 0 R >>
endobj

435 0 obj
<< /Type /StructElem /S /Code /K [ 436 0 R ] /P 159 0 R >>
endobj

436 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (0\n1\n2\n3\n4\n5\nno more ticks\n)
  /K [ 437 0 R ]
  /P 435 0 R
>>
endobj

437 0 obj
<< /Type /MCR /MCID 60 /Pg 23 0 R >>
endobj

438 0 obj
<< /Type /StructElem /S /H2 /K [ 439 0 R ] /P 159 0 R /T (method act) >>
endobj

439 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method act\n)
  /K [ 440 0 R ]
  /P 438 0 R
>>
endobj

440 0 obj
<< /Type /MCR /MCID 61 /Pg 23 0 R >>
endobj

441 0 obj
<< /Type /StructElem /S /Code /K [ 442 0 R ] /P 159 0 R >>
endobj

442 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method act\(Supply:D: &actor, *%others\)\n)
  /K [ 443 0 R ]
  /P 441 0 R
>>
endobj

443 0 obj
<< /Type /MCR /MCID 62 /Pg 23 0 R >>
endobj

444 0 obj
<< /Type /StructElem /S /P /K [ 445 0 R 447 0 R 449 0 R ] /P 159 0 R >>
endobj

445 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a tap on the given supply with the given code. Differently from )
  /K [ 446 0 R ]
  /P 444 0 R
>>
endobj

446 0 obj
<< /Type /MCR /MCID 63 /Pg 23 0 R >>
endobj

447 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (tap)
  /K [ 448 0 R ]
  /P 444 0 R
>>
endobj

448 0 obj
<< /Type /MCR /MCID 64 /Pg 23 0 R >>
endobj

449 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, the given code is guaranteed to be executed by only one thread at a time.)
  /K [ 450 0 R ]
  /P 444 0 R
>>
endobj

450 0 obj
<< /Type /MCR /MCID 65 /Pg 23 0 R >>
endobj

451 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 452 0 R ]
  /P 159 0 R
  /T (Utility methods)
>>
endobj

452 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Utility methods\n)
  /K [ 453 0 R ]
  /P 451 0 R
>>
endobj

453 0 obj
<< /Type /MCR /MCID 0 /Pg 35 0 R >>
endobj

454 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 455 0 R ]
  /P 159 0 R
  /T (method Capture)
>>
endobj

455 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Capture\n)
  /K [ 456 0 R ]
  /P 454 0 R
>>
endobj

456 0 obj
<< /Type /MCR /MCID 1 /Pg 35 0 R >>
endobj

457 0 obj
<< /Type /StructElem /S /P /K [ 458 0 R ] /P 159 0 R >>
endobj

458 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as:)
  /K [ 459 0 R ]
  /P 457 0 R
>>
endobj

459 0 obj
<< /Type /MCR /MCID 2 /Pg 35 0 R >>
endobj

460 0 obj
<< /Type /StructElem /S /Code /K [ 461 0 R ] /P 159 0 R >>
endobj

461 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Capture\(Supply:D: --> Capture:D\)\n)
  /K [ 462 0 R ]
  /P 460 0 R
>>
endobj

462 0 obj
<< /Type /MCR /MCID 3 /Pg 35 0 R >>
endobj

463 0 obj
<< /Type /StructElem /S /P /K [ 464 0 R 466 0 R 470 0 R ] /P 159 0 R >>
endobj

464 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Equivalent to calling )
  /K [ 465 0 R ]
  /P 463 0 R
>>
endobj

465 0 obj
<< /Type /MCR /MCID 4 /Pg 35 0 R >>
endobj

466 0 obj
<< /Type /StructElem /S /Link /K [ 467 0 R 468 0 R ] /P 463 0 R >>
endobj

467 0 obj
<< /Type /OBJR /Obj 36 0 R /Pg 35 0 R >>
endobj

468 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.List.Capture)
  /K [ 469 0 R ]
  /P 466 0 R
>>
endobj

469 0 obj
<< /Type /MCR /MCID 5 /Pg 35 0 R >>
endobj

470 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( on the invocant.)
  /K [ 471 0 R ]
  /P 463 0 R
>>
endobj

471 0 obj
<< /Type /MCR /MCID 6 /Pg 35 0 R >>
endobj

472 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 473 0 R ]
  /P 159 0 R
  /T (method Channel)
>>
endobj

473 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Channel\n)
  /K [ 474 0 R ]
  /P 472 0 R
>>
endobj

474 0 obj
<< /Type /MCR /MCID 7 /Pg 35 0 R >>
endobj

475 0 obj
<< /Type /StructElem /S /Code /K [ 476 0 R ] /P 159 0 R >>
endobj

476 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Channel\(Supply:D: --> Channel:D\)\n)
  /K [ 477 0 R ]
  /P 475 0 R
>>
endobj

477 0 obj
<< /Type /MCR /MCID 8 /Pg 35 0 R >>
endobj

478 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 479 0 R 481 0 R 485 0 R 487 0 R 489 0 R ]
  /P 159 0 R
>>
endobj

479 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a )
  /K [ 480 0 R ]
  /P 478 0 R
>>
endobj

480 0 obj
<< /Type /MCR /MCID 9 /Pg 35 0 R >>
endobj

481 0 obj
<< /Type /StructElem /S /Link /K [ 482 0 R 483 0 R ] /P 478 0 R >>
endobj

482 0 obj
<< /Type /OBJR /Obj 38 0 R /Pg 35 0 R >>
endobj

483 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Channel)
  /K [ 484 0 R ]
  /P 481 0 R
>>
endobj

484 0 obj
<< /Type /MCR /MCID 10 /Pg 35 0 R >>
endobj

485 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( object that will receive all future values from the supply, and will be )
  /K [ 486 0 R ]
  /P 478 0 R
>>
endobj

486 0 obj
<< /Type /MCR /MCID 11 /Pg 35 0 R >>
endobj

487 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (close)
  /K [ 488 0 R ]
  /P 478 0 R
>>
endobj

488 0 obj
<< /Type /MCR /MCID 12 /Pg 35 0 R >>
endobj

489 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (d when the Supply is done, and quit \(shut down with error\) when the supply is quit.)
  /K [ 490 0 R ]
  /P 478 0 R
>>
endobj

490 0 obj
<< /Type /MCR /MCID 13 /Pg 35 0 R >>
endobj

491 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 492 0 R ]
  /P 159 0 R
  /T (method Promise)
>>
endobj

492 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Promise\n)
  /K [ 493 0 R ]
  /P 491 0 R
>>
endobj

493 0 obj
<< /Type /MCR /MCID 14 /Pg 35 0 R >>
endobj

494 0 obj
<< /Type /StructElem /S /Code /K [ 495 0 R ] /P 159 0 R >>
endobj

495 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Promise\(Supply:D: --> Promise:D\)\n)
  /K [ 496 0 R ]
  /P 494 0 R
>>
endobj

496 0 obj
<< /Type /MCR /MCID 15 /Pg 35 0 R >>
endobj

497 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 498 0 R 500 0 R 504 0 R 506 0 R 508 0 R 510 0 R 512 0 R 514 0 R 516 0 R 518 0 R 520 0 R 522 0 R 524 0 R 526 0 R 528 0 R 530 0 R 532 0 R 534 0 R 536 0 R 538 0 R 540 0 R ]
  /P 159 0 R
>>
endobj

498 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a )
  /K [ 499 0 R ]
  /P 497 0 R
>>
endobj

499 0 obj
<< /Type /MCR /MCID 16 /Pg 35 0 R >>
endobj

500 0 obj
<< /Type /StructElem /S /Link /K [ 501 0 R 502 0 R ] /P 497 0 R >>
endobj

501 0 obj
<< /Type /OBJR /Obj 40 0 R /Pg 35 0 R >>
endobj

502 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Promise)
  /K [ 503 0 R ]
  /P 500 0 R
>>
endobj

503 0 obj
<< /Type /MCR /MCID 17 /Pg 35 0 R >>
endobj

504 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( that will be kept when the )
  /K [ 505 0 R ]
  /P 497 0 R
>>
endobj

505 0 obj
<< /Type /MCR /MCID 18 /Pg 35 0 R >>
endobj

506 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 507 0 R ]
  /P 497 0 R
>>
endobj

507 0 obj
<< /Type /MCR /MCID 19 /Pg 35 0 R >>
endobj

508 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is )
  /K [ 509 0 R ]
  /P 497 0 R
>>
endobj

509 0 obj
<< /Type /MCR /MCID 20 /Pg 35 0 R >>
endobj

510 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 511 0 R ]
  /P 497 0 R
>>
endobj

511 0 obj
<< /Type /MCR /MCID 21 /Pg 35 0 R >>
endobj

512 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. If the )
  /K [ 513 0 R ]
  /P 497 0 R
>>
endobj

513 0 obj
<< /Type /MCR /MCID 22 /Pg 35 0 R >>
endobj

514 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 515 0 R ]
  /P 497 0 R
>>
endobj

515 0 obj
<< /Type /MCR /MCID 23 /Pg 35 0 R >>
endobj

516 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( also emits any values, then the )
  /K [ 517 0 R ]
  /P 497 0 R
>>
endobj

517 0 obj
<< /Type /MCR /MCID 24 /Pg 35 0 R >>
endobj

518 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Promise)
  /K [ 519 0 R ]
  /P 497 0 R
>>
endobj

519 0 obj
<< /Type /MCR /MCID 25 /Pg 35 0 R >>
endobj

520 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( will be kept with the final value. Otherwise, it will be kept with )
  /K [ 521 0 R ]
  /P 497 0 R
>>
endobj

521 0 obj
<< /Type /MCR /MCID 26 /Pg 35 0 R >>
endobj

522 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Nil)
  /K [ 523 0 R ]
  /P 497 0 R
>>
endobj

523 0 obj
<< /Type /MCR /MCID 27 /Pg 35 0 R >>
endobj

524 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. If the )
  /K [ 525 0 R ]
  /P 497 0 R
>>
endobj

525 0 obj
<< /Type /MCR /MCID 28 /Pg 35 0 R >>
endobj

526 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 527 0 R ]
  /P 497 0 R
>>
endobj

527 0 obj
<< /Type /MCR /MCID 29 /Pg 35 0 R >>
endobj

528 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( ends with a )
  /K [ 529 0 R ]
  /P 497 0 R
>>
endobj

529 0 obj
<< /Type /MCR /MCID 30 /Pg 35 0 R >>
endobj

530 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 531 0 R ]
  /P 497 0 R
>>
endobj

531 0 obj
<< /Type /MCR /MCID 31 /Pg 35 0 R >>
endobj

532 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( instead of a )
  /K [ 533 0 R ]
  /P 497 0 R
>>
endobj

533 0 obj
<< /Type /MCR /MCID 32 /Pg 35 0 R >>
endobj

534 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 535 0 R ]
  /P 497 0 R
>>
endobj

535 0 obj
<< /Type /MCR /MCID 33 /Pg 35 0 R >>
endobj

536 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, then the )
  /K [ 537 0 R ]
  /P 497 0 R
>>
endobj

537 0 obj
<< /Type /MCR /MCID 34 /Pg 35 0 R >>
endobj

538 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Promise)
  /K [ 539 0 R ]
  /P 497 0 R
>>
endobj

539 0 obj
<< /Type /MCR /MCID 35 /Pg 35 0 R >>
endobj

540 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( will be broken with that exception.)
  /K [ 541 0 R ]
  /P 497 0 R
>>
endobj

541 0 obj
<< /Type /MCR /MCID 36 /Pg 35 0 R >>
endobj

542 0 obj
<< /Type /StructElem /S /Code /K [ 543 0 R ] /P 159 0 R >>
endobj

543 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $supplier = Supplier.new;\nmy $s = $supplier.Supply;\nmy $p = $s.Promise;\n$p.then\(-> $v { say "got $v.result\(\)" }\);\n$supplier.emit\('cha'\);         # not output yet\n$supplier.done\(\);              # got cha\n)
  /K [ 544 0 R ]
  /P 542 0 R
>>
endobj

544 0 obj
<< /Type /MCR /MCID 37 /Pg 35 0 R >>
endobj

545 0 obj
<< /Type /StructElem /S /P /K [ 546 0 R 548 0 R 550 0 R ] /P 159 0 R >>
endobj

546 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 547 0 R ]
  /P 545 0 R
>>
endobj

547 0 obj
<< /Type /MCR /MCID 38 /Pg 35 0 R >>
endobj

548 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Promise)
  /K [ 549 0 R ]
  /P 545 0 R
>>
endobj

549 0 obj
<< /Type /MCR /MCID 39 /Pg 35 0 R >>
endobj

550 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method is most useful when dealing with supplies that will tend to produce just one value, when only the final value is of interest, or when only completion \(successful or not\) is relevant.)
  /K [ 551 0 R ]
  /P 545 0 R
>>
endobj

551 0 obj
<< /Type /MCR /MCID 40 /Pg 35 0 R >>
endobj

552 0 obj
<< /Type /StructElem /S /H2 /K [ 553 0 R ] /P 159 0 R /T (method live) >>
endobj

553 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method live\n)
  /K [ 554 0 R ]
  /P 552 0 R
>>
endobj

554 0 obj
<< /Type /MCR /MCID 41 /Pg 35 0 R >>
endobj

555 0 obj
<< /Type /StructElem /S /Code /K [ 556 0 R ] /P 159 0 R >>
endobj

556 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method live\(Supply:D: --> Bool:D\)\n)
  /K [ 557 0 R ]
  /P 555 0 R
>>
endobj

557 0 obj
<< /Type /MCR /MCID 42 /Pg 35 0 R >>
endobj

558 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 559 0 R 561 0 R 563 0 R 565 0 R 567 0 R 569 0 R 571 0 R 573 0 R 575 0 R 577 0 R 579 0 R ]
  /P 159 0 R
>>
endobj

559 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns )
  /K [ 560 0 R ]
  /P 558 0 R
>>
endobj

560 0 obj
<< /Type /MCR /MCID 43 /Pg 35 0 R >>
endobj

561 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (True)
  /K [ 562 0 R ]
  /P 558 0 R
>>
endobj

562 0 obj
<< /Type /MCR /MCID 44 /Pg 35 0 R >>
endobj

563 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( if the supply is "live", that is, values are emitted to taps as soon as they arrive. Always returns )
  /K [ 564 0 R ]
  /P 558 0 R
>>
endobj

564 0 obj
<< /Type /MCR /MCID 45 /Pg 35 0 R >>
endobj

565 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (True)
  /K [ 566 0 R ]
  /P 558 0 R
>>
endobj

566 0 obj
<< /Type /MCR /MCID 46 /Pg 35 0 R >>
endobj

567 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( in the default )
  /K [ 568 0 R ]
  /P 558 0 R
>>
endobj

568 0 obj
<< /Type /MCR /MCID 47 /Pg 35 0 R >>
endobj

569 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 570 0 R ]
  /P 558 0 R
>>
endobj

570 0 obj
<< /Type /MCR /MCID 48 /Pg 35 0 R >>
endobj

571 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(but for example on the supply returned from )
  /K [ 572 0 R ]
  /P 558 0 R
>>
endobj

572 0 obj
<< /Type /MCR /MCID 49 /Pg 35 0 R >>
endobj

573 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply.from-list)
  /K [ 574 0 R ]
  /P 558 0 R
>>
endobj

574 0 obj
<< /Type /MCR /MCID 50 /Pg 35 0 R >>
endobj

575 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it's )
  /K [ 576 0 R ]
  /P 558 0 R
>>
endobj

576 0 obj
<< /Type /MCR /MCID 51 /Pg 35 0 R >>
endobj

577 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (False)
  /K [ 578 0 R ]
  /P 558 0 R
>>
endobj

578 0 obj
<< /Type /MCR /MCID 52 /Pg 35 0 R >>
endobj

579 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\).)
  /K [ 580 0 R ]
  /P 558 0 R
>>
endobj

580 0 obj
<< /Type /MCR /MCID 53 /Pg 35 0 R >>
endobj

581 0 obj
<< /Type /StructElem /S /Code /K [ 582 0 R ] /P 159 0 R >>
endobj

582 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ s a y   S u p p l i e r . n e w . S u p p l y . l i v e ;         #   O U T P U T :   « T r u e$$ » \n)
  /K [ 583 0 R ]
  /P 581 0 R
>>
endobj

583 0 obj
<< /Type /MCR /MCID 54 /Pg 35 0 R >>
endobj

584 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 585 0 R ]
  /P 159 0 R
  /T (method schedule-on)
>>
endobj

585 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method schedule-on\n)
  /K [ 586 0 R ]
  /P 584 0 R
>>
endobj

586 0 obj
<< /Type /MCR /MCID 55 /Pg 35 0 R >>
endobj

587 0 obj
<< /Type /StructElem /S /Code /K [ 588 0 R ] /P 159 0 R >>
endobj

588 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method schedule-on\(Supply:D: Scheduler $scheduler\)\n)
  /K [ 589 0 R ]
  /P 587 0 R
>>
endobj

589 0 obj
<< /Type /MCR /MCID 56 /Pg 35 0 R >>
endobj

590 0 obj
<< /Type /StructElem /S /P /K [ 591 0 R ] /P 159 0 R >>
endobj

591 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Runs the emit, done and quit callbacks on the specified scheduler.)
  /K [ 592 0 R ]
  /P 590 0 R
>>
endobj

592 0 obj
<< /Type /MCR /MCID 0 /Pg 45 0 R >>
endobj

593 0 obj
<< /Type /StructElem /S /P /K [ 594 0 R ] /P 159 0 R >>
endobj

594 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This is useful for GUI toolkits that require certain actions to be run from the GUI thread.)
  /K [ 595 0 R ]
  /P 593 0 R
>>
endobj

595 0 obj
<< /Type /MCR /MCID 1 /Pg 45 0 R >>
endobj

596 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 597 0 R ]
  /P 159 0 R
  /T (Methods that wait until the supply is done)
>>
endobj

597 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Methods that wait until the supply is done\n)
  /K [ 598 0 R ]
  /P 596 0 R
>>
endobj

598 0 obj
<< /Type /MCR /MCID 0 /Pg 47 0 R >>
endobj

599 0 obj
<< /Type /StructElem /S /H2 /K [ 600 0 R ] /P 159 0 R /T (method wait) >>
endobj

600 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method wait\n)
  /K [ 601 0 R ]
  /P 599 0 R
>>
endobj

601 0 obj
<< /Type /MCR /MCID 1 /Pg 47 0 R >>
endobj

602 0 obj
<< /Type /StructElem /S /Code /K [ 603 0 R ] /P 159 0 R >>
endobj

603 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method wait\(Supply:D:\)\n)
  /K [ 604 0 R ]
  /P 602 0 R
>>
endobj

604 0 obj
<< /Type /MCR /MCID 2 /Pg 47 0 R >>
endobj

605 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 606 0 R 608 0 R 610 0 R 612 0 R 614 0 R 616 0 R 618 0 R 620 0 R 622 0 R 624 0 R 626 0 R 628 0 R 630 0 R ]
  /P 159 0 R
>>
endobj

606 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 607 0 R ]
  /P 605 0 R
>>
endobj

607 0 obj
<< /Type /MCR /MCID 3 /Pg 47 0 R >>
endobj

608 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 609 0 R ]
  /P 605 0 R
>>
endobj

609 0 obj
<< /Type /MCR /MCID 4 /Pg 47 0 R >>
endobj

610 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on, and blocks execution until the either the supply is )
  /K [ 611 0 R ]
  /P 605 0 R
>>
endobj

611 0 obj
<< /Type /MCR /MCID 5 /Pg 47 0 R >>
endobj

612 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 613 0 R ]
  /P 605 0 R
>>
endobj

613 0 obj
<< /Type /MCR /MCID 6 /Pg 47 0 R >>
endobj

614 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(in which case it evaluates to the final value that was emitted on the )
  /K [ 615 0 R ]
  /P 605 0 R
>>
endobj

615 0 obj
<< /Type /MCR /MCID 7 /Pg 47 0 R >>
endobj

616 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 617 0 R ]
  /P 605 0 R
>>
endobj

617 0 obj
<< /Type /MCR /MCID 8 /Pg 47 0 R >>
endobj

618 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, or )
  /K [ 619 0 R ]
  /P 605 0 R
>>
endobj

619 0 obj
<< /Type /MCR /MCID 9 /Pg 47 0 R >>
endobj

620 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Nil)
  /K [ 621 0 R ]
  /P 605 0 R
>>
endobj

621 0 obj
<< /Type /MCR /MCID 10 /Pg 47 0 R >>
endobj

622 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( if not value was emitted\) or )
  /K [ 623 0 R ]
  /P 605 0 R
>>
endobj

623 0 obj
<< /Type /MCR /MCID 11 /Pg 47 0 R >>
endobj

624 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 625 0 R ]
  /P 605 0 R
>>
endobj

625 0 obj
<< /Type /MCR /MCID 12 /Pg 47 0 R >>
endobj

626 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(in which case it will throw the exception that was passed to )
  /K [ 627 0 R ]
  /P 605 0 R
>>
endobj

627 0 obj
<< /Type /MCR /MCID 13 /Pg 47 0 R >>
endobj

628 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 629 0 R ]
  /P 605 0 R
>>
endobj

629 0 obj
<< /Type /MCR /MCID 14 /Pg 47 0 R >>
endobj

630 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\).)
  /K [ 631 0 R ]
  /P 605 0 R
>>
endobj

631 0 obj
<< /Type /MCR /MCID 15 /Pg 47 0 R >>
endobj

632 0 obj
<< /Type /StructElem /S /Code /K [ 633 0 R ] /P 159 0 R >>
endobj

633 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $s = Supplier.new;\nstart {\n  sleep 1;\n  say "One second: running.";\n  sleep 1;\n  $s.emit\(42\);\n  $s.done;\n}\n$s.Supply.wait;\nsay "Two seconds: done";\n)
  /K [ 634 0 R ]
  /P 632 0 R
>>
endobj

634 0 obj
<< /Type /MCR /MCID 16 /Pg 47 0 R >>
endobj

635 0 obj
<< /Type /StructElem /S /H2 /K [ 636 0 R ] /P 159 0 R /T (method list) >>
endobj

636 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method list\n)
  /K [ 637 0 R ]
  /P 635 0 R
>>
endobj

637 0 obj
<< /Type /MCR /MCID 17 /Pg 47 0 R >>
endobj

638 0 obj
<< /Type /StructElem /S /Code /K [ 639 0 R ] /P 159 0 R >>
endobj

639 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method list\(Supply:D:\)\n)
  /K [ 640 0 R ]
  /P 638 0 R
>>
endobj

640 0 obj
<< /Type /MCR /MCID 18 /Pg 47 0 R >>
endobj

641 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 642 0 R 644 0 R 646 0 R 648 0 R 650 0 R 652 0 R 654 0 R 656 0 R 658 0 R 660 0 R 662 0 R 664 0 R 666 0 R ]
  /P 159 0 R
>>
endobj

642 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 643 0 R ]
  /P 641 0 R
>>
endobj

643 0 obj
<< /Type /MCR /MCID 19 /Pg 47 0 R >>
endobj

644 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 645 0 R ]
  /P 641 0 R
>>
endobj

645 0 obj
<< /Type /MCR /MCID 20 /Pg 47 0 R >>
endobj

646 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on, and returns a lazy list that will be reified as the )
  /K [ 647 0 R ]
  /P 641 0 R
>>
endobj

647 0 obj
<< /Type /MCR /MCID 21 /Pg 47 0 R >>
endobj

648 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 649 0 R ]
  /P 641 0 R
>>
endobj

649 0 obj
<< /Type /MCR /MCID 22 /Pg 47 0 R >>
endobj

650 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( emits values. The list will be terminated once the )
  /K [ 651 0 R ]
  /P 641 0 R
>>
endobj

651 0 obj
<< /Type /MCR /MCID 23 /Pg 47 0 R >>
endobj

652 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 653 0 R ]
  /P 641 0 R
>>
endobj

653 0 obj
<< /Type /MCR /MCID 24 /Pg 47 0 R >>
endobj

654 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is )
  /K [ 655 0 R ]
  /P 641 0 R
>>
endobj

655 0 obj
<< /Type /MCR /MCID 25 /Pg 47 0 R >>
endobj

656 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 657 0 R ]
  /P 641 0 R
>>
endobj

657 0 obj
<< /Type /MCR /MCID 26 /Pg 47 0 R >>
endobj

658 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. If the )
  /K [ 659 0 R ]
  /P 641 0 R
>>
endobj

659 0 obj
<< /Type /MCR /MCID 27 /Pg 47 0 R >>
endobj

660 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 661 0 R ]
  /P 641 0 R
>>
endobj

661 0 obj
<< /Type /MCR /MCID 28 /Pg 47 0 R >>
endobj

662 0 obj
<< /Type /StructElem /S /Span /ActualText ( ) /K [ 663 0 R ] /P 641 0 R >>
endobj

663 0 obj
<< /Type /MCR /MCID 29 /Pg 47 0 R >>
endobj

664 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 665 0 R ]
  /P 641 0 R
>>
endobj

665 0 obj
<< /Type /MCR /MCID 30 /Pg 47 0 R >>
endobj

666 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (s, then an exception will be thrown once that point in the lazy list is reached.)
  /K [ 667 0 R ]
  /P 641 0 R
>>
endobj

667 0 obj
<< /Type /MCR /MCID 31 /Pg 47 0 R >>
endobj

668 0 obj
<< /Type /StructElem /S /H2 /K [ 669 0 R ] /P 159 0 R /T (method Seq) >>
endobj

669 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Seq\n)
  /K [ 670 0 R ]
  /P 668 0 R
>>
endobj

670 0 obj
<< /Type /MCR /MCID 32 /Pg 47 0 R >>
endobj

671 0 obj
<< /Type /StructElem /S /Code /K [ 672 0 R ] /P 159 0 R >>
endobj

672 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method Seq\(Supply:D:\)\n)
  /K [ 673 0 R ]
  /P 671 0 R
>>
endobj

673 0 obj
<< /Type /MCR /MCID 33 /Pg 47 0 R >>
endobj

674 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 675 0 R 677 0 R 679 0 R 681 0 R 683 0 R ]
  /P 159 0 R
>>
endobj

675 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a )
  /K [ 676 0 R ]
  /P 674 0 R
>>
endobj

676 0 obj
<< /Type /MCR /MCID 34 /Pg 47 0 R >>
endobj

677 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Seq)
  /K [ 678 0 R ]
  /P 674 0 R
>>
endobj

678 0 obj
<< /Type /MCR /MCID 35 /Pg 47 0 R >>
endobj

679 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( with an iterator containing the values that the )
  /K [ 680 0 R ]
  /P 674 0 R
>>
endobj

680 0 obj
<< /Type /MCR /MCID 36 /Pg 47 0 R >>
endobj

681 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 682 0 R ]
  /P 674 0 R
>>
endobj

682 0 obj
<< /Type /MCR /MCID 37 /Pg 47 0 R >>
endobj

683 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( contains.)
  /K [ 684 0 R ]
  /P 674 0 R
>>
endobj

684 0 obj
<< /Type /MCR /MCID 38 /Pg 47 0 R >>
endobj

685 0 obj
<< /Type /StructElem /S /H2 /K [ 686 0 R ] /P 159 0 R /T (method grab) >>
endobj

686 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method grab\n)
  /K [ 687 0 R ]
  /P 685 0 R
>>
endobj

687 0 obj
<< /Type /MCR /MCID 39 /Pg 47 0 R >>
endobj

688 0 obj
<< /Type /StructElem /S /Code /K [ 689 0 R ] /P 159 0 R >>
endobj

689 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method grab\(Supply:D: &when-done --> Supply:D\)\n)
  /K [ 690 0 R ]
  /P 688 0 R
>>
endobj

690 0 obj
<< /Type /MCR /MCID 40 /Pg 47 0 R >>
endobj

691 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 692 0 R 694 0 R 696 0 R 698 0 R 700 0 R 702 0 R 704 0 R 706 0 R 708 0 R 710 0 R 712 0 R 714 0 R 716 0 R 718 0 R 720 0 R ]
  /P 159 0 R
>>
endobj

692 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 693 0 R ]
  /P 691 0 R
>>
endobj

693 0 obj
<< /Type /MCR /MCID 41 /Pg 47 0 R >>
endobj

694 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 695 0 R ]
  /P 691 0 R
>>
endobj

695 0 obj
<< /Type /MCR /MCID 42 /Pg 47 0 R >>
endobj

696 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on. When it is )
  /K [ 697 0 R ]
  /P 691 0 R
>>
endobj

697 0 obj
<< /Type /MCR /MCID 43 /Pg 47 0 R >>
endobj

698 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 699 0 R ]
  /P 691 0 R
>>
endobj

699 0 obj
<< /Type /MCR /MCID 44 /Pg 47 0 R >>
endobj

700 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, calls )
  /K [ 701 0 R ]
  /P 691 0 R
>>
endobj

701 0 obj
<< /Type /MCR /MCID 45 /Pg 47 0 R >>
endobj

702 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&when-done)
  /K [ 703 0 R ]
  /P 691 0 R
>>
endobj

703 0 obj
<< /Type /MCR /MCID 46 /Pg 47 0 R >>
endobj

704 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and then emits the list of values that it returns on the result )
  /K [ 705 0 R ]
  /P 691 0 R
>>
endobj

705 0 obj
<< /Type /MCR /MCID 47 /Pg 47 0 R >>
endobj

706 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 707 0 R ]
  /P 691 0 R
>>
endobj

707 0 obj
<< /Type /MCR /MCID 48 /Pg 47 0 R >>
endobj

708 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. If the original )
  /K [ 709 0 R ]
  /P 691 0 R
>>
endobj

709 0 obj
<< /Type /MCR /MCID 49 /Pg 47 0 R >>
endobj

710 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 711 0 R ]
  /P 691 0 R
>>
endobj

711 0 obj
<< /Type /MCR /MCID 50 /Pg 47 0 R >>
endobj

712 0 obj
<< /Type /StructElem /S /Span /ActualText ( ) /K [ 713 0 R ] /P 691 0 R >>
endobj

713 0 obj
<< /Type /MCR /MCID 51 /Pg 47 0 R >>
endobj

714 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 715 0 R ]
  /P 691 0 R
>>
endobj

715 0 obj
<< /Type /MCR /MCID 52 /Pg 47 0 R >>
endobj

716 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (s, then the exception is immediately conveyed on the return )
  /K [ 717 0 R ]
  /P 691 0 R
>>
endobj

717 0 obj
<< /Type /MCR /MCID 53 /Pg 47 0 R >>
endobj

718 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 719 0 R ]
  /P 691 0 R
>>
endobj

719 0 obj
<< /Type /MCR /MCID 54 /Pg 47 0 R >>
endobj

720 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 721 0 R ] /P 691 0 R >>
endobj

721 0 obj
<< /Type /MCR /MCID 55 /Pg 47 0 R >>
endobj

722 0 obj
<< /Type /StructElem /S /Code /K [ 723 0 R ] /P 159 0 R >>
endobj

723 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 \) ; \n m y   $ t   =   $ s . g r a b \( & s u m \) ; \n $ t . t a p \( & s a y \) ;                       #   O U T P U T :   « 1 9$$ » \n)
  /K [ 724 0 R ]
  /P 722 0 R
>>
endobj

724 0 obj
<< /Type /MCR /MCID 56 /Pg 47 0 R >>
endobj

725 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 726 0 R ]
  /P 159 0 R
  /T (method reverse)
>>
endobj

726 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method reverse\n)
  /K [ 727 0 R ]
  /P 725 0 R
>>
endobj

727 0 obj
<< /Type /MCR /MCID 57 /Pg 47 0 R >>
endobj

728 0 obj
<< /Type /StructElem /S /Code /K [ 729 0 R ] /P 159 0 R >>
endobj

729 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method reverse\(Supply:D: --> Supply:D\)\n)
  /K [ 730 0 R ]
  /P 728 0 R
>>
endobj

730 0 obj
<< /Type /MCR /MCID 58 /Pg 47 0 R >>
endobj

731 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 732 0 R 734 0 R 736 0 R 738 0 R 740 0 R 742 0 R 744 0 R 746 0 R 748 0 R 750 0 R 752 0 R 754 0 R 756 0 R 758 0 R 760 0 R ]
  /P 159 0 R
>>
endobj

732 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 733 0 R ]
  /P 731 0 R
>>
endobj

733 0 obj
<< /Type /MCR /MCID 0 /Pg 51 0 R >>
endobj

734 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 735 0 R ]
  /P 731 0 R
>>
endobj

735 0 obj
<< /Type /MCR /MCID 1 /Pg 51 0 R >>
endobj

736 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on. Once that )
  /K [ 737 0 R ]
  /P 731 0 R
>>
endobj

737 0 obj
<< /Type /MCR /MCID 2 /Pg 51 0 R >>
endobj

738 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 739 0 R ]
  /P 731 0 R
>>
endobj

739 0 obj
<< /Type /MCR /MCID 3 /Pg 51 0 R >>
endobj

740 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( emits )
  /K [ 741 0 R ]
  /P 731 0 R
>>
endobj

741 0 obj
<< /Type /MCR /MCID 4 /Pg 51 0 R >>
endobj

742 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 743 0 R ]
  /P 731 0 R
>>
endobj

743 0 obj
<< /Type /MCR /MCID 5 /Pg 51 0 R >>
endobj

744 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, all of the values it emitted will be emitted on the returned )
  /K [ 745 0 R ]
  /P 731 0 R
>>
endobj

745 0 obj
<< /Type /MCR /MCID 6 /Pg 51 0 R >>
endobj

746 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 747 0 R ]
  /P 731 0 R
>>
endobj

747 0 obj
<< /Type /MCR /MCID 7 /Pg 51 0 R >>
endobj

748 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( in reverse order. If the original )
  /K [ 749 0 R ]
  /P 731 0 R
>>
endobj

749 0 obj
<< /Type /MCR /MCID 8 /Pg 51 0 R >>
endobj

750 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 751 0 R ]
  /P 731 0 R
>>
endobj

751 0 obj
<< /Type /MCR /MCID 9 /Pg 51 0 R >>
endobj

752 0 obj
<< /Type /StructElem /S /Span /ActualText ( ) /K [ 753 0 R ] /P 731 0 R >>
endobj

753 0 obj
<< /Type /MCR /MCID 10 /Pg 51 0 R >>
endobj

754 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 755 0 R ]
  /P 731 0 R
>>
endobj

755 0 obj
<< /Type /MCR /MCID 11 /Pg 51 0 R >>
endobj

756 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (s, then the exception is immediately conveyed on the return )
  /K [ 757 0 R ]
  /P 731 0 R
>>
endobj

757 0 obj
<< /Type /MCR /MCID 12 /Pg 51 0 R >>
endobj

758 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 759 0 R ]
  /P 731 0 R
>>
endobj

759 0 obj
<< /Type /MCR /MCID 13 /Pg 51 0 R >>
endobj

760 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 761 0 R ] /P 731 0 R >>
endobj

761 0 obj
<< /Type /MCR /MCID 14 /Pg 51 0 R >>
endobj

762 0 obj
<< /Type /StructElem /S /Code /K [ 763 0 R ] /P 159 0 R >>
endobj

763 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 1 ,   2 ,   3 \) ; \n m y   $ t   =   $ s . r e v e r s e ; \n $ t . t a p \( & s a y \) ;                       #   O U T P U T :   « 3$$ 2$$ 1$$ » \n)
  /K [ 764 0 R ]
  /P 762 0 R
>>
endobj

764 0 obj
<< /Type /MCR /MCID 15 /Pg 51 0 R >>
endobj

765 0 obj
<< /Type /StructElem /S /H2 /K [ 766 0 R ] /P 159 0 R /T (method sort) >>
endobj

766 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method sort\n)
  /K [ 767 0 R ]
  /P 765 0 R
>>
endobj

767 0 obj
<< /Type /MCR /MCID 16 /Pg 51 0 R >>
endobj

768 0 obj
<< /Type /StructElem /S /Code /K [ 769 0 R ] /P 159 0 R >>
endobj

769 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method sort\(Supply:D: &custom-routine-to-use? --> Supply:D\)\n)
  /K [ 770 0 R ]
  /P 768 0 R
>>
endobj

770 0 obj
<< /Type /MCR /MCID 17 /Pg 51 0 R >>
endobj

771 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 772 0 R 774 0 R 776 0 R 778 0 R 780 0 R 782 0 R 784 0 R 786 0 R 788 0 R 790 0 R 794 0 R 796 0 R 798 0 R 800 0 R 802 0 R 804 0 R 806 0 R ]
  /P 159 0 R
>>
endobj

772 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 773 0 R ]
  /P 771 0 R
>>
endobj

773 0 obj
<< /Type /MCR /MCID 18 /Pg 51 0 R >>
endobj

774 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 775 0 R ]
  /P 771 0 R
>>
endobj

775 0 obj
<< /Type /MCR /MCID 19 /Pg 51 0 R >>
endobj

776 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on. Once that )
  /K [ 777 0 R ]
  /P 771 0 R
>>
endobj

777 0 obj
<< /Type /MCR /MCID 20 /Pg 51 0 R >>
endobj

778 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 779 0 R ]
  /P 771 0 R
>>
endobj

779 0 obj
<< /Type /MCR /MCID 21 /Pg 51 0 R >>
endobj

780 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( emits )
  /K [ 781 0 R ]
  /P 771 0 R
>>
endobj

781 0 obj
<< /Type /MCR /MCID 22 /Pg 51 0 R >>
endobj

782 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 783 0 R ]
  /P 771 0 R
>>
endobj

783 0 obj
<< /Type /MCR /MCID 23 /Pg 51 0 R >>
endobj

784 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, all of the values that it emitted will be sorted, and the results emitted on the returned )
  /K [ 785 0 R ]
  /P 771 0 R
>>
endobj

785 0 obj
<< /Type /MCR /MCID 24 /Pg 51 0 R >>
endobj

786 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 787 0 R ]
  /P 771 0 R
>>
endobj

787 0 obj
<< /Type /MCR /MCID 25 /Pg 51 0 R >>
endobj

788 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( in the sorted order. Optionally accepts a comparator )
  /K [ 789 0 R ]
  /P 771 0 R
>>
endobj

789 0 obj
<< /Type /MCR /MCID 26 /Pg 51 0 R >>
endobj

790 0 obj
<< /Type /StructElem /S /Link /K [ 791 0 R 792 0 R ] /P 771 0 R >>
endobj

791 0 obj
<< /Type /OBJR /Obj 52 0 R /Pg 51 0 R >>
endobj

792 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Block)
  /K [ 793 0 R ]
  /P 790 0 R
>>
endobj

793 0 obj
<< /Type /MCR /MCID 27 /Pg 51 0 R >>
endobj

794 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. If the original )
  /K [ 795 0 R ]
  /P 771 0 R
>>
endobj

795 0 obj
<< /Type /MCR /MCID 28 /Pg 51 0 R >>
endobj

796 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 797 0 R ]
  /P 771 0 R
>>
endobj

797 0 obj
<< /Type /MCR /MCID 29 /Pg 51 0 R >>
endobj

798 0 obj
<< /Type /StructElem /S /Span /ActualText ( ) /K [ 799 0 R ] /P 771 0 R >>
endobj

799 0 obj
<< /Type /MCR /MCID 30 /Pg 51 0 R >>
endobj

800 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (quit)
  /K [ 801 0 R ]
  /P 771 0 R
>>
endobj

801 0 obj
<< /Type /MCR /MCID 31 /Pg 51 0 R >>
endobj

802 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (s, then the exception is immediately conveyed on the return )
  /K [ 803 0 R ]
  /P 771 0 R
>>
endobj

803 0 obj
<< /Type /MCR /MCID 32 /Pg 51 0 R >>
endobj

804 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 805 0 R ]
  /P 771 0 R
>>
endobj

805 0 obj
<< /Type /MCR /MCID 33 /Pg 51 0 R >>
endobj

806 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 807 0 R ] /P 771 0 R >>
endobj

807 0 obj
<< /Type /MCR /MCID 34 /Pg 51 0 R >>
endobj

808 0 obj
<< /Type /StructElem /S /Code /K [ 809 0 R ] /P 159 0 R >>
endobj

809 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 \) ; \n m y   $ t   =   $ s . s o r t \( \) ; \n $ t . t a p \( & s a y \) ;                       #   O U T P U T :   « 2$$ 3$$ 4$$ 1 0$$ » \n)
  /K [ 810 0 R ]
  /P 808 0 R
>>
endobj

810 0 obj
<< /Type /MCR /MCID 35 /Pg 51 0 R >>
endobj

811 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 812 0 R ]
  /P 159 0 R
  /T (method collate)
>>
endobj

812 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method collate\n)
  /K [ 813 0 R ]
  /P 811 0 R
>>
endobj

813 0 obj
<< /Type /MCR /MCID 36 /Pg 51 0 R >>
endobj

814 0 obj
<< /Type /StructElem /S /Code /K [ 815 0 R ] /P 159 0 R >>
endobj

815 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method collate\(Supply:D:\)\n)
  /K [ 816 0 R ]
  /P 814 0 R
>>
endobj

816 0 obj
<< /Type /MCR /MCID 37 /Pg 51 0 R >>
endobj

817 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 818 0 R 820 0 R 822 0 R 824 0 R 826 0 R 828 0 R 830 0 R 832 0 R 834 0 R 836 0 R 840 0 R ]
  /P 159 0 R
>>
endobj

818 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Taps the )
  /K [ 819 0 R ]
  /P 817 0 R
>>
endobj

819 0 obj
<< /Type /MCR /MCID 38 /Pg 51 0 R >>
endobj

820 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 821 0 R ]
  /P 817 0 R
>>
endobj

821 0 obj
<< /Type /MCR /MCID 39 /Pg 51 0 R >>
endobj

822 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( it is called on. Once that )
  /K [ 823 0 R ]
  /P 817 0 R
>>
endobj

823 0 obj
<< /Type /MCR /MCID 40 /Pg 51 0 R >>
endobj

824 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 825 0 R ]
  /P 817 0 R
>>
endobj

825 0 obj
<< /Type /MCR /MCID 41 /Pg 51 0 R >>
endobj

826 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( emits )
  /K [ 827 0 R ]
  /P 817 0 R
>>
endobj

827 0 obj
<< /Type /MCR /MCID 42 /Pg 51 0 R >>
endobj

828 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (done)
  /K [ 829 0 R ]
  /P 817 0 R
>>
endobj

829 0 obj
<< /Type /MCR /MCID 43 /Pg 51 0 R >>
endobj

830 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, all of the values that it emitted will be sorted taking into account Unicode grapheme characteristics. A new )
  /K [ 831 0 R ]
  /P 817 0 R
>>
endobj

831 0 obj
<< /Type /MCR /MCID 44 /Pg 51 0 R >>
endobj

832 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 833 0 R ]
  /P 817 0 R
>>
endobj

833 0 obj
<< /Type /MCR /MCID 45 /Pg 51 0 R >>
endobj

834 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is returned with the sorted values emitted. See )
  /K [ 835 0 R ]
  /P 817 0 R
>>
endobj

835 0 obj
<< /Type /MCR /MCID 46 /Pg 51 0 R >>
endobj

836 0 obj
<< /Type /StructElem /S /Link /K [ 837 0 R 838 0 R ] /P 817 0 R >>
endobj

837 0 obj
<< /Type /OBJR /Obj 54 0 R /Pg 51 0 R >>
endobj

838 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Any.collate)
  /K [ 839 0 R ]
  /P 836 0 R
>>
endobj

839 0 obj
<< /Type /MCR /MCID 47 /Pg 51 0 R >>
endobj

840 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( for more details on the collated sort.)
  /K [ 841 0 R ]
  /P 817 0 R
>>
endobj

841 0 obj
<< /Type /MCR /MCID 48 /Pg 51 0 R >>
endobj

842 0 obj
<< /Type /StructElem /S /Code /K [ 843 0 R ] /P 159 0 R >>
endobj

843 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( < ä   a   o   ö > \) ; \n m y   $ t   =   $ s . c o l l a t e \( \) ; \n $ t . t a p \( & s a y \) ;                       #   O U T P U T :   « a$$ ä$$ o$$ ö$$ » \n)
  /K [ 844 0 R ]
  /P 842 0 R
>>
endobj

844 0 obj
<< /Type /MCR /MCID 49 /Pg 51 0 R >>
endobj

845 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 846 0 R ]
  /P 159 0 R
  /T (method reduce)
>>
endobj

846 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method reduce\n)
  /K [ 847 0 R ]
  /P 845 0 R
>>
endobj

847 0 obj
<< /Type /MCR /MCID 50 /Pg 51 0 R >>
endobj

848 0 obj
<< /Type /StructElem /S /P /K [ 849 0 R ] /P 159 0 R >>
endobj

849 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as:)
  /K [ 850 0 R ]
  /P 848 0 R
>>
endobj

850 0 obj
<< /Type /MCR /MCID 51 /Pg 51 0 R >>
endobj

851 0 obj
<< /Type /StructElem /S /Code /K [ 852 0 R ] /P 159 0 R >>
endobj

852 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method reduce\(Supply:D: &with --> Supply:D\)\n)
  /K [ 853 0 R ]
  /P 851 0 R
>>
endobj

853 0 obj
<< /Type /MCR /MCID 52 /Pg 51 0 R >>
endobj

854 0 obj
<< /Type /StructElem /S /P /K [ 855 0 R 857 0 R 861 0 R ] /P 159 0 R >>
endobj

855 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a "reducing" supply, which will emit a single value with the same semantics as )
  /K [ 856 0 R ]
  /P 854 0 R
>>
endobj

856 0 obj
<< /Type /MCR /MCID 53 /Pg 51 0 R >>
endobj

857 0 obj
<< /Type /StructElem /S /Link /K [ 858 0 R 859 0 R ] /P 854 0 R >>
endobj

858 0 obj
<< /Type /OBJR /Obj 56 0 R /Pg 51 0 R >>
endobj

859 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.reduce)
  /K [ 860 0 R ]
  /P 857 0 R
>>
endobj

860 0 obj
<< /Type /MCR /MCID 54 /Pg 51 0 R >>
endobj

861 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 862 0 R ] /P 854 0 R >>
endobj

862 0 obj
<< /Type /MCR /MCID 55 /Pg 51 0 R >>
endobj

863 0 obj
<< /Type /StructElem /S /Code /K [ 864 0 R ] /P 159 0 R >>
endobj

864 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l y   =   S u p p l y . f r o m - l i s t \( 1 . . 5 \) . r e d u c e \( { $ ^ a   +   $ ^ b } \) ; \n $ s u p p l y . t a p \( - >   $ v   {   s a y   " $ v "   } \) ;   #   O U T P U T :   « 1 5$$ » \n)
  /K [ 865 0 R ]
  /P 863 0 R
>>
endobj

865 0 obj
<< /Type /MCR /MCID 56 /Pg 51 0 R >>
endobj

866 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 867 0 R ]
  /P 159 0 R
  /T (Methods that return another Supply)
>>
endobj

867 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Methods that return another Supply\n)
  /K [ 868 0 R ]
  /P 866 0 R
>>
endobj

868 0 obj
<< /Type /MCR /MCID 0 /Pg 61 0 R >>
endobj

869 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 870 0 R ]
  /P 159 0 R
  /T (method from-list)
>>
endobj

870 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method from-list\n)
  /K [ 871 0 R ]
  /P 869 0 R
>>
endobj

871 0 obj
<< /Type /MCR /MCID 1 /Pg 61 0 R >>
endobj

872 0 obj
<< /Type /StructElem /S /Code /K [ 873 0 R ] /P 159 0 R >>
endobj

873 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method from-list\(Supply:U: +@values --> Supply:D\)\n)
  /K [ 874 0 R ]
  /P 872 0 R
>>
endobj

874 0 obj
<< /Type /MCR /MCID 2 /Pg 61 0 R >>
endobj

875 0 obj
<< /Type /StructElem /S /P /K [ 876 0 R ] /P 159 0 R >>
endobj

876 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates an on-demand supply from the values passed to this method.)
  /K [ 877 0 R ]
  /P 875 0 R
>>
endobj

877 0 obj
<< /Type /MCR /MCID 3 /Pg 61 0 R >>
endobj

878 0 obj
<< /Type /StructElem /S /Code /K [ 879 0 R ] /P 159 0 R >>
endobj

879 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 1 ,   2 ,   3 \) ; \n $ s . t a p \( & s a y \) ;                       #   O U T P U T :   « 1$$ 2$$ 3$$ » \n)
  /K [ 880 0 R ]
  /P 878 0 R
>>
endobj

880 0 obj
<< /Type /MCR /MCID 4 /Pg 61 0 R >>
endobj

881 0 obj
<< /Type /StructElem /S /H2 /K [ 882 0 R ] /P 159 0 R /T (method share) >>
endobj

882 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method share\n)
  /K [ 883 0 R ]
  /P 881 0 R
>>
endobj

883 0 obj
<< /Type /MCR /MCID 5 /Pg 61 0 R >>
endobj

884 0 obj
<< /Type /StructElem /S /Code /K [ 885 0 R ] /P 159 0 R >>
endobj

885 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method share\(Supply:D: --> Supply:D\)\n)
  /K [ 886 0 R ]
  /P 884 0 R
>>
endobj

886 0 obj
<< /Type /MCR /MCID 6 /Pg 61 0 R >>
endobj

887 0 obj
<< /Type /StructElem /S /P /K [ 888 0 R ] /P 159 0 R >>
endobj

888 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a live supply from an on-demand supply, thus making it possible to share the values of the on-demand supply on multiple taps, instead of each tap seeing its own copy of all values from the on-demand supply.)
  /K [ 889 0 R ]
  /P 887 0 R
>>
endobj

889 0 obj
<< /Type /MCR /MCID 7 /Pg 61 0 R >>
endobj

890 0 obj
<< /Type /StructElem /S /Code /K [ 891 0 R ] /P 159 0 R >>
endobj

891 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (# this says in turn: "first 1" "first 2" "second 2" "first 3" "second 3"\nmy $s = Supply.interval\(1\).share;\n$s.tap: { "first $_".say };\nsleep 1.1;\n$s.tap: { "second $_".say };\nsleep 2\n)
  /K [ 892 0 R ]
  /P 890 0 R
>>
endobj

892 0 obj
<< /Type /MCR /MCID 8 /Pg 61 0 R >>
endobj

893 0 obj
<< /Type /StructElem /S /H2 /K [ 894 0 R ] /P 159 0 R /T (method flat) >>
endobj

894 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method flat\n)
  /K [ 895 0 R ]
  /P 893 0 R
>>
endobj

895 0 obj
<< /Type /MCR /MCID 9 /Pg 61 0 R >>
endobj

896 0 obj
<< /Type /StructElem /S /Code /K [ 897 0 R ] /P 159 0 R >>
endobj

897 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method flat\(Supply:D: --> Supply:D\)\n)
  /K [ 898 0 R ]
  /P 896 0 R
>>
endobj

898 0 obj
<< /Type /MCR /MCID 10 /Pg 61 0 R >>
endobj

899 0 obj
<< /Type /StructElem /S /P /K [ 900 0 R ] /P 159 0 R >>
endobj

900 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply on which all of the values seen in the given supply are flattened before being emitted again.)
  /K [ 901 0 R ]
  /P 899 0 R
>>
endobj

901 0 obj
<< /Type /MCR /MCID 11 /Pg 61 0 R >>
endobj

902 0 obj
<< /Type /StructElem /S /H2 /K [ 903 0 R ] /P 159 0 R /T (method do) >>
endobj

903 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method do\n)
  /K [ 904 0 R ]
  /P 902 0 R
>>
endobj

904 0 obj
<< /Type /MCR /MCID 12 /Pg 61 0 R >>
endobj

905 0 obj
<< /Type /StructElem /S /Code /K [ 906 0 R ] /P 159 0 R >>
endobj

906 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method do\(Supply:D: &do --> Supply:D\)\n)
  /K [ 907 0 R ]
  /P 905 0 R
>>
endobj

907 0 obj
<< /Type /MCR /MCID 13 /Pg 61 0 R >>
endobj

908 0 obj
<< /Type /StructElem /S /P /K [ 909 0 R ] /P 159 0 R >>
endobj

909 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply to which all values seen in the given supply, are emitted again. The given code, executed for its side-effects only, is guaranteed to be only executed by one thread at a time.)
  /K [ 910 0 R ]
  /P 908 0 R
>>
endobj

910 0 obj
<< /Type /MCR /MCID 14 /Pg 61 0 R >>
endobj

911 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 912 0 R ]
  /P 159 0 R
  /T (method on-close)
>>
endobj

912 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method on-close\n)
  /K [ 913 0 R ]
  /P 911 0 R
>>
endobj

913 0 obj
<< /Type /MCR /MCID 15 /Pg 61 0 R >>
endobj

914 0 obj
<< /Type /StructElem /S /Code /K [ 915 0 R ] /P 159 0 R >>
endobj

915 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method on-close\(Supply:D: &on-close --> Supply:D\)\n)
  /K [ 916 0 R ]
  /P 914 0 R
>>
endobj

916 0 obj
<< /Type /MCR /MCID 16 /Pg 61 0 R >>
endobj

917 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 918 0 R 920 0 R 922 0 R 924 0 R 926 0 R 928 0 R 932 0 R 934 0 R 936 0 R 938 0 R 940 0 R 942 0 R 944 0 R 946 0 R 948 0 R 950 0 R 952 0 R 954 0 R 958 0 R ]
  /P 159 0 R
>>
endobj

918 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a new )
  /K [ 919 0 R ]
  /P 917 0 R
>>
endobj

919 0 obj
<< /Type /MCR /MCID 17 /Pg 61 0 R >>
endobj

920 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 921 0 R ]
  /P 917 0 R
>>
endobj

921 0 obj
<< /Type /MCR /MCID 18 /Pg 61 0 R >>
endobj

922 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( which will run )
  /K [ 923 0 R ]
  /P 917 0 R
>>
endobj

923 0 obj
<< /Type /MCR /MCID 19 /Pg 61 0 R >>
endobj

924 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&on-close)
  /K [ 925 0 R ]
  /P 917 0 R
>>
endobj

925 0 obj
<< /Type /MCR /MCID 20 /Pg 61 0 R >>
endobj

926 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( whenever a )
  /K [ 927 0 R ]
  /P 917 0 R
>>
endobj

927 0 obj
<< /Type /MCR /MCID 21 /Pg 61 0 R >>
endobj

928 0 obj
<< /Type /StructElem /S /Link /K [ 929 0 R 930 0 R ] /P 917 0 R >>
endobj

929 0 obj
<< /Type /OBJR /Obj 62 0 R /Pg 61 0 R >>
endobj

930 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Tap)
  /K [ 931 0 R ]
  /P 928 0 R
>>
endobj

931 0 obj
<< /Type /MCR /MCID 22 /Pg 61 0 R >>
endobj

932 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( of that )
  /K [ 933 0 R ]
  /P 917 0 R
>>
endobj

933 0 obj
<< /Type /MCR /MCID 23 /Pg 61 0 R >>
endobj

934 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 935 0 R ]
  /P 917 0 R
>>
endobj

935 0 obj
<< /Type /MCR /MCID 24 /Pg 61 0 R >>
endobj

936 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is closed. This includes if further operations are chained on to the )
  /K [ 937 0 R ]
  /P 917 0 R
>>
endobj

937 0 obj
<< /Type /MCR /MCID 25 /Pg 61 0 R >>
endobj

938 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 939 0 R ]
  /P 917 0 R
>>
endobj

939 0 obj
<< /Type /MCR /MCID 26 /Pg 61 0 R >>
endobj

940 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. \(for example, )
  /K [ 941 0 R ]
  /P 917 0 R
>>
endobj

941 0 obj
<< /Type /MCR /MCID 27 /Pg 61 0 R >>
endobj

942 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($supply.on-close\(&on-close\).map\(*.uc\))
  /K [ 943 0 R ]
  /P 917 0 R
>>
endobj

943 0 obj
<< /Type /MCR /MCID 28 /Pg 61 0 R >>
endobj

944 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\). When using a )
  /K [ 945 0 R ]
  /P 917 0 R
>>
endobj

945 0 obj
<< /Type /MCR /MCID 29 /Pg 61 0 R >>
endobj

946 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (react)
  /K [ 947 0 R ]
  /P 917 0 R
>>
endobj

947 0 obj
<< /Type /MCR /MCID 30 /Pg 61 0 R >>
endobj

948 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( or )
  /K [ 949 0 R ]
  /P 917 0 R
>>
endobj

949 0 obj
<< /Type /MCR /MCID 31 /Pg 61 0 R >>
endobj

950 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (supply)
  /K [ 951 0 R ]
  /P 917 0 R
>>
endobj

951 0 obj
<< /Type /MCR /MCID 32 /Pg 61 0 R >>
endobj

952 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( block, using the )
  /K [ 953 0 R ]
  /P 917 0 R
>>
endobj

953 0 obj
<< /Type /MCR /MCID 33 /Pg 61 0 R >>
endobj

954 0 obj
<< /Type /StructElem /S /Link /K [ 955 0 R 956 0 R ] /P 917 0 R >>
endobj

955 0 obj
<< /Type /OBJR /Obj 64 0 R /Pg 61 0 R >>
endobj

956 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (CLOSE)
  /K [ 957 0 R ]
  /P 954 0 R
>>
endobj

957 0 obj
<< /Type /MCR /MCID 34 /Pg 61 0 R >>
endobj

958 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( phaser is usually a better choice.)
  /K [ 959 0 R ]
  /P 917 0 R
>>
endobj

959 0 obj
<< /Type /MCR /MCID 35 /Pg 61 0 R >>
endobj

960 0 obj
<< /Type /StructElem /S /Code /K [ 961 0 R ] /P 159 0 R >>
endobj

961 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l i e r . n e w ; \n m y   $ t a p   =   $ s . S u p p l y . o n - c l o s e \( {   s a y   " T a p   c l o s e d "   } \) . t a p \( \n         - >   $ v   {   s a y   " t h e   v a l u e   i s   $ v "   } , \n         d o n e         = >   {   s a y   " S u p p l y   i s   d o n e "   } , \n         q u i t         = >   - >   $ e x   {   s a y   " S u p p l y   f i n i s h e d   w i t h   e r r o r   $ e x "   } , \n \) ; \n \n $ s . e m i t \( ' R a k u ' \) ; \n $ t a p . c l o s e ;                 #   O U T P U T :   « T a p   c l o s e d$$ » \n)
  /K [ 962 0 R ]
  /P 960 0 R
>>
endobj

962 0 obj
<< /Type /MCR /MCID 0 /Pg 69 0 R >>
endobj

963 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 964 0 R ]
  /P 159 0 R
  /T (method interval)
>>
endobj

964 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method interval\n)
  /K [ 965 0 R ]
  /P 963 0 R
>>
endobj

965 0 obj
<< /Type /MCR /MCID 1 /Pg 69 0 R >>
endobj

966 0 obj
<< /Type /StructElem /S /Code /K [ 967 0 R ] /P 159 0 R >>
endobj

967 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method interval\(Supply:U: $interval, $delay = 0, :$scheduler = $*SCHEDULER --> Supply:D\)\n)
  /K [ 968 0 R ]
  /P 966 0 R
>>
endobj

968 0 obj
<< /Type /MCR /MCID 2 /Pg 69 0 R >>
endobj

969 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 970 0 R 972 0 R 974 0 R 976 0 R 978 0 R ]
  /P 159 0 R
>>
endobj

970 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that emits a value every )
  /K [ 971 0 R ]
  /P 969 0 R
>>
endobj

971 0 obj
<< /Type /MCR /MCID 3 /Pg 69 0 R >>
endobj

972 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($interval)
  /K [ 973 0 R ]
  /P 969 0 R
>>
endobj

973 0 obj
<< /Type /MCR /MCID 4 /Pg 69 0 R >>
endobj

974 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( seconds, starting )
  /K [ 975 0 R ]
  /P 969 0 R
>>
endobj

975 0 obj
<< /Type /MCR /MCID 5 /Pg 69 0 R >>
endobj

976 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($delay)
  /K [ 977 0 R ]
  /P 969 0 R
>>
endobj

977 0 obj
<< /Type /MCR /MCID 6 /Pg 69 0 R >>
endobj

978 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( seconds from the call. The emitted value is an integer, starting from 0, and is incremented by one for each value emitted.)
  /K [ 979 0 R ]
  /P 969 0 R
>>
endobj

979 0 obj
<< /Type /MCR /MCID 7 /Pg 69 0 R >>
endobj

980 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 981 0 R 983 0 R 985 0 R 987 0 R 989 0 R 991 0 R 993 0 R ]
  /P 159 0 R
>>
endobj

981 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Implementations may treat too-small and negative values as lowest resolution they support, possibly warning in such situations; e.g. treating )
  /K [ 982 0 R ]
  /P 980 0 R
>>
endobj

982 0 obj
<< /Type /MCR /MCID 8 /Pg 69 0 R >>
endobj

983 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (0.0001)
  /K [ 984 0 R ]
  /P 980 0 R
>>
endobj

984 0 obj
<< /Type /MCR /MCID 9 /Pg 69 0 R >>
endobj

985 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( as )
  /K [ 986 0 R ]
  /P 980 0 R
>>
endobj

986 0 obj
<< /Type /MCR /MCID 10 /Pg 69 0 R >>
endobj

987 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (0.001)
  /K [ 988 0 R ]
  /P 980 0 R
>>
endobj

988 0 obj
<< /Type /MCR /MCID 11 /Pg 69 0 R >>
endobj

989 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. For 6.d language version, the minimal value specified is )
  /K [ 990 0 R ]
  /P 980 0 R
>>
endobj

990 0 obj
<< /Type /MCR /MCID 12 /Pg 69 0 R >>
endobj

991 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (0.001)
  /K [ 992 0 R ]
  /P 980 0 R
>>
endobj

992 0 obj
<< /Type /MCR /MCID 13 /Pg 69 0 R >>
endobj

993 0 obj
<< /Type /StructElem /S /Span /ActualText (.) /K [ 994 0 R ] /P 980 0 R >>
endobj

994 0 obj
<< /Type /MCR /MCID 14 /Pg 69 0 R >>
endobj

995 0 obj
<< /Type /StructElem /S /H2 /K [ 996 0 R ] /P 159 0 R /T (method grep) >>
endobj

996 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method grep\n)
  /K [ 997 0 R ]
  /P 995 0 R
>>
endobj

997 0 obj
<< /Type /MCR /MCID 15 /Pg 69 0 R >>
endobj

998 0 obj
<< /Type /StructElem /S /Code /K [ 999 0 R ] /P 159 0 R >>
endobj

999 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method grep\(Supply:D: Mu $test --> Supply:D\)\n)
  /K [ 1000 0 R ]
  /P 998 0 R
>>
endobj

1000 0 obj
<< /Type /MCR /MCID 16 /Pg 69 0 R >>
endobj

1001 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1002 0 R 1004 0 R 1006 0 R ]
  /P 159 0 R
>>
endobj

1002 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new supply that only emits those values from the original supply that smartmatch against )
  /K [ 1003 0 R ]
  /P 1001 0 R
>>
endobj

1003 0 obj
<< /Type /MCR /MCID 17 /Pg 69 0 R >>
endobj

1004 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($test)
  /K [ 1005 0 R ]
  /P 1001 0 R
>>
endobj

1005 0 obj
<< /Type /MCR /MCID 18 /Pg 69 0 R >>
endobj

1006 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1007 0 R ]
  /P 1001 0 R
>>
endobj

1007 0 obj
<< /Type /MCR /MCID 19 /Pg 69 0 R >>
endobj

1008 0 obj
<< /Type /StructElem /S /Code /K [ 1009 0 R ] /P 159 0 R >>
endobj

1009 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $supplier = Supplier.new;\nmy $all      = $supplier.Supply;\nmy $ints     = $all.grep\(Int\);\n$ints.tap\(&say\);\n$supplier.emit\($_\) for 1, 'a string', 3.14159;   # prints only 1\n)
  /K [ 1010 0 R ]
  /P 1008 0 R
>>
endobj

1010 0 obj
<< /Type /MCR /MCID 20 /Pg 69 0 R >>
endobj

1011 0 obj
<< /Type /StructElem /S /H2 /K [ 1012 0 R ] /P 159 0 R /T (method map) >>
endobj

1012 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method map\n)
  /K [ 1013 0 R ]
  /P 1011 0 R
>>
endobj

1013 0 obj
<< /Type /MCR /MCID 21 /Pg 69 0 R >>
endobj

1014 0 obj
<< /Type /StructElem /S /Code /K [ 1015 0 R ] /P 159 0 R >>
endobj

1015 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method map\(Supply:D: &mapper --> Supply:D\)\n)
  /K [ 1016 0 R ]
  /P 1014 0 R
>>
endobj

1016 0 obj
<< /Type /MCR /MCID 22 /Pg 69 0 R >>
endobj

1017 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1018 0 R 1020 0 R 1022 0 R ]
  /P 159 0 R
>>
endobj

1018 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a new supply that maps each value of the given supply through )
  /K [ 1019 0 R ]
  /P 1017 0 R
>>
endobj

1019 0 obj
<< /Type /MCR /MCID 23 /Pg 69 0 R >>
endobj

1020 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (&mapper)
  /K [ 1021 0 R ]
  /P 1017 0 R
>>
endobj

1021 0 obj
<< /Type /MCR /MCID 24 /Pg 69 0 R >>
endobj

1022 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and emits it to the new supply.)
  /K [ 1023 0 R ]
  /P 1017 0 R
>>
endobj

1023 0 obj
<< /Type /MCR /MCID 25 /Pg 69 0 R >>
endobj

1024 0 obj
<< /Type /StructElem /S /Code /K [ 1025 0 R ] /P 159 0 R >>
endobj

1025 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $supplier = Supplier.new;\nmy $all      = $supplier.Supply;\nmy $double   = $all.map\(-> $value { $value * 2 }\);\n$double.tap\(&say\);\n$supplier.emit\(4\);           # OUTPUT: «8»\n)
  /K [ 1026 0 R ]
  /P 1024 0 R
>>
endobj

1026 0 obj
<< /Type /MCR /MCID 26 /Pg 69 0 R >>
endobj

1027 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1028 0 R ]
  /P 159 0 R
  /T (method batch)
>>
endobj

1028 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method batch\n)
  /K [ 1029 0 R ]
  /P 1027 0 R
>>
endobj

1029 0 obj
<< /Type /MCR /MCID 27 /Pg 69 0 R >>
endobj

1030 0 obj
<< /Type /StructElem /S /Code /K [ 1031 0 R ] /P 159 0 R >>
endobj

1031 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method batch\(Supply:D: :$elems, :$seconds --> Supply:D\)\n)
  /K [ 1032 0 R ]
  /P 1030 0 R
>>
endobj

1032 0 obj
<< /Type /MCR /MCID 28 /Pg 69 0 R >>
endobj

1033 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1034 0 R 1036 0 R 1038 0 R 1040 0 R 1042 0 R ]
  /P 159 0 R
>>
endobj

1034 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new supply that batches the values of the given supply by either the number of elements in the batch \(using )
  /K [ 1035 0 R ]
  /P 1033 0 R
>>
endobj

1035 0 obj
<< /Type /MCR /MCID 29 /Pg 69 0 R >>
endobj

1036 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:elems)
  /K [ 1037 0 R ]
  /P 1033 0 R
>>
endobj

1037 0 obj
<< /Type /MCR /MCID 30 /Pg 69 0 R >>
endobj

1038 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\) or a duration \(using )
  /K [ 1039 0 R ]
  /P 1033 0 R
>>
endobj

1039 0 obj
<< /Type /MCR /MCID 31 /Pg 69 0 R >>
endobj

1040 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:seconds)
  /K [ 1041 0 R ]
  /P 1033 0 R
>>
endobj

1041 0 obj
<< /Type /MCR /MCID 32 /Pg 69 0 R >>
endobj

1042 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\) or both. Any remaining values are emitted in a final batch when the supply is done.)
  /K [ 1043 0 R ]
  /P 1033 0 R
>>
endobj

1043 0 obj
<< /Type /MCR /MCID 33 /Pg 69 0 R >>
endobj

1044 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1045 0 R 1047 0 R 1049 0 R 1051 0 R 1053 0 R 1055 0 R 1057 0 R 1059 0 R ]
  /P 159 0 R
>>
endobj

1045 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Note)
  /K [ 1046 0 R ]
  /P 1044 0 R
>>
endobj

1046 0 obj
<< /Type /MCR /MCID 34 /Pg 69 0 R >>
endobj

1047 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (: Since Rakudo version 2020.12, the )
  /K [ 1048 0 R ]
  /P 1044 0 R
>>
endobj

1048 0 obj
<< /Type /MCR /MCID 35 /Pg 69 0 R >>
endobj

1049 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:seconds)
  /K [ 1050 0 R ]
  /P 1044 0 R
>>
endobj

1050 0 obj
<< /Type /MCR /MCID 36 /Pg 69 0 R >>
endobj

1051 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter has a millisecond granularity: for example a 1 millisecond duration could be specified as )
  /K [ 1052 0 R ]
  /P 1044 0 R
>>
endobj

1052 0 obj
<< /Type /MCR /MCID 37 /Pg 69 0 R >>
endobj

1053 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:seconds\(0.001\))
  /K [ 1054 0 R ]
  /P 1044 0 R
>>
endobj

1054 0 obj
<< /Type /MCR /MCID 38 /Pg 69 0 R >>
endobj

1055 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (. Before Rakudo version 2020.12, the )
  /K [ 1056 0 R ]
  /P 1044 0 R
>>
endobj

1056 0 obj
<< /Type /MCR /MCID 39 /Pg 69 0 R >>
endobj

1057 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:seconds)
  /K [ 1058 0 R ]
  /P 1044 0 R
>>
endobj

1058 0 obj
<< /Type /MCR /MCID 40 /Pg 69 0 R >>
endobj

1059 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter had a second granularity.)
  /K [ 1060 0 R ]
  /P 1044 0 R
>>
endobj

1060 0 obj
<< /Type /MCR /MCID 41 /Pg 69 0 R >>
endobj

1061 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1062 0 R ]
  /P 159 0 R
  /T (method elems)
>>
endobj

1062 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method elems\n)
  /K [ 1063 0 R ]
  /P 1061 0 R
>>
endobj

1063 0 obj
<< /Type /MCR /MCID 0 /Pg 73 0 R >>
endobj

1064 0 obj
<< /Type /StructElem /S /Code /K [ 1065 0 R ] /P 159 0 R >>
endobj

1065 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method elems\(Supply:D: $seconds? --> Supply:D\)\n)
  /K [ 1066 0 R ]
  /P 1064 0 R
>>
endobj

1066 0 obj
<< /Type /MCR /MCID 1 /Pg 73 0 R >>
endobj

1067 0 obj
<< /Type /StructElem /S /P /K [ 1068 0 R ] /P 159 0 R >>
endobj

1068 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new supply in which changes to the number of values seen are emitted. It optionally also takes an interval \(in seconds\) if you only want to be updated every so many seconds.)
  /K [ 1069 0 R ]
  /P 1067 0 R
>>
endobj

1069 0 obj
<< /Type /MCR /MCID 2 /Pg 73 0 R >>
endobj

1070 0 obj
<< /Type /StructElem /S /H2 /K [ 1071 0 R ] /P 159 0 R /T (method head) >>
endobj

1071 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method head\n)
  /K [ 1072 0 R ]
  /P 1070 0 R
>>
endobj

1072 0 obj
<< /Type /MCR /MCID 3 /Pg 73 0 R >>
endobj

1073 0 obj
<< /Type /StructElem /S /P /K [ 1074 0 R ] /P 159 0 R >>
endobj

1074 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as:)
  /K [ 1075 0 R ]
  /P 1073 0 R
>>
endobj

1075 0 obj
<< /Type /MCR /MCID 4 /Pg 73 0 R >>
endobj

1076 0 obj
<< /Type /StructElem /S /Code /K [ 1077 0 R ] /P 159 0 R >>
endobj

1077 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method head\(Supply:D:\)\nmulti method head\(Supply:D: Callable:D $limit\)\nmulti method head\(Supply:D: \\limit\)\n)
  /K [ 1078 0 R ]
  /P 1076 0 R
>>
endobj

1078 0 obj
<< /Type /MCR /MCID 5 /Pg 73 0 R >>
endobj

1079 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1080 0 R 1082 0 R 1086 0 R ]
  /P 159 0 R
>>
endobj

1080 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a "head" supply with the same semantics as )
  /K [ 1081 0 R ]
  /P 1079 0 R
>>
endobj

1081 0 obj
<< /Type /MCR /MCID 6 /Pg 73 0 R >>
endobj

1082 0 obj
<< /Type /StructElem /S /Link /K [ 1083 0 R 1084 0 R ] /P 1079 0 R >>
endobj

1083 0 obj
<< /Type /OBJR /Obj 74 0 R /Pg 73 0 R >>
endobj

1084 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.head)
  /K [ 1085 0 R ]
  /P 1082 0 R
>>
endobj

1085 0 obj
<< /Type /MCR /MCID 7 /Pg 73 0 R >>
endobj

1086 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1087 0 R ]
  /P 1079 0 R
>>
endobj

1087 0 obj
<< /Type /MCR /MCID 8 /Pg 73 0 R >>
endobj

1088 0 obj
<< /Type /StructElem /S /Code /K [ 1089 0 R ] /P 159 0 R >>
endobj

1089 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 \) ; \n m y   $ h s   =   $ s . h e a d \( 2 \) ; \n $ h s . t a p \( & s a y \) ;                       #   O U T P U T :   « 4$$ 1 0$$ » \n)
  /K [ 1090 0 R ]
  /P 1088 0 R
>>
endobj

1090 0 obj
<< /Type /MCR /MCID 9 /Pg 73 0 R >>
endobj

1091 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1092 0 R 1094 0 R 1096 0 R 1098 0 R ]
  /P 159 0 R
>>
endobj

1092 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Since release 2020.07, A )
  /K [ 1093 0 R ]
  /P 1091 0 R
>>
endobj

1093 0 obj
<< /Type /MCR /MCID 10 /Pg 73 0 R >>
endobj

1094 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (WhateverCode)
  /K [ 1095 0 R ]
  /P 1091 0 R
>>
endobj

1095 0 obj
<< /Type /MCR /MCID 11 /Pg 73 0 R >>
endobj

1096 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( can be used also, again with the same semantics as )
  /K [ 1097 0 R ]
  /P 1091 0 R
>>
endobj

1097 0 obj
<< /Type /MCR /MCID 12 /Pg 73 0 R >>
endobj

1098 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.head)
  /K [ 1099 0 R ]
  /P 1091 0 R
>>
endobj

1099 0 obj
<< /Type /MCR /MCID 13 /Pg 73 0 R >>
endobj

1100 0 obj
<< /Type /StructElem /S /Code /K [ 1101 0 R ] /P 159 0 R >>
endobj

1101 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 ,   1 \) ; \n m y   $ h s   =   $ s . h e a d \(   *   -   2 \) ; \n $ h s . t a p \( & s a y \) ;                       #   O U T P U T :   « 4$$ 1 0$$ 3$$ » \n)
  /K [ 1102 0 R ]
  /P 1100 0 R
>>
endobj

1102 0 obj
<< /Type /MCR /MCID 14 /Pg 73 0 R >>
endobj

1103 0 obj
<< /Type /StructElem /S /H2 /K [ 1104 0 R ] /P 159 0 R /T (method tail) >>
endobj

1104 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method tail\n)
  /K [ 1105 0 R ]
  /P 1103 0 R
>>
endobj

1105 0 obj
<< /Type /MCR /MCID 15 /Pg 73 0 R >>
endobj

1106 0 obj
<< /Type /StructElem /S /Code /K [ 1107 0 R ] /P 159 0 R >>
endobj

1107 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method tail\(Supply:D:\)\nmulti method tail\(Supply:D: Callable:D $limit\)\nmulti method tail\(Supply:D: \\limit\)\n)
  /K [ 1108 0 R ]
  /P 1106 0 R
>>
endobj

1108 0 obj
<< /Type /MCR /MCID 16 /Pg 73 0 R >>
endobj

1109 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1110 0 R 1112 0 R 1116 0 R ]
  /P 159 0 R
>>
endobj

1110 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a "tail" supply with the same semantics as )
  /K [ 1111 0 R ]
  /P 1109 0 R
>>
endobj

1111 0 obj
<< /Type /MCR /MCID 17 /Pg 73 0 R >>
endobj

1112 0 obj
<< /Type /StructElem /S /Link /K [ 1113 0 R 1114 0 R ] /P 1109 0 R >>
endobj

1113 0 obj
<< /Type /OBJR /Obj 76 0 R /Pg 73 0 R >>
endobj

1114 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.tail)
  /K [ 1115 0 R ]
  /P 1112 0 R
>>
endobj

1115 0 obj
<< /Type /MCR /MCID 18 /Pg 73 0 R >>
endobj

1116 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1117 0 R ]
  /P 1109 0 R
>>
endobj

1117 0 obj
<< /Type /MCR /MCID 19 /Pg 73 0 R >>
endobj

1118 0 obj
<< /Type /StructElem /S /Code /K [ 1119 0 R ] /P 159 0 R >>
endobj

1119 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 \) ; \n m y   $ t s   =   $ s . t a i l \( 2 \) ; \n $ t s . t a p \( & s a y \) ;                       #   O U T P U T :   « 3$$ 2$$ » \n)
  /K [ 1120 0 R ]
  /P 1118 0 R
>>
endobj

1120 0 obj
<< /Type /MCR /MCID 20 /Pg 73 0 R >>
endobj

1121 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1122 0 R 1124 0 R 1126 0 R 1128 0 R 1130 0 R 1132 0 R 1134 0 R 1136 0 R 1138 0 R ]
  /P 159 0 R
>>
endobj

1122 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (You can call )
  /K [ 1123 0 R ]
  /P 1121 0 R
>>
endobj

1123 0 obj
<< /Type /MCR /MCID 21 /Pg 73 0 R >>
endobj

1124 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.tail)
  /K [ 1125 0 R ]
  /P 1121 0 R
>>
endobj

1125 0 obj
<< /Type /MCR /MCID 22 /Pg 73 0 R >>
endobj

1126 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( with )
  /K [ 1127 0 R ]
  /P 1121 0 R
>>
endobj

1127 0 obj
<< /Type /MCR /MCID 23 /Pg 73 0 R >>
endobj

1128 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Whatever)
  /K [ 1129 0 R ]
  /P 1121 0 R
>>
endobj

1129 0 obj
<< /Type /MCR /MCID 24 /Pg 73 0 R >>
endobj

1130 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( or )
  /K [ 1131 0 R ]
  /P 1121 0 R
>>
endobj

1131 0 obj
<< /Type /MCR /MCID 25 /Pg 73 0 R >>
endobj

1132 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Inf)
  /K [ 1133 0 R ]
  /P 1121 0 R
>>
endobj

1133 0 obj
<< /Type /MCR /MCID 26 /Pg 73 0 R >>
endobj

1134 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (; which will return a new supply equivalent to the initial one. Calling it with a )
  /K [ 1135 0 R ]
  /P 1121 0 R
>>
endobj

1135 0 obj
<< /Type /MCR /MCID 27 /Pg 73 0 R >>
endobj

1136 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (WhateverCode)
  /K [ 1137 0 R ]
  /P 1121 0 R
>>
endobj

1137 0 obj
<< /Type /MCR /MCID 28 /Pg 73 0 R >>
endobj

1138 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( will be equivalent to skipping until that number.)
  /K [ 1139 0 R ]
  /P 1121 0 R
>>
endobj

1139 0 obj
<< /Type /MCR /MCID 29 /Pg 73 0 R >>
endobj

1140 0 obj
<< /Type /StructElem /S /Code /K [ 1141 0 R ] /P 159 0 R >>
endobj

1141 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( 4 ,   1 0 ,   3 ,   2 \) ; \n m y   $ t s   =   $ s . t a i l \(   *   -   2   \) ; \n $ t s . t a p \( & s a y \) ;                       #   O U T P U T :   « 3$$ 2$$ » \n)
  /K [ 1142 0 R ]
  /P 1140 0 R
>>
endobj

1142 0 obj
<< /Type /MCR /MCID 30 /Pg 73 0 R >>
endobj

1143 0 obj
<< /Type /StructElem /S /P /K [ 1144 0 R ] /P 159 0 R >>
endobj

1144 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This feature is only available from the 2020.07 release of Raku.)
  /K [ 1145 0 R ]
  /P 1143 0 R
>>
endobj

1145 0 obj
<< /Type /MCR /MCID 31 /Pg 73 0 R >>
endobj

1146 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1147 0 R ]
  /P 159 0 R
  /T (method first)
>>
endobj

1147 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method first\n)
  /K [ 1148 0 R ]
  /P 1146 0 R
>>
endobj

1148 0 obj
<< /Type /MCR /MCID 32 /Pg 73 0 R >>
endobj

1149 0 obj
<< /Type /StructElem /S /Code /K [ 1150 0 R ] /P 159 0 R >>
endobj

1150 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method first\(Supply:D: :$end, |c\)\n)
  /K [ 1151 0 R ]
  /P 1149 0 R
>>
endobj

1151 0 obj
<< /Type /MCR /MCID 33 /Pg 73 0 R >>
endobj

1152 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1153 0 R 1155 0 R 1157 0 R 1159 0 R 1161 0 R 1163 0 R 1165 0 R 1167 0 R 1169 0 R 1171 0 R 1173 0 R ]
  /P 159 0 R
>>
endobj

1153 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This method creates a supply of the first element, or the last element if the optional named parameter )
  /K [ 1154 0 R ]
  /P 1152 0 R
>>
endobj

1154 0 obj
<< /Type /MCR /MCID 34 /Pg 73 0 R >>
endobj

1155 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:end)
  /K [ 1156 0 R ]
  /P 1152 0 R
>>
endobj

1156 0 obj
<< /Type /MCR /MCID 35 /Pg 73 0 R >>
endobj

1157 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is truthy, from a supply created by calling the )
  /K [ 1158 0 R ]
  /P 1152 0 R
>>
endobj

1158 0 obj
<< /Type /MCR /MCID 36 /Pg 73 0 R >>
endobj

1159 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (grep)
  /K [ 1160 0 R ]
  /P 1152 0 R
>>
endobj

1160 0 obj
<< /Type /MCR /MCID 0 /Pg 81 0 R >>
endobj

1161 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method on the invocant, with any remaining arguments as parameters. If there is no remaining argument, this method is equivalent to calling on the invocant, without parameter, the )
  /K [ 1162 0 R ]
  /P 1152 0 R
>>
endobj

1162 0 obj
<< /Type /MCR /MCID 1 /Pg 81 0 R >>
endobj

1163 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (head)
  /K [ 1164 0 R ]
  /P 1152 0 R
>>
endobj

1164 0 obj
<< /Type /MCR /MCID 2 /Pg 81 0 R >>
endobj

1165 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( or the )
  /K [ 1166 0 R ]
  /P 1152 0 R
>>
endobj

1166 0 obj
<< /Type /MCR /MCID 3 /Pg 81 0 R >>
endobj

1167 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (tail)
  /K [ 1168 0 R ]
  /P 1152 0 R
>>
endobj

1168 0 obj
<< /Type /MCR /MCID 4 /Pg 81 0 R >>
endobj

1169 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method, according to named parameter )
  /K [ 1170 0 R ]
  /P 1152 0 R
>>
endobj

1170 0 obj
<< /Type /MCR /MCID 5 /Pg 81 0 R >>
endobj

1171 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:end)
  /K [ 1172 0 R ]
  /P 1152 0 R
>>
endobj

1172 0 obj
<< /Type /MCR /MCID 6 /Pg 81 0 R >>
endobj

1173 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1174 0 R ]
  /P 1152 0 R
>>
endobj

1174 0 obj
<< /Type /MCR /MCID 7 /Pg 81 0 R >>
endobj

1175 0 obj
<< /Type /StructElem /S /Code /K [ 1176 0 R ] /P 159 0 R >>
endobj

1176 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ r a n d   =   s u p p l y   {   e m i t   \( r a n d   ×   1 0 0 \) . f l o o r   f o r   ^"   } ; \n m y   $ f i r s t - p r i m e   =   $ r a n d . f i r s t :   & i s - p r i m e ; \n #   o u t p u t   t h e   f i r s t   p r i m e   f r o m   t h e   e n d l e s s   r a n d o m   n u m b e r   s u p p l y   $ r a n d , \n #   t h e n   t h e   $ f i r s t - p r i m e   s u p p l y   r e a c h e s   i t s   e n d \n $ f i r s t - p r i m e . t a p :   & s a y ; \n)
  /K [ 1177 0 R ]
  /P 1175 0 R
>>
endobj

1177 0 obj
<< /Type /MCR /MCID 8 /Pg 81 0 R >>
endobj

1178 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1179 0 R ]
  /P 159 0 R
  /T (method split)
>>
endobj

1179 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method split\n)
  /K [ 1180 0 R ]
  /P 1178 0 R
>>
endobj

1180 0 obj
<< /Type /MCR /MCID 9 /Pg 81 0 R >>
endobj

1181 0 obj
<< /Type /StructElem /S /Code /K [ 1182 0 R ] /P 159 0 R >>
endobj

1182 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method split\(Supply:D: \\delimiter\)\nmulti method split\(Supply:D: \\delimiter, \\limit\)\n)
  /K [ 1183 0 R ]
  /P 1181 0 R
>>
endobj

1183 0 obj
<< /Type /MCR /MCID 10 /Pg 81 0 R >>
endobj

1184 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1185 0 R 1187 0 R 1189 0 R 1191 0 R 1193 0 R 1197 0 R 1199 0 R 1201 0 R 1203 0 R 1205 0 R 1207 0 R 1211 0 R ]
  /P 159 0 R
>>
endobj

1185 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This method creates a supply of the values returned by the )
  /K [ 1186 0 R ]
  /P 1184 0 R
>>
endobj

1186 0 obj
<< /Type /MCR /MCID 11 /Pg 81 0 R >>
endobj

1187 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Str.split)
  /K [ 1188 0 R ]
  /P 1184 0 R
>>
endobj

1188 0 obj
<< /Type /MCR /MCID 12 /Pg 81 0 R >>
endobj

1189 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method called on the string collected from the invocant. See )
  /K [ 1190 0 R ]
  /P 1184 0 R
>>
endobj

1190 0 obj
<< /Type /MCR /MCID 13 /Pg 81 0 R >>
endobj

1191 0 obj
<< /Type /StructElem /S /Link /K [ 1192 0 R ] /P 1184 0 R >>
endobj

1192 0 obj
<< /Type /OBJR /Obj 82 0 R /Pg 81 0 R >>
endobj

1193 0 obj
<< /Type /StructElem /S /Link /K [ 1194 0 R 1195 0 R ] /P 1184 0 R >>
endobj

1194 0 obj
<< /Type /OBJR /Obj 84 0 R /Pg 81 0 R >>
endobj

1195 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Str.split)
  /K [ 1196 0 R ]
  /P 1193 0 R
>>
endobj

1196 0 obj
<< /Type /MCR /MCID 14 /Pg 81 0 R >>
endobj

1197 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( for details on the )
  /K [ 1198 0 R ]
  /P 1184 0 R
>>
endobj

1198 0 obj
<< /Type /MCR /MCID 15 /Pg 81 0 R >>
endobj

1199 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\\delimiter)
  /K [ 1200 0 R ]
  /P 1184 0 R
>>
endobj

1200 0 obj
<< /Type /MCR /MCID 16 /Pg 81 0 R >>
endobj

1201 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( argument as well as available extra named parameters. The created supply can be limited with the )
  /K [ 1202 0 R ]
  /P 1184 0 R
>>
endobj

1202 0 obj
<< /Type /MCR /MCID 17 /Pg 81 0 R >>
endobj

1203 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\\limit)
  /K [ 1204 0 R ]
  /P 1184 0 R
>>
endobj

1204 0 obj
<< /Type /MCR /MCID 18 /Pg 81 0 R >>
endobj

1205 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( argument, see )
  /K [ 1206 0 R ]
  /P 1184 0 R
>>
endobj

1206 0 obj
<< /Type /MCR /MCID 19 /Pg 81 0 R >>
endobj

1207 0 obj
<< /Type /StructElem /S /Link /K [ 1208 0 R 1209 0 R ] /P 1184 0 R >>
endobj

1208 0 obj
<< /Type /OBJR /Obj 85 0 R /Pg 81 0 R >>
endobj

1209 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.head)
  /K [ 1210 0 R ]
  /P 1207 0 R
>>
endobj

1210 0 obj
<< /Type /MCR /MCID 20 /Pg 81 0 R >>
endobj

1211 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1212 0 R ]
  /P 1184 0 R
>>
endobj

1212 0 obj
<< /Type /MCR /MCID 21 /Pg 81 0 R >>
endobj

1213 0 obj
<< /Type /StructElem /S /Code /K [ 1214 0 R ] /P 159 0 R >>
endobj

1214 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ w o r d s   =   S u p p l y . f r o m - l i s t \( < H e l l o   W o r l d   F r o m   R a k u ! > \) ; \n m y   $ s   =   $ w o r d s . s p l i t \( /   < ? u p p e r >   / ,   2 ,   : s k i p - e m p t y \) ; \n $ s . t a p \( & s a y \) ;   #   O U T P U T :   « H e l l o$$ W o r l d$$ » \n)
  /K [ 1215 0 R ]
  /P 1213 0 R
>>
endobj

1215 0 obj
<< /Type /MCR /MCID 22 /Pg 81 0 R >>
endobj

1216 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1217 0 R ]
  /P 159 0 R
  /T (method rotate)
>>
endobj

1217 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method rotate\n)
  /K [ 1218 0 R ]
  /P 1216 0 R
>>
endobj

1218 0 obj
<< /Type /MCR /MCID 23 /Pg 81 0 R >>
endobj

1219 0 obj
<< /Type /StructElem /S /Code /K [ 1220 0 R ] /P 159 0 R >>
endobj

1220 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method rotate\(Supply:D: $rotate = 1\)\n)
  /K [ 1221 0 R ]
  /P 1219 0 R
>>
endobj

1221 0 obj
<< /Type /MCR /MCID 24 /Pg 81 0 R >>
endobj

1222 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1223 0 R 1225 0 R 1227 0 R ]
  /P 159 0 R
>>
endobj

1223 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply with elements rotated to the left when )
  /K [ 1224 0 R ]
  /P 1222 0 R
>>
endobj

1224 0 obj
<< /Type /MCR /MCID 25 /Pg 81 0 R >>
endobj

1225 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($rotate)
  /K [ 1226 0 R ]
  /P 1222 0 R
>>
endobj

1226 0 obj
<< /Type /MCR /MCID 26 /Pg 81 0 R >>
endobj

1227 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is positive or to the right otherwise, in which case the invocant is tapped on before a new supply is returned.)
  /K [ 1228 0 R ]
  /P 1222 0 R
>>
endobj

1228 0 obj
<< /Type /MCR /MCID 27 /Pg 81 0 R >>
endobj

1229 0 obj
<< /Type /StructElem /S /Code /K [ 1230 0 R ] /P 159 0 R >>
endobj

1230 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l y   =   S u p p l y . f r o m - l i s t \( < a   b   c   d   e > \) . r o t a t e \( 2 \) ; \n $ s u p p l y . t a p \( & s a y \) ;   #   O U T P U T :   « c$$ d$$ e$$ a$$ b$$ » \n)
  /K [ 1231 0 R ]
  /P 1229 0 R
>>
endobj

1231 0 obj
<< /Type /MCR /MCID 28 /Pg 81 0 R >>
endobj

1232 0 obj
<< /Type /StructElem /S /P /K [ 1233 0 R 1235 0 R ] /P 159 0 R >>
endobj

1233 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Note)
  /K [ 1234 0 R ]
  /P 1232 0 R
>>
endobj

1234 0 obj
<< /Type /MCR /MCID 29 /Pg 81 0 R >>
endobj

1235 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (: Available since Rakudo 2020.06.)
  /K [ 1236 0 R ]
  /P 1232 0 R
>>
endobj

1236 0 obj
<< /Type /MCR /MCID 30 /Pg 81 0 R >>
endobj

1237 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1238 0 R ]
  /P 159 0 R
  /T (method rotor)
>>
endobj

1238 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method rotor\n)
  /K [ 1239 0 R ]
  /P 1237 0 R
>>
endobj

1239 0 obj
<< /Type /MCR /MCID 31 /Pg 81 0 R >>
endobj

1240 0 obj
<< /Type /StructElem /S /Code /K [ 1241 0 R ] /P 159 0 R >>
endobj

1241 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method rotor\(Supply:D: @cycle --> Supply:D\)\n)
  /K [ 1242 0 R ]
  /P 1240 0 R
>>
endobj

1242 0 obj
<< /Type /MCR /MCID 32 /Pg 81 0 R >>
endobj

1243 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1244 0 R 1246 0 R 1250 0 R ]
  /P 159 0 R
>>
endobj

1244 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a "rotoring" supply with the same semantics as )
  /K [ 1245 0 R ]
  /P 1243 0 R
>>
endobj

1245 0 obj
<< /Type /MCR /MCID 33 /Pg 81 0 R >>
endobj

1246 0 obj
<< /Type /StructElem /S /Link /K [ 1247 0 R 1248 0 R ] /P 1243 0 R >>
endobj

1247 0 obj
<< /Type /OBJR /Obj 87 0 R /Pg 81 0 R >>
endobj

1248 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.rotor)
  /K [ 1249 0 R ]
  /P 1246 0 R
>>
endobj

1249 0 obj
<< /Type /MCR /MCID 34 /Pg 81 0 R >>
endobj

1250 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1251 0 R ]
  /P 1243 0 R
>>
endobj

1251 0 obj
<< /Type /MCR /MCID 35 /Pg 81 0 R >>
endobj

1252 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1253 0 R ]
  /P 159 0 R
  /T (method delayed)
>>
endobj

1253 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method delayed\n)
  /K [ 1254 0 R ]
  /P 1252 0 R
>>
endobj

1254 0 obj
<< /Type /MCR /MCID 36 /Pg 81 0 R >>
endobj

1255 0 obj
<< /Type /StructElem /S /Code /K [ 1256 0 R ] /P 159 0 R >>
endobj

1256 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method delayed\(Supply:D: $seconds, :$scheduler = $*SCHEDULER --> Supply:D\)\n)
  /K [ 1257 0 R ]
  /P 1255 0 R
>>
endobj

1257 0 obj
<< /Type /MCR /MCID 37 /Pg 81 0 R >>
endobj

1258 0 obj
<< /Type /StructElem /S /P /K [ 1259 0 R ] /P 159 0 R >>
endobj

1259 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new supply in which all values flowing through the given supply are emitted, but with the given delay in seconds.)
  /K [ 1260 0 R ]
  /P 1258 0 R
>>
endobj

1260 0 obj
<< /Type /MCR /MCID 38 /Pg 81 0 R >>
endobj

1261 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1262 0 R ]
  /P 159 0 R
  /T (method throttle)
>>
endobj

1262 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method throttle\n)
  /K [ 1263 0 R ]
  /P 1261 0 R
>>
endobj

1263 0 obj
<< /Type /MCR /MCID 39 /Pg 81 0 R >>
endobj

1264 0 obj
<< /Type /StructElem /S /P /K [ 1265 0 R ] /P 159 0 R >>
endobj

1265 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as)
  /K [ 1266 0 R ]
  /P 1264 0 R
>>
endobj

1266 0 obj
<< /Type /MCR /MCID 40 /Pg 81 0 R >>
endobj

1267 0 obj
<< /Type /StructElem /S /Code /K [ 1268 0 R ] /P 159 0 R >>
endobj

1268 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method throttle\(Supply:D:\n      Int\(\)  $elems,\n      Real\(\) $seconds,\n      Real\(\) $delay  = 0,\n      :$scheduler    = $*SCHEDULER,\n      :$control,\n      :$status,\n      :$bleed,\n      :$vent-at,\n    \)\n)
  /K [ 1269 0 R ]
  /P 1267 0 R
>>
endobj

1269 0 obj
<< /Type /MCR /MCID 0 /Pg 92 0 R >>
endobj

1270 0 obj
<< /Type /StructElem /S /Code /K [ 1271 0 R ] /P 159 0 R >>
endobj

1271 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (multi method throttle\(Supply:D:\n      Int\(\)  $elems,\n      Callable:D $process,\n      Real\(\) $delay = 0,\n      :$scheduler   = $*SCHEDULER,\n      :$control,\n      :$status,\n      :$bleed,\n      :$vent-at,\n    \)\n)
  /K [ 1272 0 R ]
  /P 1270 0 R
>>
endobj

1272 0 obj
<< /Type /MCR /MCID 1 /Pg 92 0 R >>
endobj

1273 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1274 0 R 1276 0 R 1278 0 R ]
  /P 159 0 R
>>
endobj

1274 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Arguments to )
  /K [ 1275 0 R ]
  /P 1273 0 R
>>
endobj

1275 0 obj
<< /Type /MCR /MCID 2 /Pg 92 0 R >>
endobj

1276 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.throttle)
  /K [ 1277 0 R ]
  /P 1273 0 R
>>
endobj

1277 0 obj
<< /Type /MCR /MCID 3 /Pg 92 0 R >>
endobj

1278 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( are defined as follows:)
  /K [ 1279 0 R ]
  /P 1273 0 R
>>
endobj

1279 0 obj
<< /Type /MCR /MCID 4 /Pg 92 0 R >>
endobj

1280 0 obj
<< /Type /StructElem /S /Table /K [ 1281 0 R 1289 0 R ] /P 159 0 R >>
endobj

1281 0 obj
<< /Type /StructElem /S /THead /K [ 1282 0 R ] /P 1280 0 R >>
endobj

1282 0 obj
<< /Type /StructElem /S /TR /K [ 1283 0 R 1286 0 R ] /P 1281 0 R >>
endobj

1283 0 obj
<< /Type /StructElem /S /TH /K [ 1284 0 R ] /P 1282 0 R >>
endobj

1284 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Argument)
  /K [ 1285 0 R ]
  /P 1283 0 R
>>
endobj

1285 0 obj
<< /Type /MCR /MCID 5 /Pg 92 0 R >>
endobj

1286 0 obj
<< /Type /StructElem /S /TH /K [ 1287 0 R ] /P 1282 0 R >>
endobj

1287 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Meaning)
  /K [ 1288 0 R ]
  /P 1286 0 R
>>
endobj

1288 0 obj
<< /Type /MCR /MCID 6 /Pg 92 0 R >>
endobj

1289 0 obj
<<
  /Type /StructElem
  /S /TBody
  /K [ 1290 0 R 1297 0 R 1304 0 R 1311 0 R 1318 0 R 1325 0 R 1332 0 R 1339 0 R ]
  /P 1280 0 R
>>
endobj

1290 0 obj
<< /Type /StructElem /S /TR /K [ 1291 0 R 1294 0 R ] /P 1289 0 R >>
endobj

1291 0 obj
<< /Type /StructElem /S /TD /K [ 1292 0 R ] /P 1290 0 R >>
endobj

1292 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($limit,)
  /K [ 1293 0 R ]
  /P 1291 0 R
>>
endobj

1293 0 obj
<< /Type /MCR /MCID 7 /Pg 92 0 R >>
endobj

1294 0 obj
<< /Type /StructElem /S /TD /K [ 1295 0 R ] /P 1290 0 R >>
endobj

1295 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (values / time or simultaneous processing)
  /K [ 1296 0 R ]
  /P 1294 0 R
>>
endobj

1296 0 obj
<< /Type /MCR /MCID 8 /Pg 92 0 R >>
endobj

1297 0 obj
<< /Type /StructElem /S /TR /K [ 1298 0 R 1301 0 R ] /P 1289 0 R >>
endobj

1298 0 obj
<< /Type /StructElem /S /TD /K [ 1299 0 R ] /P 1297 0 R >>
endobj

1299 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($seconds or $process)
  /K [ 1300 0 R ]
  /P 1298 0 R
>>
endobj

1300 0 obj
<< /Type /MCR /MCID 9 /Pg 92 0 R >>
endobj

1301 0 obj
<< /Type /StructElem /S /TD /K [ 1302 0 R ] /P 1297 0 R >>
endobj

1302 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (time-unit / code to process simultaneously)
  /K [ 1303 0 R ]
  /P 1301 0 R
>>
endobj

1303 0 obj
<< /Type /MCR /MCID 10 /Pg 92 0 R >>
endobj

1304 0 obj
<< /Type /StructElem /S /TR /K [ 1305 0 R 1308 0 R ] /P 1289 0 R >>
endobj

1305 0 obj
<< /Type /StructElem /S /TD /K [ 1306 0 R ] /P 1304 0 R >>
endobj

1306 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($delay = 0,)
  /K [ 1307 0 R ]
  /P 1305 0 R
>>
endobj

1307 0 obj
<< /Type /MCR /MCID 11 /Pg 92 0 R >>
endobj

1308 0 obj
<< /Type /StructElem /S /TD /K [ 1309 0 R ] /P 1304 0 R >>
endobj

1309 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (initial delay before starting, in seconds)
  /K [ 1310 0 R ]
  /P 1308 0 R
>>
endobj

1310 0 obj
<< /Type /MCR /MCID 12 /Pg 92 0 R >>
endobj

1311 0 obj
<< /Type /StructElem /S /TR /K [ 1312 0 R 1315 0 R ] /P 1289 0 R >>
endobj

1312 0 obj
<< /Type /StructElem /S /TD /K [ 1313 0 R ] /P 1311 0 R >>
endobj

1313 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:$control,)
  /K [ 1314 0 R ]
  /P 1312 0 R
>>
endobj

1314 0 obj
<< /Type /MCR /MCID 13 /Pg 92 0 R >>
endobj

1315 0 obj
<< /Type /StructElem /S /TD /K [ 1316 0 R ] /P 1311 0 R >>
endobj

1316 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (supply to emit control messages on \(optional\))
  /K [ 1317 0 R ]
  /P 1315 0 R
>>
endobj

1317 0 obj
<< /Type /MCR /MCID 14 /Pg 92 0 R >>
endobj

1318 0 obj
<< /Type /StructElem /S /TR /K [ 1319 0 R 1322 0 R ] /P 1289 0 R >>
endobj

1319 0 obj
<< /Type /StructElem /S /TD /K [ 1320 0 R ] /P 1318 0 R >>
endobj

1320 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:$status,)
  /K [ 1321 0 R ]
  /P 1319 0 R
>>
endobj

1321 0 obj
<< /Type /MCR /MCID 15 /Pg 92 0 R >>
endobj

1322 0 obj
<< /Type /StructElem /S /TD /K [ 1323 0 R ] /P 1318 0 R >>
endobj

1323 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (supply to tap status messages from \(optional\))
  /K [ 1324 0 R ]
  /P 1322 0 R
>>
endobj

1324 0 obj
<< /Type /MCR /MCID 16 /Pg 92 0 R >>
endobj

1325 0 obj
<< /Type /StructElem /S /TR /K [ 1326 0 R 1329 0 R ] /P 1289 0 R >>
endobj

1326 0 obj
<< /Type /StructElem /S /TD /K [ 1327 0 R ] /P 1325 0 R >>
endobj

1327 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:$bleed,)
  /K [ 1328 0 R ]
  /P 1326 0 R
>>
endobj

1328 0 obj
<< /Type /MCR /MCID 17 /Pg 92 0 R >>
endobj

1329 0 obj
<< /Type /StructElem /S /TD /K [ 1330 0 R ] /P 1325 0 R >>
endobj

1330 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (supply to bleed messages to \(optional\))
  /K [ 1331 0 R ]
  /P 1329 0 R
>>
endobj

1331 0 obj
<< /Type /MCR /MCID 18 /Pg 92 0 R >>
endobj

1332 0 obj
<< /Type /StructElem /S /TR /K [ 1333 0 R 1336 0 R ] /P 1289 0 R >>
endobj

1333 0 obj
<< /Type /StructElem /S /TD /K [ 1334 0 R ] /P 1332 0 R >>
endobj

1334 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:$vent-at,)
  /K [ 1335 0 R ]
  /P 1333 0 R
>>
endobj

1335 0 obj
<< /Type /MCR /MCID 19 /Pg 92 0 R >>
endobj

1336 0 obj
<< /Type /StructElem /S /TD /K [ 1337 0 R ] /P 1332 0 R >>
endobj

1337 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (bleed when so many buffered \(optional\))
  /K [ 1338 0 R ]
  /P 1336 0 R
>>
endobj

1338 0 obj
<< /Type /MCR /MCID 20 /Pg 92 0 R >>
endobj

1339 0 obj
<< /Type /StructElem /S /TR /K [ 1340 0 R 1343 0 R ] /P 1289 0 R >>
endobj

1340 0 obj
<< /Type /StructElem /S /TD /K [ 1341 0 R ] /P 1339 0 R >>
endobj

1341 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:$scheduler,)
  /K [ 1342 0 R ]
  /P 1340 0 R
>>
endobj

1342 0 obj
<< /Type /MCR /MCID 21 /Pg 92 0 R >>
endobj

1343 0 obj
<< /Type /StructElem /S /TD /K [ 1344 0 R ] /P 1339 0 R >>
endobj

1344 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (scheduler to use, default $*SCHEDULER)
  /K [ 1345 0 R ]
  /P 1343 0 R
>>
endobj

1345 0 obj
<< /Type /MCR /MCID 22 /Pg 92 0 R >>
endobj

1346 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1347 0 R 1349 0 R 1351 0 R ]
  /P 159 0 R
>>
endobj

1347 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This method produces a )
  /K [ 1348 0 R ]
  /P 1346 0 R
>>
endobj

1348 0 obj
<< /Type /MCR /MCID 23 /Pg 92 0 R >>
endobj

1349 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1350 0 R ]
  /P 1346 0 R
>>
endobj

1350 0 obj
<< /Type /MCR /MCID 24 /Pg 92 0 R >>
endobj

1351 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( from a given one, but makes sure the number of messages passed through is limited.)
  /K [ 1352 0 R ]
  /P 1346 0 R
>>
endobj

1352 0 obj
<< /Type /MCR /MCID 25 /Pg 92 0 R >>
endobj

1353 0 obj
<< /Type /StructElem /S /P /K [ 1354 0 R ] /P 159 0 R >>
endobj

1354 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (It has two modes of operation: per time-unit or by maximum number of executions of a block of code: this is determined by the type of the second positional parameter.)
  /K [ 1355 0 R ]
  /P 1353 0 R
>>
endobj

1355 0 obj
<< /Type /MCR /MCID 26 /Pg 92 0 R >>
endobj

1356 0 obj
<< /Type /StructElem /S /P /K [ 1357 0 R ] /P 159 0 R >>
endobj

1357 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The first positional parameter specifies the limit that should be applied.)
  /K [ 1358 0 R ]
  /P 1356 0 R
>>
endobj

1358 0 obj
<< /Type /MCR /MCID 27 /Pg 92 0 R >>
endobj

1359 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1360 0 R 1362 0 R 1364 0 R 1366 0 R 1368 0 R 1370 0 R 1372 0 R ]
  /P 159 0 R
>>
endobj

1360 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (If the second positional parameter is a )
  /K [ 1361 0 R ]
  /P 1359 0 R
>>
endobj

1361 0 obj
<< /Type /MCR /MCID 28 /Pg 92 0 R >>
endobj

1362 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Callable)
  /K [ 1363 0 R ]
  /P 1359 0 R
>>
endobj

1363 0 obj
<< /Type /MCR /MCID 29 /Pg 92 0 R >>
endobj

1364 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, then the limit indicates the maximum number of parallel processes executing the Callable, which is given the value that was received. The emitted values in this case will be the )
  /K [ 1365 0 R ]
  /P 1359 0 R
>>
endobj

1365 0 obj
<< /Type /MCR /MCID 30 /Pg 92 0 R >>
endobj

1366 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Promise)
  /K [ 1367 0 R ]
  /P 1359 0 R
>>
endobj

1367 0 obj
<< /Type /MCR /MCID 31 /Pg 92 0 R >>
endobj

1368 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (s that were obtained from )
  /K [ 1369 0 R ]
  /P 1359 0 R
>>
endobj

1369 0 obj
<< /Type /MCR /MCID 32 /Pg 92 0 R >>
endobj

1370 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (start)
  /K [ 1371 0 R ]
  /P 1359 0 R
>>
endobj

1371 0 obj
<< /Type /MCR /MCID 33 /Pg 92 0 R >>
endobj

1372 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (ing the Callable.)
  /K [ 1373 0 R ]
  /P 1359 0 R
>>
endobj

1373 0 obj
<< /Type /MCR /MCID 34 /Pg 92 0 R >>
endobj

1374 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1375 0 R 1377 0 R 1379 0 R ]
  /P 159 0 R
>>
endobj

1375 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (If the second positional parameter is a real number, it is interpreted as the time-unit \(in seconds\). If you specify )
  /K [ 1376 0 R ]
  /P 1374 0 R
>>
endobj

1376 0 obj
<< /Type /MCR /MCID 35 /Pg 92 0 R >>
endobj

1377 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.1)
  /K [ 1378 0 R ]
  /P 1374 0 R
>>
endobj

1378 0 obj
<< /Type /MCR /MCID 36 /Pg 92 0 R >>
endobj

1379 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( as the value, then it makes sure you don't exceed the limit for every tenth of a second.)
  /K [ 1380 0 R ]
  /P 1374 0 R
>>
endobj

1380 0 obj
<< /Type /MCR /MCID 37 /Pg 92 0 R >>
endobj

1381 0 obj
<< /Type /StructElem /S /P /K [ 1382 0 R ] /P 159 0 R >>
endobj

1382 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (If the limit is exceeded, then incoming messages are buffered until there is room to pass on / execute the Callable again.)
  /K [ 1383 0 R ]
  /P 1381 0 R
>>
endobj

1383 0 obj
<< /Type /MCR /MCID 38 /Pg 92 0 R >>
endobj

1384 0 obj
<< /Type /StructElem /S /P /K [ 1385 0 R ] /P 159 0 R >>
endobj

1385 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The third positional parameter is optional: it indicates the number of seconds the throttle will wait before passing on any values.)
  /K [ 1386 0 R ]
  /P 1384 0 R
>>
endobj

1386 0 obj
<< /Type /MCR /MCID 39 /Pg 92 0 R >>
endobj

1387 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1388 0 R 1390 0 R 1392 0 R ]
  /P 159 0 R
>>
endobj

1388 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 1389 0 R ]
  /P 1387 0 R
>>
endobj

1389 0 obj
<< /Type /MCR /MCID 40 /Pg 92 0 R >>
endobj

1390 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:control)
  /K [ 1391 0 R ]
  /P 1387 0 R
>>
endobj

1391 0 obj
<< /Type /MCR /MCID 41 /Pg 92 0 R >>
endobj

1392 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( named parameter optionally specifies a Supply that you can use to control the throttle while it is in operation. Messages that can be sent, are strings in the form of "key:value". Please see below for the types of messages that you can send to control the throttle.)
  /K [ 1393 0 R ]
  /P 1387 0 R
>>
endobj

1393 0 obj
<< /Type /MCR /MCID 42 /Pg 92 0 R >>
endobj

1394 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1395 0 R 1397 0 R 1399 0 R 1401 0 R 1405 0 R ]
  /P 159 0 R
>>
endobj

1395 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 1396 0 R ]
  /P 1394 0 R
>>
endobj

1396 0 obj
<< /Type /MCR /MCID 43 /Pg 92 0 R >>
endobj

1397 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:status)
  /K [ 1398 0 R ]
  /P 1394 0 R
>>
endobj

1398 0 obj
<< /Type /MCR /MCID 44 /Pg 92 0 R >>
endobj

1399 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( named parameter optionally specifies a Supply that will receive any status messages. If specified, it will at least send one status message after the original Supply is exhausted. See )
  /K [ 1400 0 R ]
  /P 1394 0 R
>>
endobj

1400 0 obj
<< /Type /MCR /MCID 45 /Pg 92 0 R >>
endobj

1401 0 obj
<< /Type /StructElem /S /Link /K [ 1402 0 R 1403 0 R ] /P 1394 0 R >>
endobj

1402 0 obj
<< /Type /OBJR /Obj 93 0 R /Pg 92 0 R >>
endobj

1403 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (status message)
  /K [ 1404 0 R ]
  /P 1401 0 R
>>
endobj

1404 0 obj
<< /Type /MCR /MCID 46 /Pg 92 0 R >>
endobj

1405 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( below.)
  /K [ 1406 0 R ]
  /P 1394 0 R
>>
endobj

1406 0 obj
<< /Type /MCR /MCID 47 /Pg 92 0 R >>
endobj

1407 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1408 0 R 1410 0 R 1412 0 R 1414 0 R 1416 0 R 1418 0 R 1420 0 R ]
  /P 159 0 R
>>
endobj

1408 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 1409 0 R ]
  /P 1407 0 R
>>
endobj

1409 0 obj
<< /Type /MCR /MCID 48 /Pg 92 0 R >>
endobj

1410 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1411 0 R ]
  /P 1407 0 R
>>
endobj

1411 0 obj
<< /Type /MCR /MCID 49 /Pg 92 0 R >>
endobj

1412 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( named parameter optionally specifies a Supply that will receive any values that were either explicitly bled \(with the )
  /K [ 1413 0 R ]
  /P 1407 0 R
>>
endobj

1413 0 obj
<< /Type /MCR /MCID 50 /Pg 92 0 R >>
endobj

1414 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (bleed)
  /K [ 1415 0 R ]
  /P 1407 0 R
>>
endobj

1415 0 obj
<< /Type /MCR /MCID 51 /Pg 92 0 R >>
endobj

1416 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( control message\), or automatically bled \(if there's a )
  /K [ 1417 0 R ]
  /P 1407 0 R
>>
endobj

1417 0 obj
<< /Type /MCR /MCID 52 /Pg 92 0 R >>
endobj

1418 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (vent-at)
  /K [ 1419 0 R ]
  /P 1407 0 R
>>
endobj

1419 0 obj
<< /Type /MCR /MCID 53 /Pg 92 0 R >>
endobj

1420 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( active\).)
  /K [ 1421 0 R ]
  /P 1407 0 R
>>
endobj

1421 0 obj
<< /Type /MCR /MCID 54 /Pg 92 0 R >>
endobj

1422 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1423 0 R 1425 0 R 1427 0 R 1429 0 R 1431 0 R 1433 0 R 1435 0 R ]
  /P 159 0 R
>>
endobj

1423 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 1424 0 R ]
  /P 1422 0 R
>>
endobj

1424 0 obj
<< /Type /MCR /MCID 55 /Pg 92 0 R >>
endobj

1425 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:vent-at)
  /K [ 1426 0 R ]
  /P 1422 0 R
>>
endobj

1426 0 obj
<< /Type /MCR /MCID 56 /Pg 92 0 R >>
endobj

1427 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( named parameter indicates the number of values that may be buffered before any additional value will be routed to the )
  /K [ 1428 0 R ]
  /P 1422 0 R
>>
endobj

1428 0 obj
<< /Type /MCR /MCID 57 /Pg 92 0 R >>
endobj

1429 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1430 0 R ]
  /P 1422 0 R
>>
endobj

1430 0 obj
<< /Type /MCR /MCID 58 /Pg 92 0 R >>
endobj

1431 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply. Defaults to 0 if not specified \(causing no automatic bleeding to happen\). Only makes sense if a )
  /K [ 1432 0 R ]
  /P 1422 0 R
>>
endobj

1432 0 obj
<< /Type /MCR /MCID 59 /Pg 92 0 R >>
endobj

1433 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1434 0 R ]
  /P 1422 0 R
>>
endobj

1434 0 obj
<< /Type /MCR /MCID 60 /Pg 92 0 R >>
endobj

1435 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply has also been specified.)
  /K [ 1436 0 R ]
  /P 1422 0 R
>>
endobj

1436 0 obj
<< /Type /MCR /MCID 61 /Pg 92 0 R >>
endobj

1437 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1438 0 R 1440 0 R 1442 0 R 1444 0 R 1446 0 R ]
  /P 159 0 R
>>
endobj

1438 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The )
  /K [ 1439 0 R ]
  /P 1437 0 R
>>
endobj

1439 0 obj
<< /Type /MCR /MCID 0 /Pg 98 0 R >>
endobj

1440 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:scheduler)
  /K [ 1441 0 R ]
  /P 1437 0 R
>>
endobj

1441 0 obj
<< /Type /MCR /MCID 1 /Pg 98 0 R >>
endobj

1442 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( named parameter indicates the scheduler to be used. Defaults to )
  /K [ 1443 0 R ]
  /P 1437 0 R
>>
endobj

1443 0 obj
<< /Type /MCR /MCID 2 /Pg 98 0 R >>
endobj

1444 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($*SCHEDULER)
  /K [ 1445 0 R ]
  /P 1437 0 R
>>
endobj

1445 0 obj
<< /Type /MCR /MCID 3 /Pg 98 0 R >>
endobj

1446 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1447 0 R ]
  /P 1437 0 R
>>
endobj

1447 0 obj
<< /Type /MCR /MCID 4 /Pg 98 0 R >>
endobj

1448 0 obj
<<
  /Type /StructElem
  /S /H3
  /K [ 1449 0 R ]
  /P 159 0 R
  /T (control messages)
>>
endobj

1449 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (control messages\n)
  /K [ 1450 0 R ]
  /P 1448 0 R
>>
endobj

1450 0 obj
<< /Type /MCR /MCID 5 /Pg 98 0 R >>
endobj

1451 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1452 0 R 1454 0 R 1456 0 R ]
  /P 159 0 R
>>
endobj

1452 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (These messages can be sent to the )
  /K [ 1453 0 R ]
  /P 1451 0 R
>>
endobj

1453 0 obj
<< /Type /MCR /MCID 6 /Pg 98 0 R >>
endobj

1454 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:control)
  /K [ 1455 0 R ]
  /P 1451 0 R
>>
endobj

1455 0 obj
<< /Type /MCR /MCID 7 /Pg 98 0 R >>
endobj

1456 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply. A control message consists of a string of the form "key: value", e.g. "limit: 4".)
  /K [ 1457 0 R ]
  /P 1451 0 R
>>
endobj

1457 0 obj
<< /Type /MCR /MCID 8 /Pg 98 0 R >>
endobj

1458 0 obj
<< /Type /StructElem /S /LI /K [ 1459 0 R 1462 0 R ] /P 159 0 R >>
endobj

1459 0 obj
<< /Type /StructElem /S /Lbl /K [ 1460 0 R ] /P 1458 0 R >>
endobj

1460 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1461 0 R ]
  /P 1459 0 R
>>
endobj

1461 0 obj
<< /Type /MCR /MCID 9 /Pg 98 0 R >>
endobj

1462 0 obj
<< /Type /StructElem /S /LBody /K [ 1463 0 R ] /P 1458 0 R >>
endobj

1463 0 obj
<< /Type /StructElem /S /P /K [ 1464 0 R ] /P 1462 0 R >>
endobj

1464 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (limit)
  /K [ 1465 0 R ]
  /P 1463 0 R
>>
endobj

1465 0 obj
<< /Type /MCR /MCID 10 /Pg 98 0 R >>
endobj

1466 0 obj
<< /Type /StructElem /S /P /K [ 1467 0 R ] /P 159 0 R >>
endobj

1467 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Change the number of messages \(as initially given in the first positional\) to the value given.)
  /K [ 1468 0 R ]
  /P 1466 0 R
>>
endobj

1468 0 obj
<< /Type /MCR /MCID 11 /Pg 98 0 R >>
endobj

1469 0 obj
<< /Type /StructElem /S /LI /K [ 1470 0 R 1473 0 R ] /P 159 0 R >>
endobj

1470 0 obj
<< /Type /StructElem /S /Lbl /K [ 1471 0 R ] /P 1469 0 R >>
endobj

1471 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1472 0 R ]
  /P 1470 0 R
>>
endobj

1472 0 obj
<< /Type /MCR /MCID 12 /Pg 98 0 R >>
endobj

1473 0 obj
<< /Type /StructElem /S /LBody /K [ 1474 0 R ] /P 1469 0 R >>
endobj

1474 0 obj
<< /Type /StructElem /S /P /K [ 1475 0 R ] /P 1473 0 R >>
endobj

1475 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (bleed)
  /K [ 1476 0 R ]
  /P 1474 0 R
>>
endobj

1476 0 obj
<< /Type /MCR /MCID 13 /Pg 98 0 R >>
endobj

1477 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1478 0 R 1480 0 R 1482 0 R ]
  /P 159 0 R
>>
endobj

1478 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Route the given number of buffered messages to the )
  /K [ 1479 0 R ]
  /P 1477 0 R
>>
endobj

1479 0 obj
<< /Type /MCR /MCID 14 /Pg 98 0 R >>
endobj

1480 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1481 0 R ]
  /P 1477 0 R
>>
endobj

1481 0 obj
<< /Type /MCR /MCID 15 /Pg 98 0 R >>
endobj

1482 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply.)
  /K [ 1483 0 R ]
  /P 1477 0 R
>>
endobj

1483 0 obj
<< /Type /MCR /MCID 16 /Pg 98 0 R >>
endobj

1484 0 obj
<< /Type /StructElem /S /LI /K [ 1485 0 R 1488 0 R ] /P 159 0 R >>
endobj

1485 0 obj
<< /Type /StructElem /S /Lbl /K [ 1486 0 R ] /P 1484 0 R >>
endobj

1486 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1487 0 R ]
  /P 1485 0 R
>>
endobj

1487 0 obj
<< /Type /MCR /MCID 17 /Pg 98 0 R >>
endobj

1488 0 obj
<< /Type /StructElem /S /LBody /K [ 1489 0 R ] /P 1484 0 R >>
endobj

1489 0 obj
<< /Type /StructElem /S /P /K [ 1490 0 R ] /P 1488 0 R >>
endobj

1490 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (vent-at)
  /K [ 1491 0 R ]
  /P 1489 0 R
>>
endobj

1491 0 obj
<< /Type /MCR /MCID 18 /Pg 98 0 R >>
endobj

1492 0 obj
<< /Type /StructElem /S /P /K [ 1493 0 R ] /P 159 0 R >>
endobj

1493 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Change the maximum number of buffered values before automatic bleeding takes place. If the value is lower than before, will cause immediate rerouting of buffered values to match the new maximum.)
  /K [ 1494 0 R ]
  /P 1492 0 R
>>
endobj

1494 0 obj
<< /Type /MCR /MCID 19 /Pg 98 0 R >>
endobj

1495 0 obj
<< /Type /StructElem /S /LI /K [ 1496 0 R 1499 0 R ] /P 159 0 R >>
endobj

1496 0 obj
<< /Type /StructElem /S /Lbl /K [ 1497 0 R ] /P 1495 0 R >>
endobj

1497 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1498 0 R ]
  /P 1496 0 R
>>
endobj

1498 0 obj
<< /Type /MCR /MCID 20 /Pg 98 0 R >>
endobj

1499 0 obj
<< /Type /StructElem /S /LBody /K [ 1500 0 R ] /P 1495 0 R >>
endobj

1500 0 obj
<< /Type /StructElem /S /P /K [ 1501 0 R ] /P 1499 0 R >>
endobj

1501 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (status)
  /K [ 1502 0 R ]
  /P 1500 0 R
>>
endobj

1502 0 obj
<< /Type /MCR /MCID 21 /Pg 98 0 R >>
endobj

1503 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1504 0 R 1506 0 R 1508 0 R ]
  /P 159 0 R
>>
endobj

1504 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Send a status message to the )
  /K [ 1505 0 R ]
  /P 1503 0 R
>>
endobj

1505 0 obj
<< /Type /MCR /MCID 22 /Pg 98 0 R >>
endobj

1506 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:status)
  /K [ 1507 0 R ]
  /P 1503 0 R
>>
endobj

1507 0 obj
<< /Type /MCR /MCID 23 /Pg 98 0 R >>
endobj

1508 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply with the given id.)
  /K [ 1509 0 R ]
  /P 1503 0 R
>>
endobj

1509 0 obj
<< /Type /MCR /MCID 24 /Pg 98 0 R >>
endobj

1510 0 obj
<<
  /Type /StructElem
  /S /H3
  /K [ 1511 0 R ]
  /P 159 0 R
  /T (status message)
>>
endobj

1511 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (status message\n)
  /K [ 1512 0 R ]
  /P 1510 0 R
>>
endobj

1512 0 obj
<< /Type /MCR /MCID 25 /Pg 98 0 R >>
endobj

1513 0 obj
<< /Type /StructElem /S /P /K [ 1514 0 R ] /P 159 0 R >>
endobj

1514 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The status return message is a hash with the following keys:)
  /K [ 1515 0 R ]
  /P 1513 0 R
>>
endobj

1515 0 obj
<< /Type /MCR /MCID 26 /Pg 98 0 R >>
endobj

1516 0 obj
<< /Type /StructElem /S /LI /K [ 1517 0 R 1520 0 R ] /P 159 0 R >>
endobj

1517 0 obj
<< /Type /StructElem /S /Lbl /K [ 1518 0 R ] /P 1516 0 R >>
endobj

1518 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1519 0 R ]
  /P 1517 0 R
>>
endobj

1519 0 obj
<< /Type /MCR /MCID 27 /Pg 98 0 R >>
endobj

1520 0 obj
<< /Type /StructElem /S /LBody /K [ 1521 0 R ] /P 1516 0 R >>
endobj

1521 0 obj
<< /Type /StructElem /S /P /K [ 1522 0 R ] /P 1520 0 R >>
endobj

1522 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (allowed)
  /K [ 1523 0 R ]
  /P 1521 0 R
>>
endobj

1523 0 obj
<< /Type /MCR /MCID 28 /Pg 98 0 R >>
endobj

1524 0 obj
<< /Type /StructElem /S /P /K [ 1525 0 R ] /P 159 0 R >>
endobj

1525 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The current number of messages / callables that is still allowed to be passed / executed.)
  /K [ 1526 0 R ]
  /P 1524 0 R
>>
endobj

1526 0 obj
<< /Type /MCR /MCID 29 /Pg 98 0 R >>
endobj

1527 0 obj
<< /Type /StructElem /S /LI /K [ 1528 0 R 1531 0 R ] /P 159 0 R >>
endobj

1528 0 obj
<< /Type /StructElem /S /Lbl /K [ 1529 0 R ] /P 1527 0 R >>
endobj

1529 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1530 0 R ]
  /P 1528 0 R
>>
endobj

1530 0 obj
<< /Type /MCR /MCID 30 /Pg 98 0 R >>
endobj

1531 0 obj
<< /Type /StructElem /S /LBody /K [ 1532 0 R ] /P 1527 0 R >>
endobj

1532 0 obj
<< /Type /StructElem /S /P /K [ 1533 0 R ] /P 1531 0 R >>
endobj

1533 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (bled)
  /K [ 1534 0 R ]
  /P 1532 0 R
>>
endobj

1534 0 obj
<< /Type /MCR /MCID 31 /Pg 98 0 R >>
endobj

1535 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1536 0 R 1538 0 R 1540 0 R ]
  /P 159 0 R
>>
endobj

1536 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The number of messages routed to the )
  /K [ 1537 0 R ]
  /P 1535 0 R
>>
endobj

1537 0 obj
<< /Type /MCR /MCID 32 /Pg 98 0 R >>
endobj

1538 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1539 0 R ]
  /P 1535 0 R
>>
endobj

1539 0 obj
<< /Type /MCR /MCID 33 /Pg 98 0 R >>
endobj

1540 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply.)
  /K [ 1541 0 R ]
  /P 1535 0 R
>>
endobj

1541 0 obj
<< /Type /MCR /MCID 34 /Pg 98 0 R >>
endobj

1542 0 obj
<< /Type /StructElem /S /LI /K [ 1543 0 R 1546 0 R ] /P 159 0 R >>
endobj

1543 0 obj
<< /Type /StructElem /S /Lbl /K [ 1544 0 R ] /P 1542 0 R >>
endobj

1544 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1545 0 R ]
  /P 1543 0 R
>>
endobj

1545 0 obj
<< /Type /MCR /MCID 35 /Pg 98 0 R >>
endobj

1546 0 obj
<< /Type /StructElem /S /LBody /K [ 1547 0 R ] /P 1542 0 R >>
endobj

1547 0 obj
<< /Type /StructElem /S /P /K [ 1548 0 R ] /P 1546 0 R >>
endobj

1548 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (buffered)
  /K [ 1549 0 R ]
  /P 1547 0 R
>>
endobj

1549 0 obj
<< /Type /MCR /MCID 36 /Pg 98 0 R >>
endobj

1550 0 obj
<< /Type /StructElem /S /P /K [ 1551 0 R ] /P 159 0 R >>
endobj

1551 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The number of messages currently buffered because of overflow.)
  /K [ 1552 0 R ]
  /P 1550 0 R
>>
endobj

1552 0 obj
<< /Type /MCR /MCID 37 /Pg 98 0 R >>
endobj

1553 0 obj
<< /Type /StructElem /S /LI /K [ 1554 0 R 1557 0 R ] /P 159 0 R >>
endobj

1554 0 obj
<< /Type /StructElem /S /Lbl /K [ 1555 0 R ] /P 1553 0 R >>
endobj

1555 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1556 0 R ]
  /P 1554 0 R
>>
endobj

1556 0 obj
<< /Type /MCR /MCID 38 /Pg 98 0 R >>
endobj

1557 0 obj
<< /Type /StructElem /S /LBody /K [ 1558 0 R ] /P 1553 0 R >>
endobj

1558 0 obj
<< /Type /StructElem /S /P /K [ 1559 0 R ] /P 1557 0 R >>
endobj

1559 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (emitted)
  /K [ 1560 0 R ]
  /P 1558 0 R
>>
endobj

1560 0 obj
<< /Type /MCR /MCID 39 /Pg 98 0 R >>
endobj

1561 0 obj
<< /Type /StructElem /S /P /K [ 1562 0 R ] /P 159 0 R >>
endobj

1562 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The number of messages emitted \(passed through\).)
  /K [ 1563 0 R ]
  /P 1561 0 R
>>
endobj

1563 0 obj
<< /Type /MCR /MCID 40 /Pg 98 0 R >>
endobj

1564 0 obj
<< /Type /StructElem /S /LI /K [ 1565 0 R 1568 0 R ] /P 159 0 R >>
endobj

1565 0 obj
<< /Type /StructElem /S /Lbl /K [ 1566 0 R ] /P 1564 0 R >>
endobj

1566 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1567 0 R ]
  /P 1565 0 R
>>
endobj

1567 0 obj
<< /Type /MCR /MCID 41 /Pg 98 0 R >>
endobj

1568 0 obj
<< /Type /StructElem /S /LBody /K [ 1569 0 R ] /P 1564 0 R >>
endobj

1569 0 obj
<< /Type /StructElem /S /P /K [ 1570 0 R ] /P 1568 0 R >>
endobj

1570 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (id)
  /K [ 1571 0 R ]
  /P 1569 0 R
>>
endobj

1571 0 obj
<< /Type /MCR /MCID 42 /Pg 98 0 R >>
endobj

1572 0 obj
<< /Type /StructElem /S /P /K [ 1573 0 R ] /P 159 0 R >>
endobj

1573 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The id of this status message \(a monotonically increasing number\). Handy if you want to log status messages.)
  /K [ 1574 0 R ]
  /P 1572 0 R
>>
endobj

1574 0 obj
<< /Type /MCR /MCID 43 /Pg 98 0 R >>
endobj

1575 0 obj
<< /Type /StructElem /S /LI /K [ 1576 0 R 1579 0 R ] /P 159 0 R >>
endobj

1576 0 obj
<< /Type /StructElem /S /Lbl /K [ 1577 0 R ] /P 1575 0 R >>
endobj

1577 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1578 0 R ]
  /P 1576 0 R
>>
endobj

1578 0 obj
<< /Type /MCR /MCID 44 /Pg 98 0 R >>
endobj

1579 0 obj
<< /Type /StructElem /S /LBody /K [ 1580 0 R ] /P 1575 0 R >>
endobj

1580 0 obj
<< /Type /StructElem /S /P /K [ 1581 0 R ] /P 1579 0 R >>
endobj

1581 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (limit)
  /K [ 1582 0 R ]
  /P 1580 0 R
>>
endobj

1582 0 obj
<< /Type /MCR /MCID 45 /Pg 98 0 R >>
endobj

1583 0 obj
<< /Type /StructElem /S /P /K [ 1584 0 R ] /P 159 0 R >>
endobj

1584 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The current limit that is being applied.)
  /K [ 1585 0 R ]
  /P 1583 0 R
>>
endobj

1585 0 obj
<< /Type /MCR /MCID 46 /Pg 98 0 R >>
endobj

1586 0 obj
<< /Type /StructElem /S /LI /K [ 1587 0 R 1590 0 R ] /P 159 0 R >>
endobj

1587 0 obj
<< /Type /StructElem /S /Lbl /K [ 1588 0 R ] /P 1586 0 R >>
endobj

1588 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ()
  /K [ 1589 0 R ]
  /P 1587 0 R
>>
endobj

1589 0 obj
<< /Type /MCR /MCID 47 /Pg 98 0 R >>
endobj

1590 0 obj
<< /Type /StructElem /S /LBody /K [ 1591 0 R ] /P 1586 0 R >>
endobj

1591 0 obj
<< /Type /StructElem /S /P /K [ 1592 0 R ] /P 1590 0 R >>
endobj

1592 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (vent-at)
  /K [ 1593 0 R ]
  /P 1591 0 R
>>
endobj

1593 0 obj
<< /Type /MCR /MCID 48 /Pg 98 0 R >>
endobj

1594 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1595 0 R 1597 0 R 1599 0 R ]
  /P 159 0 R
>>
endobj

1595 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The maximum number of messages that may be buffered before they're automatically re-routed to the )
  /K [ 1596 0 R ]
  /P 1594 0 R
>>
endobj

1596 0 obj
<< /Type /MCR /MCID 49 /Pg 98 0 R >>
endobj

1597 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:bleed)
  /K [ 1598 0 R ]
  /P 1594 0 R
>>
endobj

1598 0 obj
<< /Type /MCR /MCID 50 /Pg 98 0 R >>
endobj

1599 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( Supply.)
  /K [ 1600 0 R ]
  /P 1594 0 R
>>
endobj

1600 0 obj
<< /Type /MCR /MCID 51 /Pg 98 0 R >>
endobj

1601 0 obj
<< /Type /StructElem /S /H3 /K [ 1602 0 R ] /P 159 0 R /T (Examples) >>
endobj

1602 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Examples\n)
  /K [ 1603 0 R ]
  /P 1601 0 R
>>
endobj

1603 0 obj
<< /Type /MCR /MCID 52 /Pg 98 0 R >>
endobj

1604 0 obj
<< /Type /StructElem /S /P /K [ 1605 0 R ] /P 159 0 R >>
endobj

1605 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Have a simple piece of code announce when it starts running asynchronously, wait a random amount of time, then announce when it is done. Do this 6 times, but don't let more than 3 of them run simultaneously.)
  /K [ 1606 0 R ]
  /P 1604 0 R
>>
endobj

1606 0 obj
<< /Type /MCR /MCID 53 /Pg 98 0 R >>
endobj

1607 0 obj
<< /Type /StructElem /S /Code /K [ 1608 0 R ] /P 159 0 R >>
endobj

1608 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my $s = Supply.from-list\(^6\);  # set up supply\nmy $t = $s.throttle: 3,        # only allow 3 at a time\n{                              # code block to run\n    say "running $_";          # announce we've started\n    sleep rand;                # wait some random time\n    say "done $_"              # announce we're done\n}                              # don't need ; because } at end of line\n$t.wait;                       # wait for the supply to be done\n)
  /K [ 1609 0 R ]
  /P 1607 0 R
>>
endobj

1609 0 obj
<< /Type /MCR /MCID 0 /Pg 100 0 R >>
endobj

1610 0 obj
<< /Type /StructElem /S /P /K [ 1611 0 R ] /P 159 0 R >>
endobj

1611 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (and the result of one run will be:)
  /K [ 1612 0 R ]
  /P 1610 0 R
>>
endobj

1612 0 obj
<< /Type /MCR /MCID 1 /Pg 100 0 R >>
endobj

1613 0 obj
<< /Type /StructElem /S /Code /K [ 1614 0 R ] /P 159 0 R >>
endobj

1614 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (running 0\nrunning 1\nrunning 2\ndone 2\nrunning 3\ndone 1\nrunning 4\ndone 4\nrunning 5\ndone 0\ndone 3\ndone 5\n)
  /K [ 1615 0 R ]
  /P 1613 0 R
>>
endobj

1615 0 obj
<< /Type /MCR /MCID 2 /Pg 100 0 R >>
endobj

1616 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1617 0 R ]
  /P 159 0 R
  /T (method stable)
>>
endobj

1617 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method stable\n)
  /K [ 1618 0 R ]
  /P 1616 0 R
>>
endobj

1618 0 obj
<< /Type /MCR /MCID 3 /Pg 100 0 R >>
endobj

1619 0 obj
<< /Type /StructElem /S /Code /K [ 1620 0 R ] /P 159 0 R >>
endobj

1620 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method stable\(Supply:D: $time, :$scheduler = $*SCHEDULER --> Supply:D\)\n)
  /K [ 1621 0 R ]
  /P 1619 0 R
>>
endobj

1621 0 obj
<< /Type /MCR /MCID 4 /Pg 100 0 R >>
endobj

1622 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1623 0 R 1625 0 R 1627 0 R 1629 0 R 1631 0 R ]
  /P 159 0 R
>>
endobj

1623 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a new supply that only passes on a value flowing through the given supply if it wasn't superseded by another value in the given )
  /K [ 1624 0 R ]
  /P 1622 0 R
>>
endobj

1624 0 obj
<< /Type /MCR /MCID 5 /Pg 100 0 R >>
endobj

1625 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($time)
  /K [ 1626 0 R ]
  /P 1622 0 R
>>
endobj

1626 0 obj
<< /Type /MCR /MCID 6 /Pg 100 0 R >>
endobj

1627 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(in seconds\). Optionally uses another scheduler than the default scheduler, using the )
  /K [ 1628 0 R ]
  /P 1622 0 R
>>
endobj

1628 0 obj
<< /Type /MCR /MCID 7 /Pg 100 0 R >>
endobj

1629 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:scheduler)
  /K [ 1630 0 R ]
  /P 1622 0 R
>>
endobj

1630 0 obj
<< /Type /MCR /MCID 8 /Pg 100 0 R >>
endobj

1631 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter.)
  /K [ 1632 0 R ]
  /P 1622 0 R
>>
endobj

1632 0 obj
<< /Type /MCR /MCID 9 /Pg 100 0 R >>
endobj

1633 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1634 0 R 1636 0 R 1638 0 R 1640 0 R 1642 0 R 1644 0 R 1646 0 R 1648 0 R 1650 0 R ]
  /P 159 0 R
>>
endobj

1634 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (To clarify the above, if, during the timeout )
  /K [ 1635 0 R ]
  /P 1633 0 R
>>
endobj

1635 0 obj
<< /Type /MCR /MCID 10 /Pg 100 0 R >>
endobj

1636 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($time)
  /K [ 1637 0 R ]
  /P 1633 0 R
>>
endobj

1637 0 obj
<< /Type /MCR /MCID 11 /Pg 100 0 R >>
endobj

1638 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, additional values are emitted to the )
  /K [ 1639 0 R ]
  /P 1633 0 R
>>
endobj

1639 0 obj
<< /Type /MCR /MCID 12 /Pg 100 0 R >>
endobj

1640 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 1641 0 R ]
  /P 1633 0 R
>>
endobj

1641 0 obj
<< /Type /MCR /MCID 13 /Pg 100 0 R >>
endobj

1642 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( all but the last one will be thrown away. Each time an additional value is emitted to the )
  /K [ 1643 0 R ]
  /P 1633 0 R
>>
endobj

1643 0 obj
<< /Type /MCR /MCID 14 /Pg 100 0 R >>
endobj

1644 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 1645 0 R ]
  /P 1633 0 R
>>
endobj

1645 0 obj
<< /Type /MCR /MCID 15 /Pg 100 0 R >>
endobj

1646 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, during the timeout, )
  /K [ 1647 0 R ]
  /P 1633 0 R
>>
endobj

1647 0 obj
<< /Type /MCR /MCID 16 /Pg 100 0 R >>
endobj

1648 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($time)
  /K [ 1649 0 R ]
  /P 1633 0 R
>>
endobj

1649 0 obj
<< /Type /MCR /MCID 17 /Pg 100 0 R >>
endobj

1650 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( is reset.)
  /K [ 1651 0 R ]
  /P 1633 0 R
>>
endobj

1651 0 obj
<< /Type /MCR /MCID 18 /Pg 100 0 R >>
endobj

1652 0 obj
<< /Type /StructElem /S /P /K [ 1653 0 R ] /P 159 0 R >>
endobj

1653 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This method can be quite useful when handling UI input, where it is not desired to perform an operation until the user has stopped typing for a while rather than on every keystroke.)
  /K [ 1654 0 R ]
  /P 1652 0 R
>>
endobj

1654 0 obj
<< /Type /MCR /MCID 19 /Pg 100 0 R >>
endobj

1655 0 obj
<< /Type /StructElem /S /Code /K [ 1656 0 R ] /P 159 0 R >>
endobj

1656 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l i e r   =   S u p p l i e r . n e w ; \n m y   $ s u p p l y 1   =   $ s u p p l i e r . S u p p l y ; \n $ s u p p l y 1 . t a p \( - >   $ v   {   s a y   " S u p p l y 1   g o t :   $ v "   } \) ; \n $ s u p p l i e r . e m i t \( 4 2 \) ; \n \n m y   S u p p l y   $ s u p p l y 2   =   $ s u p p l y 1 . s t a b l e \( 5 \) ; \n $ s u p p l y 2 . t a p \( - >   $ v   {   s a y   " S u p p l y 2   g o t :   $ v "   } \) ; \n s l e e p \( 3 \) ; \n $ s u p p l i e r . e m i t \( 4 3 \) ;     #   w i l l   n o t   b e   s e e n   b y   $ s u p p l y 2   b u t   w i l l   r e s e t   $ t i m e \n $ s u p p l i e r . e m i t \( 4 4 \) ; \n s l e e p \( 1 0 \) ; \n #   O U T P U T :   « S u p p l y 1   g o t :   4 2$$ S u p p l y 1   g o t :   4 3$$ S u p p l y 1   g o t :   4 4$$ S u p p l y 2   g o t :   4 4$$ » \n)
  /K [ 1657 0 R ]
  /P 1655 0 R
>>
endobj

1657 0 obj
<< /Type /MCR /MCID 20 /Pg 100 0 R >>
endobj

1658 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1659 0 R 1661 0 R 1663 0 R 1665 0 R 1667 0 R 1669 0 R 1671 0 R 1673 0 R 1675 0 R 1677 0 R 1679 0 R ]
  /P 159 0 R
>>
endobj

1659 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (As can be seen above, )
  /K [ 1660 0 R ]
  /P 1658 0 R
>>
endobj

1660 0 obj
<< /Type /MCR /MCID 21 /Pg 100 0 R >>
endobj

1661 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($supply1)
  /K [ 1662 0 R ]
  /P 1658 0 R
>>
endobj

1662 0 obj
<< /Type /MCR /MCID 22 /Pg 100 0 R >>
endobj

1663 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( received all values emitted to the )
  /K [ 1664 0 R ]
  /P 1658 0 R
>>
endobj

1664 0 obj
<< /Type /MCR /MCID 23 /Pg 100 0 R >>
endobj

1665 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supplier)
  /K [ 1666 0 R ]
  /P 1658 0 R
>>
endobj

1666 0 obj
<< /Type /MCR /MCID 24 /Pg 100 0 R >>
endobj

1667 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( while )
  /K [ 1668 0 R ]
  /P 1658 0 R
>>
endobj

1668 0 obj
<< /Type /MCR /MCID 25 /Pg 100 0 R >>
endobj

1669 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($supply2)
  /K [ 1670 0 R ]
  /P 1658 0 R
>>
endobj

1670 0 obj
<< /Type /MCR /MCID 26 /Pg 100 0 R >>
endobj

1671 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( only received one value. The 43 was thrown away because it was followed by another 'last' value 44 which was retained and sent to )
  /K [ 1672 0 R ]
  /P 1658 0 R
>>
endobj

1672 0 obj
<< /Type /MCR /MCID 27 /Pg 100 0 R >>
endobj

1673 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($supply2)
  /K [ 1674 0 R ]
  /P 1658 0 R
>>
endobj

1674 0 obj
<< /Type /MCR /MCID 28 /Pg 100 0 R >>
endobj

1675 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( after approximately eight seconds, this due to the fact that the timeout )
  /K [ 1676 0 R ]
  /P 1658 0 R
>>
endobj

1676 0 obj
<< /Type /MCR /MCID 29 /Pg 100 0 R >>
endobj

1677 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($time)
  /K [ 1678 0 R ]
  /P 1658 0 R
>>
endobj

1678 0 obj
<< /Type /MCR /MCID 30 /Pg 100 0 R >>
endobj

1679 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( was reset after three seconds.)
  /K [ 1680 0 R ]
  /P 1658 0 R
>>
endobj

1680 0 obj
<< /Type /MCR /MCID 31 /Pg 100 0 R >>
endobj

1681 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1682 0 R ]
  /P 159 0 R
  /T (method produce)
>>
endobj

1682 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method produce\n)
  /K [ 1683 0 R ]
  /P 1681 0 R
>>
endobj

1683 0 obj
<< /Type /MCR /MCID 32 /Pg 100 0 R >>
endobj

1684 0 obj
<< /Type /StructElem /S /Code /K [ 1685 0 R ] /P 159 0 R >>
endobj

1685 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method produce\(Supply:D: &with --> Supply:D\)\n)
  /K [ 1686 0 R ]
  /P 1684 0 R
>>
endobj

1686 0 obj
<< /Type /MCR /MCID 33 /Pg 100 0 R >>
endobj

1687 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1688 0 R 1690 0 R 1694 0 R ]
  /P 159 0 R
>>
endobj

1688 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a "producing" supply with the same semantics as )
  /K [ 1689 0 R ]
  /P 1687 0 R
>>
endobj

1689 0 obj
<< /Type /MCR /MCID 34 /Pg 100 0 R >>
endobj

1690 0 obj
<< /Type /StructElem /S /Link /K [ 1691 0 R 1692 0 R ] /P 1687 0 R >>
endobj

1691 0 obj
<< /Type /OBJR /Obj 101 0 R /Pg 100 0 R >>
endobj

1692 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (List.produce)
  /K [ 1693 0 R ]
  /P 1690 0 R
>>
endobj

1693 0 obj
<< /Type /MCR /MCID 35 /Pg 100 0 R >>
endobj

1694 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1695 0 R ]
  /P 1687 0 R
>>
endobj

1695 0 obj
<< /Type /MCR /MCID 36 /Pg 100 0 R >>
endobj

1696 0 obj
<< /Type /StructElem /S /Code /K [ 1697 0 R ] /P 159 0 R >>
endobj

1697 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l y   =   S u p p l y . f r o m - l i s t \( 1 . . 5 \) . p r o d u c e \( { $ ^ a   +   $ ^ b } \) ; \n $ s u p p l y . t a p \( - >   $ v   {   s a y   " $ v "   } \) ;   #   O U T P U T :   « 1$$ 3$$ 6$$ 1 0$$ 1 5$$ » \n)
  /K [ 1698 0 R ]
  /P 1696 0 R
>>
endobj

1698 0 obj
<< /Type /MCR /MCID 37 /Pg 100 0 R >>
endobj

1699 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1700 0 R ]
  /P 159 0 R
  /T (method lines)
>>
endobj

1700 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method lines\n)
  /K [ 1701 0 R ]
  /P 1699 0 R
>>
endobj

1701 0 obj
<< /Type /MCR /MCID 0 /Pg 106 0 R >>
endobj

1702 0 obj
<< /Type /StructElem /S /Code /K [ 1703 0 R ] /P 159 0 R >>
endobj

1703 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method lines\(Supply:D: :$chomp = True --> Supply:D\)\n)
  /K [ 1704 0 R ]
  /P 1702 0 R
>>
endobj

1704 0 obj
<< /Type /MCR /MCID 1 /Pg 106 0 R >>
endobj

1705 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1706 0 R 1708 0 R 1710 0 R 1712 0 R 1714 0 R ]
  /P 159 0 R
>>
endobj

1706 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that will emit the characters coming in line by line from a supply that's usually created by some asynchronous I/O operation. The optional )
  /K [ 1707 0 R ]
  /P 1705 0 R
>>
endobj

1707 0 obj
<< /Type /MCR /MCID 2 /Pg 106 0 R >>
endobj

1708 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:chomp)
  /K [ 1709 0 R ]
  /P 1705 0 R
>>
endobj

1709 0 obj
<< /Type /MCR /MCID 3 /Pg 106 0 R >>
endobj

1710 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter indicates whether to remove line separators: the default is )
  /K [ 1711 0 R ]
  /P 1705 0 R
>>
endobj

1711 0 obj
<< /Type /MCR /MCID 4 /Pg 106 0 R >>
endobj

1712 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (True)
  /K [ 1713 0 R ]
  /P 1705 0 R
>>
endobj

1713 0 obj
<< /Type /MCR /MCID 5 /Pg 106 0 R >>
endobj

1714 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1715 0 R ]
  /P 1705 0 R
>>
endobj

1715 0 obj
<< /Type /MCR /MCID 6 /Pg 106 0 R >>
endobj

1716 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1717 0 R ]
  /P 159 0 R
  /T (method words)
>>
endobj

1717 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method words\n)
  /K [ 1718 0 R ]
  /P 1716 0 R
>>
endobj

1718 0 obj
<< /Type /MCR /MCID 7 /Pg 106 0 R >>
endobj

1719 0 obj
<< /Type /StructElem /S /Code /K [ 1720 0 R ] /P 159 0 R >>
endobj

1720 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method words\(Supply:D: --> Supply:D\)\n)
  /K [ 1721 0 R ]
  /P 1719 0 R
>>
endobj

1721 0 obj
<< /Type /MCR /MCID 8 /Pg 106 0 R >>
endobj

1722 0 obj
<< /Type /StructElem /S /P /K [ 1723 0 R ] /P 159 0 R >>
endobj

1723 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that will emit the characters coming in word for word from a supply that's usually created by some asynchronous I/O operation.)
  /K [ 1724 0 R ]
  /P 1722 0 R
>>
endobj

1724 0 obj
<< /Type /MCR /MCID 9 /Pg 106 0 R >>
endobj

1725 0 obj
<< /Type /StructElem /S /Code /K [ 1726 0 R ] /P 159 0 R >>
endobj

1726 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s   =   S u p p l y . f r o m - l i s t \( " H e l l o   W o r d ! " . c o m b \) ; \n m y   $ w s   =   $ s . w o r d s ; \n $ w s . t a p \( & s a y \) ;                       #   O U T P U T :   « H e l l o$$ W o r d !$$ » \n)
  /K [ 1727 0 R ]
  /P 1725 0 R
>>
endobj

1727 0 obj
<< /Type /MCR /MCID 10 /Pg 106 0 R >>
endobj

1728 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1729 0 R ]
  /P 159 0 R
  /T (method unique)
>>
endobj

1729 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method unique\n)
  /K [ 1730 0 R ]
  /P 1728 0 R
>>
endobj

1730 0 obj
<< /Type /MCR /MCID 11 /Pg 106 0 R >>
endobj

1731 0 obj
<< /Type /StructElem /S /Code /K [ 1732 0 R ] /P 159 0 R >>
endobj

1732 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method unique\(Supply:D: :$as, :$with, :$expires --> Supply:D\)\n)
  /K [ 1733 0 R ]
  /P 1731 0 R
>>
endobj

1733 0 obj
<< /Type /MCR /MCID 12 /Pg 106 0 R >>
endobj

1734 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1735 0 R 1737 0 R 1739 0 R 1741 0 R 1743 0 R 1745 0 R 1749 0 R 1751 0 R 1753 0 R ]
  /P 159 0 R
>>
endobj

1735 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that only provides unique values, as defined by the optional )
  /K [ 1736 0 R ]
  /P 1734 0 R
>>
endobj

1736 0 obj
<< /Type /MCR /MCID 13 /Pg 106 0 R >>
endobj

1737 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:as)
  /K [ 1738 0 R ]
  /P 1734 0 R
>>
endobj

1738 0 obj
<< /Type /MCR /MCID 14 /Pg 106 0 R >>
endobj

1739 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and )
  /K [ 1740 0 R ]
  /P 1734 0 R
>>
endobj

1740 0 obj
<< /Type /MCR /MCID 15 /Pg 106 0 R >>
endobj

1741 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:with)
  /K [ 1742 0 R ]
  /P 1734 0 R
>>
endobj

1742 0 obj
<< /Type /MCR /MCID 16 /Pg 106 0 R >>
endobj

1743 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameters \(same as with )
  /K [ 1744 0 R ]
  /P 1734 0 R
>>
endobj

1744 0 obj
<< /Type /MCR /MCID 17 /Pg 106 0 R >>
endobj

1745 0 obj
<< /Type /StructElem /S /Link /K [ 1746 0 R 1747 0 R ] /P 1734 0 R >>
endobj

1746 0 obj
<< /Type /OBJR /Obj 107 0 R /Pg 106 0 R >>
endobj

1747 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (unique)
  /K [ 1748 0 R ]
  /P 1745 0 R
>>
endobj

1748 0 obj
<< /Type /MCR /MCID 18 /Pg 106 0 R >>
endobj

1749 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\). The optional )
  /K [ 1750 0 R ]
  /P 1734 0 R
>>
endobj

1750 0 obj
<< /Type /MCR /MCID 19 /Pg 106 0 R >>
endobj

1751 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:expires)
  /K [ 1752 0 R ]
  /P 1734 0 R
>>
endobj

1752 0 obj
<< /Type /MCR /MCID 20 /Pg 106 0 R >>
endobj

1753 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter how long to wait \(in seconds\) before "resetting" and not considering a value to have been seen, even if it's the same as an old value.)
  /K [ 1754 0 R ]
  /P 1734 0 R
>>
endobj

1754 0 obj
<< /Type /MCR /MCID 21 /Pg 106 0 R >>
endobj

1755 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1756 0 R ]
  /P 159 0 R
  /T (method repeated)
>>
endobj

1756 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method repeated\n)
  /K [ 1757 0 R ]
  /P 1755 0 R
>>
endobj

1757 0 obj
<< /Type /MCR /MCID 22 /Pg 106 0 R >>
endobj

1758 0 obj
<< /Type /StructElem /S /Code /K [ 1759 0 R ] /P 159 0 R >>
endobj

1759 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method repeated\(Supply:D: :&as, :&with\)\n)
  /K [ 1760 0 R ]
  /P 1758 0 R
>>
endobj

1760 0 obj
<< /Type /MCR /MCID 23 /Pg 106 0 R >>
endobj

1761 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1762 0 R 1764 0 R 1766 0 R 1768 0 R 1770 0 R 1772 0 R 1776 0 R ]
  /P 159 0 R
>>
endobj

1762 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that only provides repeated values, as defined by the optional )
  /K [ 1763 0 R ]
  /P 1761 0 R
>>
endobj

1763 0 obj
<< /Type /MCR /MCID 24 /Pg 106 0 R >>
endobj

1764 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:as)
  /K [ 1765 0 R ]
  /P 1761 0 R
>>
endobj

1765 0 obj
<< /Type /MCR /MCID 25 /Pg 106 0 R >>
endobj

1766 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and )
  /K [ 1767 0 R ]
  /P 1761 0 R
>>
endobj

1767 0 obj
<< /Type /MCR /MCID 26 /Pg 106 0 R >>
endobj

1768 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:with)
  /K [ 1769 0 R ]
  /P 1761 0 R
>>
endobj

1769 0 obj
<< /Type /MCR /MCID 27 /Pg 106 0 R >>
endobj

1770 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameters \(same as with )
  /K [ 1771 0 R ]
  /P 1761 0 R
>>
endobj

1771 0 obj
<< /Type /MCR /MCID 28 /Pg 106 0 R >>
endobj

1772 0 obj
<< /Type /StructElem /S /Link /K [ 1773 0 R 1774 0 R ] /P 1761 0 R >>
endobj

1773 0 obj
<< /Type /OBJR /Obj 109 0 R /Pg 106 0 R >>
endobj

1774 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (unique)
  /K [ 1775 0 R ]
  /P 1772 0 R
>>
endobj

1775 0 obj
<< /Type /MCR /MCID 29 /Pg 106 0 R >>
endobj

1776 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\).)
  /K [ 1777 0 R ]
  /P 1761 0 R
>>
endobj

1777 0 obj
<< /Type /MCR /MCID 30 /Pg 106 0 R >>
endobj

1778 0 obj
<< /Type /StructElem /S /Code /K [ 1779 0 R ] /P 159 0 R >>
endobj

1779 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l y   =   S u p p l y . f r o m - l i s t \( < a   A   B   b   c   b   C > \) . r e p e a t e d \( : a s \( & l c \) \) ; \n $ s u p p l y . t a p \( & s a y \) ;                       #   O U T P U T :   « A$$ b$$ b$$ C$$ » \n)
  /K [ 1780 0 R ]
  /P 1778 0 R
>>
endobj

1780 0 obj
<< /Type /MCR /MCID 31 /Pg 106 0 R >>
endobj

1781 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1782 0 R 1784 0 R 1788 0 R ]
  /P 159 0 R
>>
endobj

1782 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (See )
  /K [ 1783 0 R ]
  /P 1781 0 R
>>
endobj

1783 0 obj
<< /Type /MCR /MCID 32 /Pg 106 0 R >>
endobj

1784 0 obj
<< /Type /StructElem /S /Link /K [ 1785 0 R 1786 0 R ] /P 1781 0 R >>
endobj

1785 0 obj
<< /Type /OBJR /Obj 111 0 R /Pg 106 0 R >>
endobj

1786 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (repeated)
  /K [ 1787 0 R ]
  /P 1784 0 R
>>
endobj

1787 0 obj
<< /Type /MCR /MCID 33 /Pg 106 0 R >>
endobj

1788 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( for more examples that use its sub form.)
  /K [ 1789 0 R ]
  /P 1781 0 R
>>
endobj

1789 0 obj
<< /Type /MCR /MCID 34 /Pg 106 0 R >>
endobj

1790 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1791 0 R 1793 0 R 1795 0 R 1799 0 R ]
  /P 159 0 R
>>
endobj

1791 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Note)
  /K [ 1792 0 R ]
  /P 1790 0 R
>>
endobj

1792 0 obj
<< /Type /MCR /MCID 35 /Pg 106 0 R >>
endobj

1793 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (: Available since version 6.e \()
  /K [ 1794 0 R ]
  /P 1790 0 R
>>
endobj

1794 0 obj
<< /Type /MCR /MCID 36 /Pg 106 0 R >>
endobj

1795 0 obj
<< /Type /StructElem /S /Link /K [ 1796 0 R 1797 0 R ] /P 1790 0 R >>
endobj

1796 0 obj
<< /Type /OBJR /Obj 113 0 R /Pg 106 0 R >>
endobj

1797 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Rakudo)
  /K [ 1798 0 R ]
  /P 1795 0 R
>>
endobj

1798 0 obj
<< /Type /MCR /MCID 37 /Pg 106 0 R >>
endobj

1799 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( 2020.01 and later\).)
  /K [ 1800 0 R ]
  /P 1790 0 R
>>
endobj

1800 0 obj
<< /Type /MCR /MCID 38 /Pg 106 0 R >>
endobj

1801 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1802 0 R ]
  /P 159 0 R
  /T (method squish)
>>
endobj

1802 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method squish\n)
  /K [ 1803 0 R ]
  /P 1801 0 R
>>
endobj

1803 0 obj
<< /Type /MCR /MCID 39 /Pg 106 0 R >>
endobj

1804 0 obj
<< /Type /StructElem /S /Code /K [ 1805 0 R ] /P 159 0 R >>
endobj

1805 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method squish\(Supply:D: :$as, :$with --> Supply:D\)\n)
  /K [ 1806 0 R ]
  /P 1804 0 R
>>
endobj

1806 0 obj
<< /Type /MCR /MCID 40 /Pg 106 0 R >>
endobj

1807 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1808 0 R 1810 0 R 1812 0 R 1814 0 R 1816 0 R 1818 0 R 1822 0 R ]
  /P 159 0 R
>>
endobj

1808 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that only provides unique values, as defined by the optional )
  /K [ 1809 0 R ]
  /P 1807 0 R
>>
endobj

1809 0 obj
<< /Type /MCR /MCID 41 /Pg 106 0 R >>
endobj

1810 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:as)
  /K [ 1811 0 R ]
  /P 1807 0 R
>>
endobj

1811 0 obj
<< /Type /MCR /MCID 42 /Pg 106 0 R >>
endobj

1812 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( and )
  /K [ 1813 0 R ]
  /P 1807 0 R
>>
endobj

1813 0 obj
<< /Type /MCR /MCID 43 /Pg 106 0 R >>
endobj

1814 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:with)
  /K [ 1815 0 R ]
  /P 1807 0 R
>>
endobj

1815 0 obj
<< /Type /MCR /MCID 44 /Pg 106 0 R >>
endobj

1816 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameters \(same as with )
  /K [ 1817 0 R ]
  /P 1807 0 R
>>
endobj

1817 0 obj
<< /Type /MCR /MCID 45 /Pg 106 0 R >>
endobj

1818 0 obj
<< /Type /StructElem /S /Link /K [ 1819 0 R 1820 0 R ] /P 1807 0 R >>
endobj

1819 0 obj
<< /Type /OBJR /Obj 115 0 R /Pg 106 0 R >>
endobj

1820 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (squish)
  /K [ 1821 0 R ]
  /P 1818 0 R
>>
endobj

1821 0 obj
<< /Type /MCR /MCID 46 /Pg 106 0 R >>
endobj

1822 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (\).)
  /K [ 1823 0 R ]
  /P 1807 0 R
>>
endobj

1823 0 obj
<< /Type /MCR /MCID 47 /Pg 106 0 R >>
endobj

1824 0 obj
<< /Type /StructElem /S /H2 /K [ 1825 0 R ] /P 159 0 R /T (method max) >>
endobj

1825 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method max\n)
  /K [ 1826 0 R ]
  /P 1824 0 R
>>
endobj

1826 0 obj
<< /Type /MCR /MCID 0 /Pg 120 0 R >>
endobj

1827 0 obj
<< /Type /StructElem /S /Code /K [ 1828 0 R ] /P 159 0 R >>
endobj

1828 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method max\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)\n)
  /K [ 1829 0 R ]
  /P 1827 0 R
>>
endobj

1829 0 obj
<< /Type /MCR /MCID 1 /Pg 120 0 R >>
endobj

1830 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1831 0 R 1833 0 R 1837 0 R ]
  /P 159 0 R
>>
endobj

1831 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that only emits values from the given supply if they are larger than any value seen before. In other words, from a continuously ascending supply it will emit all the values. From a continuously descending supply it will only emit the first value. The optional parameter specifies the comparator, just as with )
  /K [ 1832 0 R ]
  /P 1830 0 R
>>
endobj

1832 0 obj
<< /Type /MCR /MCID 2 /Pg 120 0 R >>
endobj

1833 0 obj
<< /Type /StructElem /S /Link /K [ 1834 0 R 1835 0 R ] /P 1830 0 R >>
endobj

1834 0 obj
<< /Type /OBJR /Obj 121 0 R /Pg 120 0 R >>
endobj

1835 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Any.max)
  /K [ 1836 0 R ]
  /P 1833 0 R
>>
endobj

1836 0 obj
<< /Type /MCR /MCID 3 /Pg 120 0 R >>
endobj

1837 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1838 0 R ]
  /P 1830 0 R
>>
endobj

1838 0 obj
<< /Type /MCR /MCID 4 /Pg 120 0 R >>
endobj

1839 0 obj
<< /Type /StructElem /S /H2 /K [ 1840 0 R ] /P 159 0 R /T (method min) >>
endobj

1840 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method min\n)
  /K [ 1841 0 R ]
  /P 1839 0 R
>>
endobj

1841 0 obj
<< /Type /MCR /MCID 5 /Pg 120 0 R >>
endobj

1842 0 obj
<< /Type /StructElem /S /Code /K [ 1843 0 R ] /P 159 0 R >>
endobj

1843 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method min\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)\n)
  /K [ 1844 0 R ]
  /P 1842 0 R
>>
endobj

1844 0 obj
<< /Type /MCR /MCID 6 /Pg 120 0 R >>
endobj

1845 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1846 0 R 1848 0 R 1852 0 R ]
  /P 159 0 R
>>
endobj

1846 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that only emits values from the given supply if they are smaller than any value seen before. In other words, from a continuously descending supply it will emit all the values. From a continuously ascending supply it will only emit the first value. The optional parameter specifies the comparator, just as with )
  /K [ 1847 0 R ]
  /P 1845 0 R
>>
endobj

1847 0 obj
<< /Type /MCR /MCID 7 /Pg 120 0 R >>
endobj

1848 0 obj
<< /Type /StructElem /S /Link /K [ 1849 0 R 1850 0 R ] /P 1845 0 R >>
endobj

1849 0 obj
<< /Type /OBJR /Obj 123 0 R /Pg 120 0 R >>
endobj

1850 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Any.min)
  /K [ 1851 0 R ]
  /P 1848 0 R
>>
endobj

1851 0 obj
<< /Type /MCR /MCID 8 /Pg 120 0 R >>
endobj

1852 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1853 0 R ]
  /P 1845 0 R
>>
endobj

1853 0 obj
<< /Type /MCR /MCID 9 /Pg 120 0 R >>
endobj

1854 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1855 0 R ]
  /P 159 0 R
  /T (method minmax)
>>
endobj

1855 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method minmax\n)
  /K [ 1856 0 R ]
  /P 1854 0 R
>>
endobj

1856 0 obj
<< /Type /MCR /MCID 10 /Pg 120 0 R >>
endobj

1857 0 obj
<< /Type /StructElem /S /Code /K [ 1858 0 R ] /P 159 0 R >>
endobj

1858 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method minmax\(Supply:D: &custom-routine-to-use = &infix:<cmp> --> Supply:D\)\n)
  /K [ 1859 0 R ]
  /P 1857 0 R
>>
endobj

1859 0 obj
<< /Type /MCR /MCID 11 /Pg 120 0 R >>
endobj

1860 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1861 0 R 1863 0 R 1867 0 R ]
  /P 159 0 R
>>
endobj

1861 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that emits a Range every time a new minimum or maximum values is seen from the given supply. The optional parameter specifies the comparator, just as with )
  /K [ 1862 0 R ]
  /P 1860 0 R
>>
endobj

1862 0 obj
<< /Type /MCR /MCID 12 /Pg 120 0 R >>
endobj

1863 0 obj
<< /Type /StructElem /S /Link /K [ 1864 0 R 1865 0 R ] /P 1860 0 R >>
endobj

1864 0 obj
<< /Type /OBJR /Obj 125 0 R /Pg 120 0 R >>
endobj

1865 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Any.minmax)
  /K [ 1866 0 R ]
  /P 1863 0 R
>>
endobj

1866 0 obj
<< /Type /MCR /MCID 13 /Pg 120 0 R >>
endobj

1867 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 1868 0 R ]
  /P 1860 0 R
>>
endobj

1868 0 obj
<< /Type /MCR /MCID 14 /Pg 120 0 R >>
endobj

1869 0 obj
<< /Type /StructElem /S /H2 /K [ 1870 0 R ] /P 159 0 R /T (method skip) >>
endobj

1870 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method skip\n)
  /K [ 1871 0 R ]
  /P 1869 0 R
>>
endobj

1871 0 obj
<< /Type /MCR /MCID 15 /Pg 120 0 R >>
endobj

1872 0 obj
<< /Type /StructElem /S /Code /K [ 1873 0 R ] /P 159 0 R >>
endobj

1873 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method skip\(Supply:D: Int\(Cool\) $number = 1 --> Supply:D\)\n)
  /K [ 1874 0 R ]
  /P 1872 0 R
>>
endobj

1874 0 obj
<< /Type /MCR /MCID 16 /Pg 120 0 R >>
endobj

1875 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1876 0 R 1878 0 R 1880 0 R 1882 0 R 1884 0 R 1886 0 R 1888 0 R ]
  /P 159 0 R
>>
endobj

1876 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Returns a new )
  /K [ 1877 0 R ]
  /P 1875 0 R
>>
endobj

1877 0 obj
<< /Type /MCR /MCID 17 /Pg 120 0 R >>
endobj

1878 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1879 0 R ]
  /P 1875 0 R
>>
endobj

1879 0 obj
<< /Type /MCR /MCID 18 /Pg 120 0 R >>
endobj

1880 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( which will emit all values from the given )
  /K [ 1881 0 R ]
  /P 1875 0 R
>>
endobj

1881 0 obj
<< /Type /MCR /MCID 19 /Pg 120 0 R >>
endobj

1882 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1883 0 R ]
  /P 1875 0 R
>>
endobj

1883 0 obj
<< /Type /MCR /MCID 20 /Pg 120 0 R >>
endobj

1884 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( except for the first )
  /K [ 1885 0 R ]
  /P 1875 0 R
>>
endobj

1885 0 obj
<< /Type /MCR /MCID 21 /Pg 120 0 R >>
endobj

1886 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ($number)
  /K [ 1887 0 R ]
  /P 1875 0 R
>>
endobj

1887 0 obj
<< /Type /MCR /MCID 22 /Pg 120 0 R >>
endobj

1888 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( values, which will be thrown away.)
  /K [ 1889 0 R ]
  /P 1875 0 R
>>
endobj

1889 0 obj
<< /Type /MCR /MCID 23 /Pg 120 0 R >>
endobj

1890 0 obj
<< /Type /StructElem /S /Code /K [ 1891 0 R ] /P 159 0 R >>
endobj

1891 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (þÿ m y   $ s u p p l i e r   =   S u p p l i e r . n e w ; \n m y   $ s u p p l y   =   $ s u p p l i e r . S u p p l y ; \n $ s u p p l y   =   $ s u p p l y . s k i p \( 3 \) ; \n $ s u p p l y . t a p \( {   s a y   $ _   } \) ; \n $ s u p p l i e r . e m i t \( $ _ \)   f o r   1 . . 1 0 ;   #   O U T P U T :   « 4$$ 5$$ 6$$ 7$$ 8$$ 9$$ 1 0$$ » \n)
  /K [ 1892 0 R ]
  /P 1890 0 R
>>
endobj

1892 0 obj
<< /Type /MCR /MCID 24 /Pg 120 0 R >>
endobj

1893 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1894 0 R ]
  /P 159 0 R
  /T (method start)
>>
endobj

1894 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method start\n)
  /K [ 1895 0 R ]
  /P 1893 0 R
>>
endobj

1895 0 obj
<< /Type /MCR /MCID 25 /Pg 120 0 R >>
endobj

1896 0 obj
<< /Type /StructElem /S /Code /K [ 1897 0 R ] /P 159 0 R >>
endobj

1897 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method start\(Supply:D: &startee --> Supply:D\)\n)
  /K [ 1898 0 R ]
  /P 1896 0 R
>>
endobj

1898 0 obj
<< /Type /MCR /MCID 26 /Pg 120 0 R >>
endobj

1899 0 obj
<< /Type /StructElem /S /P /K [ 1900 0 R ] /P 159 0 R >>
endobj

1900 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply of supplies. For each value in the original supply, the code object is scheduled on another thread, and returns a supply either of a single value \(if the code succeeds\), or one that quits without a value \(if the code fails\).)
  /K [ 1901 0 R ]
  /P 1899 0 R
>>
endobj

1901 0 obj
<< /Type /MCR /MCID 27 /Pg 120 0 R >>
endobj

1902 0 obj
<< /Type /StructElem /S /P /K [ 1903 0 R ] /P 159 0 R >>
endobj

1903 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This is useful for asynchronously starting work that you don't block on.)
  /K [ 1904 0 R ]
  /P 1902 0 R
>>
endobj

1904 0 obj
<< /Type /MCR /MCID 28 /Pg 120 0 R >>
endobj

1905 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1906 0 R 1908 0 R 1910 0 R ]
  /P 159 0 R
>>
endobj

1906 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Use )
  /K [ 1907 0 R ]
  /P 1905 0 R
>>
endobj

1907 0 obj
<< /Type /MCR /MCID 29 /Pg 120 0 R >>
endobj

1908 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (migrate)
  /K [ 1909 0 R ]
  /P 1905 0 R
>>
endobj

1909 0 obj
<< /Type /MCR /MCID 30 /Pg 120 0 R >>
endobj

1910 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( to join the values into a single supply again.)
  /K [ 1911 0 R ]
  /P 1905 0 R
>>
endobj

1911 0 obj
<< /Type /MCR /MCID 31 /Pg 120 0 R >>
endobj

1912 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1913 0 R ]
  /P 159 0 R
  /T (method migrate)
>>
endobj

1913 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method migrate\n)
  /K [ 1914 0 R ]
  /P 1912 0 R
>>
endobj

1914 0 obj
<< /Type /MCR /MCID 0 /Pg 130 0 R >>
endobj

1915 0 obj
<< /Type /StructElem /S /Code /K [ 1916 0 R ] /P 159 0 R >>
endobj

1916 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method migrate\(Supply:D: --> Supply:D\)\n)
  /K [ 1917 0 R ]
  /P 1915 0 R
>>
endobj

1917 0 obj
<< /Type /MCR /MCID 1 /Pg 130 0 R >>
endobj

1918 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1919 0 R 1921 0 R 1923 0 R 1925 0 R 1927 0 R 1929 0 R 1931 0 R 1933 0 R 1935 0 R 1937 0 R 1939 0 R ]
  /P 159 0 R
>>
endobj

1919 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Takes a )
  /K [ 1920 0 R ]
  /P 1918 0 R
>>
endobj

1920 0 obj
<< /Type /MCR /MCID 2 /Pg 130 0 R >>
endobj

1921 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1922 0 R ]
  /P 1918 0 R
>>
endobj

1922 0 obj
<< /Type /MCR /MCID 3 /Pg 130 0 R >>
endobj

1923 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( which itself has values that are of type )
  /K [ 1924 0 R ]
  /P 1918 0 R
>>
endobj

1924 0 obj
<< /Type /MCR /MCID 4 /Pg 130 0 R >>
endobj

1925 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1926 0 R ]
  /P 1918 0 R
>>
endobj

1926 0 obj
<< /Type /MCR /MCID 5 /Pg 130 0 R >>
endobj

1927 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( as input. Each time the outer )
  /K [ 1928 0 R ]
  /P 1918 0 R
>>
endobj

1928 0 obj
<< /Type /MCR /MCID 6 /Pg 130 0 R >>
endobj

1929 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1930 0 R ]
  /P 1918 0 R
>>
endobj

1930 0 obj
<< /Type /MCR /MCID 7 /Pg 130 0 R >>
endobj

1931 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( emits a new )
  /K [ 1932 0 R ]
  /P 1918 0 R
>>
endobj

1932 0 obj
<< /Type /MCR /MCID 8 /Pg 130 0 R >>
endobj

1933 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1934 0 R ]
  /P 1918 0 R
>>
endobj

1934 0 obj
<< /Type /MCR /MCID 9 /Pg 130 0 R >>
endobj

1935 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, this will be tapped and its values emitted. Any previously tapped )
  /K [ 1936 0 R ]
  /P 1918 0 R
>>
endobj

1936 0 obj
<< /Type /MCR /MCID 10 /Pg 130 0 R >>
endobj

1937 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Supply)
  /K [ 1938 0 R ]
  /P 1918 0 R
>>
endobj

1938 0 obj
<< /Type /MCR /MCID 11 /Pg 130 0 R >>
endobj

1939 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( will be closed. This is useful for migrating between different data sources, and only paying attention to the latest one.)
  /K [ 1940 0 R ]
  /P 1918 0 R
>>
endobj

1940 0 obj
<< /Type /MCR /MCID 12 /Pg 130 0 R >>
endobj

1941 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1942 0 R 1944 0 R 1946 0 R ]
  /P 159 0 R
>>
endobj

1942 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (For example, imagine an application where the user can switch between different stocks. When they switch to a new one, a connection is established to a web socket to get the latest values, and any previous connection should be closed. Each stream of values coming over the web socket would be represented as a Supply, which themselves are emitted into a Supply of latest data sources to watch. The )
  /K [ 1943 0 R ]
  /P 1941 0 R
>>
endobj

1943 0 obj
<< /Type /MCR /MCID 13 /Pg 130 0 R >>
endobj

1944 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (migrate)
  /K [ 1945 0 R ]
  /P 1941 0 R
>>
endobj

1945 0 obj
<< /Type /MCR /MCID 14 /Pg 130 0 R >>
endobj

1946 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method could be used to flatten this supply of supplies into a single Supply of the current values that the user cares about.)
  /K [ 1947 0 R ]
  /P 1941 0 R
>>
endobj

1947 0 obj
<< /Type /MCR /MCID 15 /Pg 130 0 R >>
endobj

1948 0 obj
<< /Type /StructElem /S /P /K [ 1949 0 R ] /P 159 0 R >>
endobj

1949 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Here is a simple simulation of such a program:)
  /K [ 1950 0 R ]
  /P 1948 0 R
>>
endobj

1950 0 obj
<< /Type /MCR /MCID 16 /Pg 130 0 R >>
endobj

1951 0 obj
<< /Type /StructElem /S /Code /K [ 1952 0 R ] /P 159 0 R >>
endobj

1952 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (my Supplier $stock-sources .= new;\n\nsub watch-stock\($symbol\) {\n    $stock-sources.emit: supply {\n        say "Starting to watch $symbol";\n        whenever Supply.interval\(1\) {\n            emit "$symbol: 111." ~ 99.rand.Int;\n        }\n        CLOSE say "Lost interest in $symbol";\n    }\n}\n\n$stock-sources.Supply.migrate.tap: *.say;\n\nwatch-stock\('GOOG'\);\nsleep 3;\nwatch-stock\('AAPL'\);\nsleep 3;\n)
  /K [ 1953 0 R ]
  /P 1951 0 R
>>
endobj

1953 0 obj
<< /Type /MCR /MCID 17 /Pg 130 0 R >>
endobj

1954 0 obj
<< /Type /StructElem /S /P /K [ 1955 0 R ] /P 159 0 R >>
endobj

1955 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Which produces output like:)
  /K [ 1956 0 R ]
  /P 1954 0 R
>>
endobj

1956 0 obj
<< /Type /MCR /MCID 18 /Pg 130 0 R >>
endobj

1957 0 obj
<< /Type /StructElem /S /Code /K [ 1958 0 R ] /P 159 0 R >>
endobj

1958 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Starting to watch GOOG\nGOOG: 111.67\nGOOG: 111.20\nGOOG: 111.37\nLost interest in GOOG\nStarting to watch AAPL\nAAPL: 111.55\nAAPL: 111.6\nAAPL: 111.6\n)
  /K [ 1959 0 R ]
  /P 1957 0 R
>>
endobj

1959 0 obj
<< /Type /MCR /MCID 19 /Pg 130 0 R >>
endobj

1960 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 1961 0 R ]
  /P 159 0 R
  /T (Methods that combine supplies)
>>
endobj

1961 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Methods that combine supplies\n)
  /K [ 1962 0 R ]
  /P 1960 0 R
>>
endobj

1962 0 obj
<< /Type /MCR /MCID 0 /Pg 134 0 R >>
endobj

1963 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 1964 0 R ]
  /P 159 0 R
  /T (method merge)
>>
endobj

1964 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method merge\n)
  /K [ 1965 0 R ]
  /P 1963 0 R
>>
endobj

1965 0 obj
<< /Type /MCR /MCID 1 /Pg 134 0 R >>
endobj

1966 0 obj
<< /Type /StructElem /S /Code /K [ 1967 0 R ] /P 159 0 R >>
endobj

1967 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method merge\(Supply @*supplies --> Supply:D\)\n)
  /K [ 1968 0 R ]
  /P 1966 0 R
>>
endobj

1968 0 obj
<< /Type /MCR /MCID 2 /Pg 134 0 R >>
endobj

1969 0 obj
<< /Type /StructElem /S /P /K [ 1970 0 R ] /P 159 0 R >>
endobj

1970 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply to which any value seen from the given supplies, is emitted. The resulting supply is done only when all given supplies are done. Can also be called as a class method.)
  /K [ 1971 0 R ]
  /P 1969 0 R
>>
endobj

1971 0 obj
<< /Type /MCR /MCID 3 /Pg 134 0 R >>
endobj

1972 0 obj
<< /Type /StructElem /S /H2 /K [ 1973 0 R ] /P 159 0 R /T (method zip) >>
endobj

1973 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method zip\n)
  /K [ 1974 0 R ]
  /P 1972 0 R
>>
endobj

1974 0 obj
<< /Type /MCR /MCID 4 /Pg 134 0 R >>
endobj

1975 0 obj
<< /Type /StructElem /S /P /K [ 1976 0 R ] /P 159 0 R >>
endobj

1976 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as:)
  /K [ 1977 0 R ]
  /P 1975 0 R
>>
endobj

1977 0 obj
<< /Type /MCR /MCID 5 /Pg 134 0 R >>
endobj

1978 0 obj
<< /Type /StructElem /S /Code /K [ 1979 0 R ] /P 159 0 R >>
endobj

1979 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method zip\(**@s, :&with\)\n)
  /K [ 1980 0 R ]
  /P 1978 0 R
>>
endobj

1980 0 obj
<< /Type /MCR /MCID 6 /Pg 134 0 R >>
endobj

1981 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 1982 0 R 1984 0 R 1986 0 R 1988 0 R 1992 0 R 1994 0 R 1996 0 R 1998 0 R 2000 0 R ]
  /P 159 0 R
>>
endobj

1982 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that emits combined values as soon as there is a new value seen on )
  /K [ 1983 0 R ]
  /P 1981 0 R
>>
endobj

1983 0 obj
<< /Type /MCR /MCID 7 /Pg 134 0 R >>
endobj

1984 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (all)
  /K [ 1985 0 R ]
  /P 1981 0 R
>>
endobj

1985 0 obj
<< /Type /MCR /MCID 8 /Pg 134 0 R >>
endobj

1986 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( of the supplies. By default, )
  /K [ 1987 0 R ]
  /P 1981 0 R
>>
endobj

1987 0 obj
<< /Type /MCR /MCID 9 /Pg 134 0 R >>
endobj

1988 0 obj
<< /Type /StructElem /S /Link /K [ 1989 0 R 1990 0 R ] /P 1981 0 R >>
endobj

1989 0 obj
<< /Type /OBJR /Obj 135 0 R /Pg 134 0 R >>
endobj

1990 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Lists)
  /K [ 1991 0 R ]
  /P 1988 0 R
>>
endobj

1991 0 obj
<< /Type /MCR /MCID 10 /Pg 134 0 R >>
endobj

1992 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( are created, but this can be changed by specifying your own combiner with the )
  /K [ 1993 0 R ]
  /P 1981 0 R
>>
endobj

1993 0 obj
<< /Type /MCR /MCID 11 /Pg 134 0 R >>
endobj

1994 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:with)
  /K [ 1995 0 R ]
  /P 1981 0 R
>>
endobj

1995 0 obj
<< /Type /MCR /MCID 12 /Pg 134 0 R >>
endobj

1996 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter. The resulting supply is done as soon as )
  /K [ 1997 0 R ]
  /P 1981 0 R
>>
endobj

1997 0 obj
<< /Type /MCR /MCID 13 /Pg 134 0 R >>
endobj

1998 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (any)
  /K [ 1999 0 R ]
  /P 1981 0 R
>>
endobj

1999 0 obj
<< /Type /MCR /MCID 14 /Pg 134 0 R >>
endobj

2000 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( of the given supplies are done. Can also be called as a class method.)
  /K [ 2001 0 R ]
  /P 1981 0 R
>>
endobj

2001 0 obj
<< /Type /MCR /MCID 15 /Pg 134 0 R >>
endobj

2002 0 obj
<< /Type /StructElem /S /P /K [ 2003 0 R ] /P 159 0 R >>
endobj

2003 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (This can also be used as a class method; in case it's used as an object method the corresponding supply will be one of the supplies combined \(with no special treatment\).)
  /K [ 2004 0 R ]
  /P 2002 0 R
>>
endobj

2004 0 obj
<< /Type /MCR /MCID 16 /Pg 134 0 R >>
endobj

2005 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 2006 0 R ]
  /P 159 0 R
  /T (method zip-latest)
>>
endobj

2006 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method zip-latest\n)
  /K [ 2007 0 R ]
  /P 2005 0 R
>>
endobj

2007 0 obj
<< /Type /MCR /MCID 17 /Pg 134 0 R >>
endobj

2008 0 obj
<< /Type /StructElem /S /P /K [ 2009 0 R ] /P 159 0 R >>
endobj

2009 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Defined as:)
  /K [ 2010 0 R ]
  /P 2008 0 R
>>
endobj

2010 0 obj
<< /Type /MCR /MCID 18 /Pg 134 0 R >>
endobj

2011 0 obj
<< /Type /StructElem /S /Code /K [ 2012 0 R ] /P 159 0 R >>
endobj

2012 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method zip-latest\(**@s, :&with, :$initial \)\n)
  /K [ 2013 0 R ]
  /P 2011 0 R
>>
endobj

2013 0 obj
<< /Type /MCR /MCID 19 /Pg 134 0 R >>
endobj

2014 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2015 0 R 2017 0 R 2019 0 R 2021 0 R 2025 0 R 2027 0 R 2029 0 R 2031 0 R 2033 0 R ]
  /P 159 0 R
>>
endobj

2015 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply that emits combined values as soon as there is a new value seen on )
  /K [ 2016 0 R ]
  /P 2014 0 R
>>
endobj

2016 0 obj
<< /Type /MCR /MCID 20 /Pg 134 0 R >>
endobj

2017 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (any)
  /K [ 2018 0 R ]
  /P 2014 0 R
>>
endobj

2018 0 obj
<< /Type /MCR /MCID 21 /Pg 134 0 R >>
endobj

2019 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( of the supplies. By default, )
  /K [ 2020 0 R ]
  /P 2014 0 R
>>
endobj

2020 0 obj
<< /Type /MCR /MCID 22 /Pg 134 0 R >>
endobj

2021 0 obj
<< /Type /StructElem /S /Link /K [ 2022 0 R 2023 0 R ] /P 2014 0 R >>
endobj

2022 0 obj
<< /Type /OBJR /Obj 137 0 R /Pg 134 0 R >>
endobj

2023 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Lists)
  /K [ 2024 0 R ]
  /P 2021 0 R
>>
endobj

2024 0 obj
<< /Type /MCR /MCID 23 /Pg 134 0 R >>
endobj

2025 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( are created, but this can be changed by specifying your own combiner with the )
  /K [ 2026 0 R ]
  /P 2014 0 R
>>
endobj

2026 0 obj
<< /Type /MCR /MCID 24 /Pg 134 0 R >>
endobj

2027 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:with)
  /K [ 2028 0 R ]
  /P 2014 0 R
>>
endobj

2028 0 obj
<< /Type /MCR /MCID 25 /Pg 134 0 R >>
endobj

2029 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter. The optional :initial parameter can be used to indicate the initial state of the combined values. By default, all supplies have to have at least one value emitted on them before the first combined values is emitted on the resulting supply. The resulting supply is done as soon as )
  /K [ 2030 0 R ]
  /P 2014 0 R
>>
endobj

2030 0 obj
<< /Type /MCR /MCID 26 /Pg 134 0 R >>
endobj

2031 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (any)
  /K [ 2032 0 R ]
  /P 2014 0 R
>>
endobj

2032 0 obj
<< /Type /MCR /MCID 27 /Pg 134 0 R >>
endobj

2033 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( of the given supplies are done. Can also be called as a class method.)
  /K [ 2034 0 R ]
  /P 2014 0 R
>>
endobj

2034 0 obj
<< /Type /MCR /MCID 28 /Pg 134 0 R >>
endobj

2035 0 obj
<<
  /Type /StructElem
  /S /H1
  /K [ 2036 0 R ]
  /P 159 0 R
  /T (I/O features exposed as supplies)
>>
endobj

2036 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (I/O features exposed as supplies\n)
  /K [ 2037 0 R ]
  /P 2035 0 R
>>
endobj

2037 0 obj
<< /Type /MCR /MCID 0 /Pg 142 0 R >>
endobj

2038 0 obj
<< /Type /StructElem /S /H2 /K [ 2039 0 R ] /P 159 0 R /T (sub signal) >>
endobj

2039 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (sub signal\n)
  /K [ 2040 0 R ]
  /P 2038 0 R
>>
endobj

2040 0 obj
<< /Type /MCR /MCID 1 /Pg 142 0 R >>
endobj

2041 0 obj
<< /Type /StructElem /S /Code /K [ 2042 0 R ] /P 159 0 R >>
endobj

2042 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (sub signal\(*@signals, :$scheduler = $*SCHEDULER\)\n)
  /K [ 2043 0 R ]
  /P 2041 0 R
>>
endobj

2043 0 obj
<< /Type /MCR /MCID 2 /Pg 142 0 R >>
endobj

2044 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2045 0 R 2047 0 R 2049 0 R ]
  /P 159 0 R
>>
endobj

2045 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply for the Signal enums \(such as SIGINT\) specified, and an optional )
  /K [ 2046 0 R ]
  /P 2044 0 R
>>
endobj

2046 0 obj
<< /Type /MCR /MCID 3 /Pg 142 0 R >>
endobj

2047 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (:scheduler)
  /K [ 2048 0 R ]
  /P 2044 0 R
>>
endobj

2048 0 obj
<< /Type /MCR /MCID 4 /Pg 142 0 R >>
endobj

2049 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( parameter. Any signals received, will be emitted on the supply. For example:)
  /K [ 2050 0 R ]
  /P 2044 0 R
>>
endobj

2050 0 obj
<< /Type /MCR /MCID 5 /Pg 142 0 R >>
endobj

2051 0 obj
<< /Type /StructElem /S /Code /K [ 2052 0 R ] /P 159 0 R >>
endobj

2052 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (signal\(SIGINT\).tap\( { say "Thank you for your attention"; exit 0 } \);\n)
  /K [ 2053 0 R ]
  /P 2051 0 R
>>
endobj

2053 0 obj
<< /Type /MCR /MCID 6 /Pg 142 0 R >>
endobj

2054 0 obj
<< /Type /StructElem /S /P /K [ 2055 0 R ] /P 159 0 R >>
endobj

2055 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (would catch Control-C, thank you, and then exit.)
  /K [ 2056 0 R ]
  /P 2054 0 R
>>
endobj

2056 0 obj
<< /Type /MCR /MCID 7 /Pg 142 0 R >>
endobj

2057 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2058 0 R 2060 0 R 2062 0 R ]
  /P 159 0 R
>>
endobj

2058 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (To go from a signal number to a )
  /K [ 2059 0 R ]
  /P 2057 0 R
>>
endobj

2059 0 obj
<< /Type /MCR /MCID 8 /Pg 142 0 R >>
endobj

2060 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Signal)
  /K [ 2061 0 R ]
  /P 2057 0 R
>>
endobj

2061 0 obj
<< /Type /MCR /MCID 9 /Pg 142 0 R >>
endobj

2062 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (, you can do something like this:)
  /K [ 2063 0 R ]
  /P 2057 0 R
>>
endobj

2063 0 obj
<< /Type /MCR /MCID 10 /Pg 142 0 R >>
endobj

2064 0 obj
<< /Type /StructElem /S /Code /K [ 2065 0 R ] /P 159 0 R >>
endobj

2065 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (signal\(Signal\(2\)\).tap\( -> $sig { say "Received signal: $sig" } \);\n)
  /K [ 2066 0 R ]
  /P 2064 0 R
>>
endobj

2066 0 obj
<< /Type /MCR /MCID 11 /Pg 142 0 R >>
endobj

2067 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2068 0 R 2070 0 R 2072 0 R 2074 0 R 2078 0 R ]
  /P 159 0 R
>>
endobj

2068 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (The list of supported signals can be found by checking )
  /K [ 2069 0 R ]
  /P 2067 0 R
>>
endobj

2069 0 obj
<< /Type /MCR /MCID 12 /Pg 142 0 R >>
endobj

2070 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Signal::.keys)
  /K [ 2071 0 R ]
  /P 2067 0 R
>>
endobj

2071 0 obj
<< /Type /MCR /MCID 13 /Pg 142 0 R >>
endobj

2072 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( \(as you would any enum\). For more details on how enums work see )
  /K [ 2073 0 R ]
  /P 2067 0 R
>>
endobj

2073 0 obj
<< /Type /MCR /MCID 14 /Pg 142 0 R >>
endobj

2074 0 obj
<< /Type /StructElem /S /Link /K [ 2075 0 R 2076 0 R ] /P 2067 0 R >>
endobj

2075 0 obj
<< /Type /OBJR /Obj 143 0 R /Pg 142 0 R >>
endobj

2076 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (enum)
  /K [ 2077 0 R ]
  /P 2074 0 R
>>
endobj

2077 0 obj
<< /Type /MCR /MCID 15 /Pg 142 0 R >>
endobj

2078 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (.)
  /K [ 2079 0 R ]
  /P 2067 0 R
>>
endobj

2079 0 obj
<< /Type /MCR /MCID 16 /Pg 142 0 R >>
endobj

2080 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2081 0 R 2083 0 R 2085 0 R 2089 0 R 2091 0 R 2093 0 R 2095 0 R 2097 0 R 2099 0 R 2101 0 R 2103 0 R 2105 0 R 2107 0 R 2109 0 R ]
  /P 159 0 R
>>
endobj

2081 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Note:)
  /K [ 2082 0 R ]
  /P 2080 0 R
>>
endobj

2082 0 obj
<< /Type /MCR /MCID 17 /Pg 142 0 R >>
endobj

2083 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( )
  /K [ 2084 0 R ]
  /P 2080 0 R
>>
endobj

2084 0 obj
<< /Type /MCR /MCID 18 /Pg 142 0 R >>
endobj

2085 0 obj
<< /Type /StructElem /S /Link /K [ 2086 0 R 2087 0 R ] /P 2080 0 R >>
endobj

2086 0 obj
<< /Type /OBJR /Obj 145 0 R /Pg 142 0 R >>
endobj

2087 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Rakudo)
  /K [ 2088 0 R ]
  /P 2085 0 R
>>
endobj

2088 0 obj
<< /Type /MCR /MCID 19 /Pg 142 0 R >>
endobj

2089 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( versions up to 2018.05 had a bug due to which numeric values of signals were incorrect on some systems. For example, )
  /K [ 2090 0 R ]
  /P 2080 0 R
>>
endobj

2090 0 obj
<< /Type /MCR /MCID 20 /Pg 142 0 R >>
endobj

2091 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Signal\(10\))
  /K [ 2092 0 R ]
  /P 2080 0 R
>>
endobj

2092 0 obj
<< /Type /MCR /MCID 21 /Pg 142 0 R >>
endobj

2093 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( was returning )
  /K [ 2094 0 R ]
  /P 2080 0 R
>>
endobj

2094 0 obj
<< /Type /MCR /MCID 22 /Pg 142 0 R >>
endobj

2095 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (SIGBUS)
  /K [ 2096 0 R ]
  /P 2080 0 R
>>
endobj

2096 0 obj
<< /Type /MCR /MCID 23 /Pg 142 0 R >>
endobj

2097 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( even if it was actually )
  /K [ 2098 0 R ]
  /P 2080 0 R
>>
endobj

2098 0 obj
<< /Type /MCR /MCID 24 /Pg 142 0 R >>
endobj

2099 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (SIGUSR1)
  /K [ 2100 0 R ]
  /P 2080 0 R
>>
endobj

2100 0 obj
<< /Type /MCR /MCID 25 /Pg 142 0 R >>
endobj

2101 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( on a particular system. That being said, using )
  /K [ 2102 0 R ]
  /P 2080 0 R
>>
endobj

2102 0 obj
<< /Type /MCR /MCID 26 /Pg 142 0 R >>
endobj

2103 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (signal\(SIGUSR1\))
  /K [ 2104 0 R ]
  /P 2080 0 R
>>
endobj

2104 0 obj
<< /Type /MCR /MCID 27 /Pg 142 0 R >>
endobj

2105 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( was working as expected on all Rakudo versions except 2018.04, 2018.04.1 and 2018.05, where the intended behavior can be achieved by using )
  /K [ 2106 0 R ]
  /P 2080 0 R
>>
endobj

2106 0 obj
<< /Type /MCR /MCID 28 /Pg 142 0 R >>
endobj

2107 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (signal\(SIGBUS\))
  /K [ 2108 0 R ]
  /P 2080 0 R
>>
endobj

2108 0 obj
<< /Type /MCR /MCID 29 /Pg 142 0 R >>
endobj

2109 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( instead. These issues are resolved in Rakudo releases after 2018.05.)
  /K [ 2110 0 R ]
  /P 2080 0 R
>>
endobj

2110 0 obj
<< /Type /MCR /MCID 30 /Pg 142 0 R >>
endobj

2111 0 obj
<<
  /Type /StructElem
  /S /H2
  /K [ 2112 0 R ]
  /P 159 0 R
  /T (method IO::Notification.watch-path)
>>
endobj

2112 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method IO::Notification.watch-path\n)
  /K [ 2113 0 R ]
  /P 2111 0 R
>>
endobj

2113 0 obj
<< /Type /MCR /MCID 31 /Pg 142 0 R >>
endobj

2114 0 obj
<< /Type /StructElem /S /Code /K [ 2115 0 R ] /P 159 0 R >>
endobj

2115 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (method watch-path\($path --> Supply:D\)\n)
  /K [ 2116 0 R ]
  /P 2114 0 R
>>
endobj

2116 0 obj
<< /Type /MCR /MCID 32 /Pg 142 0 R >>
endobj

2117 0 obj
<<
  /Type /StructElem
  /S /P
  /K [ 2118 0 R 2120 0 R 2122 0 R ]
  /P 159 0 R
>>
endobj

2118 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (Creates a supply to which the OS will emit values to indicate changes on the filesystem for the given path. Also has a shortcut with the )
  /K [ 2119 0 R ]
  /P 2117 0 R
>>
endobj

2119 0 obj
<< /Type /MCR /MCID 33 /Pg 142 0 R >>
endobj

2120 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (watch)
  /K [ 2121 0 R ]
  /P 2117 0 R
>>
endobj

2121 0 obj
<< /Type /MCR /MCID 34 /Pg 142 0 R >>
endobj

2122 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText ( method on an IO object, like this:)
  /K [ 2123 0 R ]
  /P 2117 0 R
>>
endobj

2123 0 obj
<< /Type /MCR /MCID 35 /Pg 142 0 R >>
endobj

2124 0 obj
<< /Type /StructElem /S /Code /K [ 2125 0 R ] /P 159 0 R >>
endobj

2125 0 obj
<<
  /Type /StructElem
  /S /Span
  /ActualText (IO::Notification.watch-path\("."\).act\( { say "$^file changed" } \);\n".".IO.watch.act\(                     { say "$^file changed" } \);   # same\n)
  /K [ 2126 0 R ]
  /P 2124 0 R
>>
endobj

2126 0 obj
<< /Type /MCR /MCID 36 /Pg 142 0 R >>
endobj

2127 0 obj
<<
  /Type /StructTreeRoot
  /K [ 159 0 R ]
  /ParentTree <<
    /Nums [ 0 [ 161 0 R 157 0 R 164 0 R 167 0 R 171 0 R 173 0 R 175 0 R 177 0 R 180 0 R 184 0 R 186 0 R 189 0 R 191 0 R 193 0 R 195 0 R 197 0 R 199 0 R 201 0 R 203 0 R 205 0 R 208 0 R 210 0 R 212 0 R 214 0 R 216 0 R 219 0 R 221 0 R 223 0 R 225 0 R 227 0 R 231 0 R 233 0 R 235 0 R 237 0 R 239 0 R 241 0 R 243 0 R 245 0 R 248 0 R 251 0 R 255 0 R 257 0 R 259 0 R 261 0 R 265 0 R 267 0 R 271 0 R 273 0 R 275 0 R 277 0 R 280 0 R 282 0 R 284 0 R 288 0 R 290 0 R 293 0 R 297 0 R 299 0 R ] 1 169 0 R 2 182 0 R 3 229 0 R 4 253 0 R 5 263 0 R 6 269 0 R 7 286 0 R 8 295 0 R 9 [ 302 0 R 305 0 R 308 0 R 311 0 R 313 0 R 315 0 R 318 0 R 320 0 R 322 0 R 324 0 R 326 0 R 328 0 R 330 0 R 332 0 R 334 0 R 336 0 R 338 0 R 340 0 R 342 0 R 344 0 R 346 0 R 349 0 R 351 0 R 353 0 R 355 0 R 357 0 R 359 0 R 361 0 R 363 0 R 365 0 R 367 0 R 369 0 R 372 0 R 374 0 R 376 0 R 380 0 R 382 0 R 384 0 R 386 0 R 388 0 R 390 0 R 392 0 R 394 0 R 396 0 R 398 0 R 400 0 R 402 0 R 404 0 R 406 0 R 408 0 R 410 0 R 413 0 R 415 0 R 417 0 R 421 0 R 423 0 R 425 0 R 427 0 R 430 0 R 433 0 R 436 0 R 439 0 R 442 0 R 445 0 R 447 0 R 449 0 R ] 10 378 0 R 11 419 0 R 12 [ 452 0 R 455 0 R 458 0 R 461 0 R 464 0 R 468 0 R 470 0 R 473 0 R 476 0 R 479 0 R 483 0 R 485 0 R 487 0 R 489 0 R 492 0 R 495 0 R 498 0 R 502 0 R 504 0 R 506 0 R 508 0 R 510 0 R 512 0 R 514 0 R 516 0 R 518 0 R 520 0 R 522 0 R 524 0 R 526 0 R 528 0 R 530 0 R 532 0 R 534 0 R 536 0 R 538 0 R 540 0 R 543 0 R 546 0 R 548 0 R 550 0 R 553 0 R 556 0 R 559 0 R 561 0 R 563 0 R 565 0 R 567 0 R 569 0 R 571 0 R 573 0 R 575 0 R 577 0 R 579 0 R 582 0 R 585 0 R 588 0 R ] 13 466 0 R 14 481 0 R 15 500 0 R 16 [ 591 0 R 594 0 R ] 17 [ 597 0 R 600 0 R 603 0 R 606 0 R 608 0 R 610 0 R 612 0 R 614 0 R 616 0 R 618 0 R 620 0 R 622 0 R 624 0 R 626 0 R 628 0 R 630 0 R 633 0 R 636 0 R 639 0 R 642 0 R 644 0 R 646 0 R 648 0 R 650 0 R 652 0 R 654 0 R 656 0 R 658 0 R 660 0 R 662 0 R 664 0 R 666 0 R 669 0 R 672 0 R 675 0 R 677 0 R 679 0 R 681 0 R 683 0 R 686 0 R 689 0 R 692 0 R 694 0 R 696 0 R 698 0 R 700 0 R 702 0 R 704 0 R 706 0 R 708 0 R 710 0 R 712 0 R 714 0 R 716 0 R 718 0 R 720 0 R 723 0 R 726 0 R 729 0 R ] 18 [ 732 0 R 734 0 R 736 0 R 738 0 R 740 0 R 742 0 R 744 0 R 746 0 R 748 0 R 750 0 R 752 0 R 754 0 R 756 0 R 758 0 R 760 0 R 763 0 R 766 0 R 769 0 R 772 0 R 774 0 R 776 0 R 778 0 R 780 0 R 782 0 R 784 0 R 786 0 R 788 0 R 792 0 R 794 0 R 796 0 R 798 0 R 800 0 R 802 0 R 804 0 R 806 0 R 809 0 R 812 0 R 815 0 R 818 0 R 820 0 R 822 0 R 824 0 R 826 0 R 828 0 R 830 0 R 832 0 R 834 0 R 838 0 R 840 0 R 843 0 R 846 0 R 849 0 R 852 0 R 855 0 R 859 0 R 861 0 R 864 0 R ] 19 790 0 R 20 836 0 R 21 857 0 R 22 [ 867 0 R 870 0 R 873 0 R 876 0 R 879 0 R 882 0 R 885 0 R 888 0 R 891 0 R 894 0 R 897 0 R 900 0 R 903 0 R 906 0 R 909 0 R 912 0 R 915 0 R 918 0 R 920 0 R 922 0 R 924 0 R 926 0 R 930 0 R 932 0 R 934 0 R 936 0 R 938 0 R 940 0 R 942 0 R 944 0 R 946 0 R 948 0 R 950 0 R 952 0 R 956 0 R 958 0 R ] 23 928 0 R 24 954 0 R 25 [ 961 0 R 964 0 R 967 0 R 970 0 R 972 0 R 974 0 R 976 0 R 978 0 R 981 0 R 983 0 R 985 0 R 987 0 R 989 0 R 991 0 R 993 0 R 996 0 R 999 0 R 1002 0 R 1004 0 R 1006 0 R 1009 0 R 1012 0 R 1015 0 R 1018 0 R 1020 0 R 1022 0 R 1025 0 R 1028 0 R 1031 0 R 1034 0 R 1036 0 R 1038 0 R 1040 0 R 1042 0 R 1045 0 R 1047 0 R 1049 0 R 1051 0 R 1053 0 R 1055 0 R 1057 0 R 1059 0 R ] 26 [ 1062 0 R 1065 0 R 1068 0 R 1071 0 R 1074 0 R 1077 0 R 1080 0 R 1084 0 R 1086 0 R 1089 0 R 1092 0 R 1094 0 R 1096 0 R 1098 0 R 1101 0 R 1104 0 R 1107 0 R 1110 0 R 1114 0 R 1116 0 R 1119 0 R 1122 0 R 1124 0 R 1126 0 R 1128 0 R 1130 0 R 1132 0 R 1134 0 R 1136 0 R 1138 0 R 1141 0 R 1144 0 R 1147 0 R 1150 0 R 1153 0 R 1155 0 R 1157 0 R ] 27 1082 0 R 28 1112 0 R 29 [ 1159 0 R 1161 0 R 1163 0 R 1165 0 R 1167 0 R 1169 0 R 1171 0 R 1173 0 R 1176 0 R 1179 0 R 1182 0 R 1185 0 R 1187 0 R 1189 0 R 1195 0 R 1197 0 R 1199 0 R 1201 0 R 1203 0 R 1205 0 R 1209 0 R 1211 0 R 1214 0 R 1217 0 R 1220 0 R 1223 0 R 1225 0 R 1227 0 R 1230 0 R 1233 0 R 1235 0 R 1238 0 R 1241 0 R 1244 0 R 1248 0 R 1250 0 R 1253 0 R 1256 0 R 1259 0 R 1262 0 R 1265 0 R ] 30 1191 0 R 31 1193 0 R 32 1207 0 R 33 1246 0 R 34 [ 1268 0 R 1271 0 R 1274 0 R 1276 0 R 1278 0 R 1284 0 R 1287 0 R 1292 0 R 1295 0 R 1299 0 R 1302 0 R 1306 0 R 1309 0 R 1313 0 R 1316 0 R 1320 0 R 1323 0 R 1327 0 R 1330 0 R 1334 0 R 1337 0 R 1341 0 R 1344 0 R 1347 0 R 1349 0 R 1351 0 R 1354 0 R 1357 0 R 1360 0 R 1362 0 R 1364 0 R 1366 0 R 1368 0 R 1370 0 R 1372 0 R 1375 0 R 1377 0 R 1379 0 R 1382 0 R 1385 0 R 1388 0 R 1390 0 R 1392 0 R 1395 0 R 1397 0 R 1399 0 R 1403 0 R 1405 0 R 1408 0 R 1410 0 R 1412 0 R 1414 0 R 1416 0 R 1418 0 R 1420 0 R 1423 0 R 1425 0 R 1427 0 R 1429 0 R 1431 0 R 1433 0 R 1435 0 R ] 35 1401 0 R 36 [ 1438 0 R 1440 0 R 1442 0 R 1444 0 R 1446 0 R 1449 0 R 1452 0 R 1454 0 R 1456 0 R 1460 0 R 1464 0 R 1467 0 R 1471 0 R 1475 0 R 1478 0 R 1480 0 R 1482 0 R 1486 0 R 1490 0 R 1493 0 R 1497 0 R 1501 0 R 1504 0 R 1506 0 R 1508 0 R 1511 0 R 1514 0 R 1518 0 R 1522 0 R 1525 0 R 1529 0 R 1533 0 R 1536 0 R 1538 0 R 1540 0 R 1544 0 R 1548 0 R 1551 0 R 1555 0 R 1559 0 R 1562 0 R 1566 0 R 1570 0 R 1573 0 R 1577 0 R 1581 0 R 1584 0 R 1588 0 R 1592 0 R 1595 0 R 1597 0 R 1599 0 R 1602 0 R 1605 0 R ] 37 [ 1608 0 R 1611 0 R 1614 0 R 1617 0 R 1620 0 R 1623 0 R 1625 0 R 1627 0 R 1629 0 R 1631 0 R 1634 0 R 1636 0 R 1638 0 R 1640 0 R 1642 0 R 1644 0 R 1646 0 R 1648 0 R 1650 0 R 1653 0 R 1656 0 R 1659 0 R 1661 0 R 1663 0 R 1665 0 R 1667 0 R 1669 0 R 1671 0 R 1673 0 R 1675 0 R 1677 0 R 1679 0 R 1682 0 R 1685 0 R 1688 0 R 1692 0 R 1694 0 R 1697 0 R ] 38 1690 0 R 39 [ 1700 0 R 1703 0 R 1706 0 R 1708 0 R 1710 0 R 1712 0 R 1714 0 R 1717 0 R 1720 0 R 1723 0 R 1726 0 R 1729 0 R 1732 0 R 1735 0 R 1737 0 R 1739 0 R 1741 0 R 1743 0 R 1747 0 R 1749 0 R 1751 0 R 1753 0 R 1756 0 R 1759 0 R 1762 0 R 1764 0 R 1766 0 R 1768 0 R 1770 0 R 1774 0 R 1776 0 R 1779 0 R 1782 0 R 1786 0 R 1788 0 R 1791 0 R 1793 0 R 1797 0 R 1799 0 R 1802 0 R 1805 0 R 1808 0 R 1810 0 R 1812 0 R 1814 0 R 1816 0 R 1820 0 R 1822 0 R ] 40 1745 0 R 41 1772 0 R 42 1784 0 R 43 1795 0 R 44 1818 0 R 45 [ 1825 0 R 1828 0 R 1831 0 R 1835 0 R 1837 0 R 1840 0 R 1843 0 R 1846 0 R 1850 0 R 1852 0 R 1855 0 R 1858 0 R 1861 0 R 1865 0 R 1867 0 R 1870 0 R 1873 0 R 1876 0 R 1878 0 R 1880 0 R 1882 0 R 1884 0 R 1886 0 R 1888 0 R 1891 0 R 1894 0 R 1897 0 R 1900 0 R 1903 0 R 1906 0 R 1908 0 R 1910 0 R ] 46 1833 0 R 47 1848 0 R 48 1863 0 R 49 [ 1913 0 R 1916 0 R 1919 0 R 1921 0 R 1923 0 R 1925 0 R 1927 0 R 1929 0 R 1931 0 R 1933 0 R 1935 0 R 1937 0 R 1939 0 R 1942 0 R 1944 0 R 1946 0 R 1949 0 R 1952 0 R 1955 0 R 1958 0 R ] 50 [ 1961 0 R 1964 0 R 1967 0 R 1970 0 R 1973 0 R 1976 0 R 1979 0 R 1982 0 R 1984 0 R 1986 0 R 1990 0 R 1992 0 R 1994 0 R 1996 0 R 1998 0 R 2000 0 R 2003 0 R 2006 0 R 2009 0 R 2012 0 R 2015 0 R 2017 0 R 2019 0 R 2023 0 R 2025 0 R 2027 0 R 2029 0 R 2031 0 R 2033 0 R ] 51 1988 0 R 52 2021 0 R 53 [ 2036 0 R 2039 0 R 2042 0 R 2045 0 R 2047 0 R 2049 0 R 2052 0 R 2055 0 R 2058 0 R 2060 0 R 2062 0 R 2065 0 R 2068 0 R 2070 0 R 2072 0 R 2076 0 R 2078 0 R 2081 0 R 2083 0 R 2087 0 R 2089 0 R 2091 0 R 2093 0 R 2095 0 R 2097 0 R 2099 0 R 2101 0 R 2103 0 R 2105 0 R 2107 0 R 2109 0 R 2112 0 R 2115 0 R 2118 0 R 2120 0 R 2122 0 R 2125 0 R ] 54 2074 0 R 55 2085 0 R ]
  >>
>>
endobj

2128 0 obj
<<
  /Count 3
  /Dest /Methods_that_return_Taps
  /First 2129 0 R
  /Last 2130 0 R
  /Next 2131 0 R
  /Prev 154 0 R
  /SE 301 0 R
  /Title (Methods that return Taps)
>>
endobj

2129 0 obj
<<
  /Count 1
  /Dest /method_tap
  /Next 2130 0 R
  /SE 304 0 R
  /Title (method tap)
>>
endobj

2130 0 obj
<<
  /Count 1
  /Dest /method_act
  /Prev 2129 0 R
  /SE 438 0 R
  /Title (method act)
>>
endobj

2131 0 obj
<<
  /Count 6
  /Dest /Utility_methods
  /First 2132 0 R
  /Last 2136 0 R
  /Next 2137 0 R
  /Prev 2128 0 R
  /SE 451 0 R
  /Title (Utility methods)
>>
endobj

2132 0 obj
<<
  /Count 1
  /Dest /method_Capture
  /Next 2133 0 R
  /SE 454 0 R
  /Title (method Capture)
>>
endobj

2133 0 obj
<<
  /Count 1
  /Dest /method_Channel
  /Next 2134 0 R
  /Prev 2132 0 R
  /SE 472 0 R
  /Title (method Channel)
>>
endobj

2134 0 obj
<<
  /Count 1
  /Dest /method_Promise
  /Next 2135 0 R
  /Prev 2133 0 R
  /SE 491 0 R
  /Title (method Promise)
>>
endobj

2135 0 obj
<<
  /Count 1
  /Dest /method_live
  /Next 2136 0 R
  /Prev 2134 0 R
  /SE 552 0 R
  /Title (method live)
>>
endobj

2136 0 obj
<<
  /Count 1
  /Dest /method_schedule-on
  /Prev 2135 0 R
  /SE 584 0 R
  /Title (method schedule-on)
>>
endobj

2137 0 obj
<<
  /Count 9
  /Dest /Methods_that_wait_until_the_supply_is_done
  /First 2138 0 R
  /Last 2145 0 R
  /Next 2146 0 R
  /Prev 2131 0 R
  /SE 596 0 R
  /Title (Methods that wait until the supply is done)
>>
endobj

2138 0 obj
<<
  /Count 1
  /Dest /method_wait
  /Next 2139 0 R
  /SE 599 0 R
  /Title (method wait)
>>
endobj

2139 0 obj
<<
  /Count 1
  /Dest /method_list
  /Next 2140 0 R
  /Prev 2138 0 R
  /SE 635 0 R
  /Title (method list)
>>
endobj

2140 0 obj
<<
  /Count 1
  /Dest /method_Seq
  /Next 2141 0 R
  /Prev 2139 0 R
  /SE 668 0 R
  /Title (method Seq)
>>
endobj

2141 0 obj
<<
  /Count 1
  /Dest /method_grab
  /Next 2142 0 R
  /Prev 2140 0 R
  /SE 685 0 R
  /Title (method grab)
>>
endobj

2142 0 obj
<<
  /Count 1
  /Dest /method_reverse
  /Next 2143 0 R
  /Prev 2141 0 R
  /SE 725 0 R
  /Title (method reverse)
>>
endobj

2143 0 obj
<<
  /Count 1
  /Dest /method_sort
  /Next 2144 0 R
  /Prev 2142 0 R
  /SE 765 0 R
  /Title (method sort)
>>
endobj

2144 0 obj
<<
  /Count 1
  /Dest /method_collate
  /Next 2145 0 R
  /Prev 2143 0 R
  /SE 811 0 R
  /Title (method collate)
>>
endobj

2145 0 obj
<<
  /Count 1
  /Dest /method_reduce
  /Prev 2144 0 R
  /SE 845 0 R
  /Title (method reduce)
>>
endobj

2146 0 obj
<<
  /Count 35
  /Dest /Methods_that_return_another_Supply
  /First 2147 0 R
  /Last 2180 0 R
  /Next 2181 0 R
  /Prev 2137 0 R
  /SE 866 0 R
  /Title (Methods that return another Supply)
>>
endobj

2147 0 obj
<<
  /Count 1
  /Dest /method_from-list
  /Next 2148 0 R
  /SE 869 0 R
  /Title (method from-list)
>>
endobj

2148 0 obj
<<
  /Count 1
  /Dest /method_share
  /Next 2149 0 R
  /Prev 2147 0 R
  /SE 881 0 R
  /Title (method share)
>>
endobj

2149 0 obj
<<
  /Count 1
  /Dest /method_flat
  /Next 2150 0 R
  /Prev 2148 0 R
  /SE 893 0 R
  /Title (method flat)
>>
endobj

2150 0 obj
<<
  /Count 1
  /Dest /method_do
  /Next 2151 0 R
  /Prev 2149 0 R
  /SE 902 0 R
  /Title (method do)
>>
endobj

2151 0 obj
<<
  /Count 1
  /Dest /method_on-close
  /Next 2152 0 R
  /Prev 2150 0 R
  /SE 911 0 R
  /Title (method on-close)
>>
endobj

2152 0 obj
<<
  /Count 1
  /Dest /method_interval
  /Next 2153 0 R
  /Prev 2151 0 R
  /SE 963 0 R
  /Title (method interval)
>>
endobj

2153 0 obj
<<
  /Count 1
  /Dest /method_grep
  /Next 2154 0 R
  /Prev 2152 0 R
  /SE 995 0 R
  /Title (method grep)
>>
endobj

2154 0 obj
<<
  /Count 1
  /Dest /method_map
  /Next 2155 0 R
  /Prev 2153 0 R
  /SE 1011 0 R
  /Title (method map)
>>
endobj

2155 0 obj
<<
  /Count 1
  /Dest /method_batch
  /Next 2156 0 R
  /Prev 2154 0 R
  /SE 1027 0 R
  /Title (method batch)
>>
endobj

2156 0 obj
<<
  /Count 1
  /Dest /method_elems
  /Next 2157 0 R
  /Prev 2155 0 R
  /SE 1061 0 R
  /Title (method elems)
>>
endobj

2157 0 obj
<<
  /Count 1
  /Dest /method_head
  /Next 2158 0 R
  /Prev 2156 0 R
  /SE 1070 0 R
  /Title (method head)
>>
endobj

2158 0 obj
<<
  /Count 1
  /Dest /method_tail
  /Next 2159 0 R
  /Prev 2157 0 R
  /SE 1103 0 R
  /Title (method tail)
>>
endobj

2159 0 obj
<<
  /Count 1
  /Dest /method_first
  /Next 2160 0 R
  /Prev 2158 0 R
  /SE 1146 0 R
  /Title (method first)
>>
endobj

2160 0 obj
<<
  /Count 1
  /Dest /method_split
  /Next 2161 0 R
  /Prev 2159 0 R
  /SE 1178 0 R
  /Title (method split)
>>
endobj

2161 0 obj
<<
  /Count 1
  /Dest /method_rotate
  /Next 2162 0 R
  /Prev 2160 0 R
  /SE 1216 0 R
  /Title (method rotate)
>>
endobj

2162 0 obj
<<
  /Count 1
  /Dest /method_rotor
  /Next 2163 0 R
  /Prev 2161 0 R
  /SE 1237 0 R
  /Title (method rotor)
>>
endobj

2163 0 obj
<<
  /Count 1
  /Dest /method_delayed
  /Next 2164 0 R
  /Prev 2162 0 R
  /SE 1252 0 R
  /Title (method delayed)
>>
endobj

2164 0 obj
<<
  /Count 4
  /Dest /method_throttle
  /First 2165 0 R
  /Last 2167 0 R
  /Next 2168 0 R
  /Prev 2163 0 R
  /SE 1261 0 R
  /Title (method throttle)
>>
endobj

2165 0 obj
<<
  /Count 1
  /Dest /control_messages
  /Next 2166 0 R
  /SE 1448 0 R
  /Title (control messages)
>>
endobj

2166 0 obj
<<
  /Count 1
  /Dest /status_message
  /Next 2167 0 R
  /Prev 2165 0 R
  /SE 1510 0 R
  /Title (status message)
>>
endobj

2167 0 obj
<<
  /Count 1
  /Dest /Examples
  /Prev 2166 0 R
  /SE 1601 0 R
  /Title (Examples)
>>
endobj

2168 0 obj
<<
  /Count 1
  /Dest /method_stable
  /Next 2169 0 R
  /Prev 2164 0 R
  /SE 1616 0 R
  /Title (method stable)
>>
endobj

2169 0 obj
<<
  /Count 1
  /Dest /method_produce
  /Next 2170 0 R
  /Prev 2168 0 R
  /SE 1681 0 R
  /Title (method produce)
>>
endobj

2170 0 obj
<<
  /Count 1
  /Dest /method_lines
  /Next 2171 0 R
  /Prev 2169 0 R
  /SE 1699 0 R
  /Title (method lines)
>>
endobj

2171 0 obj
<<
  /Count 1
  /Dest /method_words
  /Next 2172 0 R
  /Prev 2170 0 R
  /SE 1716 0 R
  /Title (method words)
>>
endobj

2172 0 obj
<<
  /Count 1
  /Dest /method_unique
  /Next 2173 0 R
  /Prev 2171 0 R
  /SE 1728 0 R
  /Title (method unique)
>>
endobj

2173 0 obj
<<
  /Count 1
  /Dest /method_repeated
  /Next 2174 0 R
  /Prev 2172 0 R
  /SE 1755 0 R
  /Title (method repeated)
>>
endobj

2174 0 obj
<<
  /Count 1
  /Dest /method_squish
  /Next 2175 0 R
  /Prev 2173 0 R
  /SE 1801 0 R
  /Title (method squish)
>>
endobj

2175 0 obj
<<
  /Count 1
  /Dest /method_max
  /Next 2176 0 R
  /Prev 2174 0 R
  /SE 1824 0 R
  /Title (method max)
>>
endobj

2176 0 obj
<<
  /Count 1
  /Dest /method_min
  /Next 2177 0 R
  /Prev 2175 0 R
  /SE 1839 0 R
  /Title (method min)
>>
endobj

2177 0 obj
<<
  /Count 1
  /Dest /method_minmax
  /Next 2178 0 R
  /Prev 2176 0 R
  /SE 1854 0 R
  /Title (method minmax)
>>
endobj

2178 0 obj
<<
  /Count 1
  /Dest /method_skip
  /Next 2179 0 R
  /Prev 2177 0 R
  /SE 1869 0 R
  /Title (method skip)
>>
endobj

2179 0 obj
<<
  /Count 1
  /Dest /method_start
  /Next 2180 0 R
  /Prev 2178 0 R
  /SE 1893 0 R
  /Title (method start)
>>
endobj

2180 0 obj
<<
  /Count 1
  /Dest /method_migrate
  /Prev 2179 0 R
  /SE 1912 0 R
  /Title (method migrate)
>>
endobj

2181 0 obj
<<
  /Count 4
  /Dest /Methods_that_combine_supplies
  /First 2182 0 R
  /Last 2184 0 R
  /Next 2185 0 R
  /Prev 2146 0 R
  /SE 1960 0 R
  /Title (Methods that combine supplies)
>>
endobj

2182 0 obj
<<
  /Count 1
  /Dest /method_merge
  /Next 2183 0 R
  /SE 1963 0 R
  /Title (method merge)
>>
endobj

2183 0 obj
<<
  /Count 1
  /Dest /method_zip
  /Next 2184 0 R
  /Prev 2182 0 R
  /SE 1972 0 R
  /Title (method zip)
>>
endobj

2184 0 obj
<<
  /Count 1
  /Dest /method_zip-latest
  /Prev 2183 0 R
  /SE 2005 0 R
  /Title (method zip-latest)
>>
endobj

2185 0 obj
<<
  /Count 3
  /Dest /I#2fO_features_exposed_as_supplies
  /First 2186 0 R
  /Last 2187 0 R
  /Prev 2181 0 R
  /SE 2035 0 R
  /Title (I/O features exposed as supplies)
>>
endobj

2186 0 obj
<<
  /Count 1
  /Dest /sub_signal
  /Next 2187 0 R
  /SE 2038 0 R
  /Title (sub signal)
>>
endobj

2187 0 obj
<<
  /Count 1
  /Dest /method_IO::Notification.watch-path
  /Prev 2186 0 R
  /SE 2111 0 R
  /Title (method IO::Notification.watch-path)
>>
endobj

xref
0 2188
0000000000 65535 f 
0000000015 00000 n 
0000000245 00000 n 
0000000406 00000 n 
0000003080 00000 n 
0000003395 00000 n 
0000003568 00000 n 
0000003633 00000 n 
0000003816 00000 n 
0000003920 00000 n 
0000004096 00000 n 
0000004163 00000 n 
0000004337 00000 n 
0000004399 00000 n 
0000004571 00000 n 
0000004637 00000 n 
0000004811 00000 n 
0000004878 00000 n 
0000005063 00000 n 
0000005142 00000 n 
0000005323 00000 n 
0000005406 00000 n 
0000013425 00000 n 
0000013618 00000 n 
0000013881 00000 n 
0000014055 00000 n 
0000014117 00000 n 
0000014291 00000 n 
0000014353 00000 n 
0000023477 00000 n 
0000023525 00000 n 
0000023574 00000 n 
0000023682 00000 n 
0000023769 00000 n 
0000023886 00000 n 
0000023995 00000 n 
0000024266 00000 n 
0000024450 00000 n 
0000024528 00000 n 
0000024704 00000 n 
0000024770 00000 n 
0000024946 00000 n 
0000025012 00000 n 
0000032948 00000 n 
0000032996 00000 n 
0000033045 00000 n 
0000033208 00000 n 
0000033565 00000 n 
0000033801 00000 n 
0000041601 00000 n 
0000041649 00000 n 
0000041698 00000 n 
0000041969 00000 n 
0000042145 00000 n 
0000042209 00000 n 
0000042391 00000 n 
0000042468 00000 n 
0000042650 00000 n 
0000042728 00000 n 
0000050620 00000 n 
0000050668 00000 n 
0000050717 00000 n 
0000050981 00000 n 
0000051153 00000 n 
0000051215 00000 n 
0000051388 00000 n 
0000051464 00000 n 
0000057254 00000 n 
0000057302 00000 n 
0000057351 00000 n 
0000057587 00000 n 
0000064433 00000 n 
0000064481 00000 n 
0000064530 00000 n 
0000064794 00000 n 
0000064973 00000 n 
0000065048 00000 n 
0000065227 00000 n 
0000065302 00000 n 
0000071394 00000 n 
0000071442 00000 n 
0000071491 00000 n 
0000071769 00000 n 
0000071949 00000 n 
0000072025 00000 n 
0000072199 00000 n 
0000072375 00000 n 
0000072437 00000 n 
0000072616 00000 n 
0000072692 00000 n 
0000079387 00000 n 
0000079435 00000 n 
0000079484 00000 n 
0000079741 00000 n 
0000079926 00000 n 
0000079991 00000 n 
0000089005 00000 n 
0000089053 00000 n 
0000089102 00000 n 
0000089287 00000 n 
0000095199 00000 n 
0000095461 00000 n 
0000095645 00000 n 
0000095725 00000 n 
0000102683 00000 n 
0000102732 00000 n 
0000102782 00000 n 
0000103076 00000 n 
0000103256 00000 n 
0000103361 00000 n 
0000103541 00000 n 
0000103646 00000 n 
0000103826 00000 n 
0000103933 00000 n 
0000104113 00000 n 
0000104192 00000 n 
0000104368 00000 n 
0000104473 00000 n 
0000111667 00000 n 
0000111716 00000 n 
0000111766 00000 n 
0000112044 00000 n 
0000112221 00000 n 
0000112296 00000 n 
0000112477 00000 n 
0000112552 00000 n 
0000112736 00000 n 
0000112814 00000 n 
0000118654 00000 n 
0000118703 00000 n 
0000118753 00000 n 
0000118993 00000 n 
0000123048 00000 n 
0000123097 00000 n 
0000123147 00000 n 
0000123417 00000 n 
0000123596 00000 n 
0000123660 00000 n 
0000123839 00000 n 
0000123903 00000 n 
0000128715 00000 n 
0000128764 00000 n 
0000128814 00000 n 
0000129084 00000 n 
0000129256 00000 n 
0000129335 00000 n 
0000129509 00000 n 
0000129588 00000 n 
0000135260 00000 n 
0000135309 00000 n 
0000135359 00000 n 
0000135408 00000 n 
0000135458 00000 n 
0000135569 00000 n 
0000135633 00000 n 
0000135778 00000 n 
0000135949 00000 n 
0000136090 00000 n 
0000136244 00000 n 
0000136297 00000 n 
0000138813 00000 n 
0000138906 00000 n 
0000139022 00000 n 
0000139075 00000 n 
0000139152 00000 n 
0000139290 00000 n 
0000139343 00000 n 
0000139457 00000 n 
0000139618 00000 n 
0000139671 00000 n 
0000139756 00000 n 
0000139813 00000 n 
0000139922 00000 n 
0000139975 00000 n 
0000140118 00000 n 
0000140171 00000 n 
0000140277 00000 n 
0000140330 00000 n 
0000140491 00000 n 
0000140544 00000 n 
0000140634 00000 n 
0000140778 00000 n 
0000140831 00000 n 
0000140916 00000 n 
0000140973 00000 n 
0000141091 00000 n 
0000141144 00000 n 
0000141303 00000 n 
0000141357 00000 n 
0000141503 00000 n 
0000141638 00000 n 
0000141692 00000 n 
0000141798 00000 n 
0000141852 00000 n 
0000141959 00000 n 
0000142013 00000 n 
0000142124 00000 n 
0000142178 00000 n 
0000142302 00000 n 
0000142356 00000 n 
0000142462 00000 n 
0000142516 00000 n 
0000142692 00000 n 
0000142746 00000 n 
0000142853 00000 n 
0000142907 00000 n 
0000143259 00000 n 
0000143313 00000 n 
0000143427 00000 n 
0000143541 00000 n 
0000143595 00000 n 
0000143706 00000 n 
0000143760 00000 n 
0000143987 00000 n 
0000144041 00000 n 
0000144158 00000 n 
0000144212 00000 n 
0000144465 00000 n 
0000144519 00000 n 
0000144697 00000 n 
0000144801 00000 n 
0000144855 00000 n 
0000144961 00000 n 
0000145015 00000 n 
0000145108 00000 n 
0000145162 00000 n 
0000145270 00000 n 
0000145324 00000 n 
0000145448 00000 n 
0000145502 00000 n 
0000145587 00000 n 
0000145644 00000 n 
0000145754 00000 n 
0000145808 00000 n 
0000145926 00000 n 
0000145980 00000 n 
0000146088 00000 n 
0000146142 00000 n 
0000146280 00000 n 
0000146334 00000 n 
0000146440 00000 n 
0000146494 00000 n 
0000146604 00000 n 
0000146658 00000 n 
0000146768 00000 n 
0000146822 00000 n 
0000146932 00000 n 
0000146986 00000 n 
0000147063 00000 n 
0000147322 00000 n 
0000147376 00000 n 
0000147538 00000 n 
0000147644 00000 n 
0000147698 00000 n 
0000147783 00000 n 
0000147841 00000 n 
0000147954 00000 n 
0000148008 00000 n 
0000148119 00000 n 
0000148173 00000 n 
0000148279 00000 n 
0000148333 00000 n 
0000148478 00000 n 
0000148532 00000 n 
0000148617 00000 n 
0000148675 00000 n 
0000148785 00000 n 
0000148839 00000 n 
0000148943 00000 n 
0000148997 00000 n 
0000149082 00000 n 
0000149140 00000 n 
0000149251 00000 n 
0000149305 00000 n 
0000149420 00000 n 
0000149474 00000 n 
0000149585 00000 n 
0000149639 00000 n 
0000149751 00000 n 
0000149805 00000 n 
0000149919 00000 n 
0000150028 00000 n 
0000150082 00000 n 
0000150190 00000 n 
0000150244 00000 n 
0000150413 00000 n 
0000150467 00000 n 
0000150552 00000 n 
0000150610 00000 n 
0000150732 00000 n 
0000150786 00000 n 
0000150879 00000 n 
0000150933 00000 n 
0000151023 00000 n 
0000151162 00000 n 
0000151216 00000 n 
0000151301 00000 n 
0000151359 00000 n 
0000151477 00000 n 
0000151531 00000 n 
0000151624 00000 n 
0000151678 00000 n 
0000151793 00000 n 
0000151921 00000 n 
0000151975 00000 n 
0000152066 00000 n 
0000152180 00000 n 
0000152234 00000 n 
0000152311 00000 n 
0000152547 00000 n 
0000152601 00000 n 
0000152691 00000 n 
0000153001 00000 n 
0000153055 00000 n 
0000153161 00000 n 
0000153215 00000 n 
0000153323 00000 n 
0000153377 00000 n 
0000153571 00000 n 
0000153677 00000 n 
0000153731 00000 n 
0000153838 00000 n 
0000153892 00000 n 
0000154082 00000 n 
0000154136 00000 n 
0000154242 00000 n 
0000154296 00000 n 
0000154533 00000 n 
0000154588 00000 n 
0000154694 00000 n 
0000154749 00000 n 
0000154883 00000 n 
0000154938 00000 n 
0000155048 00000 n 
0000155103 00000 n 
0000155285 00000 n 
0000155340 00000 n 
0000155450 00000 n 
0000155505 00000 n 
0000155634 00000 n 
0000155689 00000 n 
0000155795 00000 n 
0000155850 00000 n 
0000155992 00000 n 
0000156047 00000 n 
0000156154 00000 n 
0000156209 00000 n 
0000156371 00000 n 
0000156426 00000 n 
0000156588 00000 n 
0000156694 00000 n 
0000156749 00000 n 
0000156856 00000 n 
0000156911 00000 n 
0000157117 00000 n 
0000157172 00000 n 
0000157278 00000 n 
0000157333 00000 n 
0000157468 00000 n 
0000157523 00000 n 
0000157633 00000 n 
0000157688 00000 n 
0000157831 00000 n 
0000157886 00000 n 
0000157996 00000 n 
0000158051 00000 n 
0000158204 00000 n 
0000158259 00000 n 
0000158366 00000 n 
0000158421 00000 n 
0000158624 00000 n 
0000158679 00000 n 
0000158905 00000 n 
0000159011 00000 n 
0000159066 00000 n 
0000159172 00000 n 
0000159227 00000 n 
0000159358 00000 n 
0000159413 00000 n 
0000159498 00000 n 
0000159557 00000 n 
0000159662 00000 n 
0000159717 00000 n 
0000159919 00000 n 
0000159974 00000 n 
0000160080 00000 n 
0000160135 00000 n 
0000160228 00000 n 
0000160283 00000 n 
0000160389 00000 n 
0000160444 00000 n 
0000160537 00000 n 
0000160592 00000 n 
0000160698 00000 n 
0000160753 00000 n 
0000160893 00000 n 
0000160948 00000 n 
0000161053 00000 n 
0000161108 00000 n 
0000161261 00000 n 
0000161316 00000 n 
0000161424 00000 n 
0000161479 00000 n 
0000161638 00000 n 
0000161693 00000 n 
0000161799 00000 n 
0000161854 00000 n 
0000161974 00000 n 
0000162029 00000 n 
0000162134 00000 n 
0000162189 00000 n 
0000162369 00000 n 
0000162424 00000 n 
0000162554 00000 n 
0000162663 00000 n 
0000162718 00000 n 
0000162823 00000 n 
0000162878 00000 n 
0000163007 00000 n 
0000163062 00000 n 
0000163147 00000 n 
0000163206 00000 n 
0000163311 00000 n 
0000163366 00000 n 
0000163496 00000 n 
0000163551 00000 n 
0000163658 00000 n 
0000163713 00000 n 
0000163850 00000 n 
0000163905 00000 n 
0000163982 00000 n 
0000164191 00000 n 
0000164246 00000 n 
0000164320 00000 n 
0000164431 00000 n 
0000164486 00000 n 
0000164563 00000 n 
0000164698 00000 n 
0000164753 00000 n 
0000164844 00000 n 
0000164958 00000 n 
0000165013 00000 n 
0000165090 00000 n 
0000165234 00000 n 
0000165289 00000 n 
0000165379 00000 n 
0000165553 00000 n 
0000165608 00000 n 
0000165713 00000 n 
0000165768 00000 n 
0000165945 00000 n 
0000166000 00000 n 
0000166106 00000 n 
0000166225 00000 n 
0000166279 00000 n 
0000166384 00000 n 
0000166502 00000 n 
0000166556 00000 n 
0000166630 00000 n 
0000166743 00000 n 
0000166797 00000 n 
0000166874 00000 n 
0000167019 00000 n 
0000167073 00000 n 
0000167163 00000 n 
0000167287 00000 n 
0000167341 00000 n 
0000167426 00000 n 
0000167485 00000 n 
0000167600 00000 n 
0000167654 00000 n 
0000167773 00000 n 
0000167827 00000 n 
0000167932 00000 n 
0000168050 00000 n 
0000168104 00000 n 
0000168181 00000 n 
0000168326 00000 n 
0000168380 00000 n 
0000168494 00000 n 
0000168606 00000 n 
0000168660 00000 n 
0000168745 00000 n 
0000168804 00000 n 
0000168913 00000 n 
0000168968 00000 n 
0000169143 00000 n 
0000169198 00000 n 
0000169305 00000 n 
0000169360 00000 n 
0000169547 00000 n 
0000169602 00000 n 
0000169707 00000 n 
0000169825 00000 n 
0000169880 00000 n 
0000169957 00000 n 
0000170102 00000 n 
0000170157 00000 n 
0000170399 00000 n 
0000170511 00000 n 
0000170566 00000 n 
0000170651 00000 n 
0000170710 00000 n 
0000170819 00000 n 
0000170874 00000 n 
0000171004 00000 n 
0000171059 00000 n 
0000171167 00000 n 
0000171222 00000 n 
0000171328 00000 n 
0000171383 00000 n 
0000171489 00000 n 
0000171544 00000 n 
0000171655 00000 n 
0000171710 00000 n 
0000171818 00000 n 
0000171873 00000 n 
0000172008 00000 n 
0000172063 00000 n 
0000172172 00000 n 
0000172227 00000 n 
0000172397 00000 n 
0000172452 00000 n 
0000172557 00000 n 
0000172612 00000 n 
0000172723 00000 n 
0000172778 00000 n 
0000172886 00000 n 
0000172941 00000 n 
0000173056 00000 n 
0000173111 00000 n 
0000173217 00000 n 
0000173272 00000 n 
0000173388 00000 n 
0000173443 00000 n 
0000173549 00000 n 
0000173604 00000 n 
0000173717 00000 n 
0000173772 00000 n 
0000173881 00000 n 
0000173936 00000 n 
0000174074 00000 n 
0000174129 00000 n 
0000174206 00000 n 
0000174528 00000 n 
0000174583 00000 n 
0000174673 00000 n 
0000174779 00000 n 
0000174834 00000 n 
0000174943 00000 n 
0000174998 00000 n 
0000175292 00000 n 
0000175347 00000 n 
0000175439 00000 n 
0000175554 00000 n 
0000175609 00000 n 
0000175686 00000 n 
0000175825 00000 n 
0000175880 00000 n 
0000176042 00000 n 
0000176152 00000 n 
0000176207 00000 n 
0000176313 00000 n 
0000176368 00000 n 
0000176571 00000 n 
0000176626 00000 n 
0000176732 00000 n 
0000176787 00000 n 
0000176905 00000 n 
0000176960 00000 n 
0000177068 00000 n 
0000177123 00000 n 
0000177272 00000 n 
0000177327 00000 n 
0000177445 00000 n 
0000177500 00000 n 
0000177608 00000 n 
0000177663 00000 n 
0000177770 00000 n 
0000177825 00000 n 
0000177930 00000 n 
0000177985 00000 n 
0000178062 00000 n 
0000178269 00000 n 
0000178324 00000 n 
0000178433 00000 n 
0000178555 00000 n 
0000178610 00000 n 
0000178687 00000 n 
0000178843 00000 n 
0000178898 00000 n 
0000178972 00000 n 
0000179140 00000 n 
0000179194 00000 n 
0000179268 00000 n 
0000179461 00000 n 
0000179515 00000 n 
0000179648 00000 n 
0000179794 00000 n 
0000179848 00000 n 
0000179940 00000 n 
0000180055 00000 n 
0000180109 00000 n 
0000180186 00000 n 
0000180314 00000 n 
0000180368 00000 n 
0000180546 00000 n 
0000180657 00000 n 
0000180711 00000 n 
0000180819 00000 n 
0000180873 00000 n 
0000181045 00000 n 
0000181099 00000 n 
0000181205 00000 n 
0000181259 00000 n 
0000181434 00000 n 
0000181488 00000 n 
0000181596 00000 n 
0000181650 00000 n 
0000181757 00000 n 
0000181811 00000 n 
0000181916 00000 n 
0000181971 00000 n 
0000182104 00000 n 
0000182159 00000 n 
0000182265 00000 n 
0000182320 00000 n 
0000182486 00000 n 
0000182541 00000 n 
0000182647 00000 n 
0000182702 00000 n 
0000182807 00000 n 
0000182862 00000 n 
0000182939 00000 n 
0000183204 00000 n 
0000183259 00000 n 
0000183351 00000 n 
0000183466 00000 n 
0000183521 00000 n 
0000183598 00000 n 
0000183732 00000 n 
0000183787 00000 n 
0000183965 00000 n 
0000184076 00000 n 
0000184131 00000 n 
0000184239 00000 n 
0000184294 00000 n 
0000184466 00000 n 
0000184521 00000 n 
0000184629 00000 n 
0000184684 00000 n 
0000184838 00000 n 
0000184893 00000 n 
0000185001 00000 n 
0000185056 00000 n 
0000185162 00000 n 
0000185217 00000 n 
0000185323 00000 n 
0000185378 00000 n 
0000185489 00000 n 
0000185544 00000 n 
0000185652 00000 n 
0000185707 00000 n 
0000185800 00000 n 
0000185855 00000 n 
0000185961 00000 n 
0000186016 00000 n 
0000186198 00000 n 
0000186253 00000 n 
0000186344 00000 n 
0000186458 00000 n 
0000186513 00000 n 
0000186590 00000 n 
0000186717 00000 n 
0000186772 00000 n 
0000186886 00000 n 
0000186998 00000 n 
0000187053 00000 n 
0000187158 00000 n 
0000187213 00000 n 
0000187364 00000 n 
0000187419 00000 n 
0000187527 00000 n 
0000187582 00000 n 
0000187694 00000 n 
0000187749 00000 n 
0000187841 00000 n 
0000187956 00000 n 
0000188011 00000 n 
0000188088 00000 n 
0000188240 00000 n 
0000188295 00000 n 
0000188489 00000 n 
0000188600 00000 n 
0000188655 00000 n 
0000188763 00000 n 
0000188818 00000 n 
0000188949 00000 n 
0000189004 00000 n 
0000189110 00000 n 
0000189165 00000 n 
0000189275 00000 n 
0000189330 00000 n 
0000189442 00000 n 
0000189497 00000 n 
0000189664 00000 n 
0000189719 00000 n 
0000189827 00000 n 
0000189882 00000 n 
0000190002 00000 n 
0000190057 00000 n 
0000190165 00000 n 
0000190220 00000 n 
0000190313 00000 n 
0000190368 00000 n 
0000190474 00000 n 
0000190529 00000 n 
0000190691 00000 n 
0000190746 00000 n 
0000190854 00000 n 
0000190909 00000 n 
0000191002 00000 n 
0000191057 00000 n 
0000191134 00000 n 
0000191451 00000 n 
0000191506 00000 n 
0000191611 00000 n 
0000191729 00000 n 
0000191784 00000 n 
0000191861 00000 n 
0000192005 00000 n 
0000192060 00000 n 
0000192254 00000 n 
0000192365 00000 n 
0000192419 00000 n 
0000192527 00000 n 
0000192581 00000 n 
0000192711 00000 n 
0000192765 00000 n 
0000192873 00000 n 
0000192927 00000 n 
0000193036 00000 n 
0000193090 00000 n 
0000193196 00000 n 
0000193250 00000 n 
0000193415 00000 n 
0000193469 00000 n 
0000193577 00000 n 
0000193631 00000 n 
0000193768 00000 n 
0000193822 00000 n 
0000193930 00000 n 
0000193984 00000 n 
0000194077 00000 n 
0000194132 00000 n 
0000194238 00000 n 
0000194293 00000 n 
0000194455 00000 n 
0000194510 00000 n 
0000194618 00000 n 
0000194673 00000 n 
0000194766 00000 n 
0000194821 00000 n 
0000194898 00000 n 
0000195205 00000 n 
0000195260 00000 n 
0000195352 00000 n 
0000195467 00000 n 
0000195522 00000 n 
0000195599 00000 n 
0000195764 00000 n 
0000195819 00000 n 
0000196029 00000 n 
0000196140 00000 n 
0000196195 00000 n 
0000196303 00000 n 
0000196358 00000 n 
0000196488 00000 n 
0000196543 00000 n 
0000196651 00000 n 
0000196706 00000 n 
0000196815 00000 n 
0000196870 00000 n 
0000196976 00000 n 
0000197031 00000 n 
0000197225 00000 n 
0000197280 00000 n 
0000197388 00000 n 
0000197443 00000 n 
0000197599 00000 n 
0000197654 00000 n 
0000197739 00000 n 
0000197798 00000 n 
0000197905 00000 n 
0000197960 00000 n 
0000198080 00000 n 
0000198135 00000 n 
0000198243 00000 n 
0000198298 00000 n 
0000198391 00000 n 
0000198446 00000 n 
0000198552 00000 n 
0000198607 00000 n 
0000198769 00000 n 
0000198824 00000 n 
0000198932 00000 n 
0000198987 00000 n 
0000199080 00000 n 
0000199135 00000 n 
0000199212 00000 n 
0000199533 00000 n 
0000199588 00000 n 
0000199693 00000 n 
0000199811 00000 n 
0000199866 00000 n 
0000199943 00000 n 
0000200074 00000 n 
0000200129 00000 n 
0000200291 00000 n 
0000200402 00000 n 
0000200457 00000 n 
0000200565 00000 n 
0000200620 00000 n 
0000200750 00000 n 
0000200805 00000 n 
0000200913 00000 n 
0000200968 00000 n 
0000201077 00000 n 
0000201132 00000 n 
0000201238 00000 n 
0000201293 00000 n 
0000201506 00000 n 
0000201561 00000 n 
0000201669 00000 n 
0000201724 00000 n 
0000201875 00000 n 
0000201930 00000 n 
0000202015 00000 n 
0000202074 00000 n 
0000202187 00000 n 
0000202242 00000 n 
0000202383 00000 n 
0000202438 00000 n 
0000202515 00000 n 
0000202836 00000 n 
0000202891 00000 n 
0000202995 00000 n 
0000203112 00000 n 
0000203167 00000 n 
0000203241 00000 n 
0000203354 00000 n 
0000203409 00000 n 
0000203486 00000 n 
0000203635 00000 n 
0000203690 00000 n 
0000203780 00000 n 
0000203969 00000 n 
0000204024 00000 n 
0000204109 00000 n 
0000204168 00000 n 
0000204281 00000 n 
0000204336 00000 n 
0000204429 00000 n 
0000204484 00000 n 
0000204561 00000 n 
0000204885 00000 n 
0000204940 00000 n 
0000205065 00000 n 
0000205203 00000 n 
0000205257 00000 n 
0000205364 00000 n 
0000205484 00000 n 
0000205538 00000 n 
0000205615 00000 n 
0000205770 00000 n 
0000205824 00000 n 
0000205898 00000 n 
0000206066 00000 n 
0000206120 00000 n 
0000206197 00000 n 
0000206463 00000 n 
0000206517 00000 n 
0000206610 00000 n 
0000206726 00000 n 
0000206780 00000 n 
0000206857 00000 n 
0000206999 00000 n 
0000207053 00000 n 
0000207127 00000 n 
0000207443 00000 n 
0000207497 00000 n 
0000207574 00000 n 
0000207867 00000 n 
0000207921 00000 n 
0000208013 00000 n 
0000208128 00000 n 
0000208182 00000 n 
0000208259 00000 n 
0000208400 00000 n 
0000208455 00000 n 
0000208529 00000 n 
0000208741 00000 n 
0000208796 00000 n 
0000208886 00000 n 
0000208999 00000 n 
0000209054 00000 n 
0000209131 00000 n 
0000209274 00000 n 
0000209329 00000 n 
0000209403 00000 n 
0000209697 00000 n 
0000209752 00000 n 
0000209858 00000 n 
0000209977 00000 n 
0000210032 00000 n 
0000210109 00000 n 
0000210264 00000 n 
0000210319 00000 n 
0000210545 00000 n 
0000210661 00000 n 
0000210716 00000 n 
0000210824 00000 n 
0000210879 00000 n 
0000210997 00000 n 
0000211052 00000 n 
0000211163 00000 n 
0000211218 00000 n 
0000211332 00000 n 
0000211387 00000 n 
0000211472 00000 n 
0000211531 00000 n 
0000211636 00000 n 
0000211691 00000 n 
0000211802 00000 n 
0000211857 00000 n 
0000211965 00000 n 
0000212020 00000 n 
0000212192 00000 n 
0000212247 00000 n 
0000212355 00000 n 
0000212410 00000 n 
0000212529 00000 n 
0000212584 00000 n 
0000212727 00000 n 
0000212782 00000 n 
0000212901 00000 n 
0000212956 00000 n 
0000213063 00000 n 
0000213118 00000 n 
0000213224 00000 n 
0000213279 00000 n 
0000213387 00000 n 
0000213442 00000 n 
0000213562 00000 n 
0000213617 00000 n 
0000213702 00000 n 
0000213761 00000 n 
0000213868 00000 n 
0000213923 00000 n 
0000214060 00000 n 
0000214115 00000 n 
0000214192 00000 n 
0000214879 00000 n 
0000214933 00000 n 
0000215039 00000 n 
0000215158 00000 n 
0000215212 00000 n 
0000215289 00000 n 
0000215483 00000 n 
0000215537 00000 n 
0000215651 00000 n 
0000215795 00000 n 
0000215849 00000 n 
0000215960 00000 n 
0000216014 00000 n 
0000216135 00000 n 
0000216189 00000 n 
0000216297 00000 n 
0000216351 00000 n 
0000216576 00000 n 
0000216630 00000 n 
0000216760 00000 n 
0000217004 00000 n 
0000217058 00000 n 
0000217166 00000 n 
0000217220 00000 n 
0000217326 00000 n 
0000217381 00000 n 
0000217488 00000 n 
0000217543 00000 n 
0000217704 00000 n 
0000217759 00000 n 
0000217866 00000 n 
0000217921 00000 n 
0000218014 00000 n 
0000218069 00000 n 
0000218161 00000 n 
0000218276 00000 n 
0000218331 00000 n 
0000218408 00000 n 
0000218559 00000 n 
0000218615 00000 n 
0000218717 00000 n 
0000218921 00000 n 
0000218977 00000 n 
0000219087 00000 n 
0000219143 00000 n 
0000219249 00000 n 
0000219305 00000 n 
0000219384 00000 n 
0000219675 00000 n 
0000219731 00000 n 
0000219824 00000 n 
0000219941 00000 n 
0000219997 00000 n 
0000220076 00000 n 
0000220227 00000 n 
0000220283 00000 n 
0000220385 00000 n 
0000220560 00000 n 
0000220616 00000 n 
0000220728 00000 n 
0000220784 00000 n 
0000220921 00000 n 
0000220977 00000 n 
0000221056 00000 n 
0000221347 00000 n 
0000221403 00000 n 
0000221508 00000 n 
0000221627 00000 n 
0000221683 00000 n 
0000221762 00000 n 
0000221926 00000 n 
0000221982 00000 n 
0000222102 00000 n 
0000222326 00000 n 
0000222382 00000 n 
0000222493 00000 n 
0000222549 00000 n 
0000222679 00000 n 
0000222735 00000 n 
0000222848 00000 n 
0000222904 00000 n 
0000223095 00000 n 
0000223151 00000 n 
0000223298 00000 n 
0000223407 00000 n 
0000223463 00000 n 
0000223604 00000 n 
0000223660 00000 n 
0000223773 00000 n 
0000223829 00000 n 
0000224035 00000 n 
0000224091 00000 n 
0000224213 00000 n 
0000224269 00000 n 
0000224411 00000 n 
0000224467 00000 n 
0000224580 00000 n 
0000224636 00000 n 
0000224777 00000 n 
0000224833 00000 n 
0000224938 00000 n 
0000225057 00000 n 
0000225112 00000 n 
0000225191 00000 n 
0000225346 00000 n 
0000225401 00000 n 
0000225477 00000 n 
0000225767 00000 n 
0000225822 00000 n 
0000225916 00000 n 
0000226034 00000 n 
0000226089 00000 n 
0000226165 00000 n 
0000226281 00000 n 
0000226336 00000 n 
0000226415 00000 n 
0000226642 00000 n 
0000226697 00000 n 
0000226799 00000 n 
0000226955 00000 n 
0000227010 00000 n 
0000227099 00000 n 
0000227159 00000 n 
0000227273 00000 n 
0000227328 00000 n 
0000227434 00000 n 
0000227489 00000 n 
0000227568 00000 n 
0000227890 00000 n 
0000227945 00000 n 
0000228056 00000 n 
0000228186 00000 n 
0000228242 00000 n 
0000228359 00000 n 
0000228415 00000 n 
0000228572 00000 n 
0000228628 00000 n 
0000228742 00000 n 
0000228798 00000 n 
0000228877 00000 n 
0000229219 00000 n 
0000229275 00000 n 
0000229369 00000 n 
0000229487 00000 n 
0000229543 00000 n 
0000229622 00000 n 
0000229849 00000 n 
0000229905 00000 n 
0000230007 00000 n 
0000230163 00000 n 
0000230219 00000 n 
0000230308 00000 n 
0000230368 00000 n 
0000230482 00000 n 
0000230538 00000 n 
0000230644 00000 n 
0000230700 00000 n 
0000230779 00000 n 
0000231099 00000 n 
0000231155 00000 n 
0000231311 00000 n 
0000231429 00000 n 
0000231485 00000 n 
0000231595 00000 n 
0000231651 00000 n 
0000231762 00000 n 
0000231818 00000 n 
0000231931 00000 n 
0000231987 00000 n 
0000232096 00000 n 
0000232152 00000 n 
0000232260 00000 n 
0000232316 00000 n 
0000232503 00000 n 
0000232559 00000 n 
0000232676 00000 n 
0000232732 00000 n 
0000232887 00000 n 
0000232943 00000 n 
0000233022 00000 n 
0000233354 00000 n 
0000233410 00000 n 
0000233486 00000 n 
0000233655 00000 n 
0000233711 00000 n 
0000233816 00000 n 
0000233935 00000 n 
0000233991 00000 n 
0000234070 00000 n 
0000234212 00000 n 
0000234268 00000 n 
0000234442 00000 n 
0000234650 00000 n 
0000234706 00000 n 
0000234815 00000 n 
0000234871 00000 n 
0000235025 00000 n 
0000235081 00000 n 
0000235190 00000 n 
0000235245 00000 n 
0000235531 00000 n 
0000235586 00000 n 
0000235695 00000 n 
0000235750 00000 n 
0000235863 00000 n 
0000235918 00000 n 
0000236027 00000 n 
0000236082 00000 n 
0000236225 00000 n 
0000236280 00000 n 
0000236389 00000 n 
0000236444 00000 n 
0000236550 00000 n 
0000236605 00000 n 
0000236684 00000 n 
0000237272 00000 n 
0000237327 00000 n 
0000237432 00000 n 
0000237551 00000 n 
0000237606 00000 n 
0000237685 00000 n 
0000237889 00000 n 
0000237945 00000 n 
0000238128 00000 n 
0000238292 00000 n 
0000238348 00000 n 
0000238462 00000 n 
0000238518 00000 n 
0000238685 00000 n 
0000238741 00000 n 
0000238821 00000 n 
0000238881 00000 n 
0000238970 00000 n 
0000239030 00000 n 
0000239144 00000 n 
0000239200 00000 n 
0000239325 00000 n 
0000239381 00000 n 
0000239497 00000 n 
0000239553 00000 n 
0000239756 00000 n 
0000239812 00000 n 
0000239924 00000 n 
0000239980 00000 n 
0000240100 00000 n 
0000240156 00000 n 
0000240245 00000 n 
0000240305 00000 n 
0000240415 00000 n 
0000240471 00000 n 
0000240577 00000 n 
0000240633 00000 n 
0000240712 00000 n 
0000241122 00000 n 
0000241178 00000 n 
0000241284 00000 n 
0000241404 00000 n 
0000241460 00000 n 
0000241539 00000 n 
0000241684 00000 n 
0000241740 00000 n 
0000241842 00000 n 
0000242003 00000 n 
0000242059 00000 n 
0000242171 00000 n 
0000242227 00000 n 
0000242444 00000 n 
0000242500 00000 n 
0000242579 00000 n 
0000242886 00000 n 
0000242942 00000 n 
0000243027 00000 n 
0000243136 00000 n 
0000243192 00000 n 
0000243330 00000 n 
0000243386 00000 n 
0000243491 00000 n 
0000243610 00000 n 
0000243666 00000 n 
0000243745 00000 n 
0000243897 00000 n 
0000243953 00000 n 
0000244055 00000 n 
0000244215 00000 n 
0000244271 00000 n 
0000244360 00000 n 
0000244420 00000 n 
0000244535 00000 n 
0000244591 00000 n 
0000244697 00000 n 
0000244753 00000 n 
0000244860 00000 n 
0000244981 00000 n 
0000245037 00000 n 
0000245116 00000 n 
0000245299 00000 n 
0000245355 00000 n 
0000245431 00000 n 
0000245659 00000 n 
0000245715 00000 n 
0000245823 00000 n 
0000245945 00000 n 
0000246001 00000 n 
0000246077 00000 n 
0000246192 00000 n 
0000246248 00000 n 
0000246327 00000 n 
0000246659 00000 n 
0000246714 00000 n 
0000246793 00000 n 
0000247125 00000 n 
0000247180 00000 n 
0000247282 00000 n 
0000247400 00000 n 
0000247455 00000 n 
0000247569 00000 n 
0000247624 00000 n 
0000247753 00000 n 
0000247808 00000 n 
0000247897 00000 n 
0000247978 00000 n 
0000248065 00000 n 
0000248143 00000 n 
0000248256 00000 n 
0000248311 00000 n 
0000248389 00000 n 
0000248501 00000 n 
0000248556 00000 n 
0000248708 00000 n 
0000248795 00000 n 
0000248873 00000 n 
0000248985 00000 n 
0000249040 00000 n 
0000249118 00000 n 
0000249263 00000 n 
0000249318 00000 n 
0000249405 00000 n 
0000249483 00000 n 
0000249608 00000 n 
0000249663 00000 n 
0000249741 00000 n 
0000249888 00000 n 
0000249944 00000 n 
0000250031 00000 n 
0000250109 00000 n 
0000250225 00000 n 
0000250281 00000 n 
0000250359 00000 n 
0000250505 00000 n 
0000250561 00000 n 
0000250648 00000 n 
0000250726 00000 n 
0000250841 00000 n 
0000250897 00000 n 
0000250975 00000 n 
0000251127 00000 n 
0000251183 00000 n 
0000251270 00000 n 
0000251348 00000 n 
0000251462 00000 n 
0000251518 00000 n 
0000251596 00000 n 
0000251748 00000 n 
0000251804 00000 n 
0000251891 00000 n 
0000251969 00000 n 
0000252082 00000 n 
0000252138 00000 n 
0000252216 00000 n 
0000252361 00000 n 
0000252417 00000 n 
0000252504 00000 n 
0000252582 00000 n 
0000252697 00000 n 
0000252753 00000 n 
0000252831 00000 n 
0000252976 00000 n 
0000253032 00000 n 
0000253119 00000 n 
0000253197 00000 n 
0000253314 00000 n 
0000253370 00000 n 
0000253448 00000 n 
0000253590 00000 n 
0000253646 00000 n 
0000253748 00000 n 
0000253876 00000 n 
0000253932 00000 n 
0000254043 00000 n 
0000254099 00000 n 
0000254287 00000 n 
0000254343 00000 n 
0000254419 00000 n 
0000254690 00000 n 
0000254746 00000 n 
0000254822 00000 n 
0000255001 00000 n 
0000255057 00000 n 
0000255195 00000 n 
0000255340 00000 n 
0000255396 00000 n 
0000255509 00000 n 
0000255565 00000 n 
0000255850 00000 n 
0000255906 00000 n 
0000256018 00000 n 
0000256074 00000 n 
0000256205 00000 n 
0000256261 00000 n 
0000256371 00000 n 
0000256427 00000 n 
0000256549 00000 n 
0000256605 00000 n 
0000256707 00000 n 
0000256931 00000 n 
0000256987 00000 n 
0000257094 00000 n 
0000257150 00000 n 
0000257344 00000 n 
0000257400 00000 n 
0000257476 00000 n 
0000257703 00000 n 
0000257759 00000 n 
0000257835 00000 n 
0000258071 00000 n 
0000258127 00000 n 
0000258229 00000 n 
0000258338 00000 n 
0000258394 00000 n 
0000258507 00000 n 
0000258563 00000 n 
0000258934 00000 n 
0000258990 00000 n 
0000259110 00000 n 
0000259219 00000 n 
0000259275 00000 n 
0000259387 00000 n 
0000259443 00000 n 
0000259733 00000 n 
0000259789 00000 n 
0000259878 00000 n 
0000259938 00000 n 
0000260057 00000 n 
0000260113 00000 n 
0000260225 00000 n 
0000260281 00000 n 
0000260419 00000 n 
0000260528 00000 n 
0000260584 00000 n 
0000260695 00000 n 
0000260751 00000 n 
0000260976 00000 n 
0000261032 00000 n 
0000261142 00000 n 
0000261198 00000 n 
0000261360 00000 n 
0000261416 00000 n 
0000261528 00000 n 
0000261584 00000 n 
0000261699 00000 n 
0000261755 00000 n 
0000261893 00000 n 
0000262002 00000 n 
0000262058 00000 n 
0000262171 00000 n 
0000262227 00000 n 
0000262451 00000 n 
0000262507 00000 n 
0000262618 00000 n 
0000262674 00000 n 
0000262886 00000 n 
0000262942 00000 n 
0000263053 00000 n 
0000263109 00000 n 
0000263246 00000 n 
0000263302 00000 n 
0000263422 00000 n 
0000263531 00000 n 
0000263586 00000 n 
0000263701 00000 n 
0000263756 00000 n 
0000263926 00000 n 
0000263981 00000 n 
0000264097 00000 n 
0000264152 00000 n 
0000264258 00000 n 
0000264313 00000 n 
0000264422 00000 n 
0000264545 00000 n 
0000264600 00000 n 
0000264702 00000 n 
0000264841 00000 n 
0000264896 00000 n 
0000265009 00000 n 
0000265064 00000 n 
0000265259 00000 n 
0000265314 00000 n 
0000265400 00000 n 
0000265479 00000 n 
0000265585 00000 n 
0000265640 00000 n 
0000265721 00000 n 
0000265798 00000 n 
0000265908 00000 n 
0000265964 00000 n 
0000266040 00000 n 
0000266241 00000 n 
0000266297 00000 n 
0000266383 00000 n 
0000266462 00000 n 
0000266568 00000 n 
0000266624 00000 n 
0000266705 00000 n 
0000266782 00000 n 
0000266892 00000 n 
0000266948 00000 n 
0000267050 00000 n 
0000267206 00000 n 
0000267262 00000 n 
0000267373 00000 n 
0000267429 00000 n 
0000267542 00000 n 
0000267598 00000 n 
0000267684 00000 n 
0000267763 00000 n 
0000267869 00000 n 
0000267925 00000 n 
0000268006 00000 n 
0000268083 00000 n 
0000268195 00000 n 
0000268251 00000 n 
0000268327 00000 n 
0000268626 00000 n 
0000268682 00000 n 
0000268768 00000 n 
0000268847 00000 n 
0000268953 00000 n 
0000269009 00000 n 
0000269090 00000 n 
0000269167 00000 n 
0000269278 00000 n 
0000269334 00000 n 
0000269436 00000 n 
0000269570 00000 n 
0000269626 00000 n 
0000269738 00000 n 
0000269794 00000 n 
0000269925 00000 n 
0000269981 00000 n 
0000270088 00000 n 
0000270209 00000 n 
0000270265 00000 n 
0000270341 00000 n 
0000270506 00000 n 
0000270562 00000 n 
0000270648 00000 n 
0000270727 00000 n 
0000270833 00000 n 
0000270889 00000 n 
0000270970 00000 n 
0000271047 00000 n 
0000271159 00000 n 
0000271215 00000 n 
0000271291 00000 n 
0000271485 00000 n 
0000271541 00000 n 
0000271627 00000 n 
0000271706 00000 n 
0000271812 00000 n 
0000271868 00000 n 
0000271949 00000 n 
0000272026 00000 n 
0000272135 00000 n 
0000272191 00000 n 
0000272293 00000 n 
0000272435 00000 n 
0000272491 00000 n 
0000272602 00000 n 
0000272658 00000 n 
0000272771 00000 n 
0000272827 00000 n 
0000272913 00000 n 
0000272992 00000 n 
0000273098 00000 n 
0000273154 00000 n 
0000273235 00000 n 
0000273312 00000 n 
0000273425 00000 n 
0000273481 00000 n 
0000273557 00000 n 
0000273724 00000 n 
0000273780 00000 n 
0000273866 00000 n 
0000273945 00000 n 
0000274051 00000 n 
0000274107 00000 n 
0000274188 00000 n 
0000274265 00000 n 
0000274377 00000 n 
0000274433 00000 n 
0000274509 00000 n 
0000274664 00000 n 
0000274720 00000 n 
0000274806 00000 n 
0000274885 00000 n 
0000274991 00000 n 
0000275047 00000 n 
0000275128 00000 n 
0000275205 00000 n 
0000275312 00000 n 
0000275368 00000 n 
0000275444 00000 n 
0000275659 00000 n 
0000275715 00000 n 
0000275801 00000 n 
0000275880 00000 n 
0000275986 00000 n 
0000276042 00000 n 
0000276123 00000 n 
0000276200 00000 n 
0000276310 00000 n 
0000276366 00000 n 
0000276442 00000 n 
0000276587 00000 n 
0000276643 00000 n 
0000276729 00000 n 
0000276808 00000 n 
0000276914 00000 n 
0000276970 00000 n 
0000277051 00000 n 
0000277128 00000 n 
0000277240 00000 n 
0000277296 00000 n 
0000277398 00000 n 
0000277601 00000 n 
0000277657 00000 n 
0000277768 00000 n 
0000277824 00000 n 
0000277937 00000 n 
0000277993 00000 n 
0000278084 00000 n 
0000278199 00000 n 
0000278255 00000 n 
0000278331 00000 n 
0000278643 00000 n 
0000278699 00000 n 
0000278778 00000 n 
0000279346 00000 n 
0000279402 00000 n 
0000279478 00000 n 
0000279617 00000 n 
0000279673 00000 n 
0000279752 00000 n 
0000279971 00000 n 
0000280027 00000 n 
0000280133 00000 n 
0000280253 00000 n 
0000280309 00000 n 
0000280388 00000 n 
0000280567 00000 n 
0000280623 00000 n 
0000280743 00000 n 
0000280984 00000 n 
0000281040 00000 n 
0000281150 00000 n 
0000281206 00000 n 
0000281400 00000 n 
0000281456 00000 n 
0000281571 00000 n 
0000281627 00000 n 
0000281743 00000 n 
0000281799 00000 n 
0000281955 00000 n 
0000282105 00000 n 
0000282162 00000 n 
0000282272 00000 n 
0000282329 00000 n 
0000282473 00000 n 
0000282530 00000 n 
0000282643 00000 n 
0000282700 00000 n 
0000282896 00000 n 
0000282953 00000 n 
0000283066 00000 n 
0000283123 00000 n 
0000283250 00000 n 
0000283307 00000 n 
0000283417 00000 n 
0000283474 00000 n 
0000283589 00000 n 
0000283646 00000 n 
0000283722 00000 n 
0000284008 00000 n 
0000284065 00000 n 
0000284144 00000 n 
0000285095 00000 n 
0000285152 00000 n 
0000285326 00000 n 
0000285453 00000 n 
0000285510 00000 n 
0000285623 00000 n 
0000285680 00000 n 
0000285821 00000 n 
0000285878 00000 n 
0000285991 00000 n 
0000286048 00000 n 
0000286160 00000 n 
0000286217 00000 n 
0000286330 00000 n 
0000286387 00000 n 
0000286623 00000 n 
0000286680 00000 n 
0000286793 00000 n 
0000286850 00000 n 
0000287029 00000 n 
0000287086 00000 n 
0000287196 00000 n 
0000287253 00000 n 
0000287389 00000 n 
0000287446 00000 n 
0000287553 00000 n 
0000287674 00000 n 
0000287731 00000 n 
0000287810 00000 n 
0000287963 00000 n 
0000288020 00000 n 
0000288122 00000 n 
0000288283 00000 n 
0000288340 00000 n 
0000288429 00000 n 
0000288491 00000 n 
0000288608 00000 n 
0000288665 00000 n 
0000288771 00000 n 
0000288828 00000 n 
0000288907 00000 n 
0000289254 00000 n 
0000289311 00000 n 
0000289416 00000 n 
0000289535 00000 n 
0000289591 00000 n 
0000289670 00000 n 
0000289830 00000 n 
0000289886 00000 n 
0000290006 00000 n 
0000290267 00000 n 
0000290323 00000 n 
0000290434 00000 n 
0000290490 00000 n 
0000290666 00000 n 
0000290722 00000 n 
0000290831 00000 n 
0000290887 00000 n 
0000290993 00000 n 
0000291049 00000 n 
0000291154 00000 n 
0000291273 00000 n 
0000291329 00000 n 
0000291408 00000 n 
0000291553 00000 n 
0000291609 00000 n 
0000291685 00000 n 
0000291933 00000 n 
0000291989 00000 n 
0000292068 00000 n 
0000292412 00000 n 
0000292469 00000 n 
0000292575 00000 n 
0000292695 00000 n 
0000292752 00000 n 
0000292831 00000 n 
0000293001 00000 n 
0000293058 00000 n 
0000293214 00000 n 
0000293397 00000 n 
0000293454 00000 n 
0000293562 00000 n 
0000293619 00000 n 
0000293729 00000 n 
0000293786 00000 n 
0000293896 00000 n 
0000293953 00000 n 
0000294085 00000 n 
0000294142 00000 n 
0000294231 00000 n 
0000294293 00000 n 
0000294404 00000 n 
0000294461 00000 n 
0000294583 00000 n 
0000294640 00000 n 
0000294753 00000 n 
0000294810 00000 n 
0000295062 00000 n 
0000295119 00000 n 
0000295227 00000 n 
0000295349 00000 n 
0000295406 00000 n 
0000295485 00000 n 
0000295633 00000 n 
0000295690 00000 n 
0000295828 00000 n 
0000296013 00000 n 
0000296070 00000 n 
0000296178 00000 n 
0000296235 00000 n 
0000296345 00000 n 
0000296402 00000 n 
0000296512 00000 n 
0000296569 00000 n 
0000296701 00000 n 
0000296758 00000 n 
0000296847 00000 n 
0000296909 00000 n 
0000297020 00000 n 
0000297077 00000 n 
0000297185 00000 n 
0000297242 00000 n 
0000297321 00000 n 
0000297672 00000 n 
0000297729 00000 n 
0000297831 00000 n 
0000297940 00000 n 
0000297997 00000 n 
0000298086 00000 n 
0000298148 00000 n 
0000298261 00000 n 
0000298318 00000 n 
0000298464 00000 n 
0000298521 00000 n 
0000298632 00000 n 
0000298741 00000 n 
0000298798 00000 n 
0000298935 00000 n 
0000298992 00000 n 
0000299081 00000 n 
0000299143 00000 n 
0000299254 00000 n 
0000299311 00000 n 
0000299437 00000 n 
0000299494 00000 n 
0000299600 00000 n 
0000299720 00000 n 
0000299777 00000 n 
0000299856 00000 n 
0000300015 00000 n 
0000300072 00000 n 
0000300210 00000 n 
0000300393 00000 n 
0000300450 00000 n 
0000300558 00000 n 
0000300615 00000 n 
0000300725 00000 n 
0000300782 00000 n 
0000300892 00000 n 
0000300949 00000 n 
0000301081 00000 n 
0000301138 00000 n 
0000301227 00000 n 
0000301289 00000 n 
0000301400 00000 n 
0000301457 00000 n 
0000301565 00000 n 
0000301622 00000 n 
0000301715 00000 n 
0000301832 00000 n 
0000301888 00000 n 
0000301967 00000 n 
0000302148 00000 n 
0000302204 00000 n 
0000302306 00000 n 
0000302737 00000 n 
0000302793 00000 n 
0000302882 00000 n 
0000302944 00000 n 
0000303056 00000 n 
0000303112 00000 n 
0000303218 00000 n 
0000303274 00000 n 
0000303367 00000 n 
0000303484 00000 n 
0000303540 00000 n 
0000303619 00000 n 
0000303800 00000 n 
0000303856 00000 n 
0000303958 00000 n 
0000304390 00000 n 
0000304446 00000 n 
0000304535 00000 n 
0000304597 00000 n 
0000304709 00000 n 
0000304765 00000 n 
0000304871 00000 n 
0000304927 00000 n 
0000305033 00000 n 
0000305153 00000 n 
0000305210 00000 n 
0000305289 00000 n 
0000305473 00000 n 
0000305530 00000 n 
0000305632 00000 n 
0000305909 00000 n 
0000305966 00000 n 
0000306055 00000 n 
0000306117 00000 n 
0000306232 00000 n 
0000306289 00000 n 
0000306395 00000 n 
0000306452 00000 n 
0000306546 00000 n 
0000306664 00000 n 
0000306721 00000 n 
0000306800 00000 n 
0000306968 00000 n 
0000307025 00000 n 
0000307163 00000 n 
0000307282 00000 n 
0000307339 00000 n 
0000307450 00000 n 
0000307507 00000 n 
0000307655 00000 n 
0000307712 00000 n 
0000307823 00000 n 
0000307880 00000 n 
0000308007 00000 n 
0000308064 00000 n 
0000308176 00000 n 
0000308233 00000 n 
0000308373 00000 n 
0000308430 00000 n 
0000308509 00000 n 
0000308967 00000 n 
0000309024 00000 n 
0000309129 00000 n 
0000309248 00000 n 
0000309305 00000 n 
0000309384 00000 n 
0000309538 00000 n 
0000309595 00000 n 
0000309671 00000 n 
0000310021 00000 n 
0000310078 00000 n 
0000310154 00000 n 
0000310331 00000 n 
0000310388 00000 n 
0000310490 00000 n 
0000310599 00000 n 
0000310656 00000 n 
0000310768 00000 n 
0000310825 00000 n 
0000310977 00000 n 
0000311034 00000 n 
0000311141 00000 n 
0000311262 00000 n 
0000311318 00000 n 
0000311397 00000 n 
0000311544 00000 n 
0000311600 00000 n 
0000311774 00000 n 
0000311887 00000 n 
0000311943 00000 n 
0000312054 00000 n 
0000312110 00000 n 
0000312257 00000 n 
0000312313 00000 n 
0000312424 00000 n 
0000312480 00000 n 
0000312616 00000 n 
0000312672 00000 n 
0000312783 00000 n 
0000312839 00000 n 
0000312957 00000 n 
0000313013 00000 n 
0000313124 00000 n 
0000313180 00000 n 
0000313353 00000 n 
0000313410 00000 n 
0000313521 00000 n 
0000313578 00000 n 
0000313805 00000 n 
0000313862 00000 n 
0000313964 00000 n 
0000314467 00000 n 
0000314524 00000 n 
0000314636 00000 n 
0000314693 00000 n 
0000314924 00000 n 
0000314981 00000 n 
0000315057 00000 n 
0000315208 00000 n 
0000315265 00000 n 
0000315344 00000 n 
0000315867 00000 n 
0000315924 00000 n 
0000316000 00000 n 
0000316132 00000 n 
0000316189 00000 n 
0000316268 00000 n 
0000316526 00000 n 
0000316583 00000 n 
0000316705 00000 n 
0000316841 00000 n 
0000316897 00000 n 
0000317002 00000 n 
0000317121 00000 n 
0000317177 00000 n 
0000317256 00000 n 
0000317409 00000 n 
0000317465 00000 n 
0000317541 00000 n 
0000317829 00000 n 
0000317885 00000 n 
0000317978 00000 n 
0000318095 00000 n 
0000318151 00000 n 
0000318227 00000 n 
0000318343 00000 n 
0000318399 00000 n 
0000318478 00000 n 
0000318611 00000 n 
0000318667 00000 n 
0000318823 00000 n 
0000319012 00000 n 
0000319068 00000 n 
0000319176 00000 n 
0000319232 00000 n 
0000319367 00000 n 
0000319423 00000 n 
0000319512 00000 n 
0000319574 00000 n 
0000319684 00000 n 
0000319741 00000 n 
0000319925 00000 n 
0000319982 00000 n 
0000320092 00000 n 
0000320149 00000 n 
0000320306 00000 n 
0000320363 00000 n 
0000320471 00000 n 
0000320528 00000 n 
0000320703 00000 n 
0000320760 00000 n 
0000320836 00000 n 
0000321112 00000 n 
0000321169 00000 n 
0000321279 00000 n 
0000321403 00000 n 
0000321460 00000 n 
0000321536 00000 n 
0000321652 00000 n 
0000321709 00000 n 
0000321788 00000 n 
0000321940 00000 n 
0000321997 00000 n 
0000322153 00000 n 
0000322342 00000 n 
0000322399 00000 n 
0000322507 00000 n 
0000322564 00000 n 
0000322699 00000 n 
0000322756 00000 n 
0000322845 00000 n 
0000322907 00000 n 
0000323017 00000 n 
0000323074 00000 n 
0000323258 00000 n 
0000323315 00000 n 
0000323425 00000 n 
0000323482 00000 n 
0000323879 00000 n 
0000323936 00000 n 
0000324044 00000 n 
0000324101 00000 n 
0000324276 00000 n 
0000324333 00000 n 
0000324458 00000 n 
0000324597 00000 n 
0000324653 00000 n 
0000324746 00000 n 
0000324863 00000 n 
0000324919 00000 n 
0000324998 00000 n 
0000325155 00000 n 
0000325211 00000 n 
0000325313 00000 n 
0000325502 00000 n 
0000325558 00000 n 
0000325673 00000 n 
0000325729 00000 n 
0000325911 00000 n 
0000325967 00000 n 
0000326046 00000 n 
0000326226 00000 n 
0000326282 00000 n 
0000326358 00000 n 
0000326511 00000 n 
0000326567 00000 n 
0000326669 00000 n 
0000326806 00000 n 
0000326862 00000 n 
0000326973 00000 n 
0000327029 00000 n 
0000327167 00000 n 
0000327224 00000 n 
0000327303 00000 n 
0000327481 00000 n 
0000327538 00000 n 
0000327658 00000 n 
0000327818 00000 n 
0000327875 00000 n 
0000327993 00000 n 
0000328050 00000 n 
0000328222 00000 n 
0000328279 00000 n 
0000328368 00000 n 
0000328430 00000 n 
0000328539 00000 n 
0000328596 00000 n 
0000328702 00000 n 
0000328759 00000 n 
0000328960 00000 n 
0000329070 00000 n 
0000329127 00000 n 
0000329233 00000 n 
0000329290 00000 n 
0000329379 00000 n 
0000329441 00000 n 
0000329552 00000 n 
0000329609 00000 n 
0000329832 00000 n 
0000329889 00000 n 
0000330006 00000 n 
0000330063 00000 n 
0000330183 00000 n 
0000330240 00000 n 
0000330351 00000 n 
0000330408 00000 n 
0000330538 00000 n 
0000330595 00000 n 
0000330707 00000 n 
0000330764 00000 n 
0000330917 00000 n 
0000330974 00000 n 
0000331096 00000 n 
0000331153 00000 n 
0000331398 00000 n 
0000331455 00000 n 
0000331576 00000 n 
0000331633 00000 n 
0000331807 00000 n 
0000331864 00000 n 
0000331991 00000 n 
0000332132 00000 n 
0000332189 00000 n 
0000332268 00000 n 
0000332414 00000 n 
0000332471 00000 n 
0000332573 00000 n 
0000332815 00000 n 
0000332872 00000 n 
0000332982 00000 n 
0000333039 00000 n 
0000333179 00000 n 
0000333236 00000 n 
0000333315 00000 n 
0000333569 00000 n 
0000333626 00000 n 
0000340905 00000 n 
0000341093 00000 n 
0000341202 00000 n 
0000341311 00000 n 
0000341482 00000 n 
0000341599 00000 n 
0000341733 00000 n 
0000341867 00000 n 
0000341995 00000 n 
0000342120 00000 n 
0000342345 00000 n 
0000342456 00000 n 
0000342584 00000 n 
0000342710 00000 n 
0000342838 00000 n 
0000342972 00000 n 
0000343100 00000 n 
0000343234 00000 n 
0000343349 00000 n 
0000343559 00000 n 
0000343680 00000 n 
0000343810 00000 n 
0000343938 00000 n 
0000344062 00000 n 
0000344198 00000 n 
0000344334 00000 n 
0000344462 00000 n 
0000344589 00000 n 
0000344720 00000 n 
0000344851 00000 n 
0000344980 00000 n 
0000345109 00000 n 
0000345240 00000 n 
0000345371 00000 n 
0000345504 00000 n 
0000345635 00000 n 
0000345770 00000 n 
0000345942 00000 n 
0000346064 00000 n 
0000346199 00000 n 
0000346305 00000 n 
0000346438 00000 n 
0000346573 00000 n 
0000346704 00000 n 
0000346835 00000 n 
0000346968 00000 n 
0000347105 00000 n 
0000347238 00000 n 
0000347365 00000 n 
0000347492 00000 n 
0000347625 00000 n 
0000347754 00000 n 
0000347885 00000 n 
0000348003 00000 n 
0000348203 00000 n 
0000348317 00000 n 
0000348444 00000 n 
0000348568 00000 n 
0000348759 00000 n 
0000348869 00000 n 
trailer
<<
  /ID [ <ba260f95785a30846033cb18b9aacaa4> <ba260f95785a30846033cb18b9aacaa4> ]
  /Info 1 0 R
  /Root 2 0 R
  /Size 2188
>>
startxref
349027
%%EOF